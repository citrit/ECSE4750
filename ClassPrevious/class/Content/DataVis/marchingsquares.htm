<html>

<head>
<meta http-equiv="Content-Type"
content="text/html; charset=iso-8859-1">
<meta name="GENERATOR" content="Microsoft FrontPage Express 2.0">
<title>DataVis- Marching Squares Algorithm</title>
</head>

<body bgcolor="#FFFFFF">

<h3 align="center"><img src="Speckled_GradientA042.gif"
width="500" height="4"></h3>

<h3 align="center">Advanced Computer Graphics and Data
Visualization</h3>

<h2 align="center"><img src="Speckled_GradientA042.gif"
width="500" height="4"></h2>

<p align="center">&nbsp; </p>

<h2>Section 5.1: Marching Squares</h2>

<hr align="left">

<ul>
    <li><font size="3">The Marching squares algroithm is an
        example fo the divide and conquer mentality</font></li>
    <li><font size="3">It seperates the grid into squares and
        operates on each independantly</font></li>
    <li><font size="3">The main key is the classification of the
        square as one of eight &quot;cases&quot; and then
        applying the case to the linear interpolation of that
        case.</font></li>
    <li><font size="3">Here is the Vtk implementation:</font><div
        align="left"><pre><font size="3">// Marching (convex) quadrilaterals
//
static int edges[4][2] = { {0,1}, {1,2}, {2,3}, {3,0} };

typedef int EDGE_LIST;
typedef struct {
       EDGE_LIST edges[5];
} LINE_CASES;

static LINE_CASES lineCases[] = {
  {{-1, -1, -1, -1, -1}},
  {{0, 3, -1, -1, -1}},
  {{1, 0, -1, -1, -1}},
  {{1, 3, -1, -1, -1}},
  {{2, 1, -1, -1, -1}},
  {{0, 3, 2, 1, -1}},
  {{2, 0, -1, -1, -1}},
  {{2, 3, -1, -1, -1}},
  {{3, 2, -1, -1, -1}},
  {{0, 2, -1, -1, -1}},
  {{1, 0, 3, 2, -1}},
  {{1, 2, -1, -1, -1}},
  {{3, 1, -1, -1, -1}},
  {{0, 1, -1, -1, -1}},
  {{3, 0, -1, -1, -1}},
  {{-1, -1, -1, -1, -1}}
};

void vtkQuad::Contour(float value, vtkFloatScalars *cellScalars,
                      vtkPointLocator *locator,
                      vtkCellArray *vtkNotUsed(verts),
                      vtkCellArray *lines,
                      vtkCellArray *vtkNotUsed(polys),
                      vtkPointData *inPd, vtkPointData *outPd)
{
  static int CASE_MASK[4] = {1,2,4,8};
  LINE_CASES *lineCase;
  EDGE_LIST  *edge;
  int i, j, index, *vert;
  int pts[2];
  float t, *x1, *x2, x[3];

  // Build the case table
  for ( i=0, index = 0; i &lt; 4; i++)
      if (cellScalars-&gt;GetScalar(i) &gt;= value)
          index |= CASE_MASK[i];

  lineCase = lineCases + index;
  edge = lineCase-&gt;edges;

  for ( ; edge[0] &gt; -1; edge += 2 )
    {
    for (i=0; i&lt;2; i++) // insert line
      {
      vert = edges[edge[i]];
      t = (value - cellScalars-&gt;GetScalar(vert[0])) /
          (cellScalars-&gt;GetScalar(vert[1]) - cellScalars-&gt;GetScalar(vert[0]));
      x1 = this-&gt;Points.GetPoint(vert[0]);
      x2 = this-&gt;Points.GetPoint(vert[1]);
      for (j=0; j&lt;3; j++) x[j] = x1[j] + t * (x2[j] - x1[j]);
      if ( (pts[i] = locator-&gt;IsInsertedPoint(x)) &lt; 0 )
        {
        pts[i] = locator-&gt;InsertNextPoint(x);
        if ( outPd )
          {
          int p1 = this-&gt;PointIds.GetId(vert[0]);
          int p2 = this-&gt;PointIds.GetId(vert[1]);
          outPd-&gt;InterpolateEdge(inPd,pts[i],p1,p2,t);
          }
        }
      }
    lines-&gt;InsertNextCell(2,pts);
    }
}</font></pre>
        </div><div align="left"><pre><font size="4"><strong>Copyright (c) 1993-1996 Ken Martin, Will Schroeder, Bill Lorensen</strong></font><font
size="3">.
 </font></pre>
        </div></li>
    <li><font size="3">This algorithm is actually a contour
        method associated with the Quad cell type inside Vtk</font></li>
    <li><font size="3">Its job is to contour a single cell (quad)
        at a specified contour value</font></li>
    <li><font size="3">Understand the building of the case table,
        this is where the work is done</font></li>
    <li><font size="3">Then it is simply using the index back
        into the edge list to get the vertices to interpolate</font></li>
</ul>

<p><img src="Speckled_GradientA042.gif" width="500" height="4"></p>
</body>
</html>

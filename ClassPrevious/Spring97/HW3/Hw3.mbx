From ???@??? Mon Apr 14 07:45:12 1997
Received: from cortez.sss.rpi.edu (normat@cortez.sss.rpi.edu [128.113.113.33])
	by mail1.its.rpi.edu (8.8.5/8.8.5) with ESMTP id TAA68278
	for <citrit@rpi.edu>; Sun, 13 Apr 1997 19:20:29 -0400
From: Tim Norman <normat>
Received: (normat@localhost) by cortez.sss.rpi.edu (8.6.9/8.6.4) id TAA100140 for citrit@rpi.edu; Sun, 13 Apr 1997 19:20:27 -0400
Date: Sun, 13 Apr 1997 19:20:27 -0400
Message-Id: <199704132320.TAA100140@cortez.sss.rpi.edu>
To: citrit@rpi.edu
Subject: Homework 3
X-UIDL: 0fd78be0022b48683c3d591be0eb82b9

#!/bin/sh
# This is a shell archive (produced by GNU sharutils 4.2).
# To extract the files from this archive, save it to some FILE, remove
# everything before the `!/bin/sh' line above, then type `sh FILE'.
#
# Made on 1997-04-13 19:09 EDT by <normat@cortez>.
# Source directory was `/afs/rpi.edu/home/95/normat/src/tim/datavis/hw3'.
#
# Existing files will *not* be overwritten unless `-c' is specified.
#
# This shar contains:
# length mode       name
# ------ ---------- ------------------------------------------
#   1944 -rwx------ 6.3a.tcl
#   2231 -rwx------ 6.3b.tcl
#   3284 -rw------- 9.4a.tcl
#   3514 -rw------- 9.4c.tcl
#   3249 -rw------- 9.4d.tcl
#
save_IFS="${IFS}"
IFS="${IFS}:"
gettext_dir=FAILED
locale_dir=FAILED
first_param="$1"
for dir in $PATH
do
  if test "$gettext_dir" = FAILED && test -f $dir/gettext \
     && ($dir/gettext --version >/dev/null 2>&1)
  then
    set `$dir/gettext --version 2>&1`
    if test "$3" = GNU
    then
      gettext_dir=$dir
    fi
  fi
  if test "$locale_dir" = FAILED && test -f $dir/shar \
     && ($dir/shar --print-text-domain-dir >/dev/null 2>&1)
  then
    locale_dir=`$dir/shar --print-text-domain-dir`
  fi
done
IFS="$save_IFS"
if test "$locale_dir" = FAILED || test "$gettext_dir" = FAILED
then
  echo=echo
else
  TEXTDOMAINDIR=$locale_dir
  export TEXTDOMAINDIR
  TEXTDOMAIN=sharutils
  export TEXTDOMAIN
  echo="$gettext_dir/gettext -s"
fi
touch -am 1231235999 $$.touch >/dev/null 2>&1
if test ! -f 1231235999 && test -f $$.touch; then
  shar_touch=touch
else
  shar_touch=:
  echo
  $echo 'WARNING: not restoring timestamps.  Consider getting and'
  $echo "installing GNU \`touch', distributed in GNU File Utilities..."
  echo
fi
rm -f 1231235999 $$.touch
#
if mkdir _sh116368; then
  $echo 'x -' 'creating lock directory'
else
  $echo 'failed to create lock directory'
  exit 1
fi
# ============= 6.3a.tcl ==============
if test -f '6.3a.tcl' && test "$first_param" != -c; then
  $echo 'x -' SKIPPING '6.3a.tcl' '(file already exists)'
else
  $echo 'x -' extracting '6.3a.tcl' '(text)'
  sed 's/^X//' << 'SHAR_EOF' > '6.3a.tcl' &&
#load vtktcl;
# user interface command widget
source vtkInt.tcl
X
# create a rendering window and renderer
vtkRenderMaster rm;
set renWin [rm MakeRenderWindow];
set ren1 [$renWin MakeRenderer];
set iren [$renWin MakeRenderWindowInteractor];
X
set value 1.2
X
vtkQuadric quad;
X  quad SetCoefficients 0.5 1 .2 0 .1 0 0 .2 0 0;
vtkSampleFunction sample;
X  sample SetSampleDimensions 50 50 50;
X  sample SetImplicitFunction quad;
vtkContourFilter contours;
X  contours SetInput [sample GetOutput];
X  contours SetValue 0 $value
vtkPolyMapper contMapper;
X  contMapper SetInput [contours GetOutput];
X  contMapper SetScalarRange 0.0 1.2;
vtkActor contActor;
X  contActor SetMapper contMapper;
X
# assign our actor to the renderer
$ren1 SetBackground 1 1 1;
$ren1 AddActors contActor;
X
# enable user interface interactor
$iren SetUserMethod {wm deiconify .vtkInteract};
$iren Initialize;
X
set min 0.0;
set max 1.2;
set numsteps 25;
set status "Ready"
X
# animate function
proc animate {} {
X    global min max numsteps status renWin;
X    for {set i 0} {$i < $numsteps} {incr i} {
X	set value [expr $min+$i*($max-$min)/$numsteps];
X	set status "Rendering with isovalue = $value";
X	update
X	contours SetValue 0 $value;
X	$renWin Render;
X    }
X
X    set status "Ready"
}
X
# nice UI stuff
button .b1 -command { animate } -text {Animate}
frame .f1
label .l1 -text "Min:"
entry .e1 -textvariable min
frame .f2
label .l2 -text "Max:"
entry .e2 -textvariable max
frame .f3
label .l3 -text "Num steps:"
entry .e3 -textvariable numsteps
label .l4 -textvariable status
pack .b1
pack .l1 .e1 -side left -in .f1
pack .l2 .e2 -side left -in .f2
pack .l3 .e3 -side left -in .f3
pack .f1 .f2 .f3 .l4
X
# print a usage message
puts "Rotate the view to an appropriate position and then press the";
puts "Animate button to animate the isosurfaces.";
puts "You can also change the min and max isosurface values as well as";
puts "the number of steps that are made during the animation.";
SHAR_EOF
  $shar_touch -am 0408224697 '6.3a.tcl' &&
  chmod 0700 '6.3a.tcl' ||
  $echo 'restore of' '6.3a.tcl' 'failed'
  if ( md5sum --help 2>&1 | grep 'sage: md5sum \[' ) >/dev/null 2>&1 \
  && ( md5sum --version 2>&1 | grep -v 'textutils 1.12' ) >/dev/null; then
    md5sum -c << SHAR_EOF >/dev/null 2>&1 \
    || $echo '6.3a.tcl:' 'MD5 check failed'
596692a1ba6e3e7ac7553e60f534b26f  6.3a.tcl
SHAR_EOF
  else
    shar_count="`LC_ALL= LC_CTYPE= LANG= wc -c < '6.3a.tcl'`"
    test 1944 -eq "$shar_count" ||
    $echo '6.3a.tcl:' 'original size' '1944,' 'current size' "$shar_count!"
  fi
fi
# ============= 6.3b.tcl ==============
if test -f '6.3b.tcl' && test "$first_param" != -c; then
  $echo 'x -' SKIPPING '6.3b.tcl' '(file already exists)'
else
  $echo 'x -' extracting '6.3b.tcl' '(text)'
  sed 's/^X//' << 'SHAR_EOF' > '6.3b.tcl' &&
# If you are using Window95 and vtk 1.3 uncomment the line below
# load vtktcl;
X
# get the interactor ui
source vtkInt.tcl
X
# First create the render master
vtkRenderMaster rm;
X
# Now create the RenderWindow, Renderer
#
set renWin [rm MakeRenderWindow];
set ren1   [$renWin MakeRenderer];
set iren   [$renWin MakeRenderWindowInteractor];
X
#
# Load up the data
vtkStructuredPointsReader vol;
X    vol SetFilename "MRIdata.vtk"
X    vol DebugOn;
X
set value 225.0;
X
vtkMarchingCubes contour;
X  contour SetInput [vol GetOutput];
X  contour SetValue 0 $value;
X
vtkPolyMapper volMapper;
X  volMapper SetInput [contour GetOutput];
X  volMapper ScalarsVisibleOff;
X
vtkActor volActor;
X  volActor SetMapper volMapper;
X
vtkOutlineFilter outLine;
X  outLine SetInput [vol GetOutput];
X
vtkPolyMapper outMapper;
X  outMapper SetInput [outLine GetOutput];
X
vtkActor outActor;
X  outActor SetMapper outMapper;
X
# Add the actors to the renderer, set the background and size
#
$ren1 AddActors outActor;
$ren1 AddActors volActor;
$ren1 SetBackground 0 0 0;
$renWin SetSize 500 400;
$iren Initialize;
X
# render the image
#
$iren SetUserMethod {wm deiconify .vtkInteract};
$renWin Render;
X
set min 0.0;
set max 250;
set numsteps 25;
set status "Ready"
X
# animate function
proc animate {} {
X    global min max numsteps status renWin;
X    for {set i 0} {$i < $numsteps} {incr i} {
X	set value [expr $min+$i*($max-$min)/$numsteps];
X	set status "Rendering with isovalue = $value";
X	update
X	contour SetValue 0 $value;
X	$renWin Render;
X    }
X
X    set status "Ready"
}
X
# nice UI stuff
button .b1 -command { animate } -text {Animate}
frame .f1
label .l1 -text "Min:"
entry .e1 -textvariable min
frame .f2
label .l2 -text "Max:"
entry .e2 -textvariable max
frame .f3
label .l3 -text "Num steps:"
entry .e3 -textvariable numsteps
label .l4 -textvariable status
pack .b1
pack .l1 .e1 -side left -in .f1
pack .l2 .e2 -side left -in .f2
pack .l3 .e3 -side left -in .f3
pack .f1 .f2 .f3 .l4
X
# print a usage message
puts "Rotate the view to an appropriate position and then press the";
puts "Animate button to animate the isosurfaces.";
puts "You can also change the min and max isosurface values as well as";
puts "the number of steps that are made during the animation.";
SHAR_EOF
  $shar_touch -am 0408223497 '6.3b.tcl' &&
  chmod 0700 '6.3b.tcl' ||
  $echo 'restore of' '6.3b.tcl' 'failed'
  if ( md5sum --help 2>&1 | grep 'sage: md5sum \[' ) >/dev/null 2>&1 \
  && ( md5sum --version 2>&1 | grep -v 'textutils 1.12' ) >/dev/null; then
    md5sum -c << SHAR_EOF >/dev/null 2>&1 \
    || $echo '6.3b.tcl:' 'MD5 check failed'
4e8e7fadd3886de6da8fa7baef5d489b  6.3b.tcl
SHAR_EOF
  else
    shar_count="`LC_ALL= LC_CTYPE= LANG= wc -c < '6.3b.tcl'`"
    test 2231 -eq "$shar_count" ||
    $echo '6.3b.tcl:' 'original size' '2231,' 'current size' "$shar_count!"
  fi
fi
# ============= 9.4a.tcl ==============
if test -f '9.4a.tcl' && test "$first_param" != -c; then
  $echo 'x -' SKIPPING '9.4a.tcl' '(file already exists)'
else
  $echo 'x -' extracting '9.4a.tcl' '(text)'
  sed 's/^X//' << 'SHAR_EOF' > '9.4a.tcl' &&
# get the interactor ui
source vtkInt.tcl
X
# create planes
# First create the render master
vtkRenderMaster rm;
X
# Now create the RenderWindow, Renderer and both Actors
#
set renWin [rm MakeRenderWindow];
set ren1   [$renWin MakeRenderer];
set iren [$renWin MakeRenderWindowInteractor];
X
# create pipeline
#
vtkPLOT3DReader pl3d;
X    pl3d SetXYZFilename "combxyz.bin"
X    pl3d SetQFilename "combq.bin"
X    pl3d SetScalarFunctionNumber 100;
X    pl3d SetVectorFunctionNumber 202;
X    pl3d Update;
X
vtkPlaneSource plane;
X    plane SetResolution 50 50;
vtkTransform transP1;
X    transP1 Translate 3.7 0.0 28.37;
X    transP1 Scale 5 5 5;
X    transP1 RotateY 90;
vtkTransformPolyFilter tpd1
X    tpd1 SetInput [plane GetOutput];
X    tpd1 SetTransform transP1;
vtkOutlineFilter outTpd1;
X    outTpd1 SetInput [tpd1 GetOutput];
vtkPolyMapper mapTpd1;
X    mapTpd1 SetInput [outTpd1 GetOutput];
vtkActor tpd1Actor;
X    tpd1Actor SetMapper mapTpd1;
X    [tpd1Actor GetProperty] SetColor 0 0 0;
X
vtkTransform transP2;
X    transP2 Translate 9.2 0.0 31.20;
X    transP2 Scale 5 5 5;
X    transP2 RotateY 90;
vtkTransformPolyFilter tpd2
X    tpd2 SetInput [plane GetOutput];
X    tpd2 SetTransform transP2;
vtkOutlineFilter outTpd2;
X    outTpd2 SetInput [tpd2 GetOutput];
vtkPolyMapper mapTpd2;
X    mapTpd2 SetInput [outTpd2 GetOutput];
vtkActor tpd2Actor;
X    tpd2Actor SetMapper mapTpd2;
X    [tpd2Actor GetProperty] SetColor 0 0 0;
X
vtkTransform transP3;
X    transP3 Translate 13.27 0.0 33.30;
X    transP3 Scale 5 5 5;
X    transP3 RotateY 90;
vtkTransformPolyFilter tpd3
X    tpd3 SetInput [plane GetOutput];
X    tpd3 SetTransform transP3;
vtkOutlineFilter outTpd3;
X    outTpd3 SetInput [tpd3 GetOutput];
vtkPolyMapper mapTpd3;
X    mapTpd3 SetInput [outTpd3 GetOutput];
vtkActor tpd3Actor;
X    tpd3Actor SetMapper mapTpd3;
X    [tpd3Actor GetProperty] SetColor 0 0 0;
X
vtkAppendPolyData appendF;
X    appendF AddInput [tpd1 GetOutput];
X    appendF AddInput [tpd2 GetOutput];
X    appendF AddInput [tpd3 GetOutput];
X
vtkProbeFilter probe;
X    probe SetInput [appendF GetOutput];
X    probe SetSource [pl3d GetOutput];
X
vtkHedgeHog hedge;
X    hedge SetInput [probe GetOutput];
X    hedge SetScaleFactor 0.003
vtkPolyMapper hedgeMapper;
X    hedgeMapper SetInput [hedge GetOutput];
X    hedgeMapper SetScalarRange 50 550;
vtkActor planeActor;
X    planeActor SetMapper hedgeMapper;
X
vtkStructuredGridOutlineFilter outline;
X    outline SetInput [pl3d GetOutput];
vtkPolyMapper outlineMapper;
X    outlineMapper SetInput [outline GetOutput];
vtkActor outlineActor;
X    outlineActor SetMapper outlineMapper;
X    [outlineActor GetProperty] SetColor 0 0 0;
X
$ren1 AddActors outlineActor;
$ren1 AddActors planeActor;
$ren1 AddActors tpd1Actor;
$ren1 AddActors tpd2Actor;
$ren1 AddActors tpd3Actor;
$ren1 SetBackground 1 1 1;
$renWin SetSize 500 500;
X
set cam1 [$ren1 GetActiveCamera];
$cam1 SetClippingRange 3.95297 50;
$cam1 SetFocalPoint 8.88908 0.595038 29.3342;
$cam1 SetPosition -12.3332 31.7479 41.2387;
$cam1 CalcViewPlaneNormal;
$cam1 SetViewUp 0.060772 -0.319905 0.945498;
$iren Initialize;
X
#$renWin SetFilename "probeComb.tcl.ppm";
#$renWin SaveImageAsPPM;
X
# render the image
#
$iren SetUserMethod {wm deiconify .vtkInteract};
X
# prevent the tk window from showing up then start the event loop
wm withdraw .
X
X
X
SHAR_EOF
  $shar_touch -am 0413185597 '9.4a.tcl' &&
  chmod 0600 '9.4a.tcl' ||
  $echo 'restore of' '9.4a.tcl' 'failed'
  if ( md5sum --help 2>&1 | grep 'sage: md5sum \[' ) >/dev/null 2>&1 \
  && ( md5sum --version 2>&1 | grep -v 'textutils 1.12' ) >/dev/null; then
    md5sum -c << SHAR_EOF >/dev/null 2>&1 \
    || $echo '9.4a.tcl:' 'MD5 check failed'
61be30b73ad39a1370f6c4dde5cd48d5  9.4a.tcl
SHAR_EOF
  else
    shar_count="`LC_ALL= LC_CTYPE= LANG= wc -c < '9.4a.tcl'`"
    test 3284 -eq "$shar_count" ||
    $echo '9.4a.tcl:' 'original size' '3284,' 'current size' "$shar_count!"
  fi
fi
# ============= 9.4c.tcl ==============
if test -f '9.4c.tcl' && test "$first_param" != -c; then
  $echo 'x -' SKIPPING '9.4c.tcl' '(file already exists)'
else
  $echo 'x -' extracting '9.4c.tcl' '(text)'
  sed 's/^X//' << 'SHAR_EOF' > '9.4c.tcl' &&
# get the interactor ui
source vtkInt.tcl
X
# create planes
# First create the render master
vtkRenderMaster rm;
X
# Now create the RenderWindow, Renderer and both Actors
#
set renWin [rm MakeRenderWindow];
set ren1   [$renWin MakeRenderer];
set iren [$renWin MakeRenderWindowInteractor];
X
# create pipeline
#
vtkPLOT3DReader pl3d;                 # vtkStructuredGridSource
X    pl3d SetXYZFilename "combxyz.bin"
X    pl3d SetQFilename "combq.bin"
X    pl3d SetScalarFunctionNumber 100;
X    pl3d SetVectorFunctionNumber 202;
X    pl3d Update;
X
vtkPlaneSource plane;
X    plane SetResolution 50 50;
vtkTransform transP1;
X    transP1 Translate 3.7 0.0 28.37;
X    transP1 Scale 5 5 5;
X    transP1 RotateY 90;
vtkTransformPolyFilter tpd1
X    tpd1 SetInput [plane GetOutput];
X    tpd1 SetTransform transP1;
vtkOutlineFilter outTpd1;
X    outTpd1 SetInput [tpd1 GetOutput];
vtkPolyMapper mapTpd1;
X    mapTpd1 SetInput [outTpd1 GetOutput];
vtkActor tpd1Actor;
X    tpd1Actor SetMapper mapTpd1;
X    [tpd1Actor GetProperty] SetColor 0 0 0;
X
vtkTransform transP2;
X    transP2 Translate 9.2 0.0 31.20;
X    transP2 Scale 5 5 5;
X    transP2 RotateY 90;
vtkTransformPolyFilter tpd2
X    tpd2 SetInput [plane GetOutput];
X    tpd2 SetTransform transP2;
vtkOutlineFilter outTpd2;
X    outTpd2 SetInput [tpd2 GetOutput];
vtkPolyMapper mapTpd2;
X    mapTpd2 SetInput [outTpd2 GetOutput];
vtkActor tpd2Actor;
X    tpd2Actor SetMapper mapTpd2;
X    [tpd2Actor GetProperty] SetColor 0 0 0;
X
vtkTransform transP3;
X    transP3 Translate 13.27 0.0 33.30;
X    transP3 Scale 5 5 5;
X    transP3 RotateY 90;
vtkTransformPolyFilter tpd3
X    tpd3 SetInput [plane GetOutput];
X    tpd3 SetTransform transP3;
vtkOutlineFilter outTpd3;
X    outTpd3 SetInput [tpd3 GetOutput];
vtkPolyMapper mapTpd3;
X    mapTpd3 SetInput [outTpd3 GetOutput];
vtkActor tpd3Actor;
X    tpd3Actor SetMapper mapTpd3;
X    [tpd3Actor GetProperty] SetColor 0 0 0;
X
vtkAppendPolyData appendF;
X    appendF AddInput [tpd1 GetOutput];
X    appendF AddInput [tpd2 GetOutput];
X    appendF AddInput [tpd3 GetOutput];
X
vtkProbeFilter probe;                   # vtkDataSetToDataSetFilter
X    probe SetInput [appendF GetOutput];
X    probe SetSource [pl3d GetOutput];
X
# convert the probe data to an unstructured grid so vtkWarpVector can use it
vtkAppendFilter data;
X    data AddInput [probe GetOutput];
vtkWarpVector warp;                   # vtkPointSetToPointSetFilter
X    warp SetInput [data GetOutput];
X    warp SetScaleFactor 0.003
vtkDataSetMapper warpMapper;
X    warpMapper SetInput [warp GetOutput];
vtkActor planeActor;
X    planeActor SetMapper warpMapper;
X
vtkStructuredGridOutlineFilter outline;
X    outline SetInput [pl3d GetOutput];
vtkPolyMapper outlineMapper;
X    outlineMapper SetInput [outline GetOutput];
vtkActor outlineActor;
X    outlineActor SetMapper outlineMapper;
X    [outlineActor GetProperty] SetColor 0 0 0;
X
$ren1 AddActors outlineActor;
$ren1 AddActors planeActor;
$ren1 AddActors tpd1Actor;
$ren1 AddActors tpd2Actor;
$ren1 AddActors tpd3Actor;
$ren1 SetBackground 1 1 1;
$renWin SetSize 500 500;
X
set cam1 [$ren1 GetActiveCamera];
$cam1 SetClippingRange 3.95297 50;
$cam1 SetFocalPoint 8.88908 0.595038 29.3342;
$cam1 SetPosition -12.3332 31.7479 41.2387;
$cam1 CalcViewPlaneNormal;
$cam1 SetViewUp 0.060772 -0.319905 0.945498;
$iren Initialize;
X
#$renWin SetFilename "probeComb.tcl.ppm";
#$renWin SaveImageAsPPM;
X
# render the image
#
$iren SetUserMethod {wm deiconify .vtkInteract};
X
# prevent the tk window from showing up then start the event loop
wm withdraw .
X
X
X
SHAR_EOF
  $shar_touch -am 0413190297 '9.4c.tcl' &&
  chmod 0600 '9.4c.tcl' ||
  $echo 'restore of' '9.4c.tcl' 'failed'
  if ( md5sum --help 2>&1 | grep 'sage: md5sum \[' ) >/dev/null 2>&1 \
  && ( md5sum --version 2>&1 | grep -v 'textutils 1.12' ) >/dev/null; then
    md5sum -c << SHAR_EOF >/dev/null 2>&1 \
    || $echo '9.4c.tcl:' 'MD5 check failed'
94e9c887afbc075d604885a680475601  9.4c.tcl
SHAR_EOF
  else
    shar_count="`LC_ALL= LC_CTYPE= LANG= wc -c < '9.4c.tcl'`"
    test 3514 -eq "$shar_count" ||
    $echo '9.4c.tcl:' 'original size' '3514,' 'current size' "$shar_count!"
  fi
fi
# ============= 9.4d.tcl ==============
if test -f '9.4d.tcl' && test "$first_param" != -c; then
  $echo 'x -' SKIPPING '9.4d.tcl' '(file already exists)'
else
  $echo 'x -' extracting '9.4d.tcl' '(text)'
  sed 's/^X//' << 'SHAR_EOF' > '9.4d.tcl' &&
# get the interactor ui
source vtkInt.tcl
X
# create planes
# First create the render master
vtkRenderMaster rm;
X
# Now create the RenderWindow, Renderer and both Actors
#
set renWin [rm MakeRenderWindow];
set ren1   [$renWin MakeRenderer];
set iren [$renWin MakeRenderWindowInteractor];
X
# create pipeline
#
vtkPLOT3DReader pl3d;
X    pl3d SetXYZFilename "combxyz.bin"
X    pl3d SetQFilename "combq.bin"
X    pl3d SetScalarFunctionNumber 100;
X    pl3d SetVectorFunctionNumber 202;
X    pl3d Update;
X
vtkPlaneSource plane;
X    plane SetResolution 50 50;
vtkTransform transP1;
X    transP1 Translate 3.7 0.0 28.37;
X    transP1 Scale 5 5 5;
X    transP1 RotateY 90;
vtkTransformPolyFilter tpd1
X    tpd1 SetInput [plane GetOutput];
X    tpd1 SetTransform transP1;
vtkOutlineFilter outTpd1;
X    outTpd1 SetInput [tpd1 GetOutput];
vtkPolyMapper mapTpd1;
X    mapTpd1 SetInput [outTpd1 GetOutput];
vtkActor tpd1Actor;
X    tpd1Actor SetMapper mapTpd1;
X    [tpd1Actor GetProperty] SetColor 0 0 0;
X
vtkTransform transP2;
X    transP2 Translate 9.2 0.0 31.20;
X    transP2 Scale 5 5 5;
X    transP2 RotateY 90;
vtkTransformPolyFilter tpd2
X    tpd2 SetInput [plane GetOutput];
X    tpd2 SetTransform transP2;
vtkOutlineFilter outTpd2;
X    outTpd2 SetInput [tpd2 GetOutput];
vtkPolyMapper mapTpd2;
X    mapTpd2 SetInput [outTpd2 GetOutput];
vtkActor tpd2Actor;
X    tpd2Actor SetMapper mapTpd2;
X    [tpd2Actor GetProperty] SetColor 0 0 0;
X
vtkTransform transP3;
X    transP3 Translate 13.27 0.0 33.30;
X    transP3 Scale 5 5 5;
X    transP3 RotateY 90;
vtkTransformPolyFilter tpd3
X    tpd3 SetInput [plane GetOutput];
X    tpd3 SetTransform transP3;
vtkOutlineFilter outTpd3;
X    outTpd3 SetInput [tpd3 GetOutput];
vtkPolyMapper mapTpd3;
X    mapTpd3 SetInput [outTpd3 GetOutput];
vtkActor tpd3Actor;
X    tpd3Actor SetMapper mapTpd3;
X    [tpd3Actor GetProperty] SetColor 0 0 0;
X
vtkAppendPolyData appendF;
X    appendF AddInput [tpd1 GetOutput];
X    appendF AddInput [tpd2 GetOutput];
X    appendF AddInput [tpd3 GetOutput];
X
vtkProbeFilter probe;
X    probe SetInput [appendF GetOutput];
X    probe SetSource [pl3d GetOutput];
X
vtkVectorNorm vector;
X    vector SetInput [probe GetOutput];
X    vector NormalizeOn;
vtkDataSetMapper vectorMapper;
X    vectorMapper SetInput [vector GetOutput];
vtkActor planeActor;
X    planeActor SetMapper vectorMapper;
X
vtkStructuredGridOutlineFilter outline;
X    outline SetInput [pl3d GetOutput];
vtkPolyMapper outlineMapper;
X    outlineMapper SetInput [outline GetOutput];
vtkActor outlineActor;
X    outlineActor SetMapper outlineMapper;
X    [outlineActor GetProperty] SetColor 0 0 0;
X
$ren1 AddActors outlineActor;
$ren1 AddActors planeActor;
$ren1 AddActors tpd1Actor;
$ren1 AddActors tpd2Actor;
$ren1 AddActors tpd3Actor;
$ren1 SetBackground 1 1 1;
$renWin SetSize 500 500;
X
set cam1 [$ren1 GetActiveCamera];
$cam1 SetClippingRange 3.95297 50;
$cam1 SetFocalPoint 8.88908 0.595038 29.3342;
$cam1 SetPosition -12.3332 31.7479 41.2387;
$cam1 CalcViewPlaneNormal;
$cam1 SetViewUp 0.060772 -0.319905 0.945498;
$iren Initialize;
X
#$renWin SetFilename "probeComb.tcl.ppm";
#$renWin SaveImageAsPPM;
X
# render the image
#
$iren SetUserMethod {wm deiconify .vtkInteract};
X
# prevent the tk window from showing up then start the event loop
wm withdraw .
X
X
X
SHAR_EOF
  $shar_touch -am 0413190497 '9.4d.tcl' &&
  chmod 0600 '9.4d.tcl' ||
  $echo 'restore of' '9.4d.tcl' 'failed'
  if ( md5sum --help 2>&1 | grep 'sage: md5sum \[' ) >/dev/null 2>&1 \
  && ( md5sum --version 2>&1 | grep -v 'textutils 1.12' ) >/dev/null; then
    md5sum -c << SHAR_EOF >/dev/null 2>&1 \
    || $echo '9.4d.tcl:' 'MD5 check failed'
9a30e6576993a2d5eacab018deeb5c87  9.4d.tcl
SHAR_EOF
  else
    shar_count="`LC_ALL= LC_CTYPE= LANG= wc -c < '9.4d.tcl'`"
    test 3249 -eq "$shar_count" ||
    $echo '9.4d.tcl:' 'original size' '3249,' 'current size' "$shar_count!"
  fi
fi
rm -fr _sh116368
exit 0

From ???@??? Mon Apr 14 10:38:12 1997
Received: from cs.rpi.edu (root@barney.cs.rpi.edu [128.213.3.4])
	by mail1.its.rpi.edu (8.8.5/8.8.5) with ESMTP id KAA55586
	for <citrit@rpi.edu>; Mon, 14 Apr 1997 10:33:15 -0400
Received: from icemaker.cs.rpi.edu (kramer2@icemaker.cs.rpi.edu [128.213.2.53])
	by cs.rpi.edu (8.8.5/8.8.5) with ESMTP id KAA06862;
	Mon, 14 Apr 1997 10:33:10 -0400 (EDT)
From: Richard Kramer <kramer2@cs.rpi.edu>
Received: (from kramer2@localhost)
	by icemaker.cs.rpi.edu (8.8.5/8.8.5) id KAA17815;
	Mon, 14 Apr 1997 10:33:08 -0400 (EDT)
Date: Mon, 14 Apr 1997 10:33:08 -0400 (EDT)
Message-Id: <199704141433.KAA17815@icemaker.cs.rpi.edu>
Content-Type: text
To: undisclosed-recipients:;
X-UIDL: aa04f5e8d33c9c9c3913bb8370a344b6

#! /bin/sh
# This is a shell archive.  Remove anything before this line, then feed it
# into a shell via "sh file" or similar.  To overwrite existing files,
# type "sh file -c".
# The tool that generated this appeared in the comp.sources.unix newsgroup;
# send mail to comp-sources-unix@uunet.uu.net if you want that tool.
# Contents:  MRIHead.tcl Sample.tcl hedgehog.tcl vectornorm.tcl
#   vtkInt.tcl warpvector.tcl
# Wrapped by kramer2@icemaker.cs.rpi.edu on Mon Apr 14 10:31:59 1997
PATH=/bin:/usr/bin:/usr/ucb ; export PATH
echo If this archive is complete, you will see the following message:
echo '          "shar: End of archive."'
if test -f 'MRIHead.tcl' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'MRIHead.tcl'\"
else
  echo shar: Extracting \"'MRIHead.tcl'\" \(2369 characters\)
  sed "s/^X//" >'MRIHead.tcl' <<'END_OF_FILE'
X# If you are using Window95 and vtk 1.3 uncomment the line below
X# load vtktcl;
X
X# get the interactor ui
Xsource vtkInt.tcl
X
X# First create the render master
XvtkRenderMaster rm;
X
X# Now create the RenderWindow, Renderer
X#
Xglobal renWin actors
Xset renWin [rm MakeRenderWindow];
Xset ren1   [$renWin MakeRenderer];
Xset iren   [$renWin MakeRenderWindowInteractor];
X
X#
X# Load up the data
XvtkStructuredPointsReader vol;
X    vol SetFilename "MRIdata.vtk"
X    vol DebugOn;
X
X# create a bunch of coutours
Xforeach i {  200 400 600 800 1000 1100 1200 1300 1400 1500 1600 1700 1800 1900 2000 } {
X    # create a contour
X    vtkMarchingCubes contour$i;
X    contour$i SetInput [vol GetOutput];
X    contour$i SetValue 0 $i;
X
X    # map the polygons
X    vtkPolyMapper volMapper$i;
X    volMapper$i SetInput [contour$i GetOutput];
X    volMapper$i ScalarsVisibleOff;
X
X    # create an actor for them
X    vtkActor volActor$i;
X    volActor$i SetMapper volMapper$i;
X    volActor$i VisibilityOff
X
X    # add the actor to our list
X    $ren1 AddActors volActor$i;
X    lappend actors volActor$i
X}
X
X# now add them in reverse so we get bounce instead of cycle
Xset length [llength $actors]
Xfor { set i [expr $length - 2] } { $i > 0 } { incr i -1 } {
X    lappend actors [lindex $actors $i]
X}
X
X# turn on the first actor
X[lindex $actors 0] VisibilityOn
X
X# create an outline of the volume
XvtkOutlineFilter outLine;
XoutLine SetInput [vol GetOutput];
X
X# map the outline
XvtkPolyMapper outMapper;
XoutMapper SetInput [outLine GetOutput];
X
X# draw it
XvtkActor outActor;
XoutActor SetMapper outMapper;
X$ren1 AddActors outActor;
X
X# setup the background
X$ren1 SetBackground 0 0 0;
X$renWin SetSize 500 400;
X$iren Initialize;
X
X
X# render the image
X$iren SetUserMethod {wm deiconify .vtkInteract};
X$renWin Render;
X
X# prevent the tk window from showing up then start the event loop
Xwm withdraw .
X
X# note that our animation routine is exactly the same as before
X# define the animation procedure
Xproc animate {} {
X    global renWin actors
X
X    # turn off the first guy in the loop
X    set head [lindex $actors 0]
X    $head VisibilityOff
X
X    # put him at the end
X    set actors "[lrange $actors 1 end] $head"
X    puts $actors
X
X    # pull the next guy off and turn him on
X    [lindex $actors 0] VisibilityOn
X
X    # render it
X    $renWin Render
X
X    # set us up to change again
X    after 300 animate
X}
X
X# start us off!!
Xanimate
X
END_OF_FILE
  if test 2369 -ne `wc -c <'MRIHead.tcl'`; then
    echo shar: \"'MRIHead.tcl'\" unpacked with wrong size!
  fi
  # end of 'MRIHead.tcl'
fi
if test -f 'Sample.tcl' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'Sample.tcl'\"
else
  echo shar: Extracting \"'Sample.tcl'\" \(2104 characters\)
  sed "s/^X//" >'Sample.tcl' <<'END_OF_FILE'
X# user interface command widget
Xsource vtkInt.tcl
X
X# make some stuff global so we can access it in our function
Xglobal renWin actors
X
X# create a rendering window and renderer
XvtkRenderMaster rm;
Xset renWin [rm MakeRenderWindow];
Xset ren1 [$renWin MakeRenderer];
Xset iren [$renWin MakeRenderWindowInteractor];
X
X# create the input source
XvtkQuadric quad;
X  quad SetCoefficients 0.5 1 .2 0 .1 0 0 .2 0 0;
XvtkSampleFunction sample;
X  sample SetSampleDimensions 50 50 50;
X  sample SetImplicitFunction quad;
X
X# now create a fleet of actors
Xset steps 6
Xfor { set i 1.2 } { $i >= 0 } { set i [expr $i - 1.2 / $steps] } {
X    # create one contour
X    vtkContourFilter contours_$i;
X    contours_$i SetInput [sample GetOutput];
X    contours_$i GenerateValues 0 $i $i
X
X    # map it to polygons
X    vtkPolyMapper contMapper_$i;
X    contMapper_$i SetInput [contours_$i GetOutput];
X    contMapper_$i SetScalarRange 0.0 1.2;
X
X    # create an actor for it
X    vtkActor contActor_$i;
X    contActor_$i SetMapper contMapper_$i;
X    contActor_$i VisibilityOff
X
X    # add the actor to our list of actors
X    $ren1 AddActors contActor_$i;
X    lappend actors contActor_$i
X}
X
X# add a reversed copy of the list so that it will bounce instead of cycle
Xset length [llength $actors]
Xfor { set i [expr $length - 2] } { $i > 0 } { incr i -1 } {
X    lappend actors [lindex $actors $i]
X}
X
X# turn on the first actor
XcontActor_1.2 VisibilityOn
X
X# assign our actor to the renderer
X$ren1 SetBackground 1 1 1;
X
X# enable user interface interactor
X$iren SetUserMethod {wm deiconify .vtkInteract};
X$iren Initialize;
X
X# prevent the tk window from showing up then start the event loop
Xwm withdraw .
X
X# define the animation procedure
Xproc animate {} {
X    global renWin actors
X
X    # turn off the first guy in the loop
X    set head [lindex $actors 0]
X    $head VisibilityOff
X
X    # put him at the end
X    set actors "[lrange $actors 1 end] $head"
X
X    # pull the next guy off and turn him on
X    [lindex $actors 0] VisibilityOn
X
X    # render it
X    $renWin Render
X
X    # set us up to change again
X    after 300 animate
X}
X
X# start us off!
Xanimate
X
X
END_OF_FILE
  if test 2104 -ne `wc -c <'Sample.tcl'`; then
    echo shar: \"'Sample.tcl'\" unpacked with wrong size!
  fi
  # end of 'Sample.tcl'
fi
if test -f 'hedgehog.tcl' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'hedgehog.tcl'\"
else
  echo shar: Extracting \"'hedgehog.tcl'\" \(3286 characters\)
  sed "s/^X//" >'hedgehog.tcl' <<'END_OF_FILE'
X#unommet the line below if you are on Windows95
X# load vtktcl;
X# get the interactor ui
Xsource vtkInt.tcl
X
X# create planes
X# First create the render master
XvtkRenderMaster rm;
X
X# Now create the RenderWindow, Renderer and both Actors
X#
Xset renWin [rm MakeRenderWindow];
Xset ren1   [$renWin MakeRenderer];
Xset iren [$renWin MakeRenderWindowInteractor];
X
X# create pipeline
X#
XvtkPLOT3DReader pl3d;
X    pl3d SetXYZFilename "combxyz.bin"
X    pl3d SetQFilename "combq.bin"
X    pl3d SetScalarFunctionNumber 100;
X    pl3d SetVectorFunctionNumber 202;
X    pl3d Update;
X
XvtkPlaneSource plane;
X    plane SetResolution 20 20;
XvtkTransform transP1;
X    transP1 Translate 3.7 0.0 28.37;
X    transP1 Scale 5 5 5;
X    transP1 RotateY 90;
XvtkTransformPolyFilter tpd1
X    tpd1 SetInput [plane GetOutput];
X    tpd1 SetTransform transP1;
XvtkOutlineFilter outTpd1;
X    outTpd1 SetInput [tpd1 GetOutput];
XvtkPolyMapper mapTpd1;
X    mapTpd1 SetInput [outTpd1 GetOutput];
XvtkActor tpd1Actor;
X    tpd1Actor SetMapper mapTpd1;
X    [tpd1Actor GetProperty] SetColor 0 0 0;
X
XvtkTransform transP2;
X    transP2 Translate 9.2 0.0 31.20;
X    transP2 Scale 5 5 5;
X    transP2 RotateY 90;
XvtkTransformPolyFilter tpd2
X    tpd2 SetInput [plane GetOutput];
X    tpd2 SetTransform transP2;
XvtkOutlineFilter outTpd2;
X    outTpd2 SetInput [tpd2 GetOutput];
XvtkPolyMapper mapTpd2;
X    mapTpd2 SetInput [outTpd2 GetOutput];
XvtkActor tpd2Actor;
X    tpd2Actor SetMapper mapTpd2;
X    [tpd2Actor GetProperty] SetColor 0 0 0;
X
XvtkTransform transP3;
X    transP3 Translate 13.27 0.0 33.30;
X    transP3 Scale 5 5 5;
X    transP3 RotateY 90;
XvtkTransformPolyFilter tpd3
X    tpd3 SetInput [plane GetOutput];
X    tpd3 SetTransform transP3;
XvtkOutlineFilter outTpd3;
X    outTpd3 SetInput [tpd3 GetOutput];
XvtkPolyMapper mapTpd3;
X    mapTpd3 SetInput [outTpd3 GetOutput];
XvtkActor tpd3Actor;
X    tpd3Actor SetMapper mapTpd3;
X    [tpd3Actor GetProperty] SetColor 0 0 0;
X
XvtkAppendPolyData appendF;
X    appendF AddInput [tpd1 GetOutput];
X    appendF AddInput [tpd2 GetOutput];
X    appendF AddInput [tpd3 GetOutput];
X
XvtkProbeFilter probe;
X    probe SetInput [appendF GetOutput];
X    probe SetSource [pl3d GetOutput];
X
XvtkHedgeHog hog
Xhog SetInput [probe GetOutput]
Xhog SetScaleFactor .005
X
XvtkPolyMapper hogMapper
XhogMapper SetInput [hog GetOutput]
Xeval hogMapper SetScalarRange [[pl3d GetOutput] GetScalarRange];
X
XvtkActor hogActor;
X    hogActor SetMapper hogMapper;
X
XvtkStructuredGridOutlineFilter outline;
X    outline SetInput [pl3d GetOutput];
XvtkPolyMapper outlineMapper;
X    outlineMapper SetInput [outline GetOutput];
XvtkActor outlineActor;
X    outlineActor SetMapper outlineMapper;
X    [outlineActor GetProperty] SetColor 0 0 0;
X
X$ren1 AddActors outlineActor;
X$ren1 AddActors hogActor;
X$ren1 AddActors tpd1Actor;
X$ren1 AddActors tpd2Actor;
X$ren1 AddActors tpd3Actor;
X$ren1 SetBackground 1 1 1;
X$renWin SetSize 500 500;
X$iren Initialize;
X
Xset cam1 [$ren1 GetActiveCamera];
X$cam1 SetClippingRange 3.95297 50;
X$cam1 SetFocalPoint 8.88908 0.595038 29.3342;
X$cam1 SetPosition -12.3332 31.7479 41.2387;
X$cam1 CalcViewPlaneNormal;
X$cam1 SetViewUp 0.060772 -0.319905 0.945498;
X
X# render the image
X#
X$iren SetUserMethod {wm deiconify .vtkInteract};
X$renWin Render;
X
X# prevent the tk window from showing up then start the event loop
Xwm withdraw .
X
X
X
END_OF_FILE
  if test 3286 -ne `wc -c <'hedgehog.tcl'`; then
    echo shar: \"'hedgehog.tcl'\" unpacked with wrong size!
  fi
  # end of 'hedgehog.tcl'
fi
if test -f 'vectornorm.tcl' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'vectornorm.tcl'\"
else
  echo shar: Extracting \"'vectornorm.tcl'\" \(3297 characters\)
  sed "s/^X//" >'vectornorm.tcl' <<'END_OF_FILE'
X#unommet the line below if you are on Windows95
X# load vtktcl;
X# get the interactor ui
Xsource vtkInt.tcl
X
X# create planes
X# First create the render master
XvtkRenderMaster rm;
X
X# Now create the RenderWindow, Renderer and both Actors
X#
Xset renWin [rm MakeRenderWindow];
Xset ren1   [$renWin MakeRenderer];
Xset iren [$renWin MakeRenderWindowInteractor];
X
X# create pipeline
X#
XvtkPLOT3DReader pl3d;
X    pl3d SetXYZFilename "combxyz.bin"
X    pl3d SetQFilename "combq.bin"
X    pl3d SetScalarFunctionNumber 100;
X    pl3d SetVectorFunctionNumber 202;
X    pl3d Update;
X
XvtkPlaneSource plane;
X    plane SetResolution 50 50;
XvtkTransform transP1;
X    transP1 Translate 3.7 0.0 28.37;
X    transP1 Scale 5 5 5;
X    transP1 RotateY 90;
XvtkTransformPolyFilter tpd1
X    tpd1 SetInput [plane GetOutput];
X    tpd1 SetTransform transP1;
XvtkOutlineFilter outTpd1;
X    outTpd1 SetInput [tpd1 GetOutput];
XvtkPolyMapper mapTpd1;
X    mapTpd1 SetInput [outTpd1 GetOutput];
XvtkActor tpd1Actor;
X    tpd1Actor SetMapper mapTpd1;
X    [tpd1Actor GetProperty] SetColor 0 0 0;
X
XvtkTransform transP2;
X    transP2 Translate 9.2 0.0 31.20;
X    transP2 Scale 5 5 5;
X    transP2 RotateY 90;
XvtkTransformPolyFilter tpd2
X    tpd2 SetInput [plane GetOutput];
X    tpd2 SetTransform transP2;
XvtkOutlineFilter outTpd2;
X    outTpd2 SetInput [tpd2 GetOutput];
XvtkPolyMapper mapTpd2;
X    mapTpd2 SetInput [outTpd2 GetOutput];
XvtkActor tpd2Actor;
X    tpd2Actor SetMapper mapTpd2;
X    [tpd2Actor GetProperty] SetColor 0 0 0;
X
XvtkTransform transP3;
X    transP3 Translate 13.27 0.0 33.30;
X    transP3 Scale 5 5 5;
X    transP3 RotateY 90;
XvtkTransformPolyFilter tpd3
X    tpd3 SetInput [plane GetOutput];
X    tpd3 SetTransform transP3;
XvtkOutlineFilter outTpd3;
X    outTpd3 SetInput [tpd3 GetOutput];
XvtkPolyMapper mapTpd3;
X    mapTpd3 SetInput [outTpd3 GetOutput];
XvtkActor tpd3Actor;
X    tpd3Actor SetMapper mapTpd3;
X    [tpd3Actor GetProperty] SetColor 0 0 0;
X
XvtkAppendPolyData appendF;
X    appendF AddInput [tpd1 GetOutput];
X    appendF AddInput [tpd2 GetOutput];
X    appendF AddInput [tpd3 GetOutput];
X
XvtkProbeFilter probe;
X    probe SetInput [appendF GetOutput];
X    probe SetSource [pl3d GetOutput];
X
XvtkVectorNorm vecnorm;
X    vecnorm SetInput [probe GetOutput];
Xvecnorm SetNormalize 1
X
XvtkDataSetMapper vecnormMapper;
XvecnormMapper SetInput [vecnorm GetOutput];
XvecnormMapper SetScalarRange -1 1
X
XvtkActor planeActor;
X    planeActor SetMapper vecnormMapper;
X
XvtkStructuredGridOutlineFilter outline;
X    outline SetInput [pl3d GetOutput];
XvtkPolyMapper outlineMapper;
X    outlineMapper SetInput [outline GetOutput];
XvtkActor outlineActor;
X    outlineActor SetMapper outlineMapper;
X    [outlineActor GetProperty] SetColor 0 0 0;
X
X$ren1 AddActors outlineActor;
X$ren1 AddActors planeActor;
X$ren1 AddActors tpd1Actor;
X$ren1 AddActors tpd2Actor;
X$ren1 AddActors tpd3Actor;
X$ren1 SetBackground 1 1 1;
X$renWin SetSize 500 500;
X$iren Initialize;
X
Xset cam1 [$ren1 GetActiveCamera];
X$cam1 SetClippingRange 3.95297 50;
X$cam1 SetFocalPoint 8.88908 0.595038 29.3342;
X$cam1 SetPosition -12.3332 31.7479 41.2387;
X$cam1 CalcViewPlaneNormal;
X$cam1 SetViewUp 0.060772 -0.319905 0.945498;
X
X# render the image
X#
X$iren SetUserMethod {wm deiconify .vtkInteract};
X$renWin Render;
X
X# prevent the tk window from showing up then start the event loop
Xwm withdraw .
X
X
X
END_OF_FILE
  if test 3297 -ne `wc -c <'vectornorm.tcl'`; then
    echo shar: \"'vectornorm.tcl'\" unpacked with wrong size!
  fi
  # end of 'vectornorm.tcl'
fi
if test -f 'vtkInt.tcl' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'vtkInt.tcl'\"
else
  echo shar: Extracting \"'vtkInt.tcl'\" \(2212 characters\)
  sed "s/^X//" >'vtkInt.tcl' <<'END_OF_FILE'
X# a generic interactor for tcl and vtk
X#
Xset vtkInteractBold "-background #43ce80 -relief raised -borderwidth 1"
Xset vtkInteractNormal "-background #c0c0c0 -relief flat"
Xset vtkInteractTagcount 1;
X
Xproc vtkInteract {} {
X
X    proc dovtk {s w} {
X	global vtkInteractBold vtkInteractNormal vtkInteractTagcount;
X	set tag [append tagnum $vtkInteractTagcount];
X	incr vtkInteractTagcount 1;
X	.vtkInteract.text configure -state normal
X	.vtkInteract.text insert end $s $tag
X	eval .vtkInteract.text tag configure $tag $vtkInteractNormal
X	.vtkInteract.text tag bind $tag <Any-Enter> \
X	    ".vtkInteract.text tag configure $tag $vtkInteractBold"
X	.vtkInteract.text tag bind $tag <Any-Leave> \
X	    ".vtkInteract.text tag configure $tag $vtkInteractNormal"
X	.vtkInteract.text tag bind $tag <1> "dovtk [list $s] .vtkInteract";
X	.vtkInteract.text insert end \n; 
X	.vtkInteract.text insert end [uplevel 1 $s]; 
X	.vtkInteract.text insert end \n\n; 
X	.vtkInteract.text configure -state disabled
X	.vtkInteract.text yview end
X    }
X
X    catch {destroy .vtkInteract}
X    toplevel .vtkInteract
X    wm title .vtkInteract "vtk Interactor"
X    wm iconname .vtkInteract "vtk"
X    
X    frame .vtkInteract.buttons
X    pack  .vtkInteract.buttons -side bottom -fill x -pady 2m
X    button .vtkInteract.buttons.dismiss -text Dismiss \
X	-command "wm withdraw .vtkInteract"
X    pack .vtkInteract.buttons.dismiss -side left -expand 1
X    
X    frame .vtkInteract.file
X    label .vtkInteract.file.label -text "Command:" -width 10 -anchor w
X    entry .vtkInteract.file.entry -width 40 
X    bind .vtkInteract.file.entry <Return> {
X	dovtk [%W get] .vtkInteract; %W delete 0 end}
X    pack .vtkInteract.file.label -side left
X    pack .vtkInteract.file.entry -side left -expand 1 -fill x
X    
X    text .vtkInteract.text -yscrollcommand ".vtkInteract.scroll set" \
X	-setgrid true -width 60 -height 8 -wrap word
X    scrollbar .vtkInteract.scroll -command ".vtkInteract.text yview"
X    pack .vtkInteract.scroll -side right -fill y
X    pack .vtkInteract.text -side bottom -expand 1 -fill both
X    pack .vtkInteract.file -pady 3m -padx 2m -side bottom -fill x 
X    
X    .vtkInteract.text configure -state disabled
X    wm withdraw .vtkInteract
X}
X
XvtkInteract;
X
END_OF_FILE
  if test 2212 -ne `wc -c <'vtkInt.tcl'`; then
    echo shar: \"'vtkInt.tcl'\" unpacked with wrong size!
  fi
  # end of 'vtkInt.tcl'
fi
if test -f 'warpvector.tcl' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'warpvector.tcl'\"
else
  echo shar: Extracting \"'warpvector.tcl'\" \(3360 characters\)
  sed "s/^X//" >'warpvector.tcl' <<'END_OF_FILE'
X#unommet the line below if you are on Windows95
X# load vtktcl;
X# get the interactor ui
Xsource vtkInt.tcl
X
X# create planes
X# First create the render master
XvtkRenderMaster rm;
X
X# Now create the RenderWindow, Renderer and both Actors
X#
Xset renWin [rm MakeRenderWindow];
Xset ren1   [$renWin MakeRenderer];
Xset iren [$renWin MakeRenderWindowInteractor];
X
X# create pipeline
X#
XvtkPLOT3DReader pl3d;
X    pl3d SetXYZFilename "combxyz.bin"
X    pl3d SetQFilename "combq.bin"
X    pl3d SetScalarFunctionNumber 100;
X    pl3d SetVectorFunctionNumber 202;
X    pl3d Update;
X
XvtkPlaneSource plane;
X    plane SetResolution 50 50;
XvtkTransform transP1;
X    transP1 Translate 3.7 0.0 28.37;
X    transP1 Scale 5 5 5;
X    transP1 RotateY 90;
XvtkTransformPolyFilter tpd1
X    tpd1 SetInput [plane GetOutput];
X    tpd1 SetTransform transP1;
XvtkOutlineFilter outTpd1;
X    outTpd1 SetInput [tpd1 GetOutput];
XvtkPolyMapper mapTpd1;
X    mapTpd1 SetInput [outTpd1 GetOutput];
XvtkActor tpd1Actor;
X    tpd1Actor SetMapper mapTpd1;
X    [tpd1Actor GetProperty] SetColor 0 0 0;
X
XvtkTransform transP2;
X    transP2 Translate 9.2 0.0 31.20;
X    transP2 Scale 5 5 5;
X    transP2 RotateY 90;
XvtkTransformPolyFilter tpd2
X    tpd2 SetInput [plane GetOutput];
X    tpd2 SetTransform transP2;
XvtkOutlineFilter outTpd2;
X    outTpd2 SetInput [tpd2 GetOutput];
XvtkPolyMapper mapTpd2;
X    mapTpd2 SetInput [outTpd2 GetOutput];
XvtkActor tpd2Actor;
X    tpd2Actor SetMapper mapTpd2;
X    [tpd2Actor GetProperty] SetColor 0 0 0;
X
XvtkTransform transP3;
X    transP3 Translate 13.27 0.0 33.30;
X    transP3 Scale 5 5 5;
X    transP3 RotateY 90;
XvtkTransformPolyFilter tpd3
X    tpd3 SetInput [plane GetOutput];
X    tpd3 SetTransform transP3;
XvtkOutlineFilter outTpd3;
X    outTpd3 SetInput [tpd3 GetOutput];
XvtkPolyMapper mapTpd3;
X    mapTpd3 SetInput [outTpd3 GetOutput];
XvtkActor tpd3Actor;
X    tpd3Actor SetMapper mapTpd3;
X    [tpd3Actor GetProperty] SetColor 0 0 0;
X
XvtkAppendPolyData appendF;
X    appendF AddInput [tpd1 GetOutput];
X    appendF AddInput [tpd2 GetOutput];
X    appendF AddInput [tpd3 GetOutput];
X
XvtkProbeFilter probe;
X    probe SetInput [appendF GetOutput];
X    probe SetSource [pl3d GetOutput];
X
XvtkGeometryFilter g
Xg SetInput [probe GetOutput]
X
XvtkWarpVector warp
Xwarp SetInput [g GetOutput]
Xwarp SetScaleFactor .008
X
XvtkDataSetMapper warpMapper;
X    warpMapper SetInput [warp GetOutput];
X    eval warpMapper SetScalarRange [[pl3d GetOutput] GetScalarRange];
XvtkActor planeActor;
X    planeActor SetMapper warpMapper;
X
XvtkStructuredGridOutlineFilter outline;
X    outline SetInput [pl3d GetOutput];
XvtkPolyMapper outlineMapper;
X    outlineMapper SetInput [outline GetOutput];
XvtkActor outlineActor;
X    outlineActor SetMapper outlineMapper;
X    [outlineActor GetProperty] SetColor 0 0 0;
X
X$ren1 AddActors outlineActor;
X$ren1 AddActors planeActor;
X$ren1 AddActors tpd1Actor;
X$ren1 AddActors tpd2Actor;
X$ren1 AddActors tpd3Actor;
X$ren1 SetBackground 1 1 1;
X$renWin SetSize 500 500;
X$iren Initialize;
X
Xset cam1 [$ren1 GetActiveCamera];
X$cam1 SetClippingRange 3.95297 50;
X$cam1 SetFocalPoint 8.88908 0.595038 29.3342;
X$cam1 SetPosition -12.3332 31.7479 41.2387;
X$cam1 CalcViewPlaneNormal;
X$cam1 SetViewUp 0.060772 -0.319905 0.945498;
X
X# render the image
X#
X$iren SetUserMethod {wm deiconify .vtkInteract};
X$renWin Render;
X
X# prevent the tk window from showing up then start the event loop
Xwm withdraw .
X
X
X
END_OF_FILE
  if test 3360 -ne `wc -c <'warpvector.tcl'`; then
    echo shar: \"'warpvector.tcl'\" unpacked with wrong size!
  fi
  # end of 'warpvector.tcl'
fi
echo shar: End of archive.
exit 0


From ???@??? Wed Apr 16 07:18:14 1997
Received: from cortez.sss.rpi.edu (wilmesj@cortez.sss.rpi.edu [128.113.113.33])
	by mail1.its.rpi.edu (8.8.5/8.8.5) with ESMTP id RAA07650
	for <citrit@rpi.edu>; Tue, 15 Apr 1997 17:28:54 -0400
From: Josh Wilmes <wilmesj>
Received: (wilmesj@localhost) by cortez.sss.rpi.edu (8.6.9/8.6.4) id RAA32038 for citrit@rpi.edu; Tue, 15 Apr 1997 17:28:53 -0400
Date: Tue, 15 Apr 1997 17:28:53 -0400
Message-Id: <199704152128.RAA32038@cortez.sss.rpi.edu>
To: citrit@rpi.edu
X-UIDL: 1d305c52147af8fbeeba410117416ef6

#!/bin/sh
# This is a shell archive (produced by GNU sharutils 4.2).
# To extract the files from this archive, save it to some FILE, remove
# everything before the `!/bin/sh' line above, then type `sh FILE'.
#
# Made on 1997-04-15 17:28 EDT by <wilmesj@cortez>.
# Source directory was `/afs/rpi.edu/home/80/wilmesj/Classes/Visualization/HW3'.
#
# Existing files will *not* be overwritten unless `-c' is specified.
#
# This shar contains:
# length mode       name
# ------ ---------- ------------------------------------------
#   1600 -rw------- 6.3main.tcl
#   1256 -rwx------ Ex6.3a.tcl
#   1557 -rwx------ Ex6.3b.tcl
#   3322 -rwx------ Ex9.4a.tcl
#   3342 -rw------- Ex9.4c.tcl
#   3265 -rwx------ Ex9.4d.tcl
#   3385 -rw------- Ex9.4e.tcl
#   2212 -rw-r--r-- vtkInt.tcl
#    230 -rw------- README
#
save_IFS="${IFS}"
IFS="${IFS}:"
gettext_dir=FAILED
locale_dir=FAILED
first_param="$1"
for dir in $PATH
do
  if test "$gettext_dir" = FAILED && test -f $dir/gettext \
     && ($dir/gettext --version >/dev/null 2>&1)
  then
    set `$dir/gettext --version 2>&1`
    if test "$3" = GNU
    then
      gettext_dir=$dir
    fi
  fi
  if test "$locale_dir" = FAILED && test -f $dir/shar \
     && ($dir/shar --print-text-domain-dir >/dev/null 2>&1)
  then
    locale_dir=`$dir/shar --print-text-domain-dir`
  fi
done
IFS="$save_IFS"
if test "$locale_dir" = FAILED || test "$gettext_dir" = FAILED
then
  echo=echo
else
  TEXTDOMAINDIR=$locale_dir
  export TEXTDOMAINDIR
  TEXTDOMAIN=sharutils
  export TEXTDOMAIN
  echo="$gettext_dir/gettext -s"
fi
touch -am 1231235999 $$.touch >/dev/null 2>&1
if test ! -f 1231235999 && test -f $$.touch; then
  shar_touch=touch
else
  shar_touch=:
  echo
  $echo 'WARNING: not restoring timestamps.  Consider getting and'
  $echo "installing GNU \`touch', distributed in GNU File Utilities..."
  echo
fi
rm -f 1231235999 $$.touch
#
if mkdir _sh105776; then
  $echo 'x -' 'creating lock directory'
else
  $echo 'failed to create lock directory'
  exit 1
fi
# ============= 6.3main.tcl ==============
if test -f '6.3main.tcl' && test "$first_param" != -c; then
  $echo 'x -' SKIPPING '6.3main.tcl' '(file already exists)'
else
  $echo 'x -' extracting '6.3main.tcl' '(text)'
  sed 's/^X//' << 'SHAR_EOF' > '6.3main.tcl' &&
X
proc animate {} {
X    global renWin stopvar max min delta current
X
X    .status configure -text "Animating isovalues..";
X    
X    # now render it with isovalues from min to max (delta increments)
X    # (start at the largest to the scale is correct :-)
X    set stopvar 0 
X    for {set current $max} {$stopvar == 0} \
X	    {set current [expr $current + $delta]} {
X	if { $current <= $min }  { 
X	    set delta [expr -1 * $delta];
X	    set current $min; 
X	}
X	if { $current >= $max }  { 
X	    set delta [expr -1 * $delta]; 
X	    set current $max; 
X	}
X	render_frame $current
X	update
X    }
}
X
proc render_frame { val } {
X    global renWin
X    .status configure -text "Rendering $val..."
X    update
X    isosurface SetValue 0 $val
X    $renWin Render
X    .status configure -text "Ready"
}
X
proc make_gui {} {
X    # Make controls
X    button .b1 -command { set stopvar 1 } -text {Stop Animation}
X    button .b2 -command { animate }       -text {Start Animation}
X    button .b3 -command { exit }          -text {QUIT}
X    frame .f1
X    label .l1 -text "MAX:  "
X    entry .e1 -textvariable max 
X    frame .f2
X    label .l2 -text "MIN:  "
X    entry .e2 -textvariable min 
X    frame .f3
X    label .l3 -text "DELTA:"
X    entry .e3 -textvariable delta
X    frame .f4
X    label .l4 -text "CUR:  "
X    entry .e4 -textvariable current
X    label .status -text "Ready"
X    
X    pack .l1 .e1 -side left -in .f1
X    pack .l2 .e2 -side left -in .f2
X    pack .l3 .e3 -side left -in .f3
X    pack .l4 .e4 -side left -in .f4
X    pack .b2 .b1 .f1 .f2 .f3 .f4 .status .b3 -fill x
X    
X    bind .e4 <Return> {render_frame $current}
}
X
SHAR_EOF
  $shar_touch -am 0408222497 '6.3main.tcl' &&
  chmod 0600 '6.3main.tcl' ||
  $echo 'restore of' '6.3main.tcl' 'failed'
  if ( md5sum --help 2>&1 | grep 'sage: md5sum \[' ) >/dev/null 2>&1 \
  && ( md5sum --version 2>&1 | grep -v 'textutils 1.12' ) >/dev/null; then
    md5sum -c << SHAR_EOF >/dev/null 2>&1 \
    || $echo '6.3main.tcl:' 'MD5 check failed'
d0d96ae14b15b0fbc991eb23e63cc931  6.3main.tcl
SHAR_EOF
  else
    shar_count="`LC_ALL= LC_CTYPE= LANG= wc -c < '6.3main.tcl'`"
    test 1600 -eq "$shar_count" ||
    $echo '6.3main.tcl:' 'original size' '1600,' 'current size' "$shar_count!"
  fi
fi
# ============= Ex6.3a.tcl ==============
if test -f 'Ex6.3a.tcl' && test "$first_param" != -c; then
  $echo 'x -' SKIPPING 'Ex6.3a.tcl' '(file already exists)'
else
  $echo 'x -' extracting 'Ex6.3a.tcl' '(text)'
  sed 's/^X//' << 'SHAR_EOF' > 'Ex6.3a.tcl' &&
catch { load vtktcl; }
# user interface command widget
source vtkInt.tcl
X
# Set my defaults
set max 1.2
set min 0.0
set delta .1
set current $max
X
proc main {} {
X    make_vtkpipeline
X    make_gui
X    # fall off into the event loop
}
X
proc make_vtkpipeline {} {
X    global renWin vtk_datafile max;
X    # create a rendering window and renderer
X    vtkRenderMaster rm;
X    set renWin [rm MakeRenderWindow];
X    set ren1 [$renWin MakeRenderer];
X    set iren [$renWin MakeRenderWindowInteractor];
X    
X    vtkQuadric quad;
X    quad SetCoefficients 0.5 1 .2 0 .1 0 0 .2 0 0;
X    vtkSampleFunction sample;
X    sample SetSampleDimensions 50 50 50;
X    sample SetImplicitFunction quad;
X    vtkContourFilter isosurface;
X    isosurface SetInput [sample GetOutput];
X    isosurface SetNumberOfContours 1;
X    isosurface SetValue 0 $max;
X    vtkPolyMapper contMapper;
X    contMapper SetInput [isosurface GetOutput];
X    contMapper SetScalarRange 0.0 1.2;
X    vtkActor contActor;
X    contActor SetMapper contMapper;
X    
X    # assign our actor to the renderer
X    $ren1 SetBackground 1 1 1;
X    $ren1 AddActors contActor;
X    
X    # enable user interface interactor
X    $iren SetUserMethod {wm deiconify .vtkInteract};
X    $iren Initialize;
}
X
source 6.3main.tcl
X
main;
X
SHAR_EOF
  $shar_touch -am 0408222797 'Ex6.3a.tcl' &&
  chmod 0700 'Ex6.3a.tcl' ||
  $echo 'restore of' 'Ex6.3a.tcl' 'failed'
  if ( md5sum --help 2>&1 | grep 'sage: md5sum \[' ) >/dev/null 2>&1 \
  && ( md5sum --version 2>&1 | grep -v 'textutils 1.12' ) >/dev/null; then
    md5sum -c << SHAR_EOF >/dev/null 2>&1 \
    || $echo 'Ex6.3a.tcl:' 'MD5 check failed'
f5aa2cb21cab84a9e623ca2d1a3562bf  Ex6.3a.tcl
SHAR_EOF
  else
    shar_count="`LC_ALL= LC_CTYPE= LANG= wc -c < 'Ex6.3a.tcl'`"
    test 1256 -eq "$shar_count" ||
    $echo 'Ex6.3a.tcl:' 'original size' '1256,' 'current size' "$shar_count!"
  fi
fi
# ============= Ex6.3b.tcl ==============
if test -f 'Ex6.3b.tcl' && test "$first_param" != -c; then
  $echo 'x -' SKIPPING 'Ex6.3b.tcl' '(file already exists)'
else
  $echo 'x -' extracting 'Ex6.3b.tcl' '(text)'
  sed 's/^X//' << 'SHAR_EOF' > 'Ex6.3b.tcl' &&
# If you are using Window95 and vtk 1.3 uncomment the line below
catch { load vtktcl; }
X
# get the interactor ui
source vtkInt.tcl
X
# Set my defaults
set max 1100
set min 500
set delta 50
set current $max
set vtk_datafile "MRIdata.vtk"
X
proc main {} {
X    make_vtkpipeline
X    make_gui
X    # fall off into the event loop
}
X
proc make_vtkpipeline {} {
X    global renWin vtk_datafile max;
X
X    # First create the render master
X    vtkRenderMaster rm;
X    
X    # Now create the RenderWindow, Renderer
X    #
X    set renWin [rm MakeRenderWindow];
X    set ren1   [$renWin MakeRenderer];
X    set iren   [$renWin MakeRenderWindowInteractor];
X    
X    #
X    # Load up the data
X    vtkStructuredPointsReader vol;
X    vol SetFilename $vtk_datafile
X    
X    vtkMarchingCubes isosurface;
X    isosurface SetInput [vol GetOutput];
X    isosurface SetValue 0 $max;
X    
X    vtkPolyMapper volMapper;
X    volMapper SetInput [isosurface GetOutput];
X    volMapper ScalarsVisibleOff;
X    
X    vtkActor volActor;
X    volActor SetMapper volMapper;
X    
X    vtkOutlineFilter outLine;
X    outLine SetInput [vol GetOutput];
X    
X    vtkPolyMapper outMapper;
X    outMapper SetInput [outLine GetOutput];
X
X    vtkActor outActor;
X    outActor SetMapper outMapper;
X    
X    # Add the actors to the renderer, set the background and size
X    #
X    $ren1 AddActors outActor;
X    $ren1 AddActors volActor;
X    $ren1 SetBackground 0 0 0;
X    $renWin SetSize 500 400;
X    $iren Initialize;
X
X    $iren SetUserMethod {wm deiconify .vtkInteract};
X    $renWin Render;
}
X
X
source 6.3main.tcl
X
main;
X
SHAR_EOF
  $shar_touch -am 0409220197 'Ex6.3b.tcl' &&
  chmod 0700 'Ex6.3b.tcl' ||
  $echo 'restore of' 'Ex6.3b.tcl' 'failed'
  if ( md5sum --help 2>&1 | grep 'sage: md5sum \[' ) >/dev/null 2>&1 \
  && ( md5sum --version 2>&1 | grep -v 'textutils 1.12' ) >/dev/null; then
    md5sum -c << SHAR_EOF >/dev/null 2>&1 \
    || $echo 'Ex6.3b.tcl:' 'MD5 check failed'
7f152025eb71b65fe0d98913628a0272  Ex6.3b.tcl
SHAR_EOF
  else
    shar_count="`LC_ALL= LC_CTYPE= LANG= wc -c < 'Ex6.3b.tcl'`"
    test 1557 -eq "$shar_count" ||
    $echo 'Ex6.3b.tcl:' 'original size' '1557,' 'current size' "$shar_count!"
  fi
fi
# ============= Ex9.4a.tcl ==============
if test -f 'Ex9.4a.tcl' && test "$first_param" != -c; then
  $echo 'x -' SKIPPING 'Ex9.4a.tcl' '(file already exists)'
else
  $echo 'x -' extracting 'Ex9.4a.tcl' '(text)'
  sed 's/^X//' << 'SHAR_EOF' > 'Ex9.4a.tcl' &&
catch { load vtktcl; }
X
# get the interactor ui
source vtkInt.tcl
X
# create planes
# First create the render master
vtkRenderMaster rm;
X
# Now create the RenderWindow, Renderer and both Actors
#
set renWin [rm MakeRenderWindow];
set ren1   [$renWin MakeRenderer];
set iren [$renWin MakeRenderWindowInteractor];
X
# create pipeline
#
vtkPLOT3DReader pl3d;
X    pl3d SetXYZFilename "combxyz.bin"
X    pl3d SetQFilename "combq.bin"
X    pl3d SetScalarFunctionNumber 100;
X    pl3d SetVectorFunctionNumber 202;
X    pl3d Update;
X
vtkPlaneSource plane;
X    plane SetResolution 50 50;
vtkTransform transP1;
X    transP1 Translate 3.7 0.0 28.37;
X    transP1 Scale 5 5 5;
X    transP1 RotateY 90;
vtkTransformPolyFilter tpd1
X    tpd1 SetInput [plane GetOutput];
X    tpd1 SetTransform transP1;
vtkOutlineFilter outTpd1;
X    outTpd1 SetInput [tpd1 GetOutput];
X                           vtkPolyMapper mapTpd1;
X    mapTpd1 SetInput [outTpd1 GetOutput];
vtkActor tpd1Actor;
X    tpd1Actor SetMapper mapTpd1;
X    [tpd1Actor GetProperty] SetColor 0 0 0;
X
vtkTransform transP2;
X    transP2 Translate 9.2 0.0 31.20;
X    transP2 Scale 5 5 5;
X    transP2 RotateY 90;
vtkTransformPolyFilter tpd2
X    tpd2 SetInput [plane GetOutput];
X    tpd2 SetTransform transP2;
vtkOutlineFilter outTpd2;
X    outTpd2 SetInput [tpd2 GetOutput];
vtkPolyMapper mapTpd2;
X    mapTpd2 SetInput [outTpd2 GetOutput];
vtkActor tpd2Actor;
X    tpd2Actor SetMapper mapTpd2;
X    [tpd2Actor GetProperty] SetColor 0 0 0;
X
vtkTransform transP3;
X    transP3 Translate 13.27 0.0 33.30;
X    transP3 Scale 5 5 5;
X    transP3 RotateY 90;
vtkTransformPolyFilter tpd3
X    tpd3 SetInput [plane GetOutput];
X    tpd3 SetTransform transP3;
vtkOutlineFilter outTpd3;
X    outTpd3 SetInput [tpd3 GetOutput];
vtkPolyMapper mapTpd3;
X    mapTpd3 SetInput [outTpd3 GetOutput];
vtkActor tpd3Actor;
X    tpd3Actor SetMapper mapTpd3;
X    [tpd3Actor GetProperty] SetColor 0 0 0;
X
vtkAppendPolyData appendF;
X    appendF AddInput [tpd1 GetOutput];
X    appendF AddInput [tpd2 GetOutput];
X    appendF AddInput [tpd3 GetOutput];
X
vtkProbeFilter probe;
X    probe SetInput [appendF GetOutput];
X    probe SetSource [pl3d GetOutput];
X
vtkHedgeHog FILTER;
X    FILTER SetInput [probe GetOutput];
X    FILTER SetScaleFactor .01
X
vtkPolyMapper FILTERMapper;
X    FILTERMapper SetInput [FILTER GetOutput];
X    eval FILTERMapper SetScalarRange [[pl3d GetOutput] GetScalarRange];
vtkActor planeActor;
X    planeActor SetMapper FILTERMapper;
X
vtkStructuredGridOutlineFilter outline;
X    outline SetInput [pl3d GetOutput];
vtkPolyMapper outlineMapper;
X    outlineMapper SetInput [outline GetOutput];
vtkActor outlineActor;
X    outlineActor SetMapper outlineMapper;
X    [outlineActor GetProperty] SetColor 0 0 0;
X
$ren1 AddActors outlineActor;
$ren1 AddActors planeActor;
$ren1 AddActors tpd1Actor;
$ren1 AddActors tpd2Actor;
$ren1 AddActors tpd3Actor;
$ren1 SetBackground 1 1 1;
$renWin SetSize 500 500;
$iren Initialize;
X
set cam1 [$ren1 GetActiveCamera];
$cam1 SetClippingRange 3.95297 50;
$cam1 SetFocalPoint 8.88908 0.595038 29.3342;
$cam1 SetPosition -12.3332 31.7479 41.2387;
$cam1 CalcViewPlaneNormal;
$cam1 SetViewUp 0.060772 -0.319905 0.945498;
X
# render the image
#
$iren SetUserMethod {wm deiconify .vtkInteract};
$renWin Render;
X
# prevent the tk window from showing up then start the event loop
wm withdraw .
X
X
X
SHAR_EOF
  $shar_touch -am 0410235997 'Ex9.4a.tcl' &&
  chmod 0700 'Ex9.4a.tcl' ||
  $echo 'restore of' 'Ex9.4a.tcl' 'failed'
  if ( md5sum --help 2>&1 | grep 'sage: md5sum \[' ) >/dev/null 2>&1 \
  && ( md5sum --version 2>&1 | grep -v 'textutils 1.12' ) >/dev/null; then
    md5sum -c << SHAR_EOF >/dev/null 2>&1 \
    || $echo 'Ex9.4a.tcl:' 'MD5 check failed'
34642518bb1a23a9284f49e0e10731cc  Ex9.4a.tcl
SHAR_EOF
  else
    shar_count="`LC_ALL= LC_CTYPE= LANG= wc -c < 'Ex9.4a.tcl'`"
    test 3322 -eq "$shar_count" ||
    $echo 'Ex9.4a.tcl:' 'original size' '3322,' 'current size' "$shar_count!"
  fi
fi
# ============= Ex9.4c.tcl ==============
if test -f 'Ex9.4c.tcl' && test "$first_param" != -c; then
  $echo 'x -' SKIPPING 'Ex9.4c.tcl' '(file already exists)'
else
  $echo 'x -' extracting 'Ex9.4c.tcl' '(text)'
  sed 's/^X//' << 'SHAR_EOF' > 'Ex9.4c.tcl' &&
#catch { load vtktcl; }
X
# get the interactor ui
source vtkInt.tcl
X
# create planes
# First create the render master
vtkRenderMaster rm;
X
# Now create the RenderWindow, Renderer and both Actors
#
set renWin [rm MakeRenderWindow];
set ren1   [$renWin MakeRenderer];
set iren [$renWin MakeRenderWindowInteractor];
X
# create pipeline
#
vtkPLOT3DReader pl3d;
X    pl3d SetXYZFilename "combxyz.bin"
X    pl3d SetQFilename "combq.bin"
X    pl3d SetScalarFunctionNumber 100;
X    pl3d SetVectorFunctionNumber 202;
X    pl3d Update;
X
vtkPlaneSource plane;
X    plane SetResolution 50 50;
vtkTransform transP1;
X    transP1 Translate 3.7 0.0 28.37;
X    transP1 Scale 5 5 5;
X    transP1 RotateY 90;
vtkTransformPolyFilter tpd1
X    tpd1 SetInput [plane GetOutput];
X    tpd1 SetTransform transP1;
vtkOutlineFilter outTpd1;
X    outTpd1 SetInput [tpd1 GetOutput];
X                           vtkPolyMapper mapTpd1;
X    mapTpd1 SetInput [outTpd1 GetOutput];
vtkActor tpd1Actor;
X    tpd1Actor SetMapper mapTpd1;
X    [tpd1Actor GetProperty] SetColor 0 0 0;
X
vtkTransform transP2;
X    transP2 Translate 9.2 0.0 31.20;
X    transP2 Scale 5 5 5;
X    transP2 RotateY 90;
vtkTransformPolyFilter tpd2
X    tpd2 SetInput [plane GetOutput];
X    tpd2 SetTransform transP2;
vtkOutlineFilter outTpd2;
X    outTpd2 SetInput [tpd2 GetOutput];
vtkPolyMapper mapTpd2;
X    mapTpd2 SetInput [outTpd2 GetOutput];
vtkActor tpd2Actor;
X    tpd2Actor SetMapper mapTpd2;
X    [tpd2Actor GetProperty] SetColor 0 0 0;
X
vtkTransform transP3;
X    transP3 Translate 13.27 0.0 33.30;
X    transP3 Scale 5 5 5;
X    transP3 RotateY 90;
vtkTransformPolyFilter tpd3
X    tpd3 SetInput [plane GetOutput];
X    tpd3 SetTransform transP3;
vtkOutlineFilter outTpd3;
X    outTpd3 SetInput [tpd3 GetOutput];
vtkPolyMapper mapTpd3;
X    mapTpd3 SetInput [outTpd3 GetOutput];
vtkActor tpd3Actor;
X    tpd3Actor SetMapper mapTpd3;
X    [tpd3Actor GetProperty] SetColor 0 0 0;
X
vtkAppendPolyData appendF;
X    appendF AddInput [tpd1 GetOutput];
X    appendF AddInput [tpd2 GetOutput];
X    appendF AddInput [tpd3 GetOutput];
X
vtkProbeFilter probe;
X    probe SetInput [appendF GetOutput];
X    probe SetSource [pl3d GetOutput];
X
vtkGeometryFilter ds2poly;
X    ds2poly SetInput [probe GetOutput];
X
vtkWarpVector warp
X     warp SetInput [ds2poly GetOutput]
X     warp SetScaleFactor 0.01
X
vtkDataSetMapper myMapper;
X    myMapper SetInput [warp GetOutput];
X    myMapper SetScalarRange -1 1;
X
vtkActor planeActor;
X    planeActor SetMapper myMapper;
X
vtkStructuredGridOutlineFilter outline;
X    outline SetInput [pl3d GetOutput];
vtkPolyMapper outlineMapper;
X    outlineMapper SetInput [outline GetOutput];
vtkActor outlineActor;
X    outlineActor SetMapper outlineMapper;
X    [outlineActor GetProperty] SetColor 0 0 0;
X
$ren1 AddActors outlineActor;
$ren1 AddActors planeActor;
$ren1 AddActors tpd1Actor;
$ren1 AddActors tpd2Actor;
$ren1 AddActors tpd3Actor;
$ren1 SetBackground 1 1 1;
$renWin SetSize 500 500;
$iren Initialize;
X
set cam1 [$ren1 GetActiveCamera];
$cam1 SetClippingRange 3.95297 50;
$cam1 SetFocalPoint 8.88908 0.595038 29.3342;
$cam1 SetPosition -12.3332 31.7479 41.2387;
$cam1 CalcViewPlaneNormal;
$cam1 SetViewUp 0.060772 -0.319905 0.945498;
X
# render the image
#
$iren SetUserMethod {wm deiconify .vtkInteract};
$renWin Render;
X
# prevent the tk window from showing up then start the event loop
wm withdraw .
X
X
X
SHAR_EOF
  $shar_touch -am 0414185697 'Ex9.4c.tcl' &&
  chmod 0600 'Ex9.4c.tcl' ||
  $echo 'restore of' 'Ex9.4c.tcl' 'failed'
  if ( md5sum --help 2>&1 | grep 'sage: md5sum \[' ) >/dev/null 2>&1 \
  && ( md5sum --version 2>&1 | grep -v 'textutils 1.12' ) >/dev/null; then
    md5sum -c << SHAR_EOF >/dev/null 2>&1 \
    || $echo 'Ex9.4c.tcl:' 'MD5 check failed'
b976c48c6534e7dd766f278d83108a05  Ex9.4c.tcl
SHAR_EOF
  else
    shar_count="`LC_ALL= LC_CTYPE= LANG= wc -c < 'Ex9.4c.tcl'`"
    test 3342 -eq "$shar_count" ||
    $echo 'Ex9.4c.tcl:' 'original size' '3342,' 'current size' "$shar_count!"
  fi
fi
# ============= Ex9.4d.tcl ==============
if test -f 'Ex9.4d.tcl' && test "$first_param" != -c; then
  $echo 'x -' SKIPPING 'Ex9.4d.tcl' '(file already exists)'
else
  $echo 'x -' extracting 'Ex9.4d.tcl' '(text)'
  sed 's/^X//' << 'SHAR_EOF' > 'Ex9.4d.tcl' &&
#catch { load vtktcl; }
X
# get the interactor ui
source vtkInt.tcl
X
# create planes
# First create the render master
vtkRenderMaster rm;
X
# Now create the RenderWindow, Renderer and both Actors
#
set renWin [rm MakeRenderWindow];
set ren1   [$renWin MakeRenderer];
set iren [$renWin MakeRenderWindowInteractor];
X
# create pipeline
#
vtkPLOT3DReader pl3d;
X    pl3d SetXYZFilename "combxyz.bin"
X    pl3d SetQFilename "combq.bin"
X    pl3d SetScalarFunctionNumber 100;
X    pl3d SetVectorFunctionNumber 202;
X    pl3d Update;
X
vtkPlaneSource plane;
X    plane SetResolution 50 50;
vtkTransform transP1;
X    transP1 Translate 3.7 0.0 28.37;
X    transP1 Scale 5 5 5;
X    transP1 RotateY 90;
vtkTransformPolyFilter tpd1
X    tpd1 SetInput [plane GetOutput];
X    tpd1 SetTransform transP1;
vtkOutlineFilter outTpd1;
X    outTpd1 SetInput [tpd1 GetOutput];
X                           vtkPolyMapper mapTpd1;
X    mapTpd1 SetInput [outTpd1 GetOutput];
vtkActor tpd1Actor;
X    tpd1Actor SetMapper mapTpd1;
X    [tpd1Actor GetProperty] SetColor 0 0 0;
X
vtkTransform transP2;
X    transP2 Translate 9.2 0.0 31.20;
X    transP2 Scale 5 5 5;
X    transP2 RotateY 90;
vtkTransformPolyFilter tpd2
X    tpd2 SetInput [plane GetOutput];
X    tpd2 SetTransform transP2;
vtkOutlineFilter outTpd2;
X    outTpd2 SetInput [tpd2 GetOutput];
vtkPolyMapper mapTpd2;
X    mapTpd2 SetInput [outTpd2 GetOutput];
vtkActor tpd2Actor;
X    tpd2Actor SetMapper mapTpd2;
X    [tpd2Actor GetProperty] SetColor 0 0 0;
X
vtkTransform transP3;
X    transP3 Translate 13.27 0.0 33.30;
X    transP3 Scale 5 5 5;
X    transP3 RotateY 90;
vtkTransformPolyFilter tpd3
X    tpd3 SetInput [plane GetOutput];
X    tpd3 SetTransform transP3;
vtkOutlineFilter outTpd3;
X    outTpd3 SetInput [tpd3 GetOutput];
vtkPolyMapper mapTpd3;
X    mapTpd3 SetInput [outTpd3 GetOutput];
vtkActor tpd3Actor;
X    tpd3Actor SetMapper mapTpd3;
X    [tpd3Actor GetProperty] SetColor 0 0 0;
X
vtkAppendPolyData appendF;
X    appendF AddInput [tpd1 GetOutput];
X    appendF AddInput [tpd2 GetOutput];
X    appendF AddInput [tpd3 GetOutput];
X
vtkProbeFilter probe;
X    probe SetInput [appendF GetOutput];
X    probe SetSource [pl3d GetOutput];
X
vtkVectorNorm MyFilter;
X    MyFilter SetInput [probe GetOutput];
X    MyFilter NormalizeOn
X
vtkDataSetMapper MyFilterMapper;
X    MyFilterMapper SetInput [MyFilter GetOutput];
X
vtkActor planeActor;
X    planeActor SetMapper MyFilterMapper;
X
vtkStructuredGridOutlineFilter outline;
X    outline SetInput [pl3d GetOutput];
vtkPolyMapper outlineMapper;
X    outlineMapper SetInput [outline GetOutput];
vtkActor outlineActor;
X    outlineActor SetMapper outlineMapper;
X    [outlineActor GetProperty] SetColor 0 0 0;
X
$ren1 AddActors outlineActor;
$ren1 AddActors planeActor;
$ren1 AddActors tpd1Actor;
$ren1 AddActors tpd2Actor;
$ren1 AddActors tpd3Actor;
$ren1 SetBackground 1 1 1;
$renWin SetSize 500 500;
$iren Initialize;
X
set cam1 [$ren1 GetActiveCamera];
$cam1 SetClippingRange 3.95297 50;
$cam1 SetFocalPoint 8.88908 0.595038 29.3342;
$cam1 SetPosition -12.3332 31.7479 41.2387;
$cam1 CalcViewPlaneNormal;
$cam1 SetViewUp 0.060772 -0.319905 0.945498;
X
# render the image
#
$iren SetUserMethod {wm deiconify .vtkInteract};
#$renWin Render;
X
# prevent the tk window from showing up then start the event loop
wm withdraw .
X
X
X
SHAR_EOF
  $shar_touch -am 0414222297 'Ex9.4d.tcl' &&
  chmod 0700 'Ex9.4d.tcl' ||
  $echo 'restore of' 'Ex9.4d.tcl' 'failed'
  if ( md5sum --help 2>&1 | grep 'sage: md5sum \[' ) >/dev/null 2>&1 \
  && ( md5sum --version 2>&1 | grep -v 'textutils 1.12' ) >/dev/null; then
    md5sum -c << SHAR_EOF >/dev/null 2>&1 \
    || $echo 'Ex9.4d.tcl:' 'MD5 check failed'
651a165ed2ae366bd686acbcc154989b  Ex9.4d.tcl
SHAR_EOF
  else
    shar_count="`LC_ALL= LC_CTYPE= LANG= wc -c < 'Ex9.4d.tcl'`"
    test 3265 -eq "$shar_count" ||
    $echo 'Ex9.4d.tcl:' 'original size' '3265,' 'current size' "$shar_count!"
  fi
fi
# ============= Ex9.4e.tcl ==============
if test -f 'Ex9.4e.tcl' && test "$first_param" != -c; then
  $echo 'x -' SKIPPING 'Ex9.4e.tcl' '(file already exists)'
else
  $echo 'x -' extracting 'Ex9.4e.tcl' '(text)'
  sed 's/^X//' << 'SHAR_EOF' > 'Ex9.4e.tcl' &&
#catch { load vtktcl; }
X
# get the interactor ui
source vtkInt.tcl
X
# create planes
# First create the render master
vtkRenderMaster rm;
X
# Now create the RenderWindow, Renderer and both Actors
#
set renWin [rm MakeRenderWindow];
set ren1   [$renWin MakeRenderer];
set iren [$renWin MakeRenderWindowInteractor];
X
# create pipeline
#
vtkPLOT3DReader pl3d;
X    pl3d SetXYZFilename "combxyz.bin"
X    pl3d SetQFilename "combq.bin"
X    pl3d SetScalarFunctionNumber 100;
X    pl3d SetVectorFunctionNumber 202;
X    pl3d Update;
X
vtkPlaneSource plane;
X    plane SetResolution 50 50;
vtkTransform transP1;
X    transP1 Translate 3.7 0.0 28.37;
X    transP1 Scale 5 5 5;
X    transP1 RotateY 90;
vtkTransformPolyFilter tpd1
X    tpd1 SetInput [plane GetOutput];
X    tpd1 SetTransform transP1;
vtkOutlineFilter outTpd1;
X    outTpd1 SetInput [tpd1 GetOutput];
X                           vtkPolyMapper mapTpd1;
X    mapTpd1 SetInput [outTpd1 GetOutput];
vtkActor tpd1Actor;
X    tpd1Actor SetMapper mapTpd1;
X    [tpd1Actor GetProperty] SetColor 0 0 0;
X
vtkTransform transP2;
X    transP2 Translate 9.2 0.0 31.20;
X    transP2 Scale 5 5 5;
X    transP2 RotateY 90;
vtkTransformPolyFilter tpd2
X    tpd2 SetInput [plane GetOutput];
X    tpd2 SetTransform transP2;
vtkOutlineFilter outTpd2;
X    outTpd2 SetInput [tpd2 GetOutput];
vtkPolyMapper mapTpd2;
X    mapTpd2 SetInput [outTpd2 GetOutput];
vtkActor tpd2Actor;
X    tpd2Actor SetMapper mapTpd2;
X    [tpd2Actor GetProperty] SetColor 0 0 0;
X
vtkTransform transP3;
X    transP3 Translate 13.27 0.0 33.30;
X    transP3 Scale 5 5 5;
X    transP3 RotateY 90;
vtkTransformPolyFilter tpd3
X    tpd3 SetInput [plane GetOutput];
X    tpd3 SetTransform transP3;
vtkOutlineFilter outTpd3;
X    outTpd3 SetInput [tpd3 GetOutput];
vtkPolyMapper mapTpd3;
X    mapTpd3 SetInput [outTpd3 GetOutput];
vtkActor tpd3Actor;
X    tpd3Actor SetMapper mapTpd3;
X    [tpd3Actor GetProperty] SetColor 0 0 0;
X
vtkAppendPolyData appendF;
X    appendF AddInput [tpd1 GetOutput];
X    appendF AddInput [tpd2 GetOutput];
X    appendF AddInput [tpd3 GetOutput];
X
vtkProbeFilter probe;
X    probe SetInput [appendF GetOutput];
X    probe SetSource [pl3d GetOutput];
X
vtkGeometryFilter ds2poly;
X    ds2poly SetInput [probe GetOutput];
X
vtkPolyNormals normals;
X    normals SetInput [ds2poly GetOutput];
X
vtkVectorDot vdfilt;
X    vdfilt SetInput [normals GetOutput];
X
vtkDataSetMapper myMapper;
X    myMapper SetInput [vdfilt GetOutput];
X    myMapper SetScalarRange -1 1;
X
vtkActor planeActor;
X    planeActor SetMapper myMapper;
X
vtkStructuredGridOutlineFilter outline;
X    outline SetInput [pl3d GetOutput];
vtkPolyMapper outlineMapper;
X    outlineMapper SetInput [outline GetOutput];
vtkActor outlineActor;
X    outlineActor SetMapper outlineMapper;
X    [outlineActor GetProperty] SetColor 0 0 0;
X
$ren1 AddActors outlineActor;
$ren1 AddActors planeActor;
$ren1 AddActors tpd1Actor;
$ren1 AddActors tpd2Actor;
$ren1 AddActors tpd3Actor;
$ren1 SetBackground 1 1 1;
$renWin SetSize 500 500;
$iren Initialize;
X
set cam1 [$ren1 GetActiveCamera];
$cam1 SetClippingRange 3.95297 50;
$cam1 SetFocalPoint 8.88908 0.595038 29.3342;
$cam1 SetPosition -12.3332 31.7479 41.2387;
$cam1 CalcViewPlaneNormal;
$cam1 SetViewUp 0.060772 -0.319905 0.945498;
X
# render the image
#
$iren SetUserMethod {wm deiconify .vtkInteract};
$renWin Render;
X
# prevent the tk window from showing up then start the event loop
wm withdraw .
X
X
X
SHAR_EOF
  $shar_touch -am 0414114997 'Ex9.4e.tcl' &&
  chmod 0600 'Ex9.4e.tcl' ||
  $echo 'restore of' 'Ex9.4e.tcl' 'failed'
  if ( md5sum --help 2>&1 | grep 'sage: md5sum \[' ) >/dev/null 2>&1 \
  && ( md5sum --version 2>&1 | grep -v 'textutils 1.12' ) >/dev/null; then
    md5sum -c << SHAR_EOF >/dev/null 2>&1 \
    || $echo 'Ex9.4e.tcl:' 'MD5 check failed'
ee070da7b983cf88b1de84d933bcc4b4  Ex9.4e.tcl
SHAR_EOF
  else
    shar_count="`LC_ALL= LC_CTYPE= LANG= wc -c < 'Ex9.4e.tcl'`"
    test 3385 -eq "$shar_count" ||
    $echo 'Ex9.4e.tcl:' 'original size' '3385,' 'current size' "$shar_count!"
  fi
fi
# ============= vtkInt.tcl ==============
if test -f 'vtkInt.tcl' && test "$first_param" != -c; then
  $echo 'x -' SKIPPING 'vtkInt.tcl' '(file already exists)'
else
  $echo 'x -' extracting 'vtkInt.tcl' '(text)'
  sed 's/^X//' << 'SHAR_EOF' > 'vtkInt.tcl' &&
# a generic interactor for tcl and vtk
#
set vtkInteractBold "-background #43ce80 -relief raised -borderwidth 1"
set vtkInteractNormal "-background #c0c0c0 -relief flat"
set vtkInteractTagcount 1;
X
proc vtkInteract {} {
X
X    proc dovtk {s w} {
X	global vtkInteractBold vtkInteractNormal vtkInteractTagcount;
X	set tag [append tagnum $vtkInteractTagcount];
X	incr vtkInteractTagcount 1;
X	.vtkInteract.text configure -state normal
X	.vtkInteract.text insert end $s $tag
X	eval .vtkInteract.text tag configure $tag $vtkInteractNormal
X	.vtkInteract.text tag bind $tag <Any-Enter> \
X	    ".vtkInteract.text tag configure $tag $vtkInteractBold"
X	.vtkInteract.text tag bind $tag <Any-Leave> \
X	    ".vtkInteract.text tag configure $tag $vtkInteractNormal"
X	.vtkInteract.text tag bind $tag <1> "dovtk [list $s] .vtkInteract";
X	.vtkInteract.text insert end \n; 
X	.vtkInteract.text insert end [uplevel 1 $s]; 
X	.vtkInteract.text insert end \n\n; 
X	.vtkInteract.text configure -state disabled
X	.vtkInteract.text yview end
X    }
X
X    catch {destroy .vtkInteract}
X    toplevel .vtkInteract
X    wm title .vtkInteract "vtk Interactor"
X    wm iconname .vtkInteract "vtk"
X    
X    frame .vtkInteract.buttons
X    pack  .vtkInteract.buttons -side bottom -fill x -pady 2m
X    button .vtkInteract.buttons.dismiss -text Dismiss \
X	-command "wm withdraw .vtkInteract"
X    pack .vtkInteract.buttons.dismiss -side left -expand 1
X    
X    frame .vtkInteract.file
X    label .vtkInteract.file.label -text "Command:" -width 10 -anchor w
X    entry .vtkInteract.file.entry -width 40 
X    bind .vtkInteract.file.entry <Return> {
X	dovtk [%W get] .vtkInteract; %W delete 0 end}
X    pack .vtkInteract.file.label -side left
X    pack .vtkInteract.file.entry -side left -expand 1 -fill x
X    
X    text .vtkInteract.text -yscrollcommand ".vtkInteract.scroll set" \
X	-setgrid true -width 60 -height 8 -wrap word
X    scrollbar .vtkInteract.scroll -command ".vtkInteract.text yview"
X    pack .vtkInteract.scroll -side right -fill y
X    pack .vtkInteract.text -side bottom -expand 1 -fill both
X    pack .vtkInteract.file -pady 3m -padx 2m -side bottom -fill x 
X    
X    .vtkInteract.text configure -state disabled
X    wm withdraw .vtkInteract
}
X
vtkInteract;
X
SHAR_EOF
  $shar_touch -am 0527162896 'vtkInt.tcl' &&
  chmod 0644 'vtkInt.tcl' ||
  $echo 'restore of' 'vtkInt.tcl' 'failed'
  if ( md5sum --help 2>&1 | grep 'sage: md5sum \[' ) >/dev/null 2>&1 \
  && ( md5sum --version 2>&1 | grep -v 'textutils 1.12' ) >/dev/null; then
    md5sum -c << SHAR_EOF >/dev/null 2>&1 \
    || $echo 'vtkInt.tcl:' 'MD5 check failed'
5fbf780b9551e0061c3ab2ae73ab2181  vtkInt.tcl
SHAR_EOF
  else
    shar_count="`LC_ALL= LC_CTYPE= LANG= wc -c < 'vtkInt.tcl'`"
    test 2212 -eq "$shar_count" ||
    $echo 'vtkInt.tcl:' 'original size' '2212,' 'current size' "$shar_count!"
  fi
fi
# ============= README ==============
if test -f 'README' && test "$first_param" != -c; then
  $echo 'x -' SKIPPING 'README' '(file already exists)'
else
  $echo 'x -' extracting 'README' '(text)'
  sed 's/^X//' << 'SHAR_EOF' > 'README' &&
Example 6.3:
X	6.3main.tcl : shared code between parts a and b
X	Ex6.3a.tcl  : part a
X	Ex6.3b.tcl  : part b
X
Example 9.4:
X	Ex9.4a.tcl : vtkHedgeHog
X	Ex9.4c.tcl : vtkWarpVector
X	Ex9.4d.tcl : vtkVectorNorm
X	Ex9.4e.tcl : vtkVectorDot
X
SHAR_EOF
  $shar_touch -am 0414185897 'README' &&
  chmod 0600 'README' ||
  $echo 'restore of' 'README' 'failed'
  if ( md5sum --help 2>&1 | grep 'sage: md5sum \[' ) >/dev/null 2>&1 \
  && ( md5sum --version 2>&1 | grep -v 'textutils 1.12' ) >/dev/null; then
    md5sum -c << SHAR_EOF >/dev/null 2>&1 \
    || $echo 'README:' 'MD5 check failed'
0509345669a204b6f55b370160f533f2  README
SHAR_EOF
  else
    shar_count="`LC_ALL= LC_CTYPE= LANG= wc -c < 'README'`"
    test 230 -eq "$shar_count" ||
    $echo 'README:' 'original size' '230,' 'current size' "$shar_count!"
  fi
fi
rm -fr _sh105776
exit 0

From ???@??? Wed Apr 16 07:18:15 1997
Received: from cortez.sss.rpi.edu (wangm@cortez.sss.rpi.edu [128.113.113.33])
	by mail1.its.rpi.edu (8.8.5/8.8.5) with ESMTP id RAA103792
	for <citrit@rpi.edu>; Tue, 15 Apr 1997 17:32:04 -0400
From: Michael Wang <wangm>
Received: (wangm@localhost) by cortez.sss.rpi.edu (8.6.9/8.6.4) id RAA153720 for citrit@rpi.edu; Tue, 15 Apr 1997 17:32:04 -0400
Date: Tue, 15 Apr 1997 17:32:04 -0400
Message-Id: <199704152132.RAA153720@cortez.sss.rpi.edu>
To: citrit@rpi.edu
Subject: Homework 3
X-UIDL: 70804ddf6c0c93d79465c656534c7961

#!/bin/sh
# This is a shell archive (produced by GNU sharutils 4.2).
# To extract the files from this archive, save it to some FILE, remove
# everything before the `!/bin/sh' line above, then type `sh FILE'.
#
# Made on 1997-04-15 17:31 EDT by <wangm@cortez>.
# Source directory was `/afs/rpi.edu/home/36/wangm/DataVis/hw3'.
#
# Existing files will *not* be overwritten unless `-c' is specified.
#
# This shar contains:
# length mode       name
# ------ ---------- ------------------------------------------
#   1723 -rw-r----- MRIHead.tcl
#   1559 -rw-r----- Sample.tcl
#   3561 -rw-r----- hedgehog.tcl
#   4112 -rw-r----- vdot.tcl
#   4134 -rw-r----- vnorm.tcl
#
save_IFS="${IFS}"
IFS="${IFS}:"
gettext_dir=FAILED
locale_dir=FAILED
first_param="$1"
for dir in $PATH
do
  if test "$gettext_dir" = FAILED && test -f $dir/gettext \
     && ($dir/gettext --version >/dev/null 2>&1)
  then
    set `$dir/gettext --version 2>&1`
    if test "$3" = GNU
    then
      gettext_dir=$dir
    fi
  fi
  if test "$locale_dir" = FAILED && test -f $dir/shar \
     && ($dir/shar --print-text-domain-dir >/dev/null 2>&1)
  then
    locale_dir=`$dir/shar --print-text-domain-dir`
  fi
done
IFS="$save_IFS"
if test "$locale_dir" = FAILED || test "$gettext_dir" = FAILED
then
  echo=echo
else
  TEXTDOMAINDIR=$locale_dir
  export TEXTDOMAINDIR
  TEXTDOMAIN=sharutils
  export TEXTDOMAIN
  echo="$gettext_dir/gettext -s"
fi
touch -am 1231235999 $$.touch >/dev/null 2>&1
if test ! -f 1231235999 && test -f $$.touch; then
  shar_touch=touch
else
  shar_touch=:
  echo
  $echo 'WARNING: not restoring timestamps.  Consider getting and'
  $echo "installing GNU \`touch', distributed in GNU File Utilities..."
  echo
fi
rm -f 1231235999 $$.touch
#
if mkdir _sh142320; then
  $echo 'x -' 'creating lock directory'
else
  $echo 'failed to create lock directory'
  exit 1
fi
# ============= MRIHead.tcl ==============
if test -f 'MRIHead.tcl' && test "$first_param" != -c; then
  $echo 'x -' SKIPPING 'MRIHead.tcl' '(file already exists)'
else
  $echo 'x -' extracting 'MRIHead.tcl' '(binary)'
  sed 's/^X//' << 'SHAR_EOF' | uudecode &&
begin 600 MRIHead.tcl
M(R!)9B!Y;W4@87)E('5S:6YG(%=I;F1O=SDU(&%N9"!V=&L@,2XS('5N8V]M
M;65N="!T:&4@;&EN92!B96QO=PT*;&]A9"!V=&MT8VP[#0H-"B,@9V5T('1H
M92!I;G1E<F%C=&]R('5I#0IS;W5R8V4@=G1K26YT+G1C;`T*#0HC($9I<G-T
M(&-R96%T92!T:&4@<F5N9&5R(&UA<W1E<@T*=G1K4F5N9&5R36%S=&5R(')M
M.PT*#0HC($YO=R!C<F5A=&4@=&AE(%)E;F1E<E=I;F1O=RP@4F5N9&5R97(-
M"B,-"G-E="!R96Y7:6X@6W)M($UA:V5296YD97)7:6YD;W==.PT*<V5T(')E
M;C$@("!;)')E;E=I;B!-86ME4F5N9&5R97)=.PT*<V5T(&ER96X@("!;)')E
M;E=I;B!-86ME4F5N9&5R5VEN9&]W26YT97)A8W1O<ET[#0H-"B,-"B,@3&]A
M9"!U<"!T:&4@9&%T80T*=G1K4W1R=6-T=7)E9%!O:6YT<U)E861E<B!V;VP[
M#0H@("`@=F]L(%-E=$9I;&5N86UE(")-4DED871A+G9T:R(-"B`@("!V;VP@
M1&5B=6=/;CL-"@T*=G1K36%R8VAI;F=#=6)E<R!C;VYT;W5R.PT*("!C;VYT
M;W5R(%-E=$EN<'5T(%MV;VP@1V5T3W5T<'5T73L-"B`@8V]N=&]U<B!39716
M86QU92`P(#$U,#`[#0H-"G9T:T1E8VEM871E(&1E8VD[#0H@("`@9&5C:2!3
M971);G!U="!;8V]N=&]U<B!'971/=71P=71=.PT*("`@(&1E8VD@4V5T5&%R
M9V5T4F5D=6-T:6]N(#`N,3`[#0H@("`@9&5C:2!3971!<W!E8W12871I;R`R
M,#L-"B`@("!D96-I(%-E=$EN:71I86Q%<G)O<B`P+C`P,#([#0H@("`@9&5C
M:2!3971%<G)O<DEN8W)E;65N="`P+C`P,#4[#0H@("`@9&5C:2!3971-87AI
M;75M271E<F%T:6]N<R`V.PT*("`@(&1E8VD@4V5T26YI=&EA;$9E871U<F5!
M;F=L92`T-3L-"@T*=G1K4&]L>4UA<'!E<B!V;VQ-87!P97([#0H@('9O;$UA
M<'!E<B!3971);G!U="!;9&5C:2!'971/=71P=71=.PT*("!V;VQ-87!P97(@
M4V-A;&%R<U9I<VEB;&5/9F8[#0H-"G9T:T%C=&]R('9O;$%C=&]R.PT*("!V
M;VQ!8W1O<B!3971-87!P97(@=F]L36%P<&5R.PT*#0IV=&M/=71L:6YE1FEL
M=&5R(&]U=$QI;F4[#0H@(&]U=$QI;F4@4V5T26YP=70@6W9O;"!'971/=71P
M=71=.PT*#0IV=&M0;VQY36%P<&5R(&]U=$UA<'!E<CL-"B`@;W5T36%P<&5R
M(%-E=$EN<'5T(%MO=71,:6YE($=E=$]U='!U=%T[#0H-"G9T:T%C=&]R(&]U
M=$%C=&]R.PT*("!O=71!8W1O<B!3971-87!P97(@;W5T36%P<&5R.PT*#0HC
M($%D9"!T:&4@86-T;W)S('1O('1H92!R96YD97)E<BP@<V5T('1H92!B86-K
M9W)O=6YD(&%N9"!S:7IE#0HC#0HD<F5N,2!!9&1!8W1O<G,@;W5T06-T;W([
M#0HD<F5N,2!!9&1!8W1O<G,@=F]L06-T;W([#0IS970@8V%M,2!;)')E;C$@
M1V5T06-T:79E0V%M97)A73L-"B1C86TQ($5L979A=&EO;B`R,#`[#0HD8V%M
M,2!!>FEM=71H(#$U.PT*)&-A;3$@4F]L;"`Q.#`[#0HD<F5N,2!3971"86-K
M9W)O=6YD(#`@,"`P.PT*)')E;E=I;B!39713:7IE(#4P,"`T,#`[#0HD:7)E
M;B!);FET:6%L:7IE.PT*#0HC(')E;F1E<B!T:&4@:6UA9V4-"B,-"B1I<F5N
M(%-E=%5S97)-971H;V0@>W=M(&1E:6-O;FEF>2`N=G1K26YT97)A8W1].PT*
M)')E;E=I;B!296YD97([#0H-"B,@<')E=F5N="!T:&4@=&L@=VEN9&]W(&9R
M;VT@<VAO=VEN9R!U<"!T:&5N('-T87)T('1H92!E=F5N="!L;V]P#0IW;2!W
M:71H9')A=R`N#0H-"F9O<B![<V5T(&D@,30P,'T@>R1I/C$P,'T@>VEN8W(@
M:2`M,3`P?2![#0IE=F%L(&-O;G1O=7(@4V5T5F%L=64@,"`D:3L-"B1R96Y7
-:6X@4F5N9&5R.PT*?6%L
`
end
SHAR_EOF
  $shar_touch -am 0415173097 'MRIHead.tcl' &&
  chmod 0640 'MRIHead.tcl' ||
  $echo 'restore of' 'MRIHead.tcl' 'failed'
  if ( md5sum --help 2>&1 | grep 'sage: md5sum \[' ) >/dev/null 2>&1 \
  && ( md5sum --version 2>&1 | grep -v 'textutils 1.12' ) >/dev/null; then
    md5sum -c << SHAR_EOF >/dev/null 2>&1 \
    || $echo 'MRIHead.tcl:' 'MD5 check failed'
2e5f5cb7026b61597556fda8cb1a2dfc  MRIHead.tcl
SHAR_EOF
  else
    shar_count="`LC_ALL= LC_CTYPE= LANG= wc -c < 'MRIHead.tcl'`"
    test 1723 -eq "$shar_count" ||
    $echo 'MRIHead.tcl:' 'original size' '1723,' 'current size' "$shar_count!"
  fi
fi
# ============= Sample.tcl ==============
if test -f 'Sample.tcl' && test "$first_param" != -c; then
  $echo 'x -' SKIPPING 'Sample.tcl' '(file already exists)'
else
  $echo 'x -' extracting 'Sample.tcl' '(binary)'
  sed 's/^X//' << 'SHAR_EOF' | uudecode &&
begin 600 Sample.tcl
M;&]A9"!V=&MT8VP[#0HC('5S97(@:6YT97)F86-E(&-O;6UA;F0@=VED9V5T
M#0IS;W5R8V4@=G1K26YT+G1C;`T*#0HC(&-R96%T92!A(')E;F1E<FEN9R!W
M:6YD;W<@86YD(')E;F1E<F5R#0IV=&M296YD97)-87-T97(@<FT[#0IS970@
M<F5N5VEN(%MR;2!-86ME4F5N9&5R5VEN9&]W73L-"G-E="!R96XQ(%LD<F5N
M5VEN($UA:V5296YD97)E<ET[#0IS970@:7)E;B!;)')E;E=I;B!-86ME4F5N
M9&5R5VEN9&]W26YT97)A8W1O<ET[#0H-"G9T:U%U861R:6,@<75A9#L-"B`@
M<75A9"!3971#;V5F9FEC:65N=',@,"XU(#$@+C(@,"`N,2`P(#`@+C(@,"`P
M.PT*=G1K4V%M<&QE1G5N8W1I;VX@<V%M<&QE.PT*("!S86UP;&4@4V5T4V%M
M<&QE1&EM96YS:6]N<R`U(#4@-3L-"B`@<V%M<&QE(%-E=$EM<&QI8VET1G5N
M8W1I;VX@<75A9#L-"G9T:T-O;G1O=7)&:6QT97(@8V]N=&]U<G,[#0IC;VYT
M;W5R<R!3971);G!U="!;<V%M<&QE($=E=$]U='!U=%T[#0IC;VYT;W5R<R!'
M96YE<F%T959A;'5E<R`U(#`@,2XR.PT*#0IV=&M$96-I;6%T92!D96-I.PT*
M("`@(&1E8VD@4V5T26YP=70@6V-O;G1O=7)S($=E=$]U='!U=%T[#0H@("`@
M9&5C:2!3971487)G9712961U8W1I;VX@,"XY,#L-"B`@("!D96-I(%-E=$%S
M<&5C=%)A=&EO(#(P.PT*("`@(&1E8VD@4V5T26YI=&EA;$5R<F]R(#`N,#`R
M.PT*("`@(&1E8VD@4V5T17)R;W));F-R96UE;G0@,"XP,#4[#0H@("`@9&5C
M:2!3971-87AI;75M271E<F%T:6]N<R`V.PT*("`@(&1E8VD@4V5T26YI=&EA
M;$9E871U<F5!;F=L92`T-3L-"@T*=G1K4&]L>4UA<'!E<B!C;VYT36%P<&5R
M.PT*("!C;VYT36%P<&5R(%-E=$EN<'5T(%MD96-I($=E=$]U='!U=%T[#0H@
M(&-O;G1-87!P97(@4V5T4V-A;&%R4F%N9V4@,"XP(#$N,CL-"G9T:T%C=&]R
M(&-O;G1!8W1O<CL-"B`@8V]N=$%C=&]R(%-E=$UA<'!E<B!C;VYT36%P<&5R
M.PT*#0HC(&%S<VEG;B!O=7(@86-T;W(@=&\@=&AE(')E;F1E<F5R#0HD<F5N
M,2!3971"86-K9W)O=6YD(#$@,2`Q.PT*)')E;C$@061D06-T;W)S(&-O;G1!
M8W1O<CL-"@T*(R!E;F%B;&4@=7-E<B!I;G1E<F9A8V4@:6YT97)A8W1O<@T*
M)&ER96X@4V5T57-E<DUE=&AO9"![=VT@9&5I8V]N:69Y("YV=&M);G1E<F%C
M='T[#0HD:7)E;B!);FET:6%L:7IE.PT*#0IW;2!W:71H9')A=R`N#0H-"G-E
M="!C86TQ(%LD<F5N,2!'971!8W1I=F5#86UE<F%=.PT*9F]R('MS970@:2`Q
M,GT@>R1I/BTQ?2![:6YC<B!I("TQ?2![#0IF;W(@>W-E="!J(#!]('LD:CPU
M?2![:6YC<B!J(#%]('L-"F5V86P@8V]N=&]U<G,@4V5T5F%L=64@)&H@6V5X
M<'(@)&DO,3`N,%T[#0I]#0HD8V%M,2!!>FEM=71H(#4[#0HD8V%M,2!%;&5V
M871I;VX@-3L-"B1R96Y7:6X@4F5N9&5R.PT*?0T*#0IF;W(@>W-E="!I(#!]
M('LD:3PQ,GT@>VEN8W(@:2`Q?2![#0IF;W(@>W-E="!J(#!]('LD:CPU?2![
M:6YC<B!J(#%]('L-"F5V86P@8V]N=&]U<G,@4V5T5F%L=64@)&H@6V5X<'(@
M)&DO,3`N,%T[#0I]#0HD8V%M,2!%;&5V871I;VX@+34[#0HD8V%M,2!!>FEM
==71H("TU.PT*#0HD<F5N5VEN(%)E;F1E<CL-"GT@
`
end
SHAR_EOF
  $shar_touch -am 0415173097 'Sample.tcl' &&
  chmod 0640 'Sample.tcl' ||
  $echo 'restore of' 'Sample.tcl' 'failed'
  if ( md5sum --help 2>&1 | grep 'sage: md5sum \[' ) >/dev/null 2>&1 \
  && ( md5sum --version 2>&1 | grep -v 'textutils 1.12' ) >/dev/null; then
    md5sum -c << SHAR_EOF >/dev/null 2>&1 \
    || $echo 'Sample.tcl:' 'MD5 check failed'
eefa4cc0f10305cf3204b639166b7fca  Sample.tcl
SHAR_EOF
  else
    shar_count="`LC_ALL= LC_CTYPE= LANG= wc -c < 'Sample.tcl'`"
    test 1559 -eq "$shar_count" ||
    $echo 'Sample.tcl:' 'original size' '1559,' 'current size' "$shar_count!"
  fi
fi
# ============= hedgehog.tcl ==============
if test -f 'hedgehog.tcl' && test "$first_param" != -c; then
  $echo 'x -' SKIPPING 'hedgehog.tcl' '(file already exists)'
else
  $echo 'x -' extracting 'hedgehog.tcl' '(binary)'
  sed 's/^X//' << 'SHAR_EOF' | uudecode &&
begin 600 hedgehog.tcl
M(W5N;VUM970@=&AE(&QI;F4@8F5L;W<@:68@>6]U(&%R92!O;B!7:6YD;W=S
M.34-"FQO860@=G1K=&-L.PT*(R!G970@=&AE(&EN=&5R86-T;W(@=6D-"G-O
M=7)C92!V=&M);G0N=&-L#0H-"B,@8W)E871E('!L86YE<PT*(R!&:7)S="!C
M<F5A=&4@=&AE(')E;F1E<B!M87-T97(-"G9T:U)E;F1E<DUA<W1E<B!R;3L-
M"@T*(R!.;W<@8W)E871E('1H92!296YD97)7:6YD;W<L(%)E;F1E<F5R(&%N
M9"!B;W1H($%C=&]R<PT*(PT*<V5T(')E;E=I;B!;<FT@36%K95)E;F1E<E=I
M;F1O=UT[#0IS970@<F5N,2`@(%LD<F5N5VEN($UA:V5296YD97)E<ET[#0IS
M970@:7)E;B!;)')E;E=I;B!-86ME4F5N9&5R5VEN9&]W26YT97)A8W1O<ET[
M#0H-"B,@8W)E871E('!I<&5L:6YE#0HC#0IV=&M03$]4,T1296%D97(@<&PS
M9#L-"B`@("!P;#-D(%-E=%A96D9I;&5N86UE(")C;VUB>'EZ+F)I;B(-"B`@
M("!P;#-D(%-E=%%&:6QE;F%M92`B8V]M8G$N8FEN(@T*("`@('!L,V0@4V5T
M4V-A;&%R1G5N8W1I;VY.=6UB97(@,3`P.PT*("`@('!L,V0@4V5T5F5C=&]R
M1G5N8W1I;VY.=6UB97(@,C`R.PT*("`@('!L,V0@57!D871E.PT*#0IV=&M0
M;&%N95-O=7)C92!P;&%N93L-"B`@("!P;&%N92!3971297-O;'5T:6]N(#4P
M(#4P.PT*=G1K5')A;G-F;W)M('1R86YS4#$[#0H@("`@=')A;G-0,2!4<F%N
M<VQA=&4@,RXW(#`N,"`R."XS-SL-"B`@("!T<F%N<U`Q(%-C86QE(#4@-2`U
M.PT*("`@('1R86YS4#$@4F]T871E62`Y,#L-"G9T:U1R86YS9F]R;5!O;'E&
M:6QT97(@='!D,0T*("`@('1P9#$@4V5T26YP=70@6W!L86YE($=E=$]U='!U
M=%T[#0H@("`@='!D,2!39714<F%N<V9O<FT@=')A;G-0,3L-"G9T:T]U=&QI
M;F5&:6QT97(@;W5T5'!D,3L-"B`@("!O=714<&0Q(%-E=$EN<'5T(%MT<&0Q
M($=E=$]U='!U=%T[#0IV=&M0;VQY36%P<&5R(&UA<%1P9#$[#0H@("`@;6%P
M5'!D,2!3971);G!U="!;;W5T5'!D,2!'971/=71P=71=.PT*=G1K06-T;W(@
M='!D,4%C=&]R.PT*("`@('1P9#%!8W1O<B!3971-87!P97(@;6%P5'!D,3L-
M"B`@("!;='!D,4%C=&]R($=E=%!R;W!E<G1Y72!3971#;VQO<B`P(#`@,#L-
M"@T*=G1K5')A;G-F;W)M('1R86YS4#([#0H@("`@=')A;G-0,B!4<F%N<VQA
M=&4@.2XR(#`N,"`S,2XR,#L-"B`@("!T<F%N<U`R(%-C86QE(#4@-2`U.PT*
M("`@('1R86YS4#(@4F]T871E62`Y,#L-"G9T:U1R86YS9F]R;5!O;'E&:6QT
M97(@='!D,@T*("`@('1P9#(@4V5T26YP=70@6W!L86YE($=E=$]U='!U=%T[
M#0H@("`@='!D,B!39714<F%N<V9O<FT@=')A;G-0,CL-"G9T:T]U=&QI;F5&
M:6QT97(@;W5T5'!D,CL-"B`@("!O=714<&0R(%-E=$EN<'5T(%MT<&0R($=E
M=$]U='!U=%T[#0IV=&M0;VQY36%P<&5R(&UA<%1P9#([#0H@("`@;6%P5'!D
M,B!3971);G!U="!;;W5T5'!D,B!'971/=71P=71=.PT*=G1K06-T;W(@='!D
M,D%C=&]R.PT*("`@('1P9#)!8W1O<B!3971-87!P97(@;6%P5'!D,CL-"B`@
M("!;='!D,D%C=&]R($=E=%!R;W!E<G1Y72!3971#;VQO<B`P(#`@,#L-"@T*
M=G1K5')A;G-F;W)M('1R86YS4#,[#0H@("`@=')A;G-0,R!4<F%N<VQA=&4@
M,3,N,C<@,"XP(#,S+C,P.PT*("`@('1R86YS4#,@4V-A;&4@-2`U(#4[#0H@
M("`@=')A;G-0,R!2;W1A=&59(#DP.PT*=G1K5')A;G-F;W)M4&]L>49I;'1E
M<B!T<&0S#0H@("`@='!D,R!3971);G!U="!;<&QA;F4@1V5T3W5T<'5T73L-
M"B`@("!T<&0S(%-E=%1R86YS9F]R;2!T<F%N<U`S.PT*=G1K3W5T;&EN949I
M;'1E<B!O=714<&0S.PT*("`@(&]U=%1P9#,@4V5T26YP=70@6W1P9#,@1V5T
M3W5T<'5T73L-"G9T:U!O;'E-87!P97(@;6%P5'!D,SL-"B`@("!M87!4<&0S
M(%-E=$EN<'5T(%MO=714<&0S($=E=$]U='!U=%T[#0IV=&M!8W1O<B!T<&0S
M06-T;W([#0H@("`@='!D,T%C=&]R(%-E=$UA<'!E<B!M87!4<&0S.PT*("`@
M(%MT<&0S06-T;W(@1V5T4')O<&5R='E=(%-E=$-O;&]R(#`@,"`P.PT*#0IV
M=&M!<'!E;F10;VQY1&%T82!A<'!E;F1&.PT*("`@(&%P<&5N9$8@061D26YP
M=70@6W1P9#$@1V5T3W5T<'5T73L-"B`@("!A<'!E;F1&($%D9$EN<'5T(%MT
M<&0R($=E=$]U='!U=%T[#0H@("`@87!P96YD1B!!9&1);G!U="!;='!D,R!'
M971/=71P=71=.PT*#0IV=&M0<F]B949I;'1E<B!P<F]B93L-"B`@("!P<F]B
M92!3971);G!U="!;87!P96YD1B!'971/=71P=71=.PT*("`@('!R;V)E(%-E
M=%-O=7)C92!;<&PS9"!'971/=71P=71=.PT*#0IV=&M(961G94AO9R!C;VYT
M;W5R.PT*("`@(&-O;G1O=7(@4V5T26YP=70@6W!R;V)E($=E=$]U='!U=%T[
M#0H@("`@979A;"!C;VYT;W5R(%-E=%-C86QE1F%C=&]R("XP,#4[#0H-"G9T
M:U!O;'E-87!P97(@8V]N=&]U<DUA<'!E<CL-"B`@("!C;VYT;W5R36%P<&5R
M(%-E=$EN<'5T(%MC;VYT;W5R($=E=$]U='!U=%T[#0H@("`@979A;"!C;VYT
M;W5R36%P<&5R(%-E=%-C86QA<E)A;F=E(%M;<&PS9"!'971/=71P=71=($=E
M=%-C86QA<E)A;F=E73L-"G9T:T%C=&]R('!L86YE06-T;W([#0H@("`@<&QA
M;F5!8W1O<B!3971-87!P97(@8V]N=&]U<DUA<'!E<CL-"@T*=G1K4W1R=6-T
M=7)E9$=R:61/=71L:6YE1FEL=&5R(&]U=&QI;F4[#0H@("`@;W5T;&EN92!3
M971);G!U="!;<&PS9"!'971/=71P=71=.PT*=G1K4&]L>4UA<'!E<B!O=71L
M:6YE36%P<&5R.PT*("`@(&]U=&QI;F5-87!P97(@4V5T26YP=70@6V]U=&QI
M;F4@1V5T3W5T<'5T73L-"G9T:T%C=&]R(&]U=&QI;F5!8W1O<CL-"B`@("!O
M=71L:6YE06-T;W(@4V5T36%P<&5R(&]U=&QI;F5-87!P97([#0H@("`@6V]U
M=&QI;F5!8W1O<B!'9710<F]P97)T>5T@4V5T0V]L;W(@,"`P(#`[#0H-"B1R
M96XQ($%D9$%C=&]R<R!O=71L:6YE06-T;W([#0HD<F5N,2!!9&1!8W1O<G,@
M<&QA;F5!8W1O<CL-"B1R96XQ($%D9$%C=&]R<R!T<&0Q06-T;W([#0HD<F5N
M,2!!9&1!8W1O<G,@='!D,D%C=&]R.PT*)')E;C$@061D06-T;W)S('1P9#-!
M8W1O<CL-"B1R96XQ(%-E=$)A8VMG<F]U;F0@,2`Q(#$[#0HD<F5N5VEN(%-E
M=%-I>F4@-3`P(#4P,#L-"B1I<F5N($EN:71I86QI>F4[#0H-"G-E="!C86TQ
M(%LD<F5N,2!'971!8W1I=F5#86UE<F%=.PT*)&-A;3$@4V5T0VQI<'!I;F=2
M86YG92`S+CDU,CDW(#4P.PT*)&-A;3$@4V5T1F]C86Q0;VEN="`X+C@X.3`X
M(#`N-3DU,#,X(#(Y+C,S-#([#0HD8V%M,2!39710;W-I=&EO;B`M,3(N,S,S
M,B`S,2XW-#<Y(#0Q+C(S.#<[#0HD8V%M,2!#86QC5FEE=U!L86YE3F]R;6%L
M.PT*)&-A;3$@4V5T5FEE=U5P(#`N,#8P-S<R("TP+C,Q.3DP-2`P+CDT-30Y
M.#L-"@T*(R!R96YD97(@=&AE(&EM86=E#0HC#0HD:7)E;B!39715<V5R365T
M:&]D('MW;2!D96EC;VYI9GD@+G9T:TEN=&5R86-T?3L-"B1R96Y7:6X@4F5N
M9&5R.PT*#0HC('!R979E;G0@=&AE('1K('=I;F1O=R!F<F]M('-H;W=I;F<@
M=7`@=&AE;B!S=&%R="!T:&4@979E;G0@;&]O<`T*=VT@=VET:&1R87<@+@T*
M#0IF;W(@>W-E="!I(#!]('LD:3PU?2![:6YC<B!I(#%]('L-"B1C86TQ($%Z
M:6UU=&@@+3$U.PT*)&-A;3$@16QE=F%T:6]N("TU.PT*)')E;E=I;B!296YD
&97([#0I]
`
end
SHAR_EOF
  $shar_touch -am 0415173097 'hedgehog.tcl' &&
  chmod 0640 'hedgehog.tcl' ||
  $echo 'restore of' 'hedgehog.tcl' 'failed'
  if ( md5sum --help 2>&1 | grep 'sage: md5sum \[' ) >/dev/null 2>&1 \
  && ( md5sum --version 2>&1 | grep -v 'textutils 1.12' ) >/dev/null; then
    md5sum -c << SHAR_EOF >/dev/null 2>&1 \
    || $echo 'hedgehog.tcl:' 'MD5 check failed'
ef74d16977f6e38cfc2738a9d0057807  hedgehog.tcl
SHAR_EOF
  else
    shar_count="`LC_ALL= LC_CTYPE= LANG= wc -c < 'hedgehog.tcl'`"
    test 3561 -eq "$shar_count" ||
    $echo 'hedgehog.tcl:' 'original size' '3561,' 'current size' "$shar_count!"
  fi
fi
# ============= vdot.tcl ==============
if test -f 'vdot.tcl' && test "$first_param" != -c; then
  $echo 'x -' SKIPPING 'vdot.tcl' '(file already exists)'
else
  $echo 'x -' extracting 'vdot.tcl' '(binary)'
  sed 's/^X//' << 'SHAR_EOF' | uudecode &&
begin 600 vdot.tcl
M(W5N;VUM970@=&AE(&QI;F4@8F5L;W<@:68@>6]U(&%R92!O;B!7:6YD;W=S
M.34-"B!L;V%D('9T:W1C;#L-"B,@9V5T('1H92!I;G1E<F%C=&]R('5I#0IS
M;W5R8V4@=G1K26YT+G1C;`T*#0HC(&-R96%T92!P;&%N97,-"B,@1FER<W0@
M8W)E871E('1H92!R96YD97(@;6%S=&5R#0IV=&M296YD97)-87-T97(@<FT[
M#0H-"B,@3F]W(&-R96%T92!T:&4@4F5N9&5R5VEN9&]W+"!296YD97)E<B!A
M;F0@8F]T:"!!8W1O<G,-"B,-"G-E="!R96Y7:6X@6W)M($UA:V5296YD97)7
M:6YD;W==.PT*<V5T(')E;C$@("!;)')E;E=I;B!-86ME4F5N9&5R97)=.PT*
M<V5T(&ER96X@6R1R96Y7:6X@36%K95)E;F1E<E=I;F1O=TEN=&5R86-T;W)=
M.PT*#0HC(&-R96%T92!P:7!E;&EN90T*(PT*=G1K4$Q/5#-$4F5A9&5R('!L
M,V0[#0H@("`@<&PS9"!3971865I&:6QE;F%M92`B8V]M8GAY>BYB:6XB#0H@
M("`@<&PS9"!397111FEL96YA;64@(F-O;6)Q+F)I;B(-"B`@("!P;#-D(%-E
M=%-C86QA<D9U;F-T:6]N3G5M8F5R(#$P,#L-"B`@("!P;#-D(%-E=%9E8W1O
M<D9U;F-T:6]N3G5M8F5R(#(P,CL-"B`@("!P;#-D(%5P9&%T93L-"@T*#0IV
M=&M787)P5F5C=&]R('=A<G`[#0H@("`@=V%R<"!3971);G!U="!;<&PS9"!'
M971/=71P=71=.PT*("`@('=A<G`@4V5T4V-A;&5&86-T;W(@,"XU.PT*=G1K
M1V5O;65T<GE&:6QT97(@9',R<&]L>3L-"B`@("!D<S)P;VQY(%-E=$EN<'5T
M(%MW87)P($=E=$]U='!U=%T[#0IV=&M#;&5A;E!O;'E$871A(&-L96%N.PT*
M("`@(&-L96%N(%-E=$EN<'5T(%MD<S)P;VQY($=E=$]U='!U=%T[#0IV=&M0
M;VQY3F]R;6%L<R!N;W)M86QS.PT*("`@(&YO<FUA;',@4V5T26YP=70@6V-L
M96%N($=E=$]U='!U=%T[#0H-"@T*#0H-"G9T:U!L86YE4V]U<F-E('!L86YE
M.PT*("`@('!L86YE(%-E=%)E<V]L=71I;VX@-3`@-3`[#0IV=&M4<F%N<V9O
M<FT@=')A;G-0,3L-"B`@("!T<F%N<U`Q(%1R86YS;&%T92`S+C<@,"XP(#(X
M+C,W.PT*("`@('1R86YS4#$@4V-A;&4@-2`U(#4[#0H@("`@=')A;G-0,2!2
M;W1A=&59(#DP.PT*=G1K5')A;G-F;W)M4&]L>49I;'1E<B!T<&0Q#0H@("`@
M='!D,2!3971);G!U="!;<&QA;F4@1V5T3W5T<'5T73L-"B`@("!T<&0Q(%-E
M=%1R86YS9F]R;2!T<F%N<U`Q.PT*=G1K3W5T;&EN949I;'1E<B!O=714<&0Q
M.PT*("`@(&]U=%1P9#$@4V5T26YP=70@6W1P9#$@1V5T3W5T<'5T73L-"G9T
M:U!O;'E-87!P97(@;6%P5'!D,3L-"B`@("!M87!4<&0Q(%-E=$EN<'5T(%MO
M=714<&0Q($=E=$]U='!U=%T[#0IV=&M!8W1O<B!T<&0Q06-T;W([#0H@("`@
M='!D,4%C=&]R(%-E=$UA<'!E<B!M87!4<&0Q.PT*("`@(%MT<&0Q06-T;W(@
M1V5T4')O<&5R='E=(%-E=$-O;&]R(#`@,"`P.PT*#0IV=&M4<F%N<V9O<FT@
M=')A;G-0,CL-"B`@("!T<F%N<U`R(%1R86YS;&%T92`Y+C(@,"XP(#,Q+C(P
M.PT*("`@('1R86YS4#(@4V-A;&4@-2`U(#4[#0H@("`@=')A;G-0,B!2;W1A
M=&59(#DP.PT*=G1K5')A;G-F;W)M4&]L>49I;'1E<B!T<&0R#0H@("`@='!D
M,B!3971);G!U="!;<&QA;F4@1V5T3W5T<'5T73L-"B`@("!T<&0R(%-E=%1R
M86YS9F]R;2!T<F%N<U`R.PT*=G1K3W5T;&EN949I;'1E<B!O=714<&0R.PT*
M("`@(&]U=%1P9#(@4V5T26YP=70@6W1P9#(@1V5T3W5T<'5T73L-"G9T:U!O
M;'E-87!P97(@;6%P5'!D,CL-"B`@("!M87!4<&0R(%-E=$EN<'5T(%MO=714
M<&0R($=E=$]U='!U=%T[#0IV=&M!8W1O<B!T<&0R06-T;W([#0H@("`@='!D
M,D%C=&]R(%-E=$UA<'!E<B!M87!4<&0R.PT*("`@(%MT<&0R06-T;W(@1V5T
M4')O<&5R='E=(%-E=$-O;&]R(#`@,"`P.PT*#0IV=&M4<F%N<V9O<FT@=')A
M;G-0,SL-"B`@("!T<F%N<U`S(%1R86YS;&%T92`Q,RXR-R`P+C`@,S,N,S`[
M#0H@("`@=')A;G-0,R!38V%L92`U(#4@-3L-"B`@("!T<F%N<U`S(%)O=&%T
M95D@.3`[#0IV=&M4<F%N<V9O<FU0;VQY1FEL=&5R('1P9#,-"B`@("!T<&0S
M(%-E=$EN<'5T(%MP;&%N92!'971/=71P=71=.PT*("`@('1P9#,@4V5T5')A
M;G-F;W)M('1R86YS4#,[#0IV=&M/=71L:6YE1FEL=&5R(&]U=%1P9#,[#0H@
M("`@;W5T5'!D,R!3971);G!U="!;='!D,R!'971/=71P=71=.PT*=G1K4&]L
M>4UA<'!E<B!M87!4<&0S.PT*("`@(&UA<%1P9#,@4V5T26YP=70@6V]U=%1P
M9#,@1V5T3W5T<'5T73L-"G9T:T%C=&]R('1P9#-!8W1O<CL-"B`@("!T<&0S
M06-T;W(@4V5T36%P<&5R(&UA<%1P9#,[#0H@("`@6W1P9#-!8W1O<B!'9710
M<F]P97)T>5T@4V5T0V]L;W(@,"`P(#`[#0H-"G9T:T%P<&5N9%!O;'E$871A
M(&%P<&5N9$8[#0H@("`@87!P96YD1B!!9&1);G!U="!;='!D,2!'971/=71P
M=71=.PT*("`@(&%P<&5N9$8@061D26YP=70@6W1P9#(@1V5T3W5T<'5T73L-
M"B`@("!A<'!E;F1&($%D9$EN<'5T(%MT<&0S($=E=$]U='!U=%T[#0H-"G9T
M:U!R;V)E1FEL=&5R('!R;V)E.PT*("`@('!R;V)E(%-E=$EN<'5T(%MA<'!E
M;F1&($=E=$]U='!U=%T[#0H@("`@<')O8F4@4V5T4V]U<F-E(%MN;W)M86QS
M($=E=$]U='!U=%T[#0H-"G9T:U9E8W1O<D1O="!C;VQO<CL-"B`@("!C;VQO
M<B!3971);G!U="!;<')O8F4@1V5T3W5T<'5T73L-"G9T:TQO;VMU<%1A8FQE
M(&QU=#L-"B`@("!L=70@4V5T3G5M8F5R3V9#;VQO<G,@,C4V.PT*("`@(&QU
M="!"=6EL9#L-"B`@("!F;W(@>W-E="!I(#!]('LD:3PQ,CA]('MI;F-R(&D@
M,7T@>PT*("`@("`@("!E=F%L(&QU="!3971486)L959A;'5E("1I(%ME>'!R
M("@Q,C@N,"TD:2DO,3(X+C!=(%ME>'!R("@Q,C@N,"TD:2DO,3(X+C!=(%ME
M>'!R("@Q,C@N,"TD:2DO,3(X+C!=(#$[#0H@("`@?0T*("`@(&9O<B![<V5T
M(&D@,3(X?2![)&D\,C4V?2![:6YC<B!I(#%]('L-"B`@("`@("`@979A;"!L
M=70@4V5T5&%B;&5686QU92`D:2!;97AP<B`H)&DM,3(X+C`I+S$R."XP72!;
M97AP<B`H)&DM,3(X+C`I+S$R."XP72!;97AP<B`H)&DM,3(X+C`I+S$R."XP
M72`Q.PT*("`@('T-"@T*=G1K1&%T85-E=$UA<'!E<B!P;&%T94UA<'!E<CL-
M"B`@("!P;&%T94UA<'!E<B!3971);G!U="!;8V]L;W(@1V5T3W5T<'5T73L-
M"B`@("!P;&%T94UA<'!E<B!3971,;V]K=7!486)L92!L=70[#0H@("`@<&QA
M=&5-87!P97(@4V5T4V-A;&%R4F%N9V4@+3$@,3L-"G9T:T%C=&]R('!L86YE
M06-T;W([#0H@("`@<&QA;F5!8W1O<B!3971-87!P97(@<&QA=&5-87!P97([
M#0IV=&M3=')U8W1U<F5D1W)I9$]U=&QI;F5&:6QT97(@;W5T;&EN93L-"B`@
M("!O=71L:6YE(%-E=$EN<'5T(%MP;#-D($=E=$]U='!U=%T[#0IV=&M0;VQY
M36%P<&5R(&]U=&QI;F5-87!P97([#0H@("`@;W5T;&EN94UA<'!E<B!3971)
M;G!U="!;;W5T;&EN92!'971/=71P=71=.PT*=G1K06-T;W(@;W5T;&EN94%C
M=&]R.PT*("`@(&]U=&QI;F5!8W1O<B!3971-87!P97(@;W5T;&EN94UA<'!E
M<CL-"B`@("!;;W5T;&EN94%C=&]R($=E=%!R;W!E<G1Y72!3971#;VQO<B`P
M(#`@,#L-"@T*)')E;C$@061D06-T;W)S(&]U=&QI;F5!8W1O<CL-"B1R96XQ
M($%D9$%C=&]R<R!P;&%N94%C=&]R.PT*)')E;C$@061D06-T;W)S('1P9#%!
M8W1O<CL-"B1R96XQ($%D9$%C=&]R<R!T<&0R06-T;W([#0HD<F5N,2!!9&1!
M8W1O<G,@='!D,T%C=&]R.PT*)')E;C$@4V5T0F%C:V=R;W5N9"`Q(#$@,3L-
M"B1R96Y7:6X@4V5T4VEZ92`U,#`@-3`P.PT*)&ER96X@26YI=&EA;&EZ93L-
M"@T*<V5T(&-A;3$@6R1R96XQ($=E=$%C=&EV94-A;65R85T[#0HD8V%M,2!3
M971#;&EP<&EN9U)A;F=E(#,N.34R.3<@-3`[#0HD8V%M,2!3971&;V-A;%!O
M:6YT(#@N.#@Y,#@@,"XU.34P,S@@,CDN,S,T,CL-"B1C86TQ(%-E=%!O<VET
M:6]N("TQ,BXS,S,R(#,Q+C<T-SD@-#$N,C,X-SL-"B1C86TQ($-A;&-6:65W
M4&QA;F5.;W)M86P[#0HD8V%M,2!39716:65W57`@,"XP-C`W-S(@+3`N,S$Y
M.3`U(#`N.30U-#DX.PT*#0HC(')E;F1E<B!T:&4@:6UA9V4-"B,-"B1I<F5N
M(%-E=%5S97)-971H;V0@>W=M(&1E:6-O;FEF>2`N=G1K26YT97)A8W1].PT*
M)')E;E=I;B!296YD97([#0H-"B,@<')E=F5N="!T:&4@=&L@=VEN9&]W(&9R
M;VT@<VAO=VEN9R!U<"!T:&5N('-T87)T('1H92!E=F5N="!L;V]P#0IW;2!W
1:71H9')A=R`N#0H-"@T*#0IN
`
end
SHAR_EOF
  $shar_touch -am 0415173097 'vdot.tcl' &&
  chmod 0640 'vdot.tcl' ||
  $echo 'restore of' 'vdot.tcl' 'failed'
  if ( md5sum --help 2>&1 | grep 'sage: md5sum \[' ) >/dev/null 2>&1 \
  && ( md5sum --version 2>&1 | grep -v 'textutils 1.12' ) >/dev/null; then
    md5sum -c << SHAR_EOF >/dev/null 2>&1 \
    || $echo 'vdot.tcl:' 'MD5 check failed'
d12ae17f4fd62ceee271786198083213  vdot.tcl
SHAR_EOF
  else
    shar_count="`LC_ALL= LC_CTYPE= LANG= wc -c < 'vdot.tcl'`"
    test 4112 -eq "$shar_count" ||
    $echo 'vdot.tcl:' 'original size' '4112,' 'current size' "$shar_count!"
  fi
fi
# ============= vnorm.tcl ==============
if test -f 'vnorm.tcl' && test "$first_param" != -c; then
  $echo 'x -' SKIPPING 'vnorm.tcl' '(file already exists)'
else
  $echo 'x -' extracting 'vnorm.tcl' '(binary)'
  sed 's/^X//' << 'SHAR_EOF' | uudecode &&
begin 600 vnorm.tcl
M(W5N;VUM970@=&AE(&QI;F4@8F5L;W<@:68@>6]U(&%R92!O;B!7:6YD;W=S
M.34-"B!L;V%D('9T:W1C;#L-"B,@9V5T('1H92!I;G1E<F%C=&]R('5I#0IS
M;W5R8V4@=G1K26YT+G1C;`T*#0HC(&-R96%T92!P;&%N97,-"B,@1FER<W0@
M8W)E871E('1H92!R96YD97(@;6%S=&5R#0IV=&M296YD97)-87-T97(@<FT[
M#0H-"B,@3F]W(&-R96%T92!T:&4@4F5N9&5R5VEN9&]W+"!296YD97)E<B!A
M;F0@8F]T:"!!8W1O<G,-"B,-"G-E="!R96Y7:6X@6W)M($UA:V5296YD97)7
M:6YD;W==.PT*<V5T(')E;C$@("!;)')E;E=I;B!-86ME4F5N9&5R97)=.PT*
M<V5T(&ER96X@6R1R96Y7:6X@36%K95)E;F1E<E=I;F1O=TEN=&5R86-T;W)=
M.PT*#0HC(&-R96%T92!P:7!E;&EN90T*(PT*=G1K4$Q/5#-$4F5A9&5R('!L
M,V0[#0H@("`@<&PS9"!3971865I&:6QE;F%M92`B8V]M8GAY>BYB:6XB#0H@
M("`@<&PS9"!397111FEL96YA;64@(F-O;6)Q+F)I;B(-"B`@("!P;#-D(%-E
M=%-C86QA<D9U;F-T:6]N3G5M8F5R(#$P,#L-"B`@("!P;#-D(%-E=%9E8W1O
M<D9U;F-T:6]N3G5M8F5R(#(P,CL-"B`@("!P;#-D(%5P9&%T93L-"@T*#0IV
M=&M787)P5F5C=&]R('=A<G`[#0H@("`@=V%R<"!3971);G!U="!;<&PS9"!'
M971/=71P=71=.PT*("`@('=A<G`@4V5T4V-A;&5&86-T;W(@,"XU.PT*=G1K
M1V5O;65T<GE&:6QT97(@9',R<&]L>3L-"B`@("!D<S)P;VQY(%-E=$EN<'5T
M(%MW87)P($=E=$]U='!U=%T[#0IV=&M#;&5A;E!O;'E$871A(&-L96%N.PT*
M("`@(&-L96%N(%-E=$EN<'5T(%MD<S)P;VQY($=E=$]U='!U=%T[#0IV=&M0
M;VQY3F]R;6%L<R!N;W)M86QS.PT*("`@(&YO<FUA;',@4V5T26YP=70@6V-L
M96%N($=E=$]U='!U=%T[#0H-"@T*#0H-"G9T:U!L86YE4V]U<F-E('!L86YE
M.PT*("`@('!L86YE(%-E=%)E<V]L=71I;VX@-3`@-3`[#0IV=&M4<F%N<V9O
M<FT@=')A;G-0,3L-"B`@("!T<F%N<U`Q(%1R86YS;&%T92`S+C<@,"XP(#(X
M+C,W.PT*("`@('1R86YS4#$@4V-A;&4@-2`U(#4[#0H@("`@=')A;G-0,2!2
M;W1A=&59(#DP.PT*=G1K5')A;G-F;W)M4&]L>49I;'1E<B!T<&0Q#0H@("`@
M='!D,2!3971);G!U="!;<&QA;F4@1V5T3W5T<'5T73L-"B`@("!T<&0Q(%-E
M=%1R86YS9F]R;2!T<F%N<U`Q.PT*=G1K3W5T;&EN949I;'1E<B!O=714<&0Q
M.PT*("`@(&]U=%1P9#$@4V5T26YP=70@6W1P9#$@1V5T3W5T<'5T73L-"G9T
M:U!O;'E-87!P97(@;6%P5'!D,3L-"B`@("!M87!4<&0Q(%-E=$EN<'5T(%MO
M=714<&0Q($=E=$]U='!U=%T[#0IV=&M!8W1O<B!T<&0Q06-T;W([#0H@("`@
M='!D,4%C=&]R(%-E=$UA<'!E<B!M87!4<&0Q.PT*("`@(%MT<&0Q06-T;W(@
M1V5T4')O<&5R='E=(%-E=$-O;&]R(#`@,"`P.PT*#0IV=&M4<F%N<V9O<FT@
M=')A;G-0,CL-"B`@("!T<F%N<U`R(%1R86YS;&%T92`Y+C(@,"XP(#,Q+C(P
M.PT*("`@('1R86YS4#(@4V-A;&4@-2`U(#4[#0H@("`@=')A;G-0,B!2;W1A
M=&59(#DP.PT*=G1K5')A;G-F;W)M4&]L>49I;'1E<B!T<&0R#0H@("`@='!D
M,B!3971);G!U="!;<&QA;F4@1V5T3W5T<'5T73L-"B`@("!T<&0R(%-E=%1R
M86YS9F]R;2!T<F%N<U`R.PT*=G1K3W5T;&EN949I;'1E<B!O=714<&0R.PT*
M("`@(&]U=%1P9#(@4V5T26YP=70@6W1P9#(@1V5T3W5T<'5T73L-"G9T:U!O
M;'E-87!P97(@;6%P5'!D,CL-"B`@("!M87!4<&0R(%-E=$EN<'5T(%MO=714
M<&0R($=E=$]U='!U=%T[#0IV=&M!8W1O<B!T<&0R06-T;W([#0H@("`@='!D
M,D%C=&]R(%-E=$UA<'!E<B!M87!4<&0R.PT*("`@(%MT<&0R06-T;W(@1V5T
M4')O<&5R='E=(%-E=$-O;&]R(#`@,"`P.PT*#0IV=&M4<F%N<V9O<FT@=')A
M;G-0,SL-"B`@("!T<F%N<U`S(%1R86YS;&%T92`Q,RXR-R`P+C`@,S,N,S`[
M#0H@("`@=')A;G-0,R!38V%L92`U(#4@-3L-"B`@("!T<F%N<U`S(%)O=&%T
M95D@.3`[#0IV=&M4<F%N<V9O<FU0;VQY1FEL=&5R('1P9#,-"B`@("!T<&0S
M(%-E=$EN<'5T(%MP;&%N92!'971/=71P=71=.PT*("`@('1P9#,@4V5T5')A
M;G-F;W)M('1R86YS4#,[#0IV=&M/=71L:6YE1FEL=&5R(&]U=%1P9#,[#0H@
M("`@;W5T5'!D,R!3971);G!U="!;='!D,R!'971/=71P=71=.PT*=G1K4&]L
M>4UA<'!E<B!M87!4<&0S.PT*("`@(&UA<%1P9#,@4V5T26YP=70@6V]U=%1P
M9#,@1V5T3W5T<'5T73L-"G9T:T%C=&]R('1P9#-!8W1O<CL-"B`@("!T<&0S
M06-T;W(@4V5T36%P<&5R(&UA<%1P9#,[#0H@("`@6W1P9#-!8W1O<B!'9710
M<F]P97)T>5T@4V5T0V]L;W(@,"`P(#`[#0H-"G9T:T%P<&5N9%!O;'E$871A
M(&%P<&5N9$8[#0H@("`@87!P96YD1B!!9&1);G!U="!;='!D,2!'971/=71P
M=71=.PT*("`@(&%P<&5N9$8@061D26YP=70@6W1P9#(@1V5T3W5T<'5T73L-
M"B`@("!A<'!E;F1&($%D9$EN<'5T(%MT<&0S($=E=$]U='!U=%T[#0H-"G9T
M:U!R;V)E1FEL=&5R('!R;V)E.PT*("`@('!R;V)E(%-E=$EN<'5T(%MA<'!E
M;F1&($=E=$]U='!U=%T[#0H@("`@<')O8F4@4V5T4V]U<F-E(%MN;W)M86QS
M($=E=$]U='!U=%T[#0H-"G9T:U9E8W1O<DYO<FT@8V]L;W([#0H@("`@8V]L
M;W(@4V5T26YP=70@6W!R;V)E($=E=$]U='!U=%T[#0H)8V]L;W(@3F]R;6%L
M:7IE3VX[#0IV=&M,;V]K=7!486)L92!L=70[#0H@("`@;'5T(%-E=$YU;6)E
M<D]F0V]L;W)S(#(U-CL-"B`@("!L=70@0G5I;&0[#0H@("`@9F]R('MS970@
M:2`P?2![)&D\,3(X?2![:6YC<B!I(#%]('L-"B`@("`@("`@979A;"!L=70@
M4V5T5&%B;&5686QU92`D:2!;97AP<B`H,3(X+C`M)&DI+S$R."XP72!;97AP
M<B`H,3(X+C`M)&DI+S$R."XP72!;97AP<B`H,3(X+C`M)&DI+S$R."XP72`Q
M.PT*("`@('T-"B`@("!F;W(@>W-E="!I(#$R.'T@>R1I/#(U-GT@>VEN8W(@
M:2`Q?2![#0H@("`@("`@(&5V86P@;'5T(%-E=%1A8FQE5F%L=64@)&D@6V5X
M<'(@*"1I+3$R."XP*2\Q,C@N,%T@6V5X<'(@*"1I+3$R."XP*2\Q,C@N,%T@
M6V5X<'(@*"1I+3$R."XP*2\Q,C@N,%T@,3L-"B`@("!]#0H-"G9T:T1A=&%3
M971-87!P97(@<&QA=&5-87!P97([#0H@("`@<&QA=&5-87!P97(@4V5T26YP
M=70@6V-O;&]R($=E=$]U='!U=%T[#0H@("`@<&QA=&5-87!P97(@4V5T3&]O
M:W5P5&%B;&4@;'5T.PT*("`@('!L871E36%P<&5R(%-E=%-C86QA<E)A;F=E
M("TQ(#$[#0IV=&M!8W1O<B!P;&%N94%C=&]R.PT*("`@('!L86YE06-T;W(@
M4V5T36%P<&5R('!L871E36%P<&5R.PT*=G1K4W1R=6-T=7)E9$=R:61/=71L
M:6YE1FEL=&5R(&]U=&QI;F4[#0H@("`@;W5T;&EN92!3971);G!U="!;<&PS
M9"!'971/=71P=71=.PT*=G1K4&]L>4UA<'!E<B!O=71L:6YE36%P<&5R.PT*
M("`@(&]U=&QI;F5-87!P97(@4V5T26YP=70@6V]U=&QI;F4@1V5T3W5T<'5T
M73L-"G9T:T%C=&]R(&]U=&QI;F5!8W1O<CL-"B`@("!O=71L:6YE06-T;W(@
M4V5T36%P<&5R(&]U=&QI;F5-87!P97([#0H@("`@6V]U=&QI;F5!8W1O<B!'
M9710<F]P97)T>5T@4V5T0V]L;W(@,"`P(#`[#0H-"B1R96XQ($%D9$%C=&]R
M<R!O=71L:6YE06-T;W([#0HD<F5N,2!!9&1!8W1O<G,@<&QA;F5!8W1O<CL-
M"B1R96XQ($%D9$%C=&]R<R!T<&0Q06-T;W([#0HD<F5N,2!!9&1!8W1O<G,@
M='!D,D%C=&]R.PT*)')E;C$@061D06-T;W)S('1P9#-!8W1O<CL-"B1R96XQ
M(%-E=$)A8VMG<F]U;F0@,2`Q(#$[#0HD<F5N5VEN(%-E=%-I>F4@-3`P(#4P
M,#L-"B1I<F5N($EN:71I86QI>F4[#0H-"G-E="!C86TQ(%LD<F5N,2!'971!
M8W1I=F5#86UE<F%=.PT*)&-A;3$@4V5T0VQI<'!I;F=286YG92`S+CDU,CDW
M(#4P.PT*)&-A;3$@4V5T1F]C86Q0;VEN="`X+C@X.3`X(#`N-3DU,#,X(#(Y
M+C,S-#([#0HD8V%M,2!39710;W-I=&EO;B`M,3(N,S,S,B`S,2XW-#<Y(#0Q
M+C(S.#<[#0HD8V%M,2!#86QC5FEE=U!L86YE3F]R;6%L.PT*)&-A;3$@4V5T
M5FEE=U5P(#`N,#8P-S<R("TP+C,Q.3DP-2`P+CDT-30Y.#L-"@T*(R!R96YD
M97(@=&AE(&EM86=E#0HC#0HD:7)E;B!39715<V5R365T:&]D('MW;2!D96EC
M;VYI9GD@+G9T:TEN=&5R86-T?3L-"B1R96Y7:6X@4F5N9&5R.PT*#0HC('!R
M979E;G0@=&AE('1K('=I;F1O=R!F<F]M('-H;W=I;F<@=7`@=&AE;B!S=&%R
G="!T:&4@979E;G0@;&]O<`T*=VT@=VET:&1R87<@+@T*#0H-"@T*
`
end
SHAR_EOF
  $shar_touch -am 0415173097 'vnorm.tcl' &&
  chmod 0640 'vnorm.tcl' ||
  $echo 'restore of' 'vnorm.tcl' 'failed'
  if ( md5sum --help 2>&1 | grep 'sage: md5sum \[' ) >/dev/null 2>&1 \
  && ( md5sum --version 2>&1 | grep -v 'textutils 1.12' ) >/dev/null; then
    md5sum -c << SHAR_EOF >/dev/null 2>&1 \
    || $echo 'vnorm.tcl:' 'MD5 check failed'
2e194e2ff134d19b110d0621a7724550  vnorm.tcl
SHAR_EOF
  else
    shar_count="`LC_ALL= LC_CTYPE= LANG= wc -c < 'vnorm.tcl'`"
    test 4134 -eq "$shar_count" ||
    $echo 'vnorm.tcl:' 'original size' '4134,' 'current size' "$shar_count!"
  fi
fi
rm -fr _sh142320
exit 0

From ???@??? Wed Apr 16 07:18:17 1997
Received: from magritte.its.rpi.edu (andret@magritte.its.rpi.edu [128.113.113.19])
	by mail1.its.rpi.edu (8.8.5/8.8.5) with ESMTP id SAA139086
	for <citrit@rpi.edu>; Tue, 15 Apr 1997 18:12:08 -0400
From: Thayer Andrews <andret>
Received: (andret@localhost) by magritte.its.rpi.edu (8.6.9/8.6.4) id SAA41260 for citrit@rpi.edu; Tue, 15 Apr 1997 18:12:06 -0400
Date: Tue, 15 Apr 1997 18:12:06 -0400
Message-Id: <199704152212.SAA41260@magritte.its.rpi.edu>
To: citrit@rpi.edu
Subject: Homework 3
X-UIDL: a84fcf4b65216c2c160ccc705ad808bf

#!/bin/sh
# This is a shell archive (produced by GNU sharutils 4.2).
# To extract the files from this archive, save it to some FILE, remove
# everything before the `!/bin/sh' line above, then type `sh FILE'.
#
# Made on 1997-04-15 18:09 EDT by <andret@magritte>.
# Source directory was `/afs/rpi.edu/home/70/andret/agfx/hw3'.
#
# Existing files will *not* be overwritten unless `-c' is specified.
#
# This shar contains:
# length mode       name
# ------ ---------- ------------------------------------------
#   1544 -rw-r----- 6_3a.tcl
#   1469 -rw-r----- 6_3b.tcl
#   2404 -rw-r----- 9_4a.tcl
#   2580 -rw-r----- 9_4c.tcl
#   2285 -rw-r----- 9_4d.tcl
#    298 -rw-r----- readme.txt
#
save_IFS="${IFS}"
IFS="${IFS}:"
gettext_dir=FAILED
locale_dir=FAILED
first_param="$1"
for dir in $PATH
do
  if test "$gettext_dir" = FAILED && test -f $dir/gettext \
     && ($dir/gettext --version >/dev/null 2>&1)
  then
    set `$dir/gettext --version 2>&1`
    if test "$3" = GNU
    then
      gettext_dir=$dir
    fi
  fi
  if test "$locale_dir" = FAILED && test -f $dir/shar \
     && ($dir/shar --print-text-domain-dir >/dev/null 2>&1)
  then
    locale_dir=`$dir/shar --print-text-domain-dir`
  fi
done
IFS="$save_IFS"
if test "$locale_dir" = FAILED || test "$gettext_dir" = FAILED
then
  echo=echo
else
  TEXTDOMAINDIR=$locale_dir
  export TEXTDOMAINDIR
  TEXTDOMAIN=sharutils
  export TEXTDOMAIN
  echo="$gettext_dir/gettext -s"
fi
touch -am 1231235999 $$.touch >/dev/null 2>&1
if test ! -f 1231235999 && test -f $$.touch; then
  shar_touch=touch
else
  shar_touch=:
  echo
  $echo 'WARNING: not restoring timestamps.  Consider getting and'
  $echo "installing GNU \`touch', distributed in GNU File Utilities..."
  echo
fi
rm -f 1231235999 $$.touch
#
if mkdir _sh122446; then
  $echo 'x -' 'creating lock directory'
else
  $echo 'failed to create lock directory'
  exit 1
fi
# ============= 6_3a.tcl ==============
if test -f '6_3a.tcl' && test "$first_param" != -c; then
  $echo 'x -' SKIPPING '6_3a.tcl' '(file already exists)'
else
  $echo 'x -' extracting '6_3a.tcl' '(binary)'
  sed 's/^X//' << 'SHAR_EOF' | uudecode &&
begin 600 6_3a.tcl
M#0HC(R,C(R,C(R,C(R,C(R,C(R,C(R,C(R,C(R,C(R,C(R,C(R,C(R,C(R,C
M(R,C(R,C(R,C#0HC#0HC($%D=F%N8V5D($=R87!H:6-S(&%N9"!6:7-U86QI
M>F%T:6]N($AO;65W;W)K(#,-"B,-"B,@07-S:6=M;F5N="`V+C,@<&%R="!A
M(&9R;VT@=&AE(%942R!T97AT#0HC#0HC(R,C(R,C(R,C(R,C(R,C(R,C(R,C
M(R,C(R,C(R,C(R,C(R,C(R,C(R,C(R,C(R,C(R,C#0H-"@T*(VQO860@=G1K
M=&-L.PT*(R!U<V5R(&EN=&5R9F%C92!C;VUM86YD('=I9&=E=`T*<V]U<F-E
M("XO=G1K26YT+G1C;`T*#0HC(&-R96%T92!A(')E;F1E<FEN9R!W:6YD;W<@
M86YD(')E;F1E<F5R#0IV=&M296YD97)-87-T97(@<FT[#0IS970@<F5N5VEN
M(%MR;2!-86ME4F5N9&5R5VEN9&]W73L-"G-E="!R96XQ(%LD<F5N5VEN($UA
M:V5296YD97)E<ET[#0IS970@:7)E;B!;)')E;E=I;B!-86ME4F5N9&5R5VEN
M9&]W26YT97)A8W1O<ET[#0H-"G9T:U%U861R:6,@<75A9#L-"B`@<75A9"!3
M971#;V5F9FEC:65N=',@,"XU(#$@+C(@,"`N,2`P(#`@+C(@,"`P.PT*#0IV
M=&M386UP;&5&=6YC=&EO;B!S86UP;&4[#0H@('-A;7!L92!3971386UP;&5$
M:6UE;G-I;VYS(#$P(#$P(#$P.PT*("!S86UP;&4@4V5T26UP;&EC:71&=6YC
M=&EO;B!Q=6%D.PT*#0IV=&M#;VYT;W5R1FEL=&5R(&-O;G1O=7)S.PT*("!C
M;VYT;W5R<R!3971);G!U="!;<V%M<&QE($=E=$]U='!U=%T[#0HC("!C;VYT
M;W5R<R!'96YE<F%T959A;'5E<R`U(#`N,"`Q+C([#0H@(&-O;G1O=7)S($=E
M;F5R871E5F%L=65S(#$@,"XP(#`N,3L-"@T*=G1K4&]L>4UA<'!E<B!C;VYT
M36%P<&5R.PT*("!C;VYT36%P<&5R(%-E=$EN<'5T(%MC;VYT;W5R<R!'971/
M=71P=71=.PT*(R`@8V]N=$UA<'!E<B!397138V%L87)286YG92`P+C`@,2XR
M.PT*("!C;VYT36%P<&5R(%-E=%-C86QA<E)A;F=E(#`N,"`Q+C([#0H-"G9T
M:T%C=&]R(&-O;G1!8W1O<CL-"B`@8V]N=$%C=&]R(%-E=$UA<'!E<B!C;VYT
M36%P<&5R.PT*#0HC(&%S<VEG;B!O=7(@86-T;W(@=&\@=&AE(')E;F1E<F5R
M#0HD<F5N,2!3971"86-K9W)O=6YD(#$@,2`Q.PT*)')E;C$@061D06-T;W)S
M(&-O;G1!8W1O<CL-"@T*(R!E;F%B;&4@=7-E<B!I;G1E<F9A8V4@:6YT97)A
M8W1O<@T*)&ER96X@4V5T57-E<DUE=&AO9"![=VT@9&5I8V]N:69Y("YV=&M)
M;G1E<F%C='T[#0HD:7)E;B!);FET:6%L:7IE.PT*#0HC('!R979E;G0@=&AE
M('1K('=I;F1O=R!F<F]M('-H;W=I;F<@=7`@=&AE;B!S=&%R="!T:&4@979E
M;G0@;&]O<`T*=VT@=VET:&1R87<@+@T*#0HC('1H:7,@86YI;6%T:6]N('!R
M;V-E9'5R92!W:6QL(&1I<W!L87D@86X@:7-O<W5R9F%C92!W:&EC:`T*(R!A
M<'!E87)S('1O(&=R;W<@;W9E<B!T:6UE(&9R;VT@,"XP('1O(#$N,@T*<')O
M8R!!;FEM871E(&%R9R![#0H@(&9O<B![<V5T(&D@,'T@>R1I(#P@,3)]('MI
M;F-R(&E]('L-"B`@("!C;VYT;W5R<R!'96YE<F%T959A;'5E<R`Q(%ME>'!R
M("1I("\@,3`N,%T@6V5X<'(@)&D@+R`Q,"XP(%T[#0H@("`@)&%R9R!296YD
X.97([(`T*("!]#0I]("!X
`
end
SHAR_EOF
  $shar_touch -am 0415180797 '6_3a.tcl' &&
  chmod 0640 '6_3a.tcl' ||
  $echo 'restore of' '6_3a.tcl' 'failed'
  if ( md5sum --help 2>&1 | grep 'sage: md5sum \[' ) >/dev/null 2>&1 \
  && ( md5sum --version 2>&1 | grep -v 'textutils 1.12' ) >/dev/null; then
    md5sum -c << SHAR_EOF >/dev/null 2>&1 \
    || $echo '6_3a.tcl:' 'MD5 check failed'
2e0bf024c71668adecedf46bf6b3c952  6_3a.tcl
SHAR_EOF
  else
    shar_count="`LC_ALL= LC_CTYPE= LANG= wc -c < '6_3a.tcl'`"
    test 1544 -eq "$shar_count" ||
    $echo '6_3a.tcl:' 'original size' '1544,' 'current size' "$shar_count!"
  fi
fi
# ============= 6_3b.tcl ==============
if test -f '6_3b.tcl' && test "$first_param" != -c; then
  $echo 'x -' SKIPPING '6_3b.tcl' '(file already exists)'
else
  $echo 'x -' extracting '6_3b.tcl' '(binary)'
  sed 's/^X//' << 'SHAR_EOF' | uudecode &&
begin 600 6_3b.tcl
M(R!)9B!Y;W4@87)E('5S:6YG(%=I;F1O=SDU(&%N9"!V=&L@,2XS('5N8V]M
M;65N="!T:&4@;&EN92!B96QO=PT*(R!L;V%D('9T:W1C;#L-"@T*(R!G970@
M=&AE(&EN=&5R86-T;W(@=6D-"G-O=7)C92!V=&M);G0N=&-L#0H-"B,@1FER
M<W0@8W)E871E('1H92!R96YD97(@;6%S=&5R#0IV=&M296YD97)-87-T97(@
M<FT[#0H-"B,@3F]W(&-R96%T92!T:&4@4F5N9&5R5VEN9&]W+"!296YD97)E
M<@T*(PT*<V5T(')E;E=I;B!;<FT@36%K95)E;F1E<E=I;F1O=UT[#0IS970@
M<F5N,2`@(%LD<F5N5VEN($UA:V5296YD97)E<ET[#0IS970@:7)E;B`@(%LD
M<F5N5VEN($UA:V5296YD97)7:6YD;W=);G1E<F%C=&]R73L-"@T*(PT*(R!,
M;V%D('5P('1H92!D871A#0IV=&M3=')U8W1U<F5D4&]I;G1S4F5A9&5R('9O
M;#L-"B`@("!V;VP@4V5T1FEL96YA;64@(DU2261A=&$N=G1K(@T*("`@('9O
M;"!$96)U9T]N.PT*#0IV=&M-87)C:&EN9T-U8F5S(&-O;G1O=7([#0H@(&-O
M;G1O=7(@4V5T26YP=70@6W9O;"!'971/=71P=71=.PT*(R`@8V]N=&]U<B!3
M971686QU92`P(#(R-2XP.PT*("!C;VYT;W5R($=E;F5R871E5F%L=65S(#$@
M,C`P,"XP(#(P,#`N,`T*#0IV=&M0;VQY36%P<&5R('9O;$UA<'!E<CL-"B`@
M=F]L36%P<&5R(%-E=$EN<'5T(%MC;VYT;W5R($=E=$]U='!U=%T[#0H@('9O
M;$UA<'!E<B!38V%L87)S5FES:6)L94]F9CL-"@T*=G1K06-T;W(@=F]L06-T
M;W([#0H@('9O;$%C=&]R(%-E=$UA<'!E<B!V;VQ-87!P97([#0H-"G9T:T]U
M=&QI;F5&:6QT97(@;W5T3&EN93L-"B`@;W5T3&EN92!3971);G!U="!;=F]L
M($=E=$]U='!U=%T[#0H-"G9T:U!O;'E-87!P97(@;W5T36%P<&5R.PT*("!O
M=71-87!P97(@4V5T26YP=70@6V]U=$QI;F4@1V5T3W5T<'5T73L-"@T*=G1K
M06-T;W(@;W5T06-T;W([#0H@(&]U=$%C=&]R(%-E=$UA<'!E<B!O=71-87!P
M97([#0H-"B,@061D('1H92!A8W1O<G,@=&\@=&AE(')E;F1E<F5R+"!S970@
M=&AE(&)A8VMG<F]U;F0@86YD('-I>F4-"B,-"B1R96XQ($%D9$%C=&]R<R!O
M=71!8W1O<CL-"B1R96XQ($%D9$%C=&]R<R!V;VQ!8W1O<CL-"B1R96XQ(%-E
M=$)A8VMG<F]U;F0@,"`P(#`[#0HD<F5N5VEN(%-E=%-I>F4@-3`P(#0P,#L-
M"@T*)&ER96X@4V5T57-E<DUE=&AO9"![=VT@9&5I8V]N:69Y("YV=&M);G1E
M<F%C='T[#0HD:7)E;B!);FET:6%L:7IE.PT*#0HC(')E;F1E<B!T:&4@:6UA
M9V4-"B,-"@T*)')E;E=I;B!296YD97([#0H-"B,@<')E=F5N="!T:&4@=&L@
M=VEN9&]W(&9R;VT@<VAO=VEN9R!U<"!T:&5N('-T87)T('1H92!E=F5N="!L
M;V]P#0IW;2!W:71H9')A=R`N#0H-"G!R;V,@06YI;6%T92!A<F<@>PT*#0H@
M(&9O<B![<V5T(&D@,C`P,'T@>R`D:2`^(#(P,"!]('MI;F-R(&D@+3$P,'T@
M>PT*("`@(&-O;G1O=7(@1V5N97)A=&5686QU97,@,2`D:2`D:3L-"B`@("`D
=87)G(%)E;F1E<CL-"B`@?0T*?0T*("`-"B`@#0H@
`
end
SHAR_EOF
  $shar_touch -am 0415180797 '6_3b.tcl' &&
  chmod 0640 '6_3b.tcl' ||
  $echo 'restore of' '6_3b.tcl' 'failed'
  if ( md5sum --help 2>&1 | grep 'sage: md5sum \[' ) >/dev/null 2>&1 \
  && ( md5sum --version 2>&1 | grep -v 'textutils 1.12' ) >/dev/null; then
    md5sum -c << SHAR_EOF >/dev/null 2>&1 \
    || $echo '6_3b.tcl:' 'MD5 check failed'
521ee7c8570fe0e0c781b1fc0eaeba6a  6_3b.tcl
SHAR_EOF
  else
    shar_count="`LC_ALL= LC_CTYPE= LANG= wc -c < '6_3b.tcl'`"
    test 1469 -eq "$shar_count" ||
    $echo '6_3b.tcl:' 'original size' '1469,' 'current size' "$shar_count!"
  fi
fi
# ============= 9_4a.tcl ==============
if test -f '9_4a.tcl' && test "$first_param" != -c; then
  $echo 'x -' SKIPPING '9_4a.tcl' '(file already exists)'
else
  $echo 'x -' extracting '9_4a.tcl' '(binary)'
  sed 's/^X//' << 'SHAR_EOF' | uudecode &&
begin 600 9_4a.tcl
M(R!G970@=&AE(&EN=&5R86-T;W(@=6D-"G-O=7)C92!V=&M);G0N=&-L#0H-
M"B,@8W)E871E('!L86YE<PT*(R!&:7)S="!C<F5A=&4@=&AE(')E;F1E<B!M
M87-T97(-"G9T:U)E;F1E<DUA<W1E<B!R;3L-"@T*(R!.;W<@8W)E871E('1H
M92!296YD97)7:6YD;W<L(%)E;F1E<F5R(&%N9"!B;W1H($%C=&]R<PT*(PT*
M<V5T(')E;E=I;B!;<FT@36%K95)E;F1E<E=I;F1O=UT[#0IS970@<F5N,2`@
M(%LD<F5N5VEN($UA:V5296YD97)E<ET[#0IS970@:7)E;B!;)')E;E=I;B!-
M86ME4F5N9&5R5VEN9&]W26YT97)A8W1O<ET[#0H-"B,@8W)E871E('!I<&5L
M:6YE#0HC#0IV=&M03$]4,T1296%D97(@<&PS9#L-"B`@("!P;#-D(%-E=%A9
M6D9I;&5N86UE(")C;VUB>'EZ+F)I;B(-"B`@("!P;#-D(%-E=%%&:6QE;F%M
M92`B8V]M8G$N8FEN(@T*("`@('!L,V0@4V5T4V-A;&%R1G5N8W1I;VY.=6UB
M97(@,34S.PT*("`@('!L,V0@4V5T5F5C=&]R1G5N8W1I;VY.=6UB97(@,C`P
M.PT*("`@('!L,V0@57!D871E.PT*#0H-"B-C<F5A=&4@=&AR964@<')O8F4@
M<&QA;F5S(&%N9"!C;VQL96-T('1H96T-"B,-"G9T:U-T<G5C='5R961'<FED
M1V5O;65T<GE&:6QT97(@<&QA;F4Q.PT*("`@('!L86YE,2!3971);G!U="!;
M<&PS9"!'971/=71P=71=.PT*("`@('!L86YE,2!3971%>'1E;G0@-2`U(#$@
M,3`P(#$@,3`P.PT*=G1K4W1R=6-T=7)E9$=R:61'96]M971R>49I;'1E<B!P
M;&%N93([#0H@("`@<&QA;F4R(%-E=$EN<'5T(%MP;#-D($=E=$]U='!U=%T[
M#0H@("`@<&QA;F4R(%-E=$5X=&5N="`S,"`S,"`Q(#$P,"`Q(#$P,#L-"G9T
M:U-T<G5C='5R961'<FED1V5O;65T<GE&:6QT97(@<&QA;F4S.PT*("`@('!L
M86YE,R!3971);G!U="!;<&PS9"!'971/=71P=71=.PT*("`@('!L86YE,R!3
M971%>'1E;G0@-34@-34@,2`Q,#`@,2`Q,#`[#0IV=&M!<'!E;F10;VQY1&%T
M82!A<'!E;F1&.PT*("`@(&%P<&5N9$8@061D26YP=70@6W!L86YE,2!'971/
M=71P=71=.PT*("`@(&%P<&5N9$8@061D26YP=70@6W!L86YE,B!'971/=71P
M=71=.PT*("`@(&%P<&5N9$8@061D26YP=70@6W!L86YE,R!'971/=71P=71=
M.PT*#0H-"B,@<')O8F4@=VET:"!T:&4@=&AR964@<')O8F4@9FEL=&5R<PT*
M(PT*=G1K4')O8F5&:6QT97(@<')O8F4[#0H@("`@<')O8F4@4V5T26YP=70@
M6V%P<&5N9$8@1V5T3W5T<'5T73L-"B`@("!P<F]B92!39713;W5R8V4@6W!L
M,V0@1V5T3W5T<'5T73L-"@T*#0HC(&-R96%T92!A(&AE9&=E(&AO9R!W:&EC
M:"!R96-E:79E<R!I;G!U="!F<F]M('1H92!P<F]B90T*(R!F:6QT97(-"G9T
M:TAE9&=E2&]G(&AO9SL-"B`@:&]G(%-E=$EN<'5T(%MP<F]B92!'971/=71P
M=71=.PT*("!H;V<@4V5T4V-A;&5&86-T;W(@,"XP,#$[#0IV=&M0;VQY36%P
M<&5R(&AO9TUA<'!E<CL-"B`@:&]G36%P<&5R(%-E=$EN<'5T(%MH;V<@1V5T
M3W5T<'5T73L-"B`@979A;"!H;V=-87!P97(@4V5T4V-A;&%R4F%N9V4@6UMP
M;#-D($=E=$]U='!U=%T@1V5T4V-A;&%R4F%N9V5=.PT*=G1K06-T;W(@:&]G
M06-T;W([#0H@(&AO9T%C=&]R(%-E=$UA<'!E<B!H;V=-87!P97([#0H-"G9T
M:U-T<G5C='5R961'<FED3W5T;&EN949I;'1E<B!O=71L:6YE.PT*("`@(&]U
M=&QI;F4@4V5T26YP=70@6W!L,V0@1V5T3W5T<'5T73L-"G9T:U!O;'E-87!P
M97(@;W5T;&EN94UA<'!E<CL-"B`@("!O=71L:6YE36%P<&5R(%-E=$EN<'5T
M(%MO=71L:6YE($=E=$]U='!U=%T[#0IV=&M!8W1O<B!O=71L:6YE06-T;W([
M#0H@("`@;W5T;&EN94%C=&]R(%-E=$UA<'!E<B!O=71L:6YE36%P<&5R.PT*
M("`@(%MO=71L:6YE06-T;W(@1V5T4')O<&5R='E=(%-E=$-O;&]R(#$@,2`Q
M.PT*#0HD<F5N,2!!9&1!8W1O<G,@;W5T;&EN94%C=&]R.PT*)')E;C$@061D
M06-T;W)S(&AO9T%C=&]R.PT*)')E;C$@4V5T0F%C:V=R;W5N9"`P(#`@,"XU
M.PT*)')E;E=I;B!39713:7IE(#4P,"`U,#`[#0HD:7)E;B!);FET:6%L:7IE
M.PT*#0IS970@8V%M,2!;)')E;C$@1V5T06-T:79E0V%M97)A73L-"B1C86TQ
M(%-E=$-L:7!P:6YG4F%N9V4@,RXY-3(Y-R`U,#L-"B1C86TQ(%-E=$9O8V%L
M4&]I;G0@."XX.#DP."`P+C4Y-3`S."`R.2XS,S0R.PT*)&-A;3$@4V5T4&]S
M:71I;VX@+3$R+C,S,S(@,S$N-S0W.2`T,2XR,S@W.PT*)&-A;3$@0V%L8U9I
M97=0;&%N94YO<FUA;#L-"B1C86TQ(%-E=%9I97=5<"`P+C`V,#<W,B`M,"XS
M,3DY,#4@,"XY-#4T.3@[#0H-"B,@<F5N9&5R('1H92!I;6%G90T*(PT*)&ER
M96X@4V5T57-E<DUE=&AO9"![=VT@9&5I8V]N:69Y("YV=&M);G1E<F%C='T[
M#0HD<F5N5VEN(%)E;F1E<CL-"@T*(R!P<F5V96YT('1H92!T:R!W:6YD;W<@
M9G)O;2!S:&]W:6YG('5P('1H96X@<W1A<G0@=&AE(&5V96YT(&QO;W`-"G=M
3('=I=&AD<F%W("X-"@T*#0H-"FX@
`
end
SHAR_EOF
  $shar_touch -am 0415180797 '9_4a.tcl' &&
  chmod 0640 '9_4a.tcl' ||
  $echo 'restore of' '9_4a.tcl' 'failed'
  if ( md5sum --help 2>&1 | grep 'sage: md5sum \[' ) >/dev/null 2>&1 \
  && ( md5sum --version 2>&1 | grep -v 'textutils 1.12' ) >/dev/null; then
    md5sum -c << SHAR_EOF >/dev/null 2>&1 \
    || $echo '9_4a.tcl:' 'MD5 check failed'
86a5f26c687faee506a71a882db5145b  9_4a.tcl
SHAR_EOF
  else
    shar_count="`LC_ALL= LC_CTYPE= LANG= wc -c < '9_4a.tcl'`"
    test 2404 -eq "$shar_count" ||
    $echo '9_4a.tcl:' 'original size' '2404,' 'current size' "$shar_count!"
  fi
fi
# ============= 9_4c.tcl ==============
if test -f '9_4c.tcl' && test "$first_param" != -c; then
  $echo 'x -' SKIPPING '9_4c.tcl' '(file already exists)'
else
  $echo 'x -' extracting '9_4c.tcl' '(binary)'
  sed 's/^X//' << 'SHAR_EOF' | uudecode &&
begin 600 9_4c.tcl
M(R!G970@=&AE(&EN=&5R86-T;W(@=6D-"G-O=7)C92!V=&M);G0N=&-L#0H-
M"B,@8W)E871E('!L86YE<PT*(R!&:7)S="!C<F5A=&4@=&AE(')E;F1E<B!M
M87-T97(-"G9T:U)E;F1E<DUA<W1E<B!R;3L-"@T*(R!.;W<@8W)E871E('1H
M92!296YD97)7:6YD;W<L(%)E;F1E<F5R(&%N9"!B;W1H($%C=&]R<PT*(PT*
M<V5T(')E;E=I;B!;<FT@36%K95)E;F1E<E=I;F1O=UT[#0IS970@<F5N,2`@
M(%LD<F5N5VEN($UA:V5296YD97)E<ET[#0IS970@:7)E;B!;)')E;E=I;B!-
M86ME4F5N9&5R5VEN9&]W26YT97)A8W1O<ET[#0H-"B,@8W)E871E('!I<&5L
M:6YE#0HC#0IV=&M03$]4,T1296%D97(@<&PS9#L-"B`@("!P;#-D(%-E=%A9
M6D9I;&5N86UE(")C;VUB>'EZ+F)I;B(-"B`@("!P;#-D(%-E=%%&:6QE;F%M
M92`B8V]M8G$N8FEN(@T*("`@('!L,V0@4V5T4V-A;&%R1G5N8W1I;VY.=6UB
M97(@,34S.PT*("`@('!L,V0@4V5T5F5C=&]R1G5N8W1I;VY.=6UB97(@,C`P
M.PT*("`@('!L,V0@57!D871E.PT*#0H-"B-C<F5A=&4@=&AR964@<')O8F4@
M<&QA;F5S(&%N9"!C;VQL96-T('1H96T-"B,-"G9T:U-T<G5C='5R961'<FED
M1V5O;65T<GE&:6QT97(@<&QA;F4Q.PT*("`@('!L86YE,2!3971);G!U="!;
M<&PS9"!'971/=71P=71=.PT*("`@('!L86YE,2!3971%>'1E;G0@-2`U(#$@
M,3`P(#$@,3`P.PT*=G1K4W1R=6-T=7)E9$=R:61'96]M971R>49I;'1E<B!P
M;&%N93([#0H@("`@<&QA;F4R(%-E=$EN<'5T(%MP;#-D($=E=$]U='!U=%T[
M#0H@("`@<&QA;F4R(%-E=$5X=&5N="`S,"`S,"`Q(#$P,"`Q(#$P,#L-"G9T
M:U-T<G5C='5R961'<FED1V5O;65T<GE&:6QT97(@<&QA;F4S.PT*("`@('!L
M86YE,R!3971);G!U="!;<&PS9"!'971/=71P=71=.PT*("`@('!L86YE,R!3
M971%>'1E;G0@-34@-34@,2`Q,#`@,2`Q,#`[#0IV=&M!<'!E;F10;VQY1&%T
M82!A<'!E;F1&.PT*("`@(&%P<&5N9$8@061D26YP=70@6W!L86YE,2!'971/
M=71P=71=.PT*("`@(&%P<&5N9$8@061D26YP=70@6W!L86YE,B!'971/=71P
M=71=.PT*("`@(&%P<&5N9$8@061D26YP=70@6W!L86YE,R!'971/=71P=71=
M.PT*#0H-"B,@;F]W('=A<G`@=&AE('1H<F5E('!L86YE<R!U<VEN9R!V96QO
M8VET>2!V96-T;W(-"B,@:6YF;W)M871I;VX-"G9T:U=A<G!696-T;W(@=V%R
M<#L-"B`@=V%R<"!3971);G!U="!;87!P96YD1B!'971/=71P=71=.PT*("!W
M87)P(%-E=%-C86QE1F%C=&]R(#`N,#`Q.PT*=G1K1V5O;65T<GE&:6QT97(@
M9&%T85-E=#)0;VQY.PT*("!D871A4V5T,E!O;'D@4V5T26YP=70@6W=A<G`@
M1V5T3W5T<'5T73L-"G9T:T-L96%N4&]L>41A=&$@8VQE86YE<CL-"B`@8VQE
M86YE<B!3971);G!U="!;9&%T85-E=#)0;VQY($=E=$]U='!U=%T[#0IV=&M0
M;VQY3F]R;6%L<R!N;W)M86QS.PT*("!N;W)M86QS(%-E=$EN<'5T(%MC;&5A
M;F5R($=E=$]U='!U=%T[#0H@(&YO<FUA;',@4V5T1F5A='5R94%N9VQE(#8P
M.PT*=G1K1&%T85-E=$UA<'!E<B!P;&%N94UA<'!E<CL-"B`@<&QA;F5-87!P
M97(@4V5T26YP=70@6VYO<FUA;',@1V5T3W5T<'5T73L-"B`@979A;"!P;&%N
M94UA<'!E<B!397138V%L87)286YG92!;6W!L,V0@1V5T3W5T<'5T72!'9713
M8V%L87)286YG95T[#0IV=&M!8W1O<B!P;&%N94%C=&]R.PT*("!P;&%N94%C
M=&]R(%-E=$UA<'!E<B!P;&%N94UA<'!E<CL-"@T*(R!C<F5A=&4@=&AE('=I
M<F5F<F%M92!O=71L:6YE(&]F('1H92!C;VUB=7-T;W(-"B,-"G9T:U-T<G5C
M='5R961'<FED3W5T;&EN949I;'1E<B!O=71L:6YE.PT*("`@(&]U=&QI;F4@
M4V5T26YP=70@6W!L,V0@1V5T3W5T<'5T73L-"G9T:U!O;'E-87!P97(@;W5T
M;&EN94UA<'!E<CL-"B`@("!O=71L:6YE36%P<&5R(%-E=$EN<'5T(%MO=71L
M:6YE($=E=$]U='!U=%T[#0IV=&M!8W1O<B!O=71L:6YE06-T;W([#0H@("`@
M;W5T;&EN94%C=&]R(%-E=$UA<'!E<B!O=71L:6YE36%P<&5R.PT*("`@(%MO
M=71L:6YE06-T;W(@1V5T4')O<&5R='E=(%-E=$-O;&]R(#$@,2`Q.PT*#0HD
M<F5N,2!!9&1!8W1O<G,@;W5T;&EN94%C=&]R.PT*)')E;C$@061D06-T;W)S
M('!L86YE06-T;W([#0HD<F5N,2!3971"86-K9W)O=6YD(#`@,"`P+C4[#0HD
M<F5N5VEN(%-E=%-I>F4@-3`P(#4P,#L-"B1I<F5N($EN:71I86QI>F4[#0H-
M"G-E="!C86TQ(%LD<F5N,2!'971!8W1I=F5#86UE<F%=.PT*)&-A;3$@4V5T
M0VQI<'!I;F=286YG92`S+CDU,CDW(#4P.PT*)&-A;3$@4V5T1F]C86Q0;VEN
M="`X+C@X.3`X(#`N-3DU,#,X(#(Y+C,S-#([#0HD8V%M,2!39710;W-I=&EO
M;B`M,3(N,S,S,B`S,2XW-#<Y(#0Q+C(S.#<[#0HD8V%M,2!#86QC5FEE=U!L
M86YE3F]R;6%L.PT*)&-A;3$@4V5T5FEE=U5P(#`N,#8P-S<R("TP+C,Q.3DP
M-2`P+CDT-30Y.#L-"@T*(R!R96YD97(@=&AE(&EM86=E#0HC#0HD:7)E;B!3
M9715<V5R365T:&]D('MW;2!D96EC;VYI9GD@+G9T:TEN=&5R86-T?3L-"B1R
M96Y7:6X@4F5N9&5R.PT*#0HC('!R979E;G0@=&AE('1K('=I;F1O=R!F<F]M
M('-H;W=I;F<@=7`@=&AE;B!S=&%R="!T:&4@979E;G0@;&]O<`T*=VT@=VET
/:&1R87<@+@T*#0H-"@T*
`
end
SHAR_EOF
  $shar_touch -am 0415180797 '9_4c.tcl' &&
  chmod 0640 '9_4c.tcl' ||
  $echo 'restore of' '9_4c.tcl' 'failed'
  if ( md5sum --help 2>&1 | grep 'sage: md5sum \[' ) >/dev/null 2>&1 \
  && ( md5sum --version 2>&1 | grep -v 'textutils 1.12' ) >/dev/null; then
    md5sum -c << SHAR_EOF >/dev/null 2>&1 \
    || $echo '9_4c.tcl:' 'MD5 check failed'
ced3be1aa79d061da62885372fb3593c  9_4c.tcl
SHAR_EOF
  else
    shar_count="`LC_ALL= LC_CTYPE= LANG= wc -c < '9_4c.tcl'`"
    test 2580 -eq "$shar_count" ||
    $echo '9_4c.tcl:' 'original size' '2580,' 'current size' "$shar_count!"
  fi
fi
# ============= 9_4d.tcl ==============
if test -f '9_4d.tcl' && test "$first_param" != -c; then
  $echo 'x -' SKIPPING '9_4d.tcl' '(file already exists)'
else
  $echo 'x -' extracting '9_4d.tcl' '(binary)'
  sed 's/^X//' << 'SHAR_EOF' | uudecode &&
begin 600 9_4d.tcl
M(R!G970@=&AE(&EN=&5R86-T;W(@=6D-"G-O=7)C92!V=&M);G0N=&-L#0H-
M"B,@8W)E871E('!L86YE<PT*(R!&:7)S="!C<F5A=&4@=&AE(')E;F1E<B!M
M87-T97(-"G9T:U)E;F1E<DUA<W1E<B!R;3L-"@T*(R!.;W<@8W)E871E('1H
M92!296YD97)7:6YD;W<L(%)E;F1E<F5R(&%N9"!B;W1H($%C=&]R<PT*(PT*
M<V5T(')E;E=I;B!;<FT@36%K95)E;F1E<E=I;F1O=UT[#0IS970@<F5N,2`@
M(%LD<F5N5VEN($UA:V5296YD97)E<ET[#0IS970@:7)E;B!;)')E;E=I;B!-
M86ME4F5N9&5R5VEN9&]W26YT97)A8W1O<ET[#0H-"B,@8W)E871E('!I<&5L
M:6YE#0HC#0IV=&M03$]4,T1296%D97(@<&PS9#L-"B`@<&PS9"!3971865I&
M:6QE;F%M92`B8V]M8GAY>BYB:6XB#0H@('!L,V0@4V5T449I;&5N86UE(")C
M;VUB<2YB:6XB#0H@('!L,V0@4V5T4V-A;&%R1G5N8W1I;VY.=6UB97(@,34S
M.PT*("!P;#-D(%-E=%9E8W1O<D9U;F-T:6]N3G5M8F5R(#(P,#L-"B`@<&PS
M9"!5<&1A=&4[#0H-"@T*(R!C<F5A=&4@=&AR964@<')O8F4@<&QA;F5S(&%N
M9"!C;VQL96-T('1H96T-"B,-"G9T:U-T<G5C='5R961'<FED1V5O;65T<GE&
M:6QT97(@<&QA;F4Q.PT*("!P;&%N93$@4V5T26YP=70@6W!L,V0@1V5T3W5T
M<'5T73L-"B`@<&QA;F4Q(%-E=$5X=&5N="`U(#4@,2`Q,#`@,2`Q,#`[#0IV
M=&M3=')U8W1U<F5D1W)I9$=E;VUE=')Y1FEL=&5R('!L86YE,CL-"B`@<&QA
M;F4R(%-E=$EN<'5T(%MP;#-D($=E=$]U='!U=%T[#0H@('!L86YE,B!3971%
M>'1E;G0@,S`@,S`@,2`Q,#`@,2`Q,#`[#0IV=&M3=')U8W1U<F5D1W)I9$=E
M;VUE=')Y1FEL=&5R('!L86YE,SL-"B`@<&QA;F4S(%-E=$EN<'5T(%MP;#-D
M($=E=$]U='!U=%T[#0H@('!L86YE,R!3971%>'1E;G0@-34@-34@,2`Q,#`@
M,2`Q,#`[#0IV=&M!<'!E;F10;VQY1&%T82!A<'!E;F1&.PT*("!A<'!E;F1&
M($%D9$EN<'5T(%MP;&%N93$@1V5T3W5T<'5T73L-"B`@87!P96YD1B!!9&1)
M;G!U="!;<&QA;F4R($=E=$]U='!U=%T[#0H@(&%P<&5N9$8@061D26YP=70@
M6W!L86YE,R!'971/=71P=71=.PT*#0H-"B,@<')O8F4@=VET:"!T:&4@=&AR
M964@<')O8F4@9FEL=&5R<PT*(PT*=G1K4')O8F5&:6QT97(@<')O8F4[#0H@
M('!R;V)E(%-E=$EN<'5T(%MA<'!E;F1&($=E=$]U='!U=%T[#0H@('!R;V)E
M(%-E=%-O=7)C92!;<&PS9"!'971/=71P=71=.PT*#0H-"G9T:U9E8W1O<DYO
M<FT@;F]R;3L-"B`@;F]R;2!3971);G!U="!;<')O8F4@1V5T3W5T<'5T73L@
M(`T*=G1K1&%T85-E=$UA<'!E<B!N;W)M36%P<&5R.PT*("!N;W)M36%P<&5R
M(%-E=$EN<'5T(%MN;W)M($=E=$]U='!U=%T[#0H@(&5V86P@;F]R;4UA<'!E
M<B!397138V%L87)286YG92!;6W!L,V0@1V5T3W5T<'5T72!'97138V%L87)2
M86YG95T[#0IV=&M!8W1O<B!N;W)M06-T;W([#0H@(&YO<FU!8W1O<B!3971-
M87!P97(@;F]R;4UA<'!E<CL-"@T*=G1K4W1R=6-T=7)E9$=R:61/=71L:6YE
M1FEL=&5R(&]U=&QI;F4[#0H@(&]U=&QI;F4@4V5T26YP=70@6W!L,V0@1V5T
M3W5T<'5T73L-"G9T:U!O;'E-87!P97(@;W5T;&EN94UA<'!E<CL-"B`@;W5T
M;&EN94UA<'!E<B!3971);G!U="!;;W5T;&EN92!'971/=71P=71=.PT*=G1K
M06-T;W(@;W5T;&EN94%C=&]R.PT*("!O=71L:6YE06-T;W(@4V5T36%P<&5R
M(&]U=&QI;F5-87!P97([#0H@(%MO=71L:6YE06-T;W(@1V5T4')O<&5R='E=
M(%-E=$-O;&]R(#$@,2`Q.PT*#0HD<F5N,2!!9&1!8W1O<G,@;W5T;&EN94%C
M=&]R.PT*)')E;C$@061D06-T;W)S(&YO<FU!8W1O<CL-"B1R96XQ(%-E=$)A
M8VMG<F]U;F0@,"`P(#`N-3L-"B1R96Y7:6X@4V5T4VEZ92`U,#`@-3`P.PT*
M)&ER96X@26YI=&EA;&EZ93L-"@T*<V5T(&-A;3$@6R1R96XQ($=E=$%C=&EV
M94-A;65R85T[#0HD8V%M,2!3971#;&EP<&EN9U)A;F=E(#,N.34R.3<@-3`[
M#0HD8V%M,2!3971&;V-A;%!O:6YT(#@N.#@Y,#@@,"XU.34P,S@@,CDN,S,T
M,CL-"B1C86TQ(%-E=%!O<VET:6]N("TQ,BXS,S,R(#,Q+C<T-SD@-#$N,C,X
M-SL-"B1C86TQ($-A;&-6:65W4&QA;F5.;W)M86P[#0HD8V%M,2!39716:65W
M57`@,"XP-C`W-S(@+3`N,S$Y.3`U(#`N.30U-#DX.PT*#0HC(')E;F1E<B!T
M:&4@:6UA9V4-"B,-"B1I<F5N(%-E=%5S97)-971H;V0@>W=M(&1E:6-O;FEF
M>2`N=G1K26YT97)A8W1].PT*)')E;E=I;B!296YD97([#0H-"B,@<')E=F5N
M="!T:&4@=&L@=VEN9&]W(&9R;VT@<VAO=VEN9R!U<"!T:&5N('-T87)T('1H
C92!E=F5N="!L;V]P#0IW;2!W:71H9')A=R`N#0H-"@T*#0IN
`
end
SHAR_EOF
  $shar_touch -am 0415180797 '9_4d.tcl' &&
  chmod 0640 '9_4d.tcl' ||
  $echo 'restore of' '9_4d.tcl' 'failed'
  if ( md5sum --help 2>&1 | grep 'sage: md5sum \[' ) >/dev/null 2>&1 \
  && ( md5sum --version 2>&1 | grep -v 'textutils 1.12' ) >/dev/null; then
    md5sum -c << SHAR_EOF >/dev/null 2>&1 \
    || $echo '9_4d.tcl:' 'MD5 check failed'
6c88879c47360a349a88c2c35bfd4db0  9_4d.tcl
SHAR_EOF
  else
    shar_count="`LC_ALL= LC_CTYPE= LANG= wc -c < '9_4d.tcl'`"
    test 2285 -eq "$shar_count" ||
    $echo '9_4d.tcl:' 'original size' '2285,' 'current size' "$shar_count!"
  fi
fi
# ============= readme.txt ==============
if test -f 'readme.txt' && test "$first_param" != -c; then
  $echo 'x -' SKIPPING 'readme.txt' '(file already exists)'
else
  $echo 'x -' extracting 'readme.txt' '(binary)'
  sed 's/^X//' << 'SHAR_EOF' | uudecode &&
begin 600 readme.txt
M5&AA>65R($%N9')E=W,-"D%P<FEL(#$U+"`Q.3DW#0H-"@T*5&AE(&9O;&QO
M=VEN9R!F:6QE<R!S:&]U;&0@8F4@:6YC;'5D960@:6X@=&AI<R!A<F-H:79E
M.@T*-E\S82YT8VP-"C9?,V(N=&-L#0HY7S1A+G1C;`T*.5\T8RYT8VP-"CE?
M-&0N=&-L#0H-"E1O(&%C=&EV871E('1H92!A;FEM871I;VX@<F]U=&EN92!I
M;B`V7S-A+G1C;"!A;F0@-E\S8BYT8VP@<')E<W,@)W4G#0IT;R!O<&5N('1H
M92!U<V5R(&EN=&5R86-T;W(@=VEN9&]W('1H96X@='EP92!T:&4@9F]L;&]W
<:6YG.@T*#0I!;FEM871E("1R96Y7:6X[#0H-"FX@
`
end
SHAR_EOF
  $shar_touch -am 0415180797 'readme.txt' &&
  chmod 0640 'readme.txt' ||
  $echo 'restore of' 'readme.txt' 'failed'
  if ( md5sum --help 2>&1 | grep 'sage: md5sum \[' ) >/dev/null 2>&1 \
  && ( md5sum --version 2>&1 | grep -v 'textutils 1.12' ) >/dev/null; then
    md5sum -c << SHAR_EOF >/dev/null 2>&1 \
    || $echo 'readme.txt:' 'MD5 check failed'
da2c926c685a38c58a9895acde1f1f2d  readme.txt
SHAR_EOF
  else
    shar_count="`LC_ALL= LC_CTYPE= LANG= wc -c < 'readme.txt'`"
    test 298 -eq "$shar_count" ||
    $echo 'readme.txt:' 'original size' '298,' 'current size' "$shar_count!"
  fi
fi
rm -fr _sh122446
exit 0

From ???@??? Wed Apr 16 07:18:19 1997
Received: from cortez.sss.rpi.edu (dsouze@cortez.sss.rpi.edu [128.113.113.33])
	by mail1.its.rpi.edu (8.8.5/8.8.5) with ESMTP id SAA143394
	for <citrit@rpi.edu>; Tue, 15 Apr 1997 18:34:18 -0400
From: "Elaine D'Souza" <dsouze>
Received: (dsouze@localhost) by cortez.sss.rpi.edu (8.6.9/8.6.4) id SAA89664 for citrit@rpi.edu; Tue, 15 Apr 1997 18:34:17 -0400
Date: Tue, 15 Apr 1997 18:34:17 -0400
Message-Id: <199704152234.SAA89664@cortez.sss.rpi.edu>
To: citrit@rpi.edu
Subject: HomeWork 3
X-UIDL: 5dac50e453089c9c0784f5cb9fc02cf1

#!/bin/sh
# This is a shell archive (produced by GNU sharutils 4.2).
# To extract the files from this archive, save it to some FILE, remove
# everything before the `!/bin/sh' line above, then type `sh FILE'.
#
# Made on 1997-04-15 18:31 EDT by <dsouze@cortez>.
# Source directory was `/afs/rpi.edu/home/98/dsouze/cg/vtk/hw3'.
#
# Existing files will *not* be overwritten unless `-c' is specified.
#
# This shar contains:
# length mode       name
# ------ ---------- ------------------------------------------
#   2403 -rwx------ ex6_3a.tcl
#   3084 -rwx------ ex6_3b.tcl
#   3715 -rw-r----- ex9_4a.tcl
#   2283 -rw-r----- ex9_4b.tcl
#   4376 -rw-r----- ex9_4c.tcl
#   3740 -rw-r----- ex9_4d.tcl
#   2839 -rwx------ extraAnimate6_3a.tcl
#   3667 -rw------- extraAnimate6_3b.tcl
#   1226 -rwx------ extraStatic6_3a.tcl
#   1851 -rw------- extraStatic6_3b.tcl
#
save_IFS="${IFS}"
IFS="${IFS}:"
gettext_dir=FAILED
locale_dir=FAILED
first_param="$1"
for dir in $PATH
do
  if test "$gettext_dir" = FAILED && test -f $dir/gettext \
     && ($dir/gettext --version >/dev/null 2>&1)
  then
    set `$dir/gettext --version 2>&1`
    if test "$3" = GNU
    then
      gettext_dir=$dir
    fi
  fi
  if test "$locale_dir" = FAILED && test -f $dir/shar \
     && ($dir/shar --print-text-domain-dir >/dev/null 2>&1)
  then
    locale_dir=`$dir/shar --print-text-domain-dir`
  fi
done
IFS="$save_IFS"
if test "$locale_dir" = FAILED || test "$gettext_dir" = FAILED
then
  echo=echo
else
  TEXTDOMAINDIR=$locale_dir
  export TEXTDOMAINDIR
  TEXTDOMAIN=sharutils
  export TEXTDOMAIN
  echo="$gettext_dir/gettext -s"
fi
touch -am 1231235999 $$.touch >/dev/null 2>&1
if test ! -f 1231235999 && test -f $$.touch; then
  shar_touch=touch
else
  shar_touch=:
  echo
  $echo 'WARNING: not restoring timestamps.  Consider getting and'
  $echo "installing GNU \`touch', distributed in GNU File Utilities..."
  echo
fi
rm -f 1231235999 $$.touch
#
if mkdir _sh40764; then
  $echo 'x -' 'creating lock directory'
else
  $echo 'failed to create lock directory'
  exit 1
fi
# ============= ex6_3a.tcl ==============
if test -f 'ex6_3a.tcl' && test "$first_param" != -c; then
  $echo 'x -' SKIPPING 'ex6_3a.tcl' '(file already exists)'
else
  $echo 'x -' extracting 'ex6_3a.tcl' '(text)'
  sed 's/^X//' << 'SHAR_EOF' > 'ex6_3a.tcl' &&
# Author: Elaine D'Souza
# HW#3	Date: Apr14,'97
# Using vtkContourFilter to generate isosurfaces
# for the Quadric function
# By assigning an Actor for each surface, and 
# turning these ON/OFF, creating animation 
# sequence
#================================================
source vtkint.tcl
X
vtkRenderMaster rm;
set renWin [rm MakeRenderWindow];
set ren1 [$renWin MakeRenderer];
set iren [$renWin MakeRenderWindowInteractor];
X
$ren1 SetBackground 1 1 1;
X
vtkQuadric quad;
X  quad SetCoefficients 0.5 1 .2 0 .1 0 0 .2 0 0;
vtkSampleFunction sample;
X  sample SetSampleDimensions 25 25 25;
X  sample SetImplicitFunction quad;
X
vtkContourFilter cont1;
X	cont1 SetInput [sample GetOutput];
X	cont1 GenerateValues 3 0.0 0.4;  
vtkPolyMapper contMapper1;
X	contMapper1 SetInput [cont1 GetOutput];
X	contMapper1 SetScalarRange 0.0 3.0;
vtkActor contActor1;  
X	contActor1 SetMapper contMapper1;
X
vtkContourFilter cont2;
X	cont2 SetInput [sample GetOutput];
X	cont2 GenerateValues 3 0.2 0.6;  
vtkPolyMapper contMapper2;
X	contMapper2 SetInput [cont2 GetOutput];
X	contMapper2 SetScalarRange 0.0 3.0;
vtkActor contActor2;  
X	contActor2 SetMapper contMapper2;
X
vtkContourFilter cont3;
X	cont3 SetInput [sample GetOutput];
X	cont3 GenerateValues 3 0.4 0.8;  
vtkPolyMapper contMapper3;
X	contMapper3 SetInput [cont3 GetOutput];
X	contMapper3 SetScalarRange 0.0 3.0;
vtkActor contActor3;  
X	contActor3 SetMapper contMapper3;
X
$ren1 AddActors contActor1;
$ren1 AddActors contActor2;
$ren1 AddActors contActor3;
X
#contActor1 VisibilityOff;    
#contActor2 VisibilityOff;    
#contActor3 VisibilityOff;    
X
# enable user interface interactor
$iren SetUserMethod {wm deiconify .vtkInteract};
$iren Initialize;
X
for {set count 1} {$count < 10} {} {
X	incr count;
X
X	puts "Displaying Innermost"
X	contActor1 VisibilityOn;    
X	contActor2 VisibilityOff;    
X	contActor3 VisibilityOff;    
X  $renWin Render
X
X	puts "Displaying Middle"
X	contActor1 VisibilityOff;    
X	contActor2 VisibilityOn;    
X	contActor3 VisibilityOff;    
X  $renWin Render  
X  
X	puts "Displaying Outermost"
X	contActor1 VisibilityOff;    
X	contActor2 VisibilityOff;    
X	contActor3 VisibilityOn;    
X  $renWin Render
X
X	puts "Displaying Middle"
X	contActor1 VisibilityOff;    
X	contActor2 VisibilityOn;    
X	contActor3 VisibilityOff;    
X  $renWin Render  
X  
}
X
puts "YEAH! success"  
X
X	
# prevent the tk window from showing up then start the event loop
wm withdraw .
X
SHAR_EOF
  $shar_touch -am 0415175097 'ex6_3a.tcl' &&
  chmod 0700 'ex6_3a.tcl' ||
  $echo 'restore of' 'ex6_3a.tcl' 'failed'
  if ( md5sum --help 2>&1 | grep 'sage: md5sum \[' ) >/dev/null 2>&1 \
  && ( md5sum --version 2>&1 | grep -v 'textutils 1.12' ) >/dev/null; then
    md5sum -c << SHAR_EOF >/dev/null 2>&1 \
    || $echo 'ex6_3a.tcl:' 'MD5 check failed'
c6002b6567383b0df840a41066e76579  ex6_3a.tcl
SHAR_EOF
  else
    shar_count="`LC_ALL= LC_CTYPE= LANG= wc -c < 'ex6_3a.tcl'`"
    test 2403 -eq "$shar_count" ||
    $echo 'ex6_3a.tcl:' 'original size' '2403,' 'current size' "$shar_count!"
  fi
fi
# ============= ex6_3b.tcl ==============
if test -f 'ex6_3b.tcl' && test "$first_param" != -c; then
  $echo 'x -' SKIPPING 'ex6_3b.tcl' '(file already exists)'
else
  $echo 'x -' extracting 'ex6_3b.tcl' '(text)'
  sed 's/^X//' << 'SHAR_EOF' > 'ex6_3b.tcl' &&
#================================================
# Author: Elaine D'Souza
# HW#3	Date: Apr14,'97
# Using vtkContourFilter to generate isosurfaces
# for the MRIHead
# By assigning an Actor for each surface, and 
# turning these ON/OFF, creating animation 
# sequence
#================================================
X
# If you are using Window95 and vtk 1.3 uncomment the line below
# load vtktcl;
X
# get the interactor ui
source vtkint.tcl
X
# First create the render master
vtkRenderMaster rm;
X
# Now create the RenderWindow, Renderer
#
set renWin [rm MakeRenderWindow];
set ren1   [$renWin MakeRenderer];
set iren   [$renWin MakeRenderWindowInteractor];
X
# Load up the data
vtkStructuredPointsReader vol;
X    vol SetFilename "MRIdata.vtk"
X
vtkTransform trans;
X    trans RotateX 180;
X 
vtkMarchingCubes cont1;
X  cont1 SetInput [vol GetOutput];
X  cont1 SetValue 0 300.0;
vtkTransformPolyFilter tpc1
X    tpc1 SetInput [cont1 GetOutput];
X    tpc1 SetTransform trans;
vtkPolyMapper volMapper1;
X  volMapper1 SetInput [tpc1 GetOutput];
X  volMapper1 ScalarsVisibleOff;
vtkActor volActor1;
X  volActor1 SetMapper volMapper1;
X
vtkMarchingCubes cont2;
X  cont2 SetInput [vol GetOutput];
X  cont2 SetValue 0 400.0;
vtkTransformPolyFilter tpc2
X    tpc2 SetInput [cont2 GetOutput];
X    tpc2 SetTransform trans;
vtkPolyMapper volMapper2;
X  volMapper2 SetInput [tpc2 GetOutput];
X  volMapper2 ScalarsVisibleOff;
vtkActor volActor2;
X  volActor2 SetMapper volMapper2;
X
vtkMarchingCubes cont3;
X  cont3 SetInput [vol GetOutput];
X  cont3 SetValue 0 500.0;
vtkTransformPolyFilter tpc3
X    tpc3 SetInput [cont3 GetOutput];
X    tpc3 SetTransform trans;
vtkPolyMapper volMapper3;
X  volMapper3 SetInput [tpc3 GetOutput];
X  volMapper3 ScalarsVisibleOff;
vtkActor volActor3;
X  volActor3 SetMapper volMapper3;
X
vtkOutlineFilter outLine;
X  outLine SetInput [vol GetOutput];
vtkTransformPolyFilter tpout
X    tpout SetInput [outLine GetOutput];
X    tpout SetTransform trans;
vtkPolyMapper outMapper;
X  outMapper SetInput [tpout GetOutput];
vtkActor outActor;
X  outActor SetMapper outMapper;
X
# Add the actors to the renderer, set the background and size
#
$ren1 AddActors outActor;
$ren1 AddActors volActor1;
$ren1 AddActors volActor2;
$ren1 AddActors volActor3;
X
$ren1 SetBackground 0 0 0;
$renWin SetSize 500 400;
$iren Initialize;
X
for {set count 1} {$count < 10} {} {
X	incr count;
X
X	puts "Displaying Innermost"
X	volActor1 VisibilityOn;    
X	volActor2 VisibilityOff;    
X	volActor3 VisibilityOff;    
X  $renWin Render
X
X	puts "Displaying Middle"
X	volActor1 VisibilityOff;    
X	volActor2 VisibilityOn;    
X	volActor3 VisibilityOff;    
X  $renWin Render  
X  
X	puts "Displaying Outermost"
X	volActor1 VisibilityOff;    
X	volActor2 VisibilityOff;    
X	volActor3 VisibilityOn;    
X  $renWin Render
X
X	puts "Displaying Middle"
X	volActor1 VisibilityOff;    
X	volActor2 VisibilityOn;    
X	volActor3 VisibilityOff;    
X  $renWin Render  
X  
}
X
X	puts "YEAH!"
X
# render the image
#
$iren SetUserMethod {wm deiconify .vtkInteract};
$renWin Render;
X
# prevent the tk window from showing up then start the event loop
wm withdraw .
X
SHAR_EOF
  $shar_touch -am 0415171797 'ex6_3b.tcl' &&
  chmod 0700 'ex6_3b.tcl' ||
  $echo 'restore of' 'ex6_3b.tcl' 'failed'
  if ( md5sum --help 2>&1 | grep 'sage: md5sum \[' ) >/dev/null 2>&1 \
  && ( md5sum --version 2>&1 | grep -v 'textutils 1.12' ) >/dev/null; then
    md5sum -c << SHAR_EOF >/dev/null 2>&1 \
    || $echo 'ex6_3b.tcl:' 'MD5 check failed'
b77519c5f2440d0e942c6f2291e2ce04  ex6_3b.tcl
SHAR_EOF
  else
    shar_count="`LC_ALL= LC_CTYPE= LANG= wc -c < 'ex6_3b.tcl'`"
    test 3084 -eq "$shar_count" ||
    $echo 'ex6_3b.tcl:' 'original size' '3084,' 'current size' "$shar_count!"
  fi
fi
# ============= ex9_4a.tcl ==============
if test -f 'ex9_4a.tcl' && test "$first_param" != -c; then
  $echo 'x -' SKIPPING 'ex9_4a.tcl' '(file already exists)'
else
  $echo 'x -' extracting 'ex9_4a.tcl' '(text)'
  sed 's/^X//' << 'SHAR_EOF' > 'ex9_4a.tcl' &&
#================================================
# Author: Elaine D'Souza
# HW#3	Date: Apr14,'97
# Using vtkProbeFilter and vtkHedgeHog
#================================================
X
# uncommet the line below if you are on Windows95
# load vtktcl;
# get the interactor ui
source vtkint.tcl
X
# create planes
# First create the render master
vtkRenderMaster rm;
X
# Now create the RenderWindow, Renderer and both Actors
#
set renWin [rm MakeRenderWindow];
set ren1   [$renWin MakeRenderer];
set iren [$renWin MakeRenderWindowInteractor];
X
# create pipeline
#
vtkPLOT3DReader pl3d;
X    pl3d SetXYZFilename "COMBXYZ.BIN"
X    pl3d SetQFilename "COMBQ.BIN"
X    pl3d SetScalarFunctionNumber 100;
X    pl3d SetVectorFunctionNumber 202;
X    pl3d Update;
X
vtkPlaneSource plane;
X    plane SetResolution 50 50;
X
vtkTransform transP1;
X    transP1 Translate 3.7 0.0 28.37;
X    transP1 Scale 5 5 5;
#    transP1 RotateX 90;    
X    transP1 RotateY 90;
vtkTransformPolyFilter tpd1
X    tpd1 SetInput [plane GetOutput];
X    tpd1 SetTransform transP1;
vtkOutlineFilter outTpd1;
X    outTpd1 SetInput [tpd1 GetOutput];
vtkPolyMapper mapTpd1;
X    mapTpd1 SetInput [outTpd1 GetOutput];
vtkActor tpd1Actor;
X    tpd1Actor SetMapper mapTpd1;
X    [tpd1Actor GetProperty] SetColor 0 0 0;
X
vtkTransform transP2;
X    transP2 Translate 9.2 0.0 31.20;
X    transP2 Scale 5 5 5;
#    transP2 RotateX 90;    
X    transP2 RotateY 90;
vtkTransformPolyFilter tpd2
X    tpd2 SetInput [plane GetOutput];
X    tpd2 SetTransform transP2;
vtkOutlineFilter outTpd2;
X    outTpd2 SetInput [tpd2 GetOutput];
vtkPolyMapper mapTpd2;
X    mapTpd2 SetInput [outTpd2 GetOutput];
vtkActor tpd2Actor;
X    tpd2Actor SetMapper mapTpd2;
X    [tpd2Actor GetProperty] SetColor 0 0 0;
X
vtkTransform transP3;
X    transP3 Translate 13.27 0.0 33.30;
X    transP3 Scale 5 5 5;
#    transP3 RotateX 90;    
X    transP3 RotateY 90;
vtkTransformPolyFilter tpd3
X    tpd3 SetInput [plane GetOutput];
X    tpd3 SetTransform transP3;
vtkOutlineFilter outTpd3;
X    outTpd3 SetInput [tpd3 GetOutput];
vtkPolyMapper mapTpd3;
X    mapTpd3 SetInput [outTpd3 GetOutput];
vtkActor tpd3Actor;
X    tpd3Actor SetMapper mapTpd3;
X    [tpd3Actor GetProperty] SetColor 0 0 0;
X
vtkAppendPolyData appendF;
X    appendF AddInput [tpd1 GetOutput];
X    appendF AddInput [tpd2 GetOutput];
X    appendF AddInput [tpd3 GetOutput];
X    
vtkProbeFilter probe;
X    probe SetInput [appendF GetOutput];
X    probe SetSource [pl3d GetOutput];
X
vtkHedgeHog hg;
X    hg SetScaleFactor 0.005;
X    hg SetInput [probe GetOutput];
vtkTransform transHg;
X    transHg RotateX 90;
vtkTransformPolyFilter tphg
X    tphg SetInput [hg GetOutput];
X    tphg SetTransform transHg;
vtkPolyMapper hgMapper;
X    hgMapper SetInput [hg GetOutput];
X    eval hgMapper SetScalarRange [[pl3d GetOutput] GetScalarRange];
vtkActor hgActor;
X    hgActor SetMapper hgMapper;
X 
vtkStructuredGridOutlineFilter outline;
X    outline SetInput [pl3d GetOutput];
vtkPolyMapper outlineMapper;
X    outlineMapper SetInput [outline GetOutput];
vtkActor outlineActor;
X    outlineActor SetMapper outlineMapper;
X    [outlineActor GetProperty] SetColor 0 0 0;
X
$ren1 AddActors outlineActor;
$ren1 AddActors hgActor;
$ren1 AddActors tpd1Actor;
$ren1 AddActors tpd2Actor;
$ren1 AddActors tpd3Actor;
$ren1 SetBackground 1 1 1;
$renWin SetSize 500 500;
$iren Initialize;
X
set cam1 [$ren1 GetActiveCamera];
$cam1 SetClippingRange 3.95297 50;
$cam1 SetFocalPoint 8.88908 0.595038 29.3342;
$cam1 SetPosition -12.3332 31.7479 41.2387;
$cam1 CalcViewPlaneNormal;
$cam1 SetViewUp 0.060772 -0.319905 0.945498;
X
# render the image
#
$iren SetUserMethod {wm deiconify .vtkInteract};
$renWin Render;
X
# prevent the tk window from showing up then start the event loop
wm withdraw .
X
SHAR_EOF
  $shar_touch -am 0415173297 'ex9_4a.tcl' &&
  chmod 0640 'ex9_4a.tcl' ||
  $echo 'restore of' 'ex9_4a.tcl' 'failed'
  if ( md5sum --help 2>&1 | grep 'sage: md5sum \[' ) >/dev/null 2>&1 \
  && ( md5sum --version 2>&1 | grep -v 'textutils 1.12' ) >/dev/null; then
    md5sum -c << SHAR_EOF >/dev/null 2>&1 \
    || $echo 'ex9_4a.tcl:' 'MD5 check failed'
9a7c1a3d632a8bdf99730604e630a2b7  ex9_4a.tcl
SHAR_EOF
  else
    shar_count="`LC_ALL= LC_CTYPE= LANG= wc -c < 'ex9_4a.tcl'`"
    test 3715 -eq "$shar_count" ||
    $echo 'ex9_4a.tcl:' 'original size' '3715,' 'current size' "$shar_count!"
  fi
fi
# ============= ex9_4b.tcl ==============
if test -f 'ex9_4b.tcl' && test "$first_param" != -c; then
  $echo 'x -' SKIPPING 'ex9_4b.tcl' '(file already exists)'
else
  $echo 'x -' extracting 'ex9_4b.tcl' '(text)'
  sed 's/^X//' << 'SHAR_EOF' > 'ex9_4b.tcl' &&
#================================================
# Author: Elaine D'Souza
# HW#3	Date: Apr14,'97
# Using vtkProbeFilter and vtkStreamLine
#================================================
X
# uncommet the line below if you are on Windows95
# load vtktcl;
# get the interactor ui
source ../vtkint.tcl
X
# create planes
# First create the render master
vtkRenderMaster rm;
X
# Now create the RenderWindow, Renderer and both Actors
#
set renWin [rm MakeRenderWindow];
set ren1   [$renWin MakeRenderer];
set iren [$renWin MakeRenderWindowInteractor];
X
# create pipeline
#
vtkPLOT3DReader pl3d;
X    pl3d SetXYZFilename "../data/COMBXYZ.BIN"
X    pl3d SetQFilename "../data/COMBQ.BIN"
X    pl3d SetScalarFunctionNumber 100;
X    pl3d SetVectorFunctionNumber 202;
X    pl3d Update;
X
vtkPlaneSource plane;
X    plane SetResolution 10 10;
X
# Create source for streamtubes
vtkPointSource seeds;
X    seeds SetRadius 0.75;
X    eval seeds SetCenter 3.7 0.0 28.37
X    seeds SetNumberOfPoints 25;
X
vtkStreamLine streamer;
X   streamer SetInput [pl3d GetOutput];
X	 streamer SetSource [seeds GetOutput];
X	 streamer SetMaximumPropagationTime 100;
X	 streamer SpeedScalarsOn;
X	 streamer SetIntegrationStepLength 0.005;
X	 streamer SetStepLength 0.175;
X	 streamer Update;
vtkPolyMapper slMapper;
X    slMapper SetInput [streamer GetOutput];
X    eval slMapper SetScalarRange [[pl3d GetOutput] GetScalarRange];
vtkActor slActor;
X    slActor SetMapper slMapper;
X	 
vtkStructuredGridOutlineFilter outline;
X    outline SetInput [pl3d GetOutput];
vtkPolyMapper outlineMapper;
X    outlineMapper SetInput [outline GetOutput];
X
vtkActor outlineActor;
X    outlineActor SetMapper outlineMapper;
X    [outlineActor GetProperty] SetColor 0 0 0;
X    
puts " adding actors to ren1"
X
$ren1 AddActors outlineActor;
$ren1 AddActors slActor;
$ren1 SetBackground 1 1 1;
$renWin SetSize 500 500;
$iren Initialize;
X
set cam1 [$ren1 GetActiveCamera];
$cam1 SetClippingRange 3.95297 50;
$cam1 SetFocalPoint 8.88908 0.595038 29.3342;
$cam1 SetPosition -12.3332 31.7479 41.2387;
$cam1 CalcViewPlaneNormal;
$cam1 SetViewUp 0.060772 -0.319905 0.945498;
X
# render the image
#
$iren SetUserMethod {wm deiconify .vtkInteract};
$renWin Render;
X
puts "YEAH! success"
X
# prevent the tk window from showing up then start the event loop
wm withdraw .
SHAR_EOF
  $shar_touch -am 0415175397 'ex9_4b.tcl' &&
  chmod 0640 'ex9_4b.tcl' ||
  $echo 'restore of' 'ex9_4b.tcl' 'failed'
  if ( md5sum --help 2>&1 | grep 'sage: md5sum \[' ) >/dev/null 2>&1 \
  && ( md5sum --version 2>&1 | grep -v 'textutils 1.12' ) >/dev/null; then
    md5sum -c << SHAR_EOF >/dev/null 2>&1 \
    || $echo 'ex9_4b.tcl:' 'MD5 check failed'
8e956da55854adec68c5e56d6ea49383  ex9_4b.tcl
SHAR_EOF
  else
    shar_count="`LC_ALL= LC_CTYPE= LANG= wc -c < 'ex9_4b.tcl'`"
    test 2283 -eq "$shar_count" ||
    $echo 'ex9_4b.tcl:' 'original size' '2283,' 'current size' "$shar_count!"
  fi
fi
# ============= ex9_4c.tcl ==============
if test -f 'ex9_4c.tcl' && test "$first_param" != -c; then
  $echo 'x -' SKIPPING 'ex9_4c.tcl' '(file already exists)'
else
  $echo 'x -' extracting 'ex9_4c.tcl' '(text)'
  sed 's/^X//' << 'SHAR_EOF' > 'ex9_4c.tcl' &&
#================================================
# Author: Elaine D'Souza
# HW#3	Date: Apr14,'97
# Using vtkProbeFilter and vtkWarpVector
#================================================
X
# uncomment the line below if you are on Windows95
# load vtktcl;
# get the interactor ui
source vtkint.tcl
X
# create planes
# First create the render master
vtkRenderMaster rm;
X
# Now create the RenderWindow, Renderer and both Actors
#
set renWin [rm MakeRenderWindow];
set ren1   [$renWin MakeRenderer];
set iren [$renWin MakeRenderWindowInteractor];
X
# create pipeline
#
vtkPLOT3DReader pl3d;
X    pl3d SetXYZFilename "COMBXYZ.BIN"
X    pl3d SetQFilename "COMBQ.BIN"
X    pl3d SetScalarFunctionNumber 100;
X    pl3d SetVectorFunctionNumber 202;
X    pl3d Update;
X
vtkPlaneSource plane;
X    plane SetResolution 10 10;
X
vtkTransform transP1;
X    transP1 Translate 3.7 0.0 28.37;
X    transP1 Scale 5 5 5;
X    transP1 RotateY 90;
vtkTransformPolyFilter tpd1
X    tpd1 SetInput [plane GetOutput];
X    tpd1 SetTransform transP1;
vtkOutlineFilter outTpd1;
X    outTpd1 SetInput [tpd1 GetOutput];
vtkPolyMapper mapTpd1;
X    mapTpd1 SetInput [outTpd1 GetOutput];
vtkActor tpd1Actor;
X    tpd1Actor SetMapper mapTpd1;
X    [tpd1Actor GetProperty] SetColor 0 0 0;
X
vtkTransform transP2;
X    transP2 Translate 9.2 0.0 31.20;
X    transP2 Scale 5 5 5;
X    transP2 RotateY 90;
vtkTransformPolyFilter tpd2
X    tpd2 SetInput [plane GetOutput];
X    tpd2 SetTransform transP2;
vtkOutlineFilter outTpd2;
X    outTpd2 SetInput [tpd2 GetOutput];
vtkPolyMapper mapTpd2;
X    mapTpd2 SetInput [outTpd2 GetOutput];
vtkActor tpd2Actor;
X    tpd2Actor SetMapper mapTpd2;
X    [tpd2Actor GetProperty] SetColor 0 0 0;
X
vtkTransform transP3;
X    transP3 Translate 13.27 0.0 33.30;
X    transP3 Scale 5 5 5;
X    transP3 RotateY 90;
vtkTransformPolyFilter tpd3
X    tpd3 SetInput [plane GetOutput];
X    tpd3 SetTransform transP3;
vtkOutlineFilter outTpd3;
X    outTpd3 SetInput [tpd3 GetOutput];
vtkPolyMapper mapTpd3;
X    mapTpd3 SetInput [outTpd3 GetOutput];
vtkActor tpd3Actor;
X    tpd3Actor SetMapper mapTpd3;
X    [tpd3Actor GetProperty] SetColor 0 0 0;
X
vtkAppendPolyData appendF;
X    appendF AddInput [tpd1 GetOutput];
X    appendF AddInput [tpd2 GetOutput];
X    appendF AddInput [tpd3 GetOutput];
X    
#Probe: DataSet -> DataSet
vtkProbeFilter probe1;
X    probe1 SetInput [tpd1 GetOutput];
X    probe1 SetSource [pl3d GetOutput];
#Connectivity DataSet -> Unstructured grid
vtkConnectivityFilter contF1;
X	contF1 SetInput [probe1 GetOutput];
X	contF1 ColorRegionsOn;
X	contF1 ExtractLargestRegion;
X
vtkProbeFilter probe2;
X    probe2 SetInput [tpd2 GetOutput];
X    probe2 SetSource [pl3d GetOutput];
vtkConnectivityFilter contF2;
X	contF2 SetInput [probe2 GetOutput];
X	contF2 ColorRegionsOn;
X	contF2 ExtractLargestRegion;
X
vtkProbeFilter probe3;
X    probe3 SetInput [tpd3 GetOutput];
X    probe3 SetSource [pl3d GetOutput];
vtkConnectivityFilter contF3;
X	contF3 SetInput [probe3 GetOutput];
X	contF3 ColorRegionsOn;
X	contF3 ExtractLargestRegion;
X
vtkAppendFilter appendPF;
X    appendPF AddInput [contF1 GetOutput];
X    appendPF AddInput [contF2 GetOutput];
X    appendPF AddInput [contF3 GetOutput];
X
X
vtkWarpVector warp;
#warp requires an input of PointSet & returns PointSet
X    warp SetInput [appendPF GetOutput];
X    warp SetScaleFactor .005;
X
vtkDataSetMapper warpMapper;
X    warpMapper SetInput [warp GetOutput];
X    eval warpMapper SetScalarRange [[pl3d GetOutput] GetScalarRange];
X    
vtkActor warpActor;
X    warpActor SetMapper warpMapper;
X	 
vtkStructuredGridOutlineFilter outline;
X    outline SetInput [pl3d GetOutput];
X    
vtkPolyMapper outlineMapper;
X    outlineMapper SetInput [outline GetOutput];
vtkActor outlineActor;
X    outlineActor SetMapper outlineMapper;
X    [outlineActor GetProperty] SetColor 0 0 0;
X
$ren1 AddActors outlineActor;
$ren1 AddActors warpActor;
$ren1 AddActors tpd1Actor;
$ren1 AddActors tpd2Actor;
$ren1 AddActors tpd3Actor;
$ren1 SetBackground 1 1 1;
$renWin SetSize 500 500;
$iren Initialize;
X
set cam1 [$ren1 GetActiveCamera];
$cam1 SetClippingRange 3.95297 50;
$cam1 SetFocalPoint 8.88908 0.595038 29.3342;
$cam1 SetPosition -12.3332 31.7479 41.2387;
$cam1 CalcViewPlaneNormal;
$cam1 SetViewUp 0.060772 -0.319905 0.945498;
X
# render the image
#
$iren SetUserMethod {wm deiconify .vtkInteract};
$renWin Render;
X
# prevent the tk window from showing up then start the event loop
wm withdraw .
SHAR_EOF
  $shar_touch -am 0415173797 'ex9_4c.tcl' &&
  chmod 0640 'ex9_4c.tcl' ||
  $echo 'restore of' 'ex9_4c.tcl' 'failed'
  if ( md5sum --help 2>&1 | grep 'sage: md5sum \[' ) >/dev/null 2>&1 \
  && ( md5sum --version 2>&1 | grep -v 'textutils 1.12' ) >/dev/null; then
    md5sum -c << SHAR_EOF >/dev/null 2>&1 \
    || $echo 'ex9_4c.tcl:' 'MD5 check failed'
ad26f954e2caa04e95dc263ad445fbef  ex9_4c.tcl
SHAR_EOF
  else
    shar_count="`LC_ALL= LC_CTYPE= LANG= wc -c < 'ex9_4c.tcl'`"
    test 4376 -eq "$shar_count" ||
    $echo 'ex9_4c.tcl:' 'original size' '4376,' 'current size' "$shar_count!"
  fi
fi
# ============= ex9_4d.tcl ==============
if test -f 'ex9_4d.tcl' && test "$first_param" != -c; then
  $echo 'x -' SKIPPING 'ex9_4d.tcl' '(file already exists)'
else
  $echo 'x -' extracting 'ex9_4d.tcl' '(text)'
  sed 's/^X//' << 'SHAR_EOF' > 'ex9_4d.tcl' &&
#================================================
# Author: Elaine D'Souza
# HW#3	Date: Apr14,'97
# Using vtkProbeFilter and vtkVectorNorm
#================================================
X
# uncommet the line below if you are on Windows95
# load vtktcl;
# get the interactor ui
source vtkint.tcl
X
# create planes
# First create the render master
vtkRenderMaster rm;
X
# Now create the RenderWindow, Renderer and both Actors
#
set renWin [rm MakeRenderWindow];
set ren1   [$renWin MakeRenderer];
set iren [$renWin MakeRenderWindowInteractor];
X
# create pipeline
#
vtkPLOT3DReader pl3d;
X    pl3d SetXYZFilename "COMBXYZ.BIN"
X    pl3d SetQFilename "COMBQ.BIN"
X    pl3d SetScalarFunctionNumber 100;
X    pl3d SetVectorFunctionNumber 202;
X    pl3d Update;
X
vtkPlaneSource plane;
X    plane SetResolution 50 50;
X
vtkTransform transP1;
X    transP1 Translate 3.7 0.0 28.37;
X    transP1 Scale 5 5 5;
X    transP1 RotateY 90;
vtkTransformPolyFilter tpd1
X    tpd1 SetInput [plane GetOutput];
X    tpd1 SetTransform transP1;
vtkOutlineFilter outTpd1;
X    outTpd1 SetInput [tpd1 GetOutput];
vtkPolyMapper mapTpd1;
X    mapTpd1 SetInput [outTpd1 GetOutput];
vtkActor tpd1Actor;
X    tpd1Actor SetMapper mapTpd1;
X    [tpd1Actor GetProperty] SetColor 0 0 0;
X
vtkTransform transP2;
X    transP2 Translate 9.2 0.0 31.20;
X    transP2 Scale 5 5 5;
X    transP2 RotateY 90;
vtkTransformPolyFilter tpd2
X    tpd2 SetInput [plane GetOutput];
X    tpd2 SetTransform transP2;
vtkOutlineFilter outTpd2;
X    outTpd2 SetInput [tpd2 GetOutput];
vtkPolyMapper mapTpd2;
X    mapTpd2 SetInput [outTpd2 GetOutput];
vtkActor tpd2Actor;
X    tpd2Actor SetMapper mapTpd2;
X    [tpd2Actor GetProperty] SetColor 0 0 0;
X
vtkTransform transP3;
X    transP3 Translate 13.27 0.0 33.30;
X    transP3 Scale 5 5 5;
X    transP3 RotateY 90;
vtkTransformPolyFilter tpd3
X    tpd3 SetInput [plane GetOutput];
X    tpd3 SetTransform transP3;
vtkOutlineFilter outTpd3;
X    outTpd3 SetInput [tpd3 GetOutput];
vtkPolyMapper mapTpd3;
X    mapTpd3 SetInput [outTpd3 GetOutput];
vtkActor tpd3Actor;
X    tpd3Actor SetMapper mapTpd3;
X    [tpd3Actor GetProperty] SetColor 0 0 0;
X
vtkAppendPolyData appendF;
X    appendF AddInput [tpd1 GetOutput];
X    appendF AddInput [tpd2 GetOutput];
X    appendF AddInput [tpd3 GetOutput];
X    
#Probe: DataSet -> DataSet
vtkProbeFilter probe;
X    probe SetInput [appendF GetOutput];
X    probe SetSource [pl3d GetOutput];
X
#Vnorm: PointSet -> PointSet
vtkVectorNorm vnorm;
X    vnorm SetInput [probe GetOutput];
X    vnorm NormalizeOn;
X
#Contour: DataSet -> PolyData
vtkContourFilter contour;
X    contour SetInput [vnorm GetOutput];
X    eval contour GenerateValues 50 [[pl3d GetOutput] GetScalarRange];
X
vtkDataSetMapper normMapper;
X    normMapper SetInput [contour GetOutput];
X    eval normMapper SetScalarRange [[pl3d GetOutput] GetScalarRange];
X
vtkActor normActor;
X    normActor SetMapper normMapper;
X	 
vtkStructuredGridOutlineFilter outline;
X    outline SetInput [pl3d GetOutput];
vtkPolyMapper outlineMapper;
X    outlineMapper SetInput [outline GetOutput];
vtkActor outlineActor;
X    outlineActor SetMapper outlineMapper;
X    [outlineActor GetProperty] SetColor 0 0 0;
X
$ren1 AddActors outlineActor;
$ren1 AddActors normActor;
$ren1 AddActors tpd1Actor;
$ren1 AddActors tpd2Actor;
$ren1 AddActors tpd3Actor;
$ren1 SetBackground 1 1 1;
$renWin SetSize 500 500;
$iren Initialize;
X
set cam1 [$ren1 GetActiveCamera];
$cam1 SetClippingRange 3.95297 50;
$cam1 SetFocalPoint 8.88908 0.595038 29.3342;
$cam1 SetPosition -12.3332 31.7479 41.2387;
$cam1 CalcViewPlaneNormal;
$cam1 SetViewUp 0.060772 -0.319905 0.945498;
X
# render the image
#
$iren SetUserMethod {wm deiconify .vtkInteract};
$renWin Render;
X
# prevent the tk window from showing up then start the event loop
wm withdraw .
SHAR_EOF
  $shar_touch -am 0415173897 'ex9_4d.tcl' &&
  chmod 0640 'ex9_4d.tcl' ||
  $echo 'restore of' 'ex9_4d.tcl' 'failed'
  if ( md5sum --help 2>&1 | grep 'sage: md5sum \[' ) >/dev/null 2>&1 \
  && ( md5sum --version 2>&1 | grep -v 'textutils 1.12' ) >/dev/null; then
    md5sum -c << SHAR_EOF >/dev/null 2>&1 \
    || $echo 'ex9_4d.tcl:' 'MD5 check failed'
1d1808883b3117aa135e587ef169c496  ex9_4d.tcl
SHAR_EOF
  else
    shar_count="`LC_ALL= LC_CTYPE= LANG= wc -c < 'ex9_4d.tcl'`"
    test 3740 -eq "$shar_count" ||
    $echo 'ex9_4d.tcl:' 'original size' '3740,' 'current size' "$shar_count!"
  fi
fi
# ============= extraAnimate6_3a.tcl ==============
if test -f 'extraAnimate6_3a.tcl' && test "$first_param" != -c; then
  $echo 'x -' SKIPPING 'extraAnimate6_3a.tcl' '(file already exists)'
else
  $echo 'x -' extracting 'extraAnimate6_3a.tcl' '(text)'
  sed 's/^X//' << 'SHAR_EOF' > 'extraAnimate6_3a.tcl' &&
#================================================
# Author: Elaine D'Souza
# HW#3	Date: Apr14,'97
# Using vtkDecimate on the Quadric function
# Animation sequence
#================================================
X
source vtkint.tcl
X
vtkRenderMaster rm;
set renWin [rm MakeRenderWindow];
set ren1 [$renWin MakeRenderer];
set iren [$renWin MakeRenderWindowInteractor];
X
$ren1 SetBackground 1 1 1;
X
vtkQuadric quad;
X  quad SetCoefficients 0.5 1 .2 0 .1 0 0 .2 0 0;
vtkSampleFunction sample;
X  sample SetSampleDimensions 30 30 30;
X  sample SetImplicitFunction quad;
X
vtkContourFilter cont1;
X	cont1 SetInput [sample GetOutput];
X	cont1 GenerateValues 3 0.0 0.4;  
vtkDecimate deci1;
X	deci1 SetInput [cont1 GetOutput];
X	deci1 SetMaximumIterations 10
X	deci1 SetTargetReduction 0.6
X	deci1 SetMaximumFeatureAngle 30
X	deci1 SetInitialError 0.0
X	deci1 SetErrorIncrement 0.01
X	deci1 SetMaximumError 0.3
vtkPolyMapper dMapper1;
X	dMapper1 SetInput [deci1 GetOutput];
X	dMapper1 SetScalarRange 0.0 3.0;
vtkActor dActor1;  
X	dActor1 SetMapper dMapper1;
X
vtkContourFilter cont2;
X	cont2 SetInput [sample GetOutput];
X	cont2 GenerateValues 3 0.2 0.6;  
vtkDecimate deci2;
X	deci2 SetInput [cont2 GetOutput];
X	deci2 SetMaximumIterations 10
X	deci2 SetTargetReduction 0.6
X	deci2 SetMaximumFeatureAngle 30
X	deci2 SetInitialError 0.0
X	deci2 SetErrorIncrement 0.01
X	deci2 SetMaximumError 0.3
vtkPolyMapper dMapper2;
X	dMapper2 SetInput [deci2 GetOutput];
X	dMapper2 SetScalarRange 0.0 3.0;
vtkActor dActor2;  
X	dActor2 SetMapper dMapper2;
X
vtkContourFilter cont3;
X	cont3 SetInput [sample GetOutput];
X	cont3 GenerateValues 3 0.4 0.8;  
vtkDecimate deci;
X	deci SetInput [cont3 GetOutput];
X	deci SetMaximumIterations 10
X	deci SetTargetReduction 0.6
X	deci SetMaximumFeatureAngle 30
X	deci SetInitialError 0.0
X	deci SetErrorIncrement 0.01
X	deci SetMaximumError 0.3
vtkPolyMapper dMapper3;
X	dMapper3 SetInput [deci GetOutput];
X	dMapper3 SetScalarRange 0.0 3.0;
vtkActor dActor3;  
X	dActor3 SetMapper dMapper3;
X	
$ren1 AddActors dActor1;
$ren1 AddActors dActor2;
$ren1 AddActors dActor3;
X
# enable user interface interactor
$iren SetUserMethod {wm deiconify .vtkInteract};
$iren Initialize;
X
for {set count 1} {$count < 4} {} {
X	incr count;
X
X	puts "Displaying Middle"
X	dActor1 VisibilityOff;    
X	dActor2 VisibilityOn;    
X	dActor3 VisibilityOff;    
X  $renWin Render  
X
X	puts "Displaying Innermost"
X	dActor1 VisibilityOn;    
X	dActor2 VisibilityOff;    
X	dActor3 VisibilityOff;    
X  $renWin Render
X
X	puts "Displaying Middle"
X	dActor1 VisibilityOff;    
X	dActor2 VisibilityOn;    
X	dActor3 VisibilityOff;    
X  $renWin Render  
X  
X	puts "Displaying Outermost"
X	dActor1 VisibilityOff;    
X	dActor2 VisibilityOff;    
X	dActor3 VisibilityOn;    
X  $renWin Render
X
X  
}
X    puts "YEAH! success"  
X
X	
# prevent the tk window from showing up then start the event loop
wm withdraw .
X
SHAR_EOF
  $shar_touch -am 0415175197 'extraAnimate6_3a.tcl' &&
  chmod 0700 'extraAnimate6_3a.tcl' ||
  $echo 'restore of' 'extraAnimate6_3a.tcl' 'failed'
  if ( md5sum --help 2>&1 | grep 'sage: md5sum \[' ) >/dev/null 2>&1 \
  && ( md5sum --version 2>&1 | grep -v 'textutils 1.12' ) >/dev/null; then
    md5sum -c << SHAR_EOF >/dev/null 2>&1 \
    || $echo 'extraAnimate6_3a.tcl:' 'MD5 check failed'
65f57ea2da5a53aa498259212650f8b1  extraAnimate6_3a.tcl
SHAR_EOF
  else
    shar_count="`LC_ALL= LC_CTYPE= LANG= wc -c < 'extraAnimate6_3a.tcl'`"
    test 2839 -eq "$shar_count" ||
    $echo 'extraAnimate6_3a.tcl:' 'original size' '2839,' 'current size' "$shar_count!"
  fi
fi
# ============= extraAnimate6_3b.tcl ==============
if test -f 'extraAnimate6_3b.tcl' && test "$first_param" != -c; then
  $echo 'x -' SKIPPING 'extraAnimate6_3b.tcl' '(file already exists)'
else
  $echo 'x -' extracting 'extraAnimate6_3b.tcl' '(text)'
  sed 's/^X//' << 'SHAR_EOF' > 'extraAnimate6_3b.tcl' &&
#================================================
# Author: Elaine D'Souza
# HW#3	Date: Apr14,'97
# Using vtkDecimate on the MRIHead
# Animation sequence
#================================================
X
# If you are using Window95 and vtk 1.3 uncomment the line below
# load vtktcl;
X
# get the interactor ui
source vtkint.tcl
X
# First create the render master
vtkRenderMaster rm;
X
# Now create the RenderWindow, Renderer
#
set renWin [rm MakeRenderWindow];
set ren1   [$renWin MakeRenderer];
set iren   [$renWin MakeRenderWindowInteractor];
X
# Load up the data
vtkStructuredPointsReader vol;
X    vol SetFilename "MRIdata.vtk"
X
vtkTransform trans;
X    trans RotateX 180;
X 
vtkMarchingCubes cont1;
X  cont1 SetInput [vol GetOutput];
X  cont1 SetValue 0 300.0;
vtkTransformPolyFilter tpc1
X    tpc1 SetInput [cont1 GetOutput];
X    tpc1 SetTransform trans;
vtkDecimate deci1;
X	deci1 SetInput [tpc1 GetOutput];
X	deci1 SetMaximumIterations 10
X	deci1 SetTargetReduction 0.9
X	deci1 SetMaximumFeatureAngle 30
X	deci1 SetInitialError 0.0
X	deci1 SetErrorIncrement 0.01
X	deci1 SetMaximumError 0.1
vtkPolyMapper volMapper1;
X  volMapper1 SetInput [deci1 GetOutput];
X  volMapper1 ScalarsVisibleOff;
vtkActor volActor1;
X  volActor1 SetMapper volMapper1;
X
vtkMarchingCubes cont2;
X  cont2 SetInput [vol GetOutput];
X  cont2 SetValue 0 400.0;
vtkTransformPolyFilter tpc2
X    tpc2 SetInput [cont2 GetOutput];
X    tpc2 SetTransform trans;
vtkDecimate deci2;
X	deci2 SetInput [tpc2 GetOutput];
X	deci2 SetMaximumIterations 10
X	deci2 SetTargetReduction 1.0
X	deci2 SetMaximumFeatureAngle 30
X	deci2 SetInitialError 0.0
X	deci2 SetErrorIncrement 0.01
X	deci2 SetMaximumError 0.75
vtkPolyMapper volMapper2;
X  volMapper2 SetInput [deci2 GetOutput];
X  volMapper2 ScalarsVisibleOff;
vtkActor volActor2;
X  volActor2 SetMapper volMapper2;
X
vtkMarchingCubes cont3;
X  cont3 SetInput [vol GetOutput];
X  cont3 SetValue 0 500.0;
vtkTransformPolyFilter tpc3
X    tpc3 SetInput [cont3 GetOutput];
X    tpc3 SetTransform trans;
vtkDecimate deci3;
X	deci3 SetInput [tpc3 GetOutput];
X	deci3 SetMaximumIterations 10
X	deci3 SetTargetReduction 1.0
X	deci3 SetMaximumFeatureAngle 30
X	deci3 SetInitialError 0.0
X	deci3 SetErrorIncrement 0.01
X	deci3 SetMaximumError 0.75
vtkPolyMapper volMapper3;
X  volMapper3 SetInput [deci3 GetOutput];
X  volMapper3 ScalarsVisibleOff;
vtkActor volActor3;
X  volActor3 SetMapper volMapper3;
X
vtkOutlineFilter outLine;
X  outLine SetInput [vol GetOutput];
vtkTransformPolyFilter tpout
X    tpout SetInput [outLine GetOutput];
X    tpout SetTransform trans;
vtkPolyMapper outMapper;
X  outMapper SetInput [tpout GetOutput];
vtkActor outActor;
X  outActor SetMapper outMapper;
X
# Add the actors to the renderer, set the background and size
#
$ren1 AddActors outActor;
$ren1 AddActors volActor1;
$ren1 AddActors volActor2;
$ren1 AddActors volActor3;
X
$ren1 SetBackground 0 0 0;
$renWin SetSize 500 400;
$iren Initialize;
X
for {set count 1} {$count < 4} {} {
X	incr count;
X
X	puts "Displaying Innermost"
X	volActor1 VisibilityOn;    
X	volActor2 VisibilityOff;    
X	volActor3 VisibilityOff;    
X  $renWin Render
X
X	puts "Displaying Middle"
X	volActor1 VisibilityOff;    
X	volActor2 VisibilityOn;    
X	volActor3 VisibilityOff;    
X  $renWin Render  
X  
X	puts "Displaying Outermost"
X	volActor1 VisibilityOff;    
X	volActor2 VisibilityOff;    
X	volActor3 VisibilityOn;    
X  $renWin Render
X
X	puts "Displaying Middle"
X	volActor1 VisibilityOff;    
X	volActor2 VisibilityOn;    
X	volActor3 VisibilityOff;    
X  $renWin Render  
X  
}
X	puts "YEAH!"
X
# render the image
#
$iren SetUserMethod {wm deiconify .vtkInteract};
$renWin Render;
X
# prevent the tk window from showing up then start the event loop
wm withdraw .
X
SHAR_EOF
  $shar_touch -am 0415172997 'extraAnimate6_3b.tcl' &&
  chmod 0600 'extraAnimate6_3b.tcl' ||
  $echo 'restore of' 'extraAnimate6_3b.tcl' 'failed'
  if ( md5sum --help 2>&1 | grep 'sage: md5sum \[' ) >/dev/null 2>&1 \
  && ( md5sum --version 2>&1 | grep -v 'textutils 1.12' ) >/dev/null; then
    md5sum -c << SHAR_EOF >/dev/null 2>&1 \
    || $echo 'extraAnimate6_3b.tcl:' 'MD5 check failed'
b72b922b8b178780552119dbbffd2e76  extraAnimate6_3b.tcl
SHAR_EOF
  else
    shar_count="`LC_ALL= LC_CTYPE= LANG= wc -c < 'extraAnimate6_3b.tcl'`"
    test 3667 -eq "$shar_count" ||
    $echo 'extraAnimate6_3b.tcl:' 'original size' '3667,' 'current size' "$shar_count!"
  fi
fi
# ============= extraStatic6_3a.tcl ==============
if test -f 'extraStatic6_3a.tcl' && test "$first_param" != -c; then
  $echo 'x -' SKIPPING 'extraStatic6_3a.tcl' '(file already exists)'
else
  $echo 'x -' extracting 'extraStatic6_3a.tcl' '(text)'
  sed 's/^X//' << 'SHAR_EOF' > 'extraStatic6_3a.tcl' &&
#================================================
# Author: Elaine D'Souza
# HW#3	Date: Apr14,'97
# Using vtkDecimate on the Quadric function
#================================================
X
source vtkint.tcl
X
vtkRenderMaster rm;
set renWin [rm MakeRenderWindow];
set ren1 [$renWin MakeRenderer];
set iren [$renWin MakeRenderWindowInteractor];
X
$ren1 SetBackground 1 1 1;
X
vtkQuadric quad;
X  quad SetCoefficients 0.5 1 .2 0 .1 0 0 .2 0 0;
vtkSampleFunction sample;
X  sample SetSampleDimensions 30 30 30;
X  sample SetImplicitFunction quad;
X
vtkContourFilter cont1;
X	cont1 SetInput [sample GetOutput];
X	cont1 GenerateValues 5 0.0 0.4;  
vtkDecimate deci1;
X	deci1 SetInput [cont1 GetOutput];
X	deci1 SetMaximumIterations 10
X	deci1 SetTargetReduction 0.6
X	deci1 SetMaximumFeatureAngle 30
X	deci1 SetInitialError 0.0
X	deci1 SetErrorIncrement 0.01
X	deci1 SetMaximumError 0.3
vtkPolyMapper dMapper1;
X	dMapper1 SetInput [deci1 GetOutput];
X	dMapper1 SetScalarRange 0.0 3.0;
vtkActor dActor1;  
X	dActor1 SetMapper dMapper1;
X
$ren1 AddActors dActor1;
X
# enable user interface interactor
$iren SetUserMethod {wm deiconify .vtkInteract};
$iren Initialize;
X	
# prevent the tk window from showing up then start the event loop
wm withdraw .
X
SHAR_EOF
  $shar_touch -am 0415175197 'extraStatic6_3a.tcl' &&
  chmod 0700 'extraStatic6_3a.tcl' ||
  $echo 'restore of' 'extraStatic6_3a.tcl' 'failed'
  if ( md5sum --help 2>&1 | grep 'sage: md5sum \[' ) >/dev/null 2>&1 \
  && ( md5sum --version 2>&1 | grep -v 'textutils 1.12' ) >/dev/null; then
    md5sum -c << SHAR_EOF >/dev/null 2>&1 \
    || $echo 'extraStatic6_3a.tcl:' 'MD5 check failed'
8eaa47a57ad6046889ed38ad2f5a6639  extraStatic6_3a.tcl
SHAR_EOF
  else
    shar_count="`LC_ALL= LC_CTYPE= LANG= wc -c < 'extraStatic6_3a.tcl'`"
    test 1226 -eq "$shar_count" ||
    $echo 'extraStatic6_3a.tcl:' 'original size' '1226,' 'current size' "$shar_count!"
  fi
fi
# ============= extraStatic6_3b.tcl ==============
if test -f 'extraStatic6_3b.tcl' && test "$first_param" != -c; then
  $echo 'x -' SKIPPING 'extraStatic6_3b.tcl' '(file already exists)'
else
  $echo 'x -' extracting 'extraStatic6_3b.tcl' '(text)'
  sed 's/^X//' << 'SHAR_EOF' > 'extraStatic6_3b.tcl' &&
#================================================
# Author: Elaine D'Souza
# HW#3	Date: Apr14,'97
# Using vtkDecimate on the MRIHead
#================================================
X
# If you are using Window95 and vtk 1.3 uncomment the line below
# load vtktcl;
X
# get the interactor ui
source vtkint.tcl
X
# First create the render master
vtkRenderMaster rm;
X
# Now create the RenderWindow, Renderer
#
set renWin [rm MakeRenderWindow];
set ren1   [$renWin MakeRenderer];
set iren   [$renWin MakeRenderWindowInteractor];
X
# Load up the data
vtkStructuredPointsReader vol;
X    vol SetFilename "MRIdata.vtk"
X
vtkTransform trans;
X    trans RotateX 180;
X 
vtkMarchingCubes cont1;
X  cont1 SetInput [vol GetOutput];
X  cont1 SetValue 0 500.0;
vtkTransformPolyFilter tpc1
X    tpc1 SetInput [cont1 GetOutput];
X    tpc1 SetTransform trans;
vtkDecimate deci1;
X	deci1 SetInput [tpc1 GetOutput];
X	deci1 SetMaximumIterations 10
X	deci1 SetTargetReduction 0.9
X	deci1 SetMaximumFeatureAngle 30
X	deci1 SetInitialError 0.0
X	deci1 SetErrorIncrement 0.01
X	deci1 SetMaximumError 0.1
vtkPolyMapper volMapper1;
X  volMapper1 SetInput [deci1 GetOutput];
X  volMapper1 ScalarsVisibleOff;
vtkActor volActor1;
X  volActor1 SetMapper volMapper1;
X
vtkOutlineFilter outLine;
X  outLine SetInput [vol GetOutput];
vtkTransformPolyFilter tpout
X    tpout SetInput [outLine GetOutput];
X    tpout SetTransform trans;
vtkPolyMapper outMapper;
X  outMapper SetInput [tpout GetOutput];
vtkActor outActor;
X  outActor SetMapper outMapper;
X
# Add the actors to the renderer, set the background and size
#
$ren1 AddActors outActor;
$ren1 AddActors volActor1;
X
$ren1 SetBackground 0 0 0;
$renWin SetSize 500 400;
$iren Initialize;
X
# render the image
#
$iren SetUserMethod {wm deiconify .vtkInteract};
$renWin Render;
X
# prevent the tk window from showing up then start the event loop
wm withdraw .
X
SHAR_EOF
  $shar_touch -am 0415174097 'extraStatic6_3b.tcl' &&
  chmod 0600 'extraStatic6_3b.tcl' ||
  $echo 'restore of' 'extraStatic6_3b.tcl' 'failed'
  if ( md5sum --help 2>&1 | grep 'sage: md5sum \[' ) >/dev/null 2>&1 \
  && ( md5sum --version 2>&1 | grep -v 'textutils 1.12' ) >/dev/null; then
    md5sum -c << SHAR_EOF >/dev/null 2>&1 \
    || $echo 'extraStatic6_3b.tcl:' 'MD5 check failed'
91d2f41c1bb721e7098f5dee8e5d2108  extraStatic6_3b.tcl
SHAR_EOF
  else
    shar_count="`LC_ALL= LC_CTYPE= LANG= wc -c < 'extraStatic6_3b.tcl'`"
    test 1851 -eq "$shar_count" ||
    $echo 'extraStatic6_3b.tcl:' 'original size' '1851,' 'current size' "$shar_count!"
  fi
fi
rm -fr _sh40764
exit 0

From ???@??? Wed Apr 16 07:18:20 1997
Received: from magritte.its.rpi.edu (younh@magritte.its.rpi.edu [128.113.113.19])
	by mail1.its.rpi.edu (8.8.5/8.8.5) with ESMTP id SAA32200
	for <citrit@rpi.edu>; Tue, 15 Apr 1997 18:36:56 -0400
From: Hyung-Jun Brutus Youn <younh>
Received: (younh@localhost) by magritte.its.rpi.edu (8.6.9/8.6.4) id SAA22918 for citrit@rpi.edu; Tue, 15 Apr 1997 18:36:55 -0400
Date: Tue, 15 Apr 1997 18:36:55 -0400
Message-Id: <199704152236.SAA22918@magritte.its.rpi.edu>
To: citrit@rpi.edu
Subject: Homework 3
X-UIDL: 105ce74fefd7a8206a9e0945a5f59281

#!/bin/sh
# This is a shell archive (produced by GNU sharutils 4.2).
# To extract the files from this archive, save it to some FILE, remove
# everything before the `!/bin/sh' line above, then type `sh FILE'.
#
# Made on 1997-04-15 18:36 EDT by <younh@magritte>.
# Source directory was `/afs/rpi.edu/home/29/younh/Visualization/hw3'.
#
# Existing files will *not* be overwritten unless `-c' is specified.
#
# This shar contains:
# length mode       name
# ------ ---------- ------------------------------------------
#   3499 -rwxr--r-- hedgehog.tcl
#   2234 -rwxr--r-- mrianim.tcl
#   2002 -rwxr--r-- quadanim.tcl
#   2603 -rwxr--r-- strmline.tcl
#   3930 -rwxr--r-- warpvec.tcl
#
save_IFS="${IFS}"
IFS="${IFS}:"
gettext_dir=FAILED
locale_dir=FAILED
first_param="$1"
for dir in $PATH
do
  if test "$gettext_dir" = FAILED && test -f $dir/gettext \
     && ($dir/gettext --version >/dev/null 2>&1)
  then
    set `$dir/gettext --version 2>&1`
    if test "$3" = GNU
    then
      gettext_dir=$dir
    fi
  fi
  if test "$locale_dir" = FAILED && test -f $dir/shar \
     && ($dir/shar --print-text-domain-dir >/dev/null 2>&1)
  then
    locale_dir=`$dir/shar --print-text-domain-dir`
  fi
done
IFS="$save_IFS"
if test "$locale_dir" = FAILED || test "$gettext_dir" = FAILED
then
  echo=echo
else
  TEXTDOMAINDIR=$locale_dir
  export TEXTDOMAINDIR
  TEXTDOMAIN=sharutils
  export TEXTDOMAIN
  echo="$gettext_dir/gettext -s"
fi
touch -am 1231235999 $$.touch >/dev/null 2>&1
if test ! -f 1231235999 && test -f $$.touch; then
  shar_touch=touch
else
  shar_touch=:
  echo
  $echo 'WARNING: not restoring timestamps.  Consider getting and'
  $echo "installing GNU \`touch', distributed in GNU File Utilities..."
  echo
fi
rm -f 1231235999 $$.touch
#
if mkdir _sh170450; then
  $echo 'x -' 'creating lock directory'
else
  $echo 'failed to create lock directory'
  exit 1
fi
# ============= hedgehog.tcl ==============
if test -f 'hedgehog.tcl' && test "$first_param" != -c; then
  $echo 'x -' SKIPPING 'hedgehog.tcl' '(file already exists)'
else
  $echo 'x -' extracting 'hedgehog.tcl' '(binary)'
  sed 's/^X//' << 'SHAR_EOF' | uudecode &&
begin 600 hedgehog.tcl
M(R!"<G5T=7,@66]U;@T*(R!'<F%P:&EC<R!A;F0@5FES=6%L:7IA=&EO;@T*
M(R!(5R,S#0HC($AE9&=E:&]G($9I;'1E<@T*#0IL;V%D('9T:W1C;#L-"B,@
M9V5T('1H92!I;G1E<F%C=&]R('5I#0IS;W5R8V4@=G1K26YT+G1C;`T*#0HC
M(&-R96%T92!P;&%N97,-"B,@1FER<W0@8W)E871E('1H92!R96YD97(@;6%S
M=&5R#0IV=&M296YD97)-87-T97(@<FT[#0H-"B,@3F]W(&-R96%T92!T:&4@
M4F5N9&5R5VEN9&]W+"!296YD97)E<B!A;F0@8F]T:"!!8W1O<G,-"B,-"G-E
M="!R96Y7:6X@6W)M($UA:V5296YD97)7:6YD;W==.PT*<V5T(')E;C$@("!;
M)')E;E=I;B!-86ME4F5N9&5R97)=.PT*<V5T(&ER96X@6R1R96Y7:6X@36%K
M95)E;F1E<E=I;F1O=TEN=&5R86-T;W)=.PT*#0HC(&-R96%T92!P:7!E;&EN
M90T*(PT*=G1K4$Q/5#-$4F5A9&5R('!L,V0[#0H@("`@<&PS9"!3971865I&
M:6QE;F%M92`B8V]M8GAY>BYB:6XB#0H@("`@<&PS9"!397111FEL96YA;64@
M(F-O;6)Q+F)I;B(-"B`@("!P;#-D(%-E=%-C86QA<D9U;F-T:6]N3G5M8F5R
M(#$P,#L-"B`@("!P;#-D(%-E=%9E8W1O<D9U;F-T:6]N3G5M8F5R(#(P,CL-
M"B`@("!P;#-D(%5P9&%T93L-"@T*=G1K4&QA;F53;W5R8V4@<&QA;F4[#0H@
M("`@<&QA;F4@4V5T4F5S;VQU=&EO;B`U,"`U,#L-"G9T:U1R86YS9F]R;2!T
M<F%N<U`Q.PT*("`@('1R86YS4#$@5')A;G-L871E(#,N-R`P+C`@,C@N,S<[
M#0H@("`@=')A;G-0,2!38V%L92`U(#4@-3L-"B`@("!T<F%N<U`Q(%)O=&%T
M95D@.3`[#0IV=&M4<F%N<V9O<FU0;VQY1FEL=&5R('1P9#$-"B`@("!T<&0Q
M(%-E=$EN<'5T(%MP;&%N92!'971/=71P=71=.PT*("`@('1P9#$@4V5T5')A
M;G-F;W)M('1R86YS4#$[#0IV=&M/=71L:6YE1FEL=&5R(&]U=%1P9#$[#0H@
M("`@;W5T5'!D,2!3971);G!U="!;='!D,2!'971/=71P=71=.PT*=G1K4&]L
M>4UA<'!E<B!M87!4<&0Q.PT*("`@(&UA<%1P9#$@4V5T26YP=70@6V]U=%1P
M9#$@1V5T3W5T<'5T73L-"G9T:T%C=&]R('1P9#%!8W1O<CL-"B`@("!T<&0Q
M06-T;W(@4V5T36%P<&5R(&UA<%1P9#$[#0H@("`@6W1P9#%!8W1O<B!'9710
M<F]P97)T>5T@4V5T0V]L;W(@,"`P(#`[#0H-"G9T:U1R86YS9F]R;2!T<F%N
M<U`R.PT*("`@('1R86YS4#(@5')A;G-L871E(#DN,B`P+C`@,S$N,C`[#0H@
M("`@=')A;G-0,B!38V%L92`U(#4@-3L-"B`@("!T<F%N<U`R(%)O=&%T95D@
M.3`[#0IV=&M4<F%N<V9O<FU0;VQY1FEL=&5R('1P9#(-"B`@("!T<&0R(%-E
M=$EN<'5T(%MP;&%N92!'971/=71P=71=.PT*("`@('1P9#(@4V5T5')A;G-F
M;W)M('1R86YS4#([#0IV=&M/=71L:6YE1FEL=&5R(&]U=%1P9#([#0H@("`@
M;W5T5'!D,B!3971);G!U="!;='!D,B!'971/=71P=71=.PT*=G1K4&]L>4UA
M<'!E<B!M87!4<&0R.PT*("`@(&UA<%1P9#(@4V5T26YP=70@6V]U=%1P9#(@
M1V5T3W5T<'5T73L-"G9T:T%C=&]R('1P9#)!8W1O<CL-"B`@("!T<&0R06-T
M;W(@4V5T36%P<&5R(&UA<%1P9#([#0H@("`@6W1P9#)!8W1O<B!'9710<F]P
M97)T>5T@4V5T0V]L;W(@,"`P(#`[#0H-"G9T:U1R86YS9F]R;2!T<F%N<U`S
M.PT*("`@('1R86YS4#,@5')A;G-L871E(#$S+C(W(#`N,"`S,RXS,#L-"B`@
M("!T<F%N<U`S(%-C86QE(#4@-2`U.PT*("`@('1R86YS4#,@4F]T871E62`Y
M,#L-"G9T:U1R86YS9F]R;5!O;'E&:6QT97(@='!D,PT*("`@('1P9#,@4V5T
M26YP=70@6W!L86YE($=E=$]U='!U=%T[#0H@("`@='!D,R!39714<F%N<V9O
M<FT@=')A;G-0,SL-"G9T:T]U=&QI;F5&:6QT97(@;W5T5'!D,SL-"B`@("!O
M=714<&0S(%-E=$EN<'5T(%MT<&0S($=E=$]U='!U=%T[#0IV=&M0;VQY36%P
M<&5R(&UA<%1P9#,[#0H@("`@;6%P5'!D,R!3971);G!U="!;;W5T5'!D,R!'
M971/=71P=71=.PT*=G1K06-T;W(@='!D,T%C=&]R.PT*("`@('1P9#-!8W1O
M<B!3971-87!P97(@;6%P5'!D,SL-"B`@("!;='!D,T%C=&]R($=E=%!R;W!E
M<G1Y72!3971#;VQO<B`P(#`@,#L-"@T*=G1K07!P96YD4&]L>41A=&$@87!P
M96YD1CL-"B`@("!A<'!E;F1&($%D9$EN<'5T(%MT<&0Q($=E=$]U='!U=%T[
M#0H@("`@87!P96YD1B!!9&1);G!U="!;='!D,B!'971/=71P=71=.PT*("`@
M(&%P<&5N9$8@061D26YP=70@6W1P9#,@1V5T3W5T<'5T73L-"@T*=G1K4')O
M8F5&:6QT97(@<')O8F4[#0H@("`@<')O8F4@4V5T26YP=70@6V%P<&5N9$8@
M1V5T3W5T<'5T73L-"B`@("!P<F]B92!39713;W5R8V4@6W!L,V0@1V5T3W5T
M<'5T73L-"@T*=G1K2&5D9V5(;V<@:&5D9V5H;V<[#0H@("`@:&5D9V5H;V<@
M4V5T26YP=70@6W!R;V)E($=E=$]U='!U=%T[#0H@("`@:&5D9V5H;V<@4V5T
M4V-A;&5&86-T;W(@,"XP,3L-"@T*=G1K4&]L>4UA<'!E<B!H961G96AO9TUA
M<'!E<CL-"B`@("!H961G96AO9TUA<'!E<B!3971);G!U="!;:&5D9V5H;V<@
M1V5T3W5T<'5T73L-"B`@("!E=F%L(&AE9&=E:&]G36%P<&5R(%-E=%-C86QA
M<E)A;F=E(%M;<&PS9"!'971/=71P=71=($=E=%-C86QA<E)A;F=E73L-"G9T
M:T%C=&]R('!L86YE06-T;W([#0H@("`@<&QA;F5!8W1O<B!3971-87!P97(@
M:&5D9V5H;V=-87!P97([#0H-"G9T:U-T<G5C='5R961'<FED3W5T;&EN949I
M;'1E<B!O=71L:6YE.PT*("`@(&]U=&QI;F4@4V5T26YP=70@6W!L,V0@1V5T
M3W5T<'5T73L-"G9T:U!O;'E-87!P97(@;W5T;&EN94UA<'!E<CL-"B`@("!O
M=71L:6YE36%P<&5R(%-E=$EN<'5T(%MO=71L:6YE($=E=$]U='!U=%T[#0IV
M=&M!8W1O<B!O=71L:6YE06-T;W([#0H@("`@;W5T;&EN94%C=&]R(%-E=$UA
M<'!E<B!O=71L:6YE36%P<&5R.PT*("`@(%MO=71L:6YE06-T;W(@1V5T4')O
M<&5R='E=(%-E=$-O;&]R(#`@,"`P.PT*#0HD<F5N,2!!9&1!8W1O<G,@;W5T
M;&EN94%C=&]R.PT*)')E;C$@061D06-T;W)S('!L86YE06-T;W([#0HD<F5N
M,2!!9&1!8W1O<G,@='!D,4%C=&]R.PT*)')E;C$@061D06-T;W)S('1P9#)!
M8W1O<CL-"B1R96XQ($%D9$%C=&]R<R!T<&0S06-T;W([#0HD<F5N,2!3971"
M86-K9W)O=6YD(#$@,2`Q.PT*)')E;E=I;B!39713:7IE(#4P,"`U,#`[#0HD
M:7)E;B!);FET:6%L:7IE.PT*#0IS970@8V%M,2!;)')E;C$@1V5T06-T:79E
M0V%M97)A73L-"B1C86TQ(%-E=$-L:7!P:6YG4F%N9V4@,RXY-3(Y-R`U,#L-
M"B1C86TQ(%-E=$9O8V%L4&]I;G0@."XX.#DP."`P+C4Y-3`S."`R.2XS,S0R
M.PT*)&-A;3$@4V5T4&]S:71I;VX@+3$R+C,S,S(@,S$N-S0W.2`T,2XR,S@W
M.PT*)&-A;3$@0V%L8U9I97=0;&%N94YO<FUA;#L-"B1C86TQ(%-E=%9I97=5
M<"`P+C`V,#<W,B`M,"XS,3DY,#4@,"XY-#4T.3@[#0H-"B,@<F5N9&5R('1H
M92!I;6%G90T*(PT*)&ER96X@4V5T57-E<DUE=&AO9"![=VT@9&5I8V]N:69Y
M("YV=&M);G1E<F%C='T[#0HD<F5N5VEN(%)E;F1E<CL-"@T*(R!P<F5V96YT
M('1H92!T:R!W:6YD;W<@9G)O;2!S:&]W:6YG('5P('1H96X@<W1A<G0@=&AE
B(&5V96YT(&QO;W`-"G=M('=I=&AD<F%W("X-"@T*#0H-"FX@
`
end
SHAR_EOF
  $shar_touch -am 0415175697 'hedgehog.tcl' &&
  chmod 0744 'hedgehog.tcl' ||
  $echo 'restore of' 'hedgehog.tcl' 'failed'
  if ( md5sum --help 2>&1 | grep 'sage: md5sum \[' ) >/dev/null 2>&1 \
  && ( md5sum --version 2>&1 | grep -v 'textutils 1.12' ) >/dev/null; then
    md5sum -c << SHAR_EOF >/dev/null 2>&1 \
    || $echo 'hedgehog.tcl:' 'MD5 check failed'
7dd2eb6e82647ecd581bf004e07c4a8b  hedgehog.tcl
SHAR_EOF
  else
    shar_count="`LC_ALL= LC_CTYPE= LANG= wc -c < 'hedgehog.tcl'`"
    test 3499 -eq "$shar_count" ||
    $echo 'hedgehog.tcl:' 'original size' '3499,' 'current size' "$shar_count!"
  fi
fi
# ============= mrianim.tcl ==============
if test -f 'mrianim.tcl' && test "$first_param" != -c; then
  $echo 'x -' SKIPPING 'mrianim.tcl' '(file already exists)'
else
  $echo 'x -' extracting 'mrianim.tcl' '(binary)'
  sed 's/^X//' << 'SHAR_EOF' | uudecode &&
begin 600 mrianim.tcl
M(R!"<G5T=7,@66]U;@T*(R!'<F%P:&EC<R!A;F0@5FES=6%L:7IA=&EO;@T*
M(R!(5R,S#0HC($U224AE860@4V-A;B!!;FEM871I;VX-"@T*(R!)9B!Y;W4@
M87)E('5S:6YG(%=I;F1O=SDU(&%N9"!V=&L@,2XS('5N8V]M;65N="!T:&4@
M;&EN92!B96QO=PT*;&]A9"!V=&MT8VP[#0H-"B,@9V5T('1H92!I;G1E<F%C
M=&]R('5I#0IS;W5R8V4@=G1K26YT+G1C;`T*#0HC($9I<G-T(&-R96%T92!T
M:&4@<F5N9&5R(&UA<W1E<@T*=G1K4F5N9&5R36%S=&5R(')M.PT*#0HC($YO
M=R!C<F5A=&4@=&AE(%)E;F1E<E=I;F1O=RP@4F5N9&5R97(-"B,-"G-E="!R
M96Y7:6X@6W)M($UA:V5296YD97)7:6YD;W==.PT*<V5T(')E;C$@("!;)')E
M;E=I;B!-86ME4F5N9&5R97)=.PT*<V5T(&ER96X@("!;)')E;E=I;B!-86ME
M4F5N9&5R5VEN9&]W26YT97)A8W1O<ET[#0H-"B,-"B,@3&]A9"!U<"!T:&4@
M9&%T80T*=G1K4W1R=6-T=7)E9%!O:6YT<U)E861E<B!V;VP[#0H@("`@=F]L
M(%-E=$9I;&5N86UE(")-4DED871A+G9T:R(-"B`@("!V;VP@1&5B=6=/;CL-
M"@T*=G1K36%R8VAI;F=#=6)E<R!C;VYT;W5R.PT*("!C;VYT;W5R(%-E=$EN
M<'5T(%MV;VP@1V5T3W5T<'5T73L-"B`@8V]N=&]U<B!3971686QU92`Q(#(P
M,#`N,#L-"@T*=G1K4&]L>4UA<'!E<B!V;VQ-87!P97([#0H@('9O;$UA<'!E
M<B!3971);G!U="!;8V]N=&]U<B!'971/=71P=71=.PT*("!V;VQ-87!P97(@
M4V-A;&%R<U9I<VEB;&5/9F8[#0H-"G9T:T%C=&]R('9O;$%C=&]R.PT*("!V
M;VQ!8W1O<B!3971-87!P97(@=F]L36%P<&5R.PT*#0IV=&M/=71L:6YE1FEL
M=&5R(&]U=$QI;F4[#0H@(&]U=$QI;F4@4V5T26YP=70@6W9O;"!'971/=71P
M=71=.PT*#0IV=&M0;VQY36%P<&5R(&]U=$UA<'!E<CL-"B`@;W5T36%P<&5R
M(%-E=$EN<'5T(%MO=71,:6YE($=E=$]U='!U=%T[#0H-"G9T:T%C=&]R(&]U
M=$%C=&]R.PT*("!O=71!8W1O<B!3971-87!P97(@;W5T36%P<&5R.PT*#0HC
M($%D9"!T:&4@86-T;W)S('1O('1H92!R96YD97)E<BP@<V5T('1H92!B86-K
M9W)O=6YD(&%N9"!S:7IE#0HC#0HD<F5N,2!!9&1!8W1O<G,@;W5T06-T;W([
M#0HD<F5N,2!!9&1!8W1O<G,@=F]L06-T;W([#0HD<F5N,2!3971"86-K9W)O
M=6YD(#`@,"`P.PT*)')E;E=I;B!39713:7IE(#4P,"`T,#`[#0HD:7)E;B!)
M;FET:6%L:7IE.PT*#0HC(')E;F1E<B!T:&4@:6UA9V4-"B,-"B1I<F5N(%-E
M=%5S97)-971H;V0@>W=M(&1E:6-O;FEF>2`N=G1K26YT97)A8W1].PT*)')E
M;E=I;B!296YD97([#0H-"B`@8V]N=&]U<B!3971686QU92`Q(#$Y,#`N,#L-
M"B`@)')E;E=I;B!296YD97([#0H@(&-O;G1O=7(@4V5T5F%L=64@,2`Q.#`P
M+C`[#0H@("1R96Y7:6X@4F5N9&5R.PT*("!C;VYT;W5R(%-E=%9A;'5E(#$@
M,3<P,"XP.PT*("`D<F5N5VEN(%)E;F1E<CL-"B`@8V]N=&]U<B!3971686QU
M92`Q(#$V,#`N,#L-"B`@)')E;E=I;B!296YD97([#0H@(&-O;G1O=7(@4V5T
M5F%L=64@,2`Q-3`P+C`[#0H@("1R96Y7:6X@4F5N9&5R.PT*("!C;VYT;W5R
M(%-E=%9A;'5E(#$@,30P,"XP.PT*("`D<F5N5VEN(%)E;F1E<CL-"B`@8V]N
M=&]U<B!3971686QU92`Q(#$S,#`N,#L-"B`@)')E;E=I;B!296YD97([#0H@
M(&-O;G1O=7(@4V5T5F%L=64@,2`Q,C`P+C`[#0H@("1R96Y7:6X@4F5N9&5R
M.PT*("!C;VYT;W5R(%-E=%9A;'5E(#$@,3$P,"XP.PT*("`D<F5N5VEN(%)E
M;F1E<CL-"B`@8V]N=&]U<B!3971686QU92`Q(#$P,#`N,#L-"B`@)')E;E=I
M;B!296YD97([#0H@(&-O;G1O=7(@4V5T5F%L=64@,2`Y,#`N,#L-"B`@)')E
M;E=I;B!296YD97([#0H@(&-O;G1O=7(@4V5T5F%L=64@,2`X,#`N,#L-"B`@
M)')E;E=I;B!296YD97([#0H@(&-O;G1O=7(@4V5T5F%L=64@,2`W,#`N,#L-
M"B`@)')E;E=I;B!296YD97([#0H@(&-O;G1O=7(@4V5T5F%L=64@,2`V,#`N
M,#L-"B`@)')E;E=I;B!296YD97([#0H@(&-O;G1O=7(@4V5T5F%L=64@,2`U
M,#`N,#L-"B`@)')E;E=I;B!296YD97([#0H@(&-O;G1O=7(@4V5T5F%L=64@
M,2`T,#`N,#L-"B`@)')E;E=I;B!296YD97([#0H@(&-O;G1O=7(@4V5T5F%L
M=64@,2`S,#`N,#L-"B`@)')E;E=I;B!296YD97([#0H@(&-O;G1O=7(@4V5T
M5F%L=64@,2`R,C4N,#L-"B`@)')E;E=I;B!296YD97([#0HC('!R979E;G0@
M=&AE('1K('=I;F1O=R!F<F]M('-H;W=I;F<@=7`@=&AE;B!S=&%R="!T:&4@
=979E;G0@;&]O<`T*=VT@=VET:&1R87<@+@T*#0H@
`
end
SHAR_EOF
  $shar_touch -am 0415182497 'mrianim.tcl' &&
  chmod 0744 'mrianim.tcl' ||
  $echo 'restore of' 'mrianim.tcl' 'failed'
  if ( md5sum --help 2>&1 | grep 'sage: md5sum \[' ) >/dev/null 2>&1 \
  && ( md5sum --version 2>&1 | grep -v 'textutils 1.12' ) >/dev/null; then
    md5sum -c << SHAR_EOF >/dev/null 2>&1 \
    || $echo 'mrianim.tcl:' 'MD5 check failed'
2133d7fe9e37fff80e82c7f17fc7a5b0  mrianim.tcl
SHAR_EOF
  else
    shar_count="`LC_ALL= LC_CTYPE= LANG= wc -c < 'mrianim.tcl'`"
    test 2234 -eq "$shar_count" ||
    $echo 'mrianim.tcl:' 'original size' '2234,' 'current size' "$shar_count!"
  fi
fi
# ============= quadanim.tcl ==============
if test -f 'quadanim.tcl' && test "$first_param" != -c; then
  $echo 'x -' SKIPPING 'quadanim.tcl' '(file already exists)'
else
  $echo 'x -' extracting 'quadanim.tcl' '(binary)'
  sed 's/^X//' << 'SHAR_EOF' | uudecode &&
begin 600 quadanim.tcl
M(R!"<G5T=7,@66]U;@T*(R!'<F%P:&EC<R!A;F0@5FES=6%L:7IA=&EO;@T*
M(R!(5R,S#0HC(%%U861R871I8R!&=6YC=&EO;B!!;FEM871I;VX-"@T*;&]A
M9"!V=&MT8VP[#0H-"B,@9V5T('1H92!I;G1E<F%C=&]R('5I#0IS;W5R8V4@
M=G1K26YT+G1C;`T*#0HC1FER<W0@8W)E871E('1H92!R96YD97)M87-T97(-
M"G9T:U)E;F1E<DUA<W1E<B!R;3L-"@T*(R!C<F5A=&4@82!W:6YD;W<@=&\@
M<F5N9&5R(&EN=&\-"G-E="!R96Y7:6X@6W)M($UA:V5296YD97)7:6YD;W==
M.PT*#0HC(&-R96%T92!A(')E;F1E<F5R#0IS970@<F5N,2!;)')E;E=I;B!-
M86ME4F5N9&5R97)=.PT*#0HC(&EN=&5R86-T:79E<B!R96YD97)E<B!C871C
M:&5S(&UO=7-E(&5V96YT<R`H;W!T:6]N86PI#0IS970@:7)E;B!;)')E;E=I
M;B!-86ME4F5N9&5R5VEN9&]W26YT97)A8W1O<ET[#0H-"B,@475A9')I8R!D
M969I;FET:6]N#0H@('9T:U%U861R:6,@<75A9')I8SL-"B`@("!Q=6%D<FEC
M(%-E=$-O969F:6-I96YT<R`N-2`Q("XR(#`@+C$@,"`P("XR(#`@,#L-"@T*
M("!V=&M386UP;&5&=6YC=&EO;B!S86UP;&4[#0H@("`@<V%M<&QE(%-E=%-A
M;7!L941I;65N<VEO;G,@,S`@,S`@,S`[#0H@("`@<V%M<&QE(%-E=$EM<&QI
M8VET1G5N8W1I;VX@<75A9')I8SL-"B`@("`-"B,@0W)E871E('-U<F9A8V4@
M1BAX+'DL>BD@#0H@('9T:T-O;G1O=7)&:6QT97(@8V]N=&]U<G,[#0H@("`@
M8V]N=&]U<G,@4V5T26YP=70@6W-A;7!L92!'971/=71P=71=.PT*("`@(&-O
M;G1O=7)S($=E;F5R871E5F%L=65S(#$@,"XP(#`N,3L-"@T*("!V=&M0;VQY
M36%P<&5R(&-O;G1-87!P97([#0H@("`@8V]N=$UA<'!E<B!3971);G!U="!;
M8V]N=&]U<G,@1V5T3W5T<'5T73L-"B`@("!C;VYT36%P<&5R(%-E=%-C86QA
M<E)A;F=E(#`N,"`Q+C`[#0H-"B`@=G1K06-T;W(@8V]N=$%C=&]R.PT*("`@
M(&-O;G1!8W1O<B!3971-87!P97(@8V]N=$UA<'!E<CL-"@T*(R!#<F5A=&4@
M;W5T;&EN90T*("!V=&M/=71L:6YE1FEL=&5R(&]U=&QI;F4[#0H@("`@;W5T
M;&EN92!3971);G!U="!;<V%M<&QE($=E=$]U='!U=%T[#0H-"B`@=G1K4&]L
M>4UA<'!E<B!O=71L:6YE36%P<&5R.PT*("`@(&]U=&QI;F5-87!P97(@4V5T
M26YP=70@6V]U=&QI;F4@1V5T3W5T<'5T73L-"@T*("!V=&M!8W1O<B!O=71L
M:6YE06-T;W([#0H@("`@;W5T;&EN94%C=&]R(%-E=$UA<'!E<B!O=71L:6YE
M36%P<&5R.PT*("`@(&5V86P@6V]U=&QI;F5!8W1O<B!'9710<F]P97)T>5T@
M4V5T0V]L;W(@,"`P(#`[#0H-"@T*("`D<F5N,2!3971"86-K9W)O=6YD(#$@
M,2`Q.PT*("`D<F5N,2!!9&1!8W1O<G,@8V]N=$%C=&]R.PT*("`D<F5N,2!!
M9&1!8W1O<G,@;W5T;&EN94%C=&]R.PT*#0HD:7)E;B!);FET:6%L:7IE.PT*
M#0IC;VYT;W5R<R!'96YE<F%T959A;'5E<R`Q(#`N,"`P+C([#0HD<F5N5VEN
M(%)E;F1E<CL-"F-O;G1O=7)S($=E;F5R871E5F%L=65S(#$@,"XP(#`N,SL-
M"B1R96Y7:6X@4F5N9&5R.PT*8V]N=&]U<G,@1V5N97)A=&5686QU97,@,2`P
M+C`@,"XT.PT*)')E;E=I;B!296YD97([#0IC;VYT;W5R<R!'96YE<F%T959A
M;'5E<R`Q(#`N,"`P+C4[#0HD<F5N5VEN(%)E;F1E<CL-"F-O;G1O=7)S($=E
M;F5R871E5F%L=65S(#$@,"XP(#`N-CL-"B1R96Y7:6X@4F5N9&5R.PT*8V]N
M=&]U<G,@1V5N97)A=&5686QU97,@,2`P+C`@,"XW.PT*)')E;E=I;B!296YD
M97([#0IC;VYT;W5R<R!'96YE<F%T959A;'5E<R`Q(#`N,"`P+C@[#0HD<F5N
M5VEN(%)E;F1E<CL-"F-O;G1O=7)S($=E;F5R871E5F%L=65S(#$@,"XP(#`N
M.3L-"B1R96Y7:6X@4F5N9&5R.PT*8V]N=&]U<G,@1V5N97)A=&5686QU97,@
M,2`P+C`@,2XP.PT*)')E;E=I;B!296YD97([#0IC;VYT;W5R<R!'96YE<F%T
M959A;'5E<R`Q(#`N,"`Q+C$[#0HD<F5N5VEN(%)E;F1E<CL-"F-O;G1O=7)S
M($=E;F5R871E5F%L=65S(#$@,"XP(#$N,CL-"B1R96Y7:6X@4F5N9&5R.PT*
6#0H-"G=M('=I=&AD<F%W("X[#0H@(#$N
`
end
SHAR_EOF
  $shar_touch -am 0415175597 'quadanim.tcl' &&
  chmod 0744 'quadanim.tcl' ||
  $echo 'restore of' 'quadanim.tcl' 'failed'
  if ( md5sum --help 2>&1 | grep 'sage: md5sum \[' ) >/dev/null 2>&1 \
  && ( md5sum --version 2>&1 | grep -v 'textutils 1.12' ) >/dev/null; then
    md5sum -c << SHAR_EOF >/dev/null 2>&1 \
    || $echo 'quadanim.tcl:' 'MD5 check failed'
43a6d9466d69da86d6b585ab36bb1d4c  quadanim.tcl
SHAR_EOF
  else
    shar_count="`LC_ALL= LC_CTYPE= LANG= wc -c < 'quadanim.tcl'`"
    test 2002 -eq "$shar_count" ||
    $echo 'quadanim.tcl:' 'original size' '2002,' 'current size' "$shar_count!"
  fi
fi
# ============= strmline.tcl ==============
if test -f 'strmline.tcl' && test "$first_param" != -c; then
  $echo 'x -' SKIPPING 'strmline.tcl' '(file already exists)'
else
  $echo 'x -' extracting 'strmline.tcl' '(binary)'
  sed 's/^X//' << 'SHAR_EOF' | uudecode &&
begin 600 strmline.tcl
M(R!"<G5T=7,@66]U;@T*(R!'<F%P:&EC<R!A;F0@5FES=6%L:7IA=&EO;@T*
M(R!(5R,S#0HC(%-T<F5A;6QI;F4@1FEL=&5R#0H-"FQO860@=G1K=&-L.PT*
M(R!G970@=&AE(&EN=&5R86-T;W(@=6D-"G-O=7)C92!V=&M);G0N=&-L#0H-
M"B,@8W)E871E('!L86YE<PT*(R!&:7)S="!C<F5A=&4@=&AE(')E;F1E<B!M
M87-T97(-"G9T:U)E;F1E<DUA<W1E<B!R;3L-"@T*(R!.;W<@8W)E871E('1H
M92!296YD97)7:6YD;W<L(%)E;F1E<F5R(&%N9"!B;W1H($%C=&]R<PT*(PT*
M<V5T(')E;E=I;B!;<FT@36%K95)E;F1E<E=I;F1O=UT[#0IS970@<F5N,2`@
M(%LD<F5N5VEN($UA:V5296YD97)E<ET[#0IS970@:7)E;B!;)')E;E=I;B!-
M86ME4F5N9&5R5VEN9&]W26YT97)A8W1O<ET[#0H-"B,@8W)E871E('!I<&5L
M:6YE#0HC#0IV=&M03$]4,T1296%D97(@<&PS9#L-"B`@("!P;#-D(%-E=%A9
M6D9I;&5N86UE(")C;VUB>'EZ+F)I;B(-"B`@("!P;#-D(%-E=%%&:6QE;F%M
M92`B8V]M8G$N8FEN(@T*("`@('!L,V0@4V5T4V-A;&%R1G5N8W1I;VY.=6UB
M97(@,3`P.PT*("`@('!L,V0@4V5T5F5C=&]R1G5N8W1I;VY.=6UB97(@,C`R
M.PT*("`@('!L,V0@57!D871E.PT*#0IV=&M0;VEN=%-O=7)C92!S965D<SL-
M"B`@("!S965D<R!39712861I=7,@,"XP-S4[(`T*("`@(&5V86P@<V5E9',@
M4V5T0V5N=&5R(#(N-2`P+C`@,S`N,#L-"B`@("!S965D<R!3971.=6UB97)/
M9E!O:6YT<R`R-3L@("`@("`@("`@#0H-"B-V=&M0<F]B949I;'1E<B!P<F]B
M93L-"B,@("`@<')O8F4@4V5T26YP=70@6W-E961S($=E=$]U='!U=%T[#0HC
M("`@('!R;V)E(%-E=%-O=7)C92!;<&PS9"!'971/=71P=71=.PT*#0HC=G1K
M4W1R96%M3&EN92!C;VYT;W5R.PT*(R`@("!C;VYT;W5R(%-E=$EN<'5T(%MP
M;#-D($=E=$]U='!U=%T[#0HC("`@(&-O;G1O=7(@4V5T4V]U<F-E(%MS965D
M<R!'971/=71P=71=.PT*(R`@("!C;VYT;W5R(%-E=$UA>&EM=6U0<F]P86=A
M=&EO;E1I;64@-3`P.PT*(R`@("!C;VYT;W5R(%-E=%-T97!,96YG=&@@,"XU
M.PT*#0HC=G1K4&]L>4UA<'!E<B!C;VYT;W5R36%P<&5R.PT*(R`@("!C;VYT
M;W5R36%P<&5R(%-E=$EN<'5T(%MC;VYT;W5R($=E=$]U='!U=%T[#0HC("`@
M(&5V86P@8V]N=&]U<DUA<'!E<B!397138V%L87)286YG92!;6W!L,V0@1V5T
M3W5T<'5T72!'97138V%L87)286YG95T[#0H-"B-V=&M!8W1O<B!P;&%N94%C
M=&]R.PT*(R`@("!P;&%N94%C=&]R(%-E=$UA<'!E<B!C;VYT;W5R36%P<&5R
M.PT*#0H-"G9T:U-T<F5A;4QI;F4@<W1R96%M97)S.PT*("`@('-T<F5A;65R
M<R!3971);G!U="!;<&PS9"!'971/=71P=71=.PT*("`@('-T<F5A;65R<R!3
M9713;W5R8V4@6W-E961S($=E=$]U='!U=%T[#0H@("`@<W1R96%M97)S(%-E
M=$UA>&EM=6U0<F]P86=A=&EO;E1I;64@-3`P.PT*("`@('-T<F5A;65R<R!3
M9713=&5P3&5N9W1H(#`N,3L-"B`@("!S=')E86UE<G,@57!D871E.PT*=G1K
M4&]L>4UA<'!E<B!M87!3=')E86UE<G,[#0H@("`@;6%P4W1R96%M97)S(%-E
M=$EN<'5T(%MS=')E86UE<G,@1V5T3W5T<'5T73L-"B`@("!E=F%L(&UA<%-T
M<F5A;65R<R!397138V%L87)286YG92!<#0H@("`@("`@6UM;6W!L,V0@1V5T
M3W5T<'5T72!'9710;VEN=$1A=&%=($=E=%-C86QA<G-=($=E=%)A;F=E73L-
M"G9T:T%C=&]R('-T<F5A;65R<T%C=&]R.PT*("`@('-T<F5A;65R<T%C=&]R
M(%-E=$UA<'!E<B!M87!3=')E86UE<G,[#0H-"G9T:U-T<G5C='5R961'<FED
M3W5T;&EN949I;'1E<B!O=71L:6YE.PT*("`@(&]U=&QI;F4@4V5T26YP=70@
M6W!L,V0@1V5T3W5T<'5T73L-"G9T:U!O;'E-87!P97(@;W5T;&EN94UA<'!E
M<CL-"B`@("!O=71L:6YE36%P<&5R(%-E=$EN<'5T(%MO=71L:6YE($=E=$]U
M='!U=%T[#0IV=&M!8W1O<B!O=71L:6YE06-T;W([#0H@("`@;W5T;&EN94%C
M=&]R(%-E=$UA<'!E<B!O=71L:6YE36%P<&5R.PT*("`@(%MO=71L:6YE06-T
M;W(@1V5T4')O<&5R='E=(%-E=$-O;&]R(#`@,"`P.PT*#0HD<F5N,2!!9&1!
M8W1O<G,@;W5T;&EN94%C=&]R.PT*)')E;C$@061D06-T;W)S('-T<F5A;65R
M<T%C=&]R.PT*(R1R96XQ($%D9$%C=&]R<R!P;&%N94%C=&]R.PT*)')E;C$@
M4V5T0F%C:V=R;W5N9"`Q(#$@,3L-"B1R96Y7:6X@4V5T4VEZ92`U,#`@-3`P
M.PT*)&ER96X@26YI=&EA;&EZ93L-"@T*<V5T(&-A;3$@6R1R96XQ($=E=$%C
M=&EV94-A;65R85T[#0HD8V%M,2!3971#;&EP<&EN9U)A;F=E(#,N.34R.3<@
M-3`[#0HD8V%M,2!3971&;V-A;%!O:6YT(#@N.#@Y,#@@,"XU.34P,S@@,CDN
M,S,T,CL-"B1C86TQ(%-E=%!O<VET:6]N("TQ,BXS,S,R(#,Q+C<T-SD@-#$N
M,C,X-SL-"B1C86TQ($-A;&-6:65W4&QA;F5.;W)M86P[#0HD8V%M,2!39716
M:65W57`@,"XP-C`W-S(@+3`N,S$Y.3`U(#`N.30U-#DX.PT*#0HC(')E;F1E
M<B!T:&4@:6UA9V4-"B,-"B1I<F5N(%-E=%5S97)-971H;V0@>W=M(&1E:6-O
M;FEF>2`N=G1K26YT97)A8W1].PT*)')E;E=I;B!296YD97([#0H-"B,@<')E
M=F5N="!T:&4@=&L@=VEN9&]W(&9R;VT@<VAO=VEN9R!U<"!T:&5N('-T87)T
F('1H92!E=F5N="!L;V]P#0IW;2!W:71H9')A=R`N#0H-"@T*#0IN
`
end
SHAR_EOF
  $shar_touch -am 0415175597 'strmline.tcl' &&
  chmod 0744 'strmline.tcl' ||
  $echo 'restore of' 'strmline.tcl' 'failed'
  if ( md5sum --help 2>&1 | grep 'sage: md5sum \[' ) >/dev/null 2>&1 \
  && ( md5sum --version 2>&1 | grep -v 'textutils 1.12' ) >/dev/null; then
    md5sum -c << SHAR_EOF >/dev/null 2>&1 \
    || $echo 'strmline.tcl:' 'MD5 check failed'
46f0fd0338d5dae6eb3a295a7a376565  strmline.tcl
SHAR_EOF
  else
    shar_count="`LC_ALL= LC_CTYPE= LANG= wc -c < 'strmline.tcl'`"
    test 2603 -eq "$shar_count" ||
    $echo 'strmline.tcl:' 'original size' '2603,' 'current size' "$shar_count!"
  fi
fi
# ============= warpvec.tcl ==============
if test -f 'warpvec.tcl' && test "$first_param" != -c; then
  $echo 'x -' SKIPPING 'warpvec.tcl' '(file already exists)'
else
  $echo 'x -' extracting 'warpvec.tcl' '(binary)'
  sed 's/^X//' << 'SHAR_EOF' | uudecode &&
begin 600 warpvec.tcl
M(R!"<G5T=7,@66]U;@T*(R!'<F%P:&EC<R!A;F0@5FES=6%L:7IA=&EO;@T*
M(R!(5R,S#0HC(%=A<G`@5F5C=&]R($9I;'1E<@T*#0IL;V%D('9T:W1C;#L-
M"B,@9V5T('1H92!I;G1E<F%C=&]R('5I#0IS;W5R8V4@=G1K26YT+G1C;`T*
M<V]U<F-E(")C;VQO<G,N=&-L(@T*(R!C<F5A=&4@<&QA;F5S#0HC($9I<G-T
M(&-R96%T92!T:&4@<F5N9&5R(&UA<W1E<@T*=G1K4F5N9&5R36%S=&5R(')M
M.PT*#0HC($YO=R!C<F5A=&4@=&AE(%)E;F1E<E=I;F1O=RP@4F5N9&5R97(@
M86YD(&)O=&@@06-T;W)S#0HC#0IS970@<F5N5VEN(%MR;2!-86ME4F5N9&5R
M5VEN9&]W73L-"G-E="!R96XQ("`@6R1R96Y7:6X@36%K95)E;F1E<F5R73L-
M"G-E="!I<F5N(%LD<F5N5VEN($UA:V5296YD97)7:6YD;W=);G1E<F%C=&]R
M73L-"@T*(R!C<F5A=&4@<&EP96QI;F4-"B,-"G9T:U!,3U0S1%)E861E<B!P
M;#-D.PT*("`@('!L,V0@1&5B=6=/;CL-"B`@("!P;#-D(%-E=%A96D9I;&5N
M86UE(")C;VUB>'EZ+F)I;B(-"B`@("!P;#-D(%-E=%%&:6QE;F%M92`B8V]M
M8G$N8FEN(@T*("`@('!L,V0@4V5T4V-A;&%R1G5N8W1I;VY.=6UB97(@,3`P
M.PT*("`@('!L,V0@4V5T5F5C=&]R1G5N8W1I;VY.=6UB97(@,C`R.PT*("`@
M('!L,V0@57!D871E.PT*#0IV=&M0;&%N95-O=7)C92!P;&%N93L-"B`@("!P
M;&%N92!3971297-O;'5T:6]N(#4P(#4P.PT*=G1K5')A;G-F;W)M('1R86YS
M4#$[#0H@("`@=')A;G-0,2!4<F%N<VQA=&4@,RXW(#`N,"`R."XS-SL-"B`@
M("!T<F%N<U`Q(%-C86QE(#4@-2`U.PT*("`@('1R86YS4#$@4F]T871E62`Y
M,#L-"G9T:U1R86YS9F]R;5!O;'E&:6QT97(@='!D,0T*("`@('1P9#$@4V5T
M26YP=70@6W!L86YE($=E=$]U='!U=%T[#0H@("`@='!D,2!39714<F%N<V9O
M<FT@=')A;G-0,3L-"G9T:T]U=&QI;F5&:6QT97(@;W5T5'!D,3L-"B`@("!O
M=714<&0Q(%-E=$EN<'5T(%MT<&0Q($=E=$]U='!U=%T[#0IV=&M0;VQY36%P
M<&5R(&UA<%1P9#$[#0H@("`@;6%P5'!D,2!3971);G!U="!;;W5T5'!D,2!'
M971/=71P=71=.PT*=G1K06-T;W(@='!D,4%C=&]R.PT*("`@('1P9#%!8W1O
M<B!3971-87!P97(@;6%P5'!D,3L-"B`@("!;='!D,4%C=&]R($=E=%!R;W!E
M<G1Y72!3971#;VQO<B`P(#`@,#L-"@T*=G1K5')A;G-F;W)M('1R86YS4#([
M#0H@("`@=')A;G-0,B!4<F%N<VQA=&4@.2XR(#`N,"`S,2XR,#L-"B`@("!T
M<F%N<U`R(%-C86QE(#4@-2`U.PT*("`@('1R86YS4#(@4F]T871E62`Y,#L-
M"G9T:U1R86YS9F]R;5!O;'E&:6QT97(@='!D,@T*("`@('1P9#(@4V5T26YP
M=70@6W!L86YE($=E=$]U='!U=%T[#0H@("`@='!D,B!39714<F%N<V9O<FT@
M=')A;G-0,CL-"G9T:T]U=&QI;F5&:6QT97(@;W5T5'!D,CL-"B`@("!O=714
M<&0R(%-E=$EN<'5T(%MT<&0R($=E=$]U='!U=%T[#0IV=&M0;VQY36%P<&5R
M(&UA<%1P9#([#0H@("`@;6%P5'!D,B!3971);G!U="!;;W5T5'!D,B!'971/
M=71P=71=.PT*=G1K06-T;W(@='!D,D%C=&]R.PT*("`@('1P9#)!8W1O<B!3
M971-87!P97(@;6%P5'!D,CL-"B`@("!;='!D,D%C=&]R($=E=%!R;W!E<G1Y
M72!3971#;VQO<B`P(#`@,#L-"@T*=G1K5')A;G-F;W)M('1R86YS4#,[#0H@
M("`@=')A;G-0,R!4<F%N<VQA=&4@,3,N,C<@,"XP(#,S+C,P.PT*("`@('1R
M86YS4#,@4V-A;&4@-2`U(#4[#0H@("`@=')A;G-0,R!2;W1A=&59(#DP.PT*
M=G1K5')A;G-F;W)M4&]L>49I;'1E<B!T<&0S#0H@("`@='!D,R!3971);G!U
M="!;<&QA;F4@1V5T3W5T<'5T73L-"B`@("!T<&0S(%-E=%1R86YS9F]R;2!T
M<F%N<U`S.PT*=G1K3W5T;&EN949I;'1E<B!O=714<&0S.PT*("`@(&]U=%1P
M9#,@4V5T26YP=70@6W1P9#,@1V5T3W5T<'5T73L-"G9T:U!O;'E-87!P97(@
M;6%P5'!D,SL-"B`@("!M87!4<&0S(%-E=$EN<'5T(%MO=714<&0S($=E=$]U
M='!U=%T[#0IV=&M!8W1O<B!T<&0S06-T;W([#0H@("`@='!D,T%C=&]R(%-E
M=$UA<'!E<B!M87!4<&0S.PT*("`@(%MT<&0S06-T;W(@1V5T4')O<&5R='E=
M(%-E=$-O;&]R(#`@,"`P.PT*#0IV=&M!<'!E;F10;VQY1&%T82!A<'!E;F1&
M.PT*("`@(&%P<&5N9$8@061D26YP=70@6W1P9#$@1V5T3W5T<'5T73L-"B`@
M("!A<'!E;F1&($%D9$EN<'5T(%MT<&0R($=E=$]U='!U=%T[#0H@("`@87!P
M96YD1B!!9&1);G!U="!;='!D,R!'971/=71P=71=.PT*#0H-"G9T:U!R;V)E
M1FEL=&5R('!R;V)E.PT*("`@('!R;V)E(%-E=$EN<'5T(%MA<'!E;F1&($=E
M=$]U='!U=%T[#0H@("`@<')O8F4@4V5T4V]U<F-E(%MP;#-D($=E=$]U='!U
M=%T[#0H-"G9T:T%P<&5N9$9I;'1E<B!C;VYV97)T.PT*("`@(&-O;G9E<G0@
M061D26YP=70@6W!R;V)E($=E=$]U='!U=%T[#0H-"G9T:U=A<G!696-T;W(@
M=V%R<#L-"B`@("!W87)P(%-E=$EN<'5T(%MC;VYV97)T($=E=$]U='!U=%T[
M#0H@("`@=V%R<"!397138V%L949A8W1O<B`P+C`P-3L-"G9T:T=E;VUE=')Y
M1FEL=&5R(&1S,G!O;'D[#0H@("`@9',R<&]L>2!3971);G!U="!;=V%R<"!'
M971/=71P=71=.PT*=G1K0VQE86Y0;VQY1&%T82!C;&5A;CL-"B`@("!C;&5A
M;B!3971);G!U="!;9',R<&]L>2!'971/=71P=71=.PT*=G1K4&]L>4YO<FUA
M;',@;F]R;6%L<SL-"B`@("!N;W)M86QS(%-E=$EN<'5T(%MC;&5A;B!'971/
M=71P=71=.PT*("`@(&YO<FUA;',@4V5T1F5A='5R94%N9VQE(#8P.PT*=G1K
M1&%T85-E=$UA<'!E<B!P;&%N94UA<'!E<CL-"B`@("!P;&%N94UA<'!E<B!3
M971);G!U="!;;F]R;6%L<R!'971/=71P=71=.PT*("`@('!L86YE36%P<&5R
M(%-E=%-C86QA<E)A;F=E(#`N,3DW.#$S(#`N-S$P-#$Y.PT*("`@('!L86YE
M36%P<&5R(%-C86QA<G-6:7-I8FQE3V9F.PT*=G1K06-T;W(@<&QA;F5!8W1O
M<CL-"B`@("!P;&%N94%C=&]R(%-E=$UA<'!E<B!P;&%N94UA<'!E<CL-"G-E
M="!P;&%N95!R;W`@6W!L86YE06-T;W(@1V5T4')O<&5R='E=.PT*979A;"`D
M<&QA;F50<F]P(%-E=$-O;&]R("1C>6%N.PT*#0IV=&M3=')U8W1U<F5D1W)I
M9$]U=&QI;F5&:6QT97(@;W5T;&EN93L-"B`@("!O=71L:6YE(%-E=$EN<'5T
M(%MP;#-D($=E=$]U='!U=%T[#0IV=&M0;VQY36%P<&5R(&]U=&QI;F5-87!P
M97([#0H@("`@;W5T;&EN94UA<'!E<B!3971);G!U="!;;W5T;&EN92!'971/
M=71P=71=.PT*=G1K06-T;W(@;W5T;&EN94%C=&]R.PT*("`@(&]U=&QI;F5!
M8W1O<B!3971-87!P97(@;W5T;&EN94UA<'!E<CL-"G-E="!O=71L:6YE4')O
M<"!;;W5T;&EN94%C=&]R($=E=%!R;W!E<G1Y73L-"F5V86P@)&]U=&QI;F50
M<F]P(%-E=$-O;&]R("1B;&%C:SL-"@T*)')E;C$@061D06-T;W)S(&]U=&QI
M;F5!8W1O<CL-"B1R96XQ($%D9$%C=&]R<R!P;&%N94%C=&]R.PT*)')E;C$@
M061D06-T;W)S('1P9#%!8W1O<CL-"B1R96XQ($%D9$%C=&]R<R!T<&0R06-T
M;W([#0HD<F5N,2!!9&1!8W1O<G,@='!D,T%C=&]R.PT*)')E;C$@4V5T0F%C
M:V=R;W5N9"`Q(#$@,3L-"B1R96Y7:6X@4V5T4VEZ92`U,#`@-3`P.PT*#0IS
M970@8V%M,2!;)')E;C$@1V5T06-T:79E0V%M97)A73L-"B1C86TQ(%-E=$-L
M:7!P:6YG4F%N9V4@,RXY-3(Y-R`U,#L-"B1C86TQ(%-E=$9O8V%L4&]I;G0@
M."XX.#DP."`P+C4Y-3`S."`R.2XS,S0R.PT*)&-A;3$@4V5T4&]S:71I;VX@
M+3$R+C,S,S(@,S$N-S0W.2`T,2XR,S@W.PT*)&-A;3$@0V%L8U9I97=0;&%N
M94YO<FUA;#L-"B1C86TQ(%-E=%9I97=5<"`P+C`V,#<W,B`M,"XS,3DY,#4@
M,"XY-#4T.3@[#0H-"B,@<F5N9&5R('1H92!I;6%G90T*(PT*)&ER96X@4V5T
M57-E<DUE=&AO9"![=VT@9&5I8V]N:69Y("YV=&M);G1E<F%C='T[#0HD:7)E
M;B!);FET:6%L:7IE.PT*#0HC('!R979E;G0@=&AE('1K('=I;F1O=R!F<F]M
M('-H;W=I;F<@=7`@=&AE;B!S=&%R="!T:&4@979E;G0@;&]O<`T*=VT@=VET
/:&1R87<@+@T*#0H-"@T*
`
end
SHAR_EOF
  $shar_touch -am 0415175597 'warpvec.tcl' &&
  chmod 0744 'warpvec.tcl' ||
  $echo 'restore of' 'warpvec.tcl' 'failed'
  if ( md5sum --help 2>&1 | grep 'sage: md5sum \[' ) >/dev/null 2>&1 \
  && ( md5sum --version 2>&1 | grep -v 'textutils 1.12' ) >/dev/null; then
    md5sum -c << SHAR_EOF >/dev/null 2>&1 \
    || $echo 'warpvec.tcl:' 'MD5 check failed'
05420a108c2859f88c87f8541481ab2d  warpvec.tcl
SHAR_EOF
  else
    shar_count="`LC_ALL= LC_CTYPE= LANG= wc -c < 'warpvec.tcl'`"
    test 3930 -eq "$shar_count" ||
    $echo 'warpvec.tcl:' 'original size' '3930,' 'current size' "$shar_count!"
  fi
fi
rm -fr _sh170450
exit 0

From ???@??? Wed Apr 16 07:18:21 1997
Received: from vccsouth-24.its.rpi.edu (wangc5@vccsouth-24.its.rpi.edu [128.113.28.34])
	by mail1.its.rpi.edu (8.8.5/8.8.5) with ESMTP id SAA35362
	for <citrit@rpi.edu>; Tue, 15 Apr 1997 18:38:47 -0400
From: Chuo-Lung Wang <wangc5>
Received: (wangc5@localhost) by vccsouth-24.its.rpi.edu (951211.SGI.8.6.12.PATCH1042/8.6.4) id SAA24059 for citrit@rpi.edu; Tue, 15 Apr 1997 18:38:40 -0400
Date: Tue, 15 Apr 1997 18:38:40 -0400
Message-Id: <199704152238.SAA24059@vccsouth-24.its.rpi.edu>
To: citrit@rpi.edu
Subject: HomeWork 3
X-UIDL: 563f52ddb6d81cafc543182873cae5cd

#!/bin/sh
# This is a shell archive (produced by GNU sharutils 4.2).
# To extract the files from this archive, save it to some FILE, remove
# everything before the `!/bin/sh' line above, then type `sh FILE'.
#
# Made on 1997-04-15 18:37 EDT by <wangc5@vccsouth-24>.
# Source directory was `/afs/rpi.edu/home/78/wangc5/HW'.
#
# Existing files will *not* be overwritten unless `-c' is specified.
#
# This shar contains:
# length mode       name
# ------ ---------- ------------------------------------------
#   1273 -rw------- hw3_1_1.tcl
#   1483 -rw------- hw3_1_2.tcl
#   3421 -rw------- hw3_2_1.tcl
#   3511 -rw------- hw3_2_2.tcl
#   3424 -rw------- hw3_2_3.tcl
#   3832 -rw------- hw3_2_4.tcl
#
save_IFS="${IFS}"
IFS="${IFS}:"
gettext_dir=FAILED
locale_dir=FAILED
first_param="$1"
for dir in $PATH
do
  if test "$gettext_dir" = FAILED && test -f $dir/gettext \
     && ($dir/gettext --version >/dev/null 2>&1)
  then
    set `$dir/gettext --version 2>&1`
    if test "$3" = GNU
    then
      gettext_dir=$dir
    fi
  fi
  if test "$locale_dir" = FAILED && test -f $dir/shar \
     && ($dir/shar --print-text-domain-dir >/dev/null 2>&1)
  then
    locale_dir=`$dir/shar --print-text-domain-dir`
  fi
done
IFS="$save_IFS"
if test "$locale_dir" = FAILED || test "$gettext_dir" = FAILED
then
  echo=echo
else
  TEXTDOMAINDIR=$locale_dir
  export TEXTDOMAINDIR
  TEXTDOMAIN=sharutils
  export TEXTDOMAIN
  echo="$gettext_dir/gettext -s"
fi
touch -am 1231235999 $$.touch >/dev/null 2>&1
if test ! -f 1231235999 && test -f $$.touch; then
  shar_touch=touch
else
  shar_touch=:
  echo
  $echo 'WARNING: not restoring timestamps.  Consider getting and'
  $echo "installing GNU \`touch', distributed in GNU File Utilities..."
  echo
fi
rm -f 1231235999 $$.touch
#
if mkdir _sh24023; then
  $echo 'x -' 'creating lock directory'
else
  $echo 'failed to create lock directory'
  exit 1
fi
# ============= hw3_1_1.tcl ==============
if test -f 'hw3_1_1.tcl' && test "$first_param" != -c; then
  $echo 'x -' SKIPPING 'hw3_1_1.tcl' '(file already exists)'
else
  $echo 'x -' extracting 'hw3_1_1.tcl' '(text)'
  sed 's/^X//' << 'SHAR_EOF' > 'hw3_1_1.tcl' &&
#load vtktcl;
# user interface command widget
source vtkInt.tcl
X
# create a rendering window and renderer
vtkRenderMaster rm;
set renWin [rm MakeRenderWindow];
set ren1 [$renWin MakeRenderer];
set iren [$renWin MakeRenderWindowInteractor];
X
vtkQuadric quad;
X  quad SetCoefficients 0.5 1 .2 0 .1 0 0 .2 0 0;
X
vtkSampleFunction sample;
X  sample SetSampleDimensions 50 50 50;
X  sample SetImplicitFunction quad;
X
vtkContourFilter contours;
X  contours SetInput [sample GetOutput];
X  contours GenerateValues 5 0.0 1.2;
X
vtkPolyMapper contMapper;
X  contMapper SetInput [contours GetOutput];
X  contMapper SetScalarRange 0.0 1.2;
vtkActor contActor;
X  contActor SetMapper contMapper;
X
# assign our actor to the renderer
$ren1 SetBackground 1 1 1;
$ren1 AddActors contActor;
X
# enable user interface interactor
$iren SetUserMethod {wm deiconify .vtkInteract};
$iren Initialize;
X
#========================================
set min 0.0;
set max 1.2;
set step [expr ($max-$min)/5.0];
for { set i 0 } { $i < 5 } { incr i } {
X  set value [expr $min+$step*$i];
X  contours SetInput [sample GetOutput];
X  contours GenerateValues $i $min $value;
X  $iren Initialize;
}
#========================================
X
# prevent the tk window from showing up then start the event loop
wm withdraw .
X
X
SHAR_EOF
  $shar_touch -am 0415182897 'hw3_1_1.tcl' &&
  chmod 0600 'hw3_1_1.tcl' ||
  $echo 'restore of' 'hw3_1_1.tcl' 'failed'
  if ( md5sum --help 2>&1 | grep 'sage: md5sum \[' ) >/dev/null 2>&1 \
  && ( md5sum --version 2>&1 | grep -v 'textutils 1.12' ) >/dev/null; then
    md5sum -c << SHAR_EOF >/dev/null 2>&1 \
    || $echo 'hw3_1_1.tcl:' 'MD5 check failed'
31c3471f03ae7eb1ec84fe5eb83f7745  hw3_1_1.tcl
SHAR_EOF
  else
    shar_count="`LC_ALL= LC_CTYPE= LANG= wc -c < 'hw3_1_1.tcl'`"
    test 1273 -eq "$shar_count" ||
    $echo 'hw3_1_1.tcl:' 'original size' '1273,' 'current size' "$shar_count!"
  fi
fi
# ============= hw3_1_2.tcl ==============
if test -f 'hw3_1_2.tcl' && test "$first_param" != -c; then
  $echo 'x -' SKIPPING 'hw3_1_2.tcl' '(file already exists)'
else
  $echo 'x -' extracting 'hw3_1_2.tcl' '(text)'
  sed 's/^X//' << 'SHAR_EOF' > 'hw3_1_2.tcl' &&
# If you are using Window95 and vtk 1.3 uncomment the line below
# load vtktcl;
X
# get the interactor ui
source vtkInt.tcl
X
# First create the render master
vtkRenderMaster rm;
X
# Now create the RenderWindow, Renderer
#
set renWin [rm MakeRenderWindow];
set ren1   [$renWin MakeRenderer];
set iren   [$renWin MakeRenderWindowInteractor];
X
#
# Load up the data
vtkStructuredPointsReader vol;
X    vol SetFilename "MRIdata.vtk";
X
vtkMarchingCubes contour;
X  contour SetInput [vol GetOutput];
X  contour SetValue 0 255.0;
X
vtkPolyMapper volMapper;
X  volMapper SetInput [contour GetOutput];
X  volMapper ScalarsVisibleOff;
X
vtkActor volActor;
X  volActor SetMapper volMapper;
X
vtkOutlineFilter outLine;
X  outLine SetInput [vol GetOutput];
X
vtkPolyMapper outMapper;
X  outMapper SetInput [outLine GetOutput];
X
vtkActor outActor;
X  outActor SetMapper outMapper;
X
# Add the actors to the renderer, set the background and size
#
$ren1 AddActors outActor;
$ren1 AddActors volActor;
$ren1 SetBackground 0 0 0;
$renWin SetSize 500 400;
$iren Initialize;
X
#========================================
set isovalue 255.0;
for { set i 0 } { $i < 10 } { incr i } {
X  set isovalue [expr $isovalue - 10.0];
X  contour SetInput [vol GetOutput];
X  contour SetValue 0 $isovalue;
X  $iren Initialize;
}
#========================================
X
# render the image
#
$iren SetUserMethod {wm deiconify .vtkInteract};
$renWin Render;
X
# prevent the tk window from showing up then start the event loop
wm withdraw .
X
SHAR_EOF
  $shar_touch -am 0415182897 'hw3_1_2.tcl' &&
  chmod 0600 'hw3_1_2.tcl' ||
  $echo 'restore of' 'hw3_1_2.tcl' 'failed'
  if ( md5sum --help 2>&1 | grep 'sage: md5sum \[' ) >/dev/null 2>&1 \
  && ( md5sum --version 2>&1 | grep -v 'textutils 1.12' ) >/dev/null; then
    md5sum -c << SHAR_EOF >/dev/null 2>&1 \
    || $echo 'hw3_1_2.tcl:' 'MD5 check failed'
1379d31a09ff2adfe3db686343ae478a  hw3_1_2.tcl
SHAR_EOF
  else
    shar_count="`LC_ALL= LC_CTYPE= LANG= wc -c < 'hw3_1_2.tcl'`"
    test 1483 -eq "$shar_count" ||
    $echo 'hw3_1_2.tcl:' 'original size' '1483,' 'current size' "$shar_count!"
  fi
fi
# ============= hw3_2_1.tcl ==============
if test -f 'hw3_2_1.tcl' && test "$first_param" != -c; then
  $echo 'x -' SKIPPING 'hw3_2_1.tcl' '(file already exists)'
else
  $echo 'x -' extracting 'hw3_2_1.tcl' '(text)'
  sed 's/^X//' << 'SHAR_EOF' > 'hw3_2_1.tcl' &&
#unommet the line below if you are on Windows95
# load vtktcl;
# get the interactor ui
source vtkInt.tcl
X
# create planes
# First create the render master
vtkRenderMaster rm;
X
# Now create the RenderWindow, Renderer and both Actors
#
set renWin [rm MakeRenderWindow];
set ren1   [$renWin MakeRenderer];
set iren [$renWin MakeRenderWindowInteractor];
X
# create pipeline
#
vtkPLOT3DReader pl3d;
X    pl3d SetXYZFilename "combxyz.bin"
X    pl3d SetQFilename "combq.bin"
X    pl3d SetScalarFunctionNumber 100;
X    pl3d SetVectorFunctionNumber 202;
X    pl3d Update;
X
vtkPlaneSource plane;
X    plane SetResolution 50 50;
vtkTransform transP1;
X    transP1 Translate 3.7 0.0 28.37;
X    transP1 Scale 5 5 5;
X    transP1 RotateY 90;
vtkTransformPolyFilter tpd1
X    tpd1 SetInput [plane GetOutput];
X    tpd1 SetTransform transP1;
vtkOutlineFilter outTpd1;
X    outTpd1 SetInput [tpd1 GetOutput];
vtkPolyMapper mapTpd1;
X    mapTpd1 SetInput [outTpd1 GetOutput];
vtkActor tpd1Actor;
X    tpd1Actor SetMapper mapTpd1;
X    [tpd1Actor GetProperty] SetColor 0 0 0;
X
vtkTransform transP2;
X    transP2 Translate 9.2 0.0 31.20;
X    transP2 Scale 5 5 5;
X    transP2 RotateY 90;
vtkTransformPolyFilter tpd2
X    tpd2 SetInput [plane GetOutput];
X    tpd2 SetTransform transP2;
vtkOutlineFilter outTpd2;
X    outTpd2 SetInput [tpd2 GetOutput];
vtkPolyMapper mapTpd2;
X    mapTpd2 SetInput [outTpd2 GetOutput];
vtkActor tpd2Actor;
X    tpd2Actor SetMapper mapTpd2;
X    [tpd2Actor GetProperty] SetColor 0 0 0;
X
vtkTransform transP3;
X    transP3 Translate 13.27 0.0 33.30;
X    transP3 Scale 5 5 5;
X    transP3 RotateY 90;
vtkTransformPolyFilter tpd3
X    tpd3 SetInput [plane GetOutput];
X    tpd3 SetTransform transP3;
vtkOutlineFilter outTpd3;
X    outTpd3 SetInput [tpd3 GetOutput];
vtkPolyMapper mapTpd3;
X    mapTpd3 SetInput [outTpd3 GetOutput];
vtkActor tpd3Actor;
X    tpd3Actor SetMapper mapTpd3;
X    [tpd3Actor GetProperty] SetColor 0 0 0;
X
vtkAppendPolyData appendF;
X    appendF AddInput [tpd1 GetOutput];
X    appendF AddInput [tpd2 GetOutput];
X    appendF AddInput [tpd3 GetOutput];
X
vtkProbeFilter probe;
X    probe SetInput [appendF GetOutput];
X    probe SetSource [pl3d GetOutput];
X
#################################
#problem 9.2(a) - HedgHog Vector#
#################################
vtkHedgeHog hhog;
X    hhog SetInput [probe GetOutput];
X    hhog SetScaleFactor 0.004;
X
vtkPolyMapper hhogMapper;
X    hhogMapper SetInput [hhog GetOutput];
X    eval hhogMapper SetScalarRange [[pl3d GetOutput] GetScalarRange];
X
vtkActor hhogActor;
X    hhogActor SetMapper hhogMapper;
X
vtkStructuredGridOutlineFilter outline;
X    outline SetInput [pl3d GetOutput];
vtkPolyMapper outlineMapper;
X    outlineMapper SetInput [outline GetOutput];
vtkActor outlineActor;
X    outlineActor SetMapper outlineMapper;
X    [outlineActor GetProperty] SetColor 0 0 0;
X
$ren1 AddActors outlineActor;
$ren1 AddActors hhogActor;
$ren1 AddActors tpd1Actor;
$ren1 AddActors tpd2Actor;
$ren1 AddActors tpd3Actor;
$ren1 SetBackground 1 1 1;
$renWin SetSize 500 500;
$iren Initialize;
X
set cam1 [$ren1 GetActiveCamera];
$cam1 SetClippingRange 3.95297 50;
$cam1 SetFocalPoint 8.88908 0.595038 29.3342;
$cam1 SetPosition -12.3332 31.7479 41.2387;
$cam1 CalcViewPlaneNormal;
$cam1 SetViewUp 0.060772 -0.319905 0.945498;
X
# render the image
#
$iren SetUserMethod {wm deiconify .vtkInteract};
$renWin Render;
X
# prevent the tk window from showing up then start the event loop
wm withdraw .
X
X
X
SHAR_EOF
  $shar_touch -am 0415182897 'hw3_2_1.tcl' &&
  chmod 0600 'hw3_2_1.tcl' ||
  $echo 'restore of' 'hw3_2_1.tcl' 'failed'
  if ( md5sum --help 2>&1 | grep 'sage: md5sum \[' ) >/dev/null 2>&1 \
  && ( md5sum --version 2>&1 | grep -v 'textutils 1.12' ) >/dev/null; then
    md5sum -c << SHAR_EOF >/dev/null 2>&1 \
    || $echo 'hw3_2_1.tcl:' 'MD5 check failed'
75867b3993ef2eb84af12649d241f224  hw3_2_1.tcl
SHAR_EOF
  else
    shar_count="`LC_ALL= LC_CTYPE= LANG= wc -c < 'hw3_2_1.tcl'`"
    test 3421 -eq "$shar_count" ||
    $echo 'hw3_2_1.tcl:' 'original size' '3421,' 'current size' "$shar_count!"
  fi
fi
# ============= hw3_2_2.tcl ==============
if test -f 'hw3_2_2.tcl' && test "$first_param" != -c; then
  $echo 'x -' SKIPPING 'hw3_2_2.tcl' '(file already exists)'
else
  $echo 'x -' extracting 'hw3_2_2.tcl' '(text)'
  sed 's/^X//' << 'SHAR_EOF' > 'hw3_2_2.tcl' &&
#unommet the line below if you are on Windows95
# load vtktcl;
# get the interactor ui
source vtkInt.tcl
X
# create planes
# First create the render master
vtkRenderMaster rm;
X
# Now create the RenderWindow, Renderer and both Actors
#
set renWin [rm MakeRenderWindow];
set ren1   [$renWin MakeRenderer];
set iren [$renWin MakeRenderWindowInteractor];
X
# create pipeline
#
vtkPLOT3DReader pl3d;
X    pl3d SetXYZFilename "combxyz.bin"
X    pl3d SetQFilename "combq.bin"
X    pl3d SetScalarFunctionNumber 100;
X    pl3d SetVectorFunctionNumber 202;
X    pl3d Update;
X
vtkPlaneSource plane;
X    plane SetResolution 50 50;
X
vtkTransform transP1;
X    transP1 Translate 3.7 0.0 28.37;
X    transP1 Scale 5 5 5;
X    transP1 RotateY 90;
vtkTransformPolyFilter tpd1
X    tpd1 SetInput [plane GetOutput];
X    tpd1 SetTransform transP1;
vtkOutlineFilter outTpd1;
X    outTpd1 SetInput [tpd1 GetOutput];
vtkPolyMapper mapTpd1;
X    mapTpd1 SetInput [outTpd1 GetOutput];
vtkActor tpd1Actor;
X    tpd1Actor SetMapper mapTpd1;
X    [tpd1Actor GetProperty] SetColor 0 0 0;
X
vtkTransform transP2;
X    transP2 Translate 9.2 0.0 31.20;
X    transP2 Scale 5 5 5;
X    transP2 RotateY 90;
vtkTransformPolyFilter tpd2
X    tpd2 SetInput [plane GetOutput];
X    tpd2 SetTransform transP2;
vtkOutlineFilter outTpd2;
X    outTpd2 SetInput [tpd2 GetOutput];
vtkPolyMapper mapTpd2;
X    mapTpd2 SetInput [outTpd2 GetOutput];
vtkActor tpd2Actor;
X    tpd2Actor SetMapper mapTpd2;
X    [tpd2Actor GetProperty] SetColor 0 0 0;
X
vtkTransform transP3;
X    transP3 Translate 13.27 0.0 33.30;
X    transP3 Scale 5 5 5;
X    transP3 RotateY 90;
vtkTransformPolyFilter tpd3
X    tpd3 SetInput [plane GetOutput];
X    tpd3 SetTransform transP3;
vtkOutlineFilter outTpd3;
X    outTpd3 SetInput [tpd3 GetOutput];
vtkPolyMapper mapTpd3;
X    mapTpd3 SetInput [outTpd3 GetOutput];
vtkActor tpd3Actor;
X    tpd3Actor SetMapper mapTpd3;
X    [tpd3Actor GetProperty] SetColor 0 0 0;
X
vtkAppendPolyData appendF;
X    appendF AddInput [tpd1 GetOutput];
X    appendF AddInput [tpd2 GetOutput];
X    appendF AddInput [tpd3 GetOutput];
X
vtkProbeFilter probe;
X    probe SetInput [appendF GetOutput];
X    probe SetSource [pl3d GetOutput];
X
vtkGeometryFilter contour;
X    contour SetInput [probe GetOutput];
X
##############################
#problem 9.2(c) - Warp Vector#
##############################
vtkWarpVector warper;
X    warper SetInput [contour GetOutput];
X    warper SetScaleFactor 0.003;
X
vtkDataSetMapper warperMapper;
X    warperMapper SetInput [warper GetOutput];
X    eval warperMapper SetScalarRange [[pl3d GetOutput] GetScalarRange];
X
vtkActor warperActor;
X    warperActor SetMapper warperMapper;
X
X
vtkStructuredGridOutlineFilter outline;
X    outline SetInput [pl3d GetOutput];
vtkPolyMapper outlineMapper;
X    outlineMapper SetInput [outline GetOutput];
vtkActor outlineActor;
X    outlineActor SetMapper outlineMapper;
X    [outlineActor GetProperty] SetColor 0 0 0;
X
$ren1 AddActors outlineActor;
$ren1 AddActors warperActor;
$ren1 AddActors tpd1Actor;
$ren1 AddActors tpd2Actor;
$ren1 AddActors tpd3Actor;
$ren1 SetBackground 1 1 1;
$renWin SetSize 500 500;
$iren Initialize;
X
set cam1 [$ren1 GetActiveCamera];
$cam1 SetClippingRange 3.95297 50;
$cam1 SetFocalPoint 8.88908 0.595038 29.3342;
$cam1 SetPosition -12.3332 31.7479 41.2387;
$cam1 CalcViewPlaneNormal;
$cam1 SetViewUp 0.060772 -0.319905 0.945498;
X
# render the image
#
$iren SetUserMethod {wm deiconify .vtkInteract};
$renWin Render;
X
# prevent the tk window from showing up then start the event loop
wm withdraw .
X
X
X
SHAR_EOF
  $shar_touch -am 0415182897 'hw3_2_2.tcl' &&
  chmod 0600 'hw3_2_2.tcl' ||
  $echo 'restore of' 'hw3_2_2.tcl' 'failed'
  if ( md5sum --help 2>&1 | grep 'sage: md5sum \[' ) >/dev/null 2>&1 \
  && ( md5sum --version 2>&1 | grep -v 'textutils 1.12' ) >/dev/null; then
    md5sum -c << SHAR_EOF >/dev/null 2>&1 \
    || $echo 'hw3_2_2.tcl:' 'MD5 check failed'
04f4133fa1653de46fcfdd5696956485  hw3_2_2.tcl
SHAR_EOF
  else
    shar_count="`LC_ALL= LC_CTYPE= LANG= wc -c < 'hw3_2_2.tcl'`"
    test 3511 -eq "$shar_count" ||
    $echo 'hw3_2_2.tcl:' 'original size' '3511,' 'current size' "$shar_count!"
  fi
fi
# ============= hw3_2_3.tcl ==============
if test -f 'hw3_2_3.tcl' && test "$first_param" != -c; then
  $echo 'x -' SKIPPING 'hw3_2_3.tcl' '(file already exists)'
else
  $echo 'x -' extracting 'hw3_2_3.tcl' '(text)'
  sed 's/^X//' << 'SHAR_EOF' > 'hw3_2_3.tcl' &&
#unommet the line below if you are on Windows95
# load vtktcl;
# get the interactor ui
source vtkInt.tcl
X
# create planes
# First create the render master
vtkRenderMaster rm;
X
# Now create the RenderWindow, Renderer and both Actors
#
set renWin [rm MakeRenderWindow];
set ren1   [$renWin MakeRenderer];
set iren [$renWin MakeRenderWindowInteractor];
X
# create pipeline
#
vtkPLOT3DReader pl3d;
X    pl3d SetXYZFilename "combxyz.bin"
X    pl3d SetQFilename "combq.bin"
X    pl3d SetScalarFunctionNumber 100;
X    pl3d SetVectorFunctionNumber 202;
X    pl3d Update;
X
vtkPlaneSource plane;
X    plane SetResolution 50 50;
X
vtkTransform transP1;
X    transP1 Translate 3.7 0.0 28.37;
X    transP1 Scale 5 5 5;
X    transP1 RotateY 90;
vtkTransformPolyFilter tpd1
X    tpd1 SetInput [plane GetOutput];
X    tpd1 SetTransform transP1;
vtkOutlineFilter outTpd1;
X    outTpd1 SetInput [tpd1 GetOutput];
vtkPolyMapper mapTpd1;
X    mapTpd1 SetInput [outTpd1 GetOutput];
vtkActor tpd1Actor;
X    tpd1Actor SetMapper mapTpd1;
X    [tpd1Actor GetProperty] SetColor 0 0 0;
X
vtkTransform transP2;
X    transP2 Translate 9.2 0.0 31.20;
X    transP2 Scale 5 5 5;
X    transP2 RotateY 90;
vtkTransformPolyFilter tpd2
X    tpd2 SetInput [plane GetOutput];
X    tpd2 SetTransform transP2;
vtkOutlineFilter outTpd2;
X    outTpd2 SetInput [tpd2 GetOutput];
vtkPolyMapper mapTpd2;
X    mapTpd2 SetInput [outTpd2 GetOutput];
vtkActor tpd2Actor;
X    tpd2Actor SetMapper mapTpd2;
X    [tpd2Actor GetProperty] SetColor 0 0 0;
X
vtkTransform transP3;
X    transP3 Translate 13.27 0.0 33.30;
X    transP3 Scale 5 5 5;
X    transP3 RotateY 90;
vtkTransformPolyFilter tpd3
X    tpd3 SetInput [plane GetOutput];
X    tpd3 SetTransform transP3;
vtkOutlineFilter outTpd3;
X    outTpd3 SetInput [tpd3 GetOutput];
vtkPolyMapper mapTpd3;
X    mapTpd3 SetInput [outTpd3 GetOutput];
vtkActor tpd3Actor;
X    tpd3Actor SetMapper mapTpd3;
X    [tpd3Actor GetProperty] SetColor 0 0 0;
X
vtkAppendPolyData appendF;
X    appendF AddInput [tpd1 GetOutput];
X    appendF AddInput [tpd2 GetOutput];
X    appendF AddInput [tpd3 GetOutput];
X
vtkProbeFilter probe;
X    probe SetInput [appendF GetOutput];
X    probe SetSource [pl3d GetOutput];
X
##############################
#problem 9.2(c) - Vector Norm#
##############################
vtkVectorNorm norm;
X    norm SetInput [probe GetOutput];
X    norm NormalizeOn;
X
vtkDataSetMapper warperMapper;
X    warperMapper SetInput [norm GetOutput];
X    eval warperMapper SetScalarRange [[pl3d GetOutput] GetScalarRange];
X
vtkActor warperActor;
X    warperActor SetMapper warperMapper;
X
X
vtkStructuredGridOutlineFilter outline;
X    outline SetInput [pl3d GetOutput];
vtkPolyMapper outlineMapper;
X    outlineMapper SetInput [outline GetOutput];
vtkActor outlineActor;
X    outlineActor SetMapper outlineMapper;
X    [outlineActor GetProperty] SetColor 0 0 0;
X
$ren1 AddActors outlineActor;
$ren1 AddActors warperActor;
$ren1 AddActors tpd1Actor;
$ren1 AddActors tpd2Actor;
$ren1 AddActors tpd3Actor;
$ren1 SetBackground 1 1 1;
$renWin SetSize 500 500;
$iren Initialize;
X
set cam1 [$ren1 GetActiveCamera];
$cam1 SetClippingRange 3.95297 50;
$cam1 SetFocalPoint 8.88908 0.595038 29.3342;
$cam1 SetPosition -12.3332 31.7479 41.2387;
$cam1 CalcViewPlaneNormal;
$cam1 SetViewUp 0.060772 -0.319905 0.945498;
X
# render the image
#
$iren SetUserMethod {wm deiconify .vtkInteract};
$renWin Render;
X
# prevent the tk window from showing up then start the event loop
wm withdraw .
X
X
X
SHAR_EOF
  $shar_touch -am 0415182897 'hw3_2_3.tcl' &&
  chmod 0600 'hw3_2_3.tcl' ||
  $echo 'restore of' 'hw3_2_3.tcl' 'failed'
  if ( md5sum --help 2>&1 | grep 'sage: md5sum \[' ) >/dev/null 2>&1 \
  && ( md5sum --version 2>&1 | grep -v 'textutils 1.12' ) >/dev/null; then
    md5sum -c << SHAR_EOF >/dev/null 2>&1 \
    || $echo 'hw3_2_3.tcl:' 'MD5 check failed'
0ccdd787ee8f9a68fa36f85748ef26d9  hw3_2_3.tcl
SHAR_EOF
  else
    shar_count="`LC_ALL= LC_CTYPE= LANG= wc -c < 'hw3_2_3.tcl'`"
    test 3424 -eq "$shar_count" ||
    $echo 'hw3_2_3.tcl:' 'original size' '3424,' 'current size' "$shar_count!"
  fi
fi
# ============= hw3_2_4.tcl ==============
if test -f 'hw3_2_4.tcl' && test "$first_param" != -c; then
  $echo 'x -' SKIPPING 'hw3_2_4.tcl' '(file already exists)'
else
  $echo 'x -' extracting 'hw3_2_4.tcl' '(text)'
  sed 's/^X//' << 'SHAR_EOF' > 'hw3_2_4.tcl' &&
#unommet the line below if you are on Windows95
# load vtktcl;
# get the interactor ui
source vtkInt.tcl
X
# create planes
# First create the render master
vtkRenderMaster rm;
X
# Now create the RenderWindow, Renderer and both Actors
#
set renWin [rm MakeRenderWindow];
set ren1   [$renWin MakeRenderer];
set iren [$renWin MakeRenderWindowInteractor];
X
# create pipeline
#
vtkPLOT3DReader pl3d;
X    pl3d SetXYZFilename "combxyz.bin"
X    pl3d SetQFilename "combq.bin"
X    pl3d SetScalarFunctionNumber 100;
X    pl3d SetVectorFunctionNumber 202;
X    pl3d Update;
X
vtkPlaneSource plane;
X    plane SetResolution 50 50;
X
vtkTransform transP1;
X    transP1 Translate 3.7 0.0 28.37;
X    transP1 Scale 5 5 5;
X    transP1 RotateY 90;
vtkTransformPolyFilter tpd1
X    tpd1 SetInput [plane GetOutput];
X    tpd1 SetTransform transP1;
vtkOutlineFilter outTpd1;
X    outTpd1 SetInput [tpd1 GetOutput];
vtkPolyMapper mapTpd1;
X    mapTpd1 SetInput [outTpd1 GetOutput];
vtkActor tpd1Actor;
X    tpd1Actor SetMapper mapTpd1;
X    [tpd1Actor GetProperty] SetColor 0 0 0;
X
vtkTransform transP2;
X    transP2 Translate 9.2 0.0 31.20;
X    transP2 Scale 5 5 5;
X    transP2 RotateY 90;
vtkTransformPolyFilter tpd2
X    tpd2 SetInput [plane GetOutput];
X    tpd2 SetTransform transP2;
vtkOutlineFilter outTpd2;
X    outTpd2 SetInput [tpd2 GetOutput];
vtkPolyMapper mapTpd2;
X    mapTpd2 SetInput [outTpd2 GetOutput];
vtkActor tpd2Actor;
X    tpd2Actor SetMapper mapTpd2;
X    [tpd2Actor GetProperty] SetColor 0 0 0;
X
vtkTransform transP3;
X    transP3 Translate 13.27 0.0 33.30;
X    transP3 Scale 5 5 5;
X    transP3 RotateY 90;
vtkTransformPolyFilter tpd3
X    tpd3 SetInput [plane GetOutput];
X    tpd3 SetTransform transP3;
vtkOutlineFilter outTpd3;
X    outTpd3 SetInput [tpd3 GetOutput];
vtkPolyMapper mapTpd3;
X    mapTpd3 SetInput [outTpd3 GetOutput];
vtkActor tpd3Actor;
X    tpd3Actor SetMapper mapTpd3;
X    [tpd3Actor GetProperty] SetColor 0 0 0;
X
vtkPointSource seeds;
X    seeds SetRadius 1;
X    eval seeds SetCenter  3.7 0.0 28.37;
X    seeds SetNumberOfPoints 200;
vtkPointSource seeds1;
X    seeds1 SetRadius 1;
X    eval seeds1 SetCenter  9.2 0.0 31.20;
X    seeds1 SetNumberOfPoints 200;
vtkPointSource seeds2;
X    seeds2 SetRadius 1;
X    eval seeds2 SetCenter  13.27 0.0 33.30;
X    seeds2 SetNumberOfPoints 200;
vtkAppendFilter appendF;
X    appendF AddInput [seeds GetOutput];
X    appendF AddInput [seeds1 GetOutput];
X    appendF AddInput [seeds2 GetOutput];
X
##############################
#problem 9.2(c) - Stream Line#
##############################
X
vtkStreamLine streamers;
X    streamers SetInput [pl3d GetOutput];
X    streamers SetSource [appendF GetOutput];
X    streamers SetMaximumPropagationTime 100;
X    streamers SetStepLength 0.01;
X    streamers Update;
X
vtkDataSetMapper warperMapper;
X    warperMapper SetInput [streamers GetOutput];
X    eval warperMapper SetScalarRange [[pl3d GetOutput] GetScalarRange];
X
vtkActor warperActor;
X    warperActor SetMapper warperMapper;
X
X
vtkStructuredGridOutlineFilter outline;
X    outline SetInput [pl3d GetOutput];
vtkPolyMapper outlineMapper;
X    outlineMapper SetInput [outline GetOutput];
vtkActor outlineActor;
X    outlineActor SetMapper outlineMapper;
X    [outlineActor GetProperty] SetColor 0 0 0;
X
$ren1 AddActors outlineActor;
$ren1 AddActors warperActor;
$ren1 AddActors tpd1Actor;
$ren1 AddActors tpd2Actor;
$ren1 AddActors tpd3Actor;
$ren1 SetBackground 1 1 1;
$renWin SetSize 500 500;
$iren Initialize;
X
set cam1 [$ren1 GetActiveCamera];
$cam1 SetClippingRange 3.95297 50;
$cam1 SetFocalPoint 8.88908 0.595038 29.3342;
$cam1 SetPosition -12.3332 31.7479 41.2387;
$cam1 CalcViewPlaneNormal;
$cam1 SetViewUp 0.060772 -0.319905 0.945498;
X
# render the image
#
$iren SetUserMethod {wm deiconify .vtkInteract};
$renWin Render;
X
# prevent the tk window from showing up then start the event loop
wm withdraw .
X
X
X
SHAR_EOF
  $shar_touch -am 0415182897 'hw3_2_4.tcl' &&
  chmod 0600 'hw3_2_4.tcl' ||
  $echo 'restore of' 'hw3_2_4.tcl' 'failed'
  if ( md5sum --help 2>&1 | grep 'sage: md5sum \[' ) >/dev/null 2>&1 \
  && ( md5sum --version 2>&1 | grep -v 'textutils 1.12' ) >/dev/null; then
    md5sum -c << SHAR_EOF >/dev/null 2>&1 \
    || $echo 'hw3_2_4.tcl:' 'MD5 check failed'
a82f6ac591bdd99b7bcc115bd0e0fcec  hw3_2_4.tcl
SHAR_EOF
  else
    shar_count="`LC_ALL= LC_CTYPE= LANG= wc -c < 'hw3_2_4.tcl'`"
    test 3832 -eq "$shar_count" ||
    $echo 'hw3_2_4.tcl:' 'original size' '3832,' 'current size' "$shar_count!"
  fi
fi
rm -fr _sh24023
exit 0

From ???@??? Wed Apr 16 07:18:22 1997
Received: from vccnw13.its.rpi.edu (cheny4@vccnw13.its.rpi.edu [128.113.69.63])
	by mail1.its.rpi.edu (8.8.5/8.8.5) with ESMTP id SAA110252
	for <citrit@rpi.edu>; Tue, 15 Apr 1997 18:41:58 -0400
From: Karyn Yuping Chen <cheny4>
Received: (cheny4@localhost) by vccnw13.its.rpi.edu (8.6.9/8.6.4) id SAA25188 for citrit@rpi.edu; Tue, 15 Apr 1997 18:41:55 -0400
Date: Tue, 15 Apr 1997 18:41:55 -0400
Message-Id: <199704152241.SAA25188@vccnw13.its.rpi.edu>
To: citrit@rpi.edu
Subject: Homework 3
X-UIDL: 9b93222c5dbae4749f1486dc549c4a55

#!/bin/sh
# This is a shell archive (produced by GNU sharutils 4.2).
# To extract the files from this archive, save it to some FILE, remove
# everything before the `!/bin/sh' line above, then type `sh FILE'.
#
# Made on 1997-04-15 18:41 EDT by <cheny4@vccnw13>.
# Source directory was `/afs/rpi.edu/home/04/cheny4/private/gnv/hw3'.
#
# Existing files will *not* be overwritten unless `-c' is specified.
#
# This shar contains:
# length mode       name
# ------ ---------- ------------------------------------------
#   1707 -rw------- contdeci.tcl
#   1453 -rw------- contour.tcl
#   1884 -rw------- mrihdeci.tcl
#   1554 -rw------- mrihead.tcl
#   3583 -rw------- phhog.tcl
#   4316 -rw------- pStr.tcl
#   3576 -rw------- pwarp.tcl
#   3621 -rw------- pvnorm.tcl
#
save_IFS="${IFS}"
IFS="${IFS}:"
gettext_dir=FAILED
locale_dir=FAILED
first_param="$1"
for dir in $PATH
do
  if test "$gettext_dir" = FAILED && test -f $dir/gettext \
     && ($dir/gettext --version >/dev/null 2>&1)
  then
    set `$dir/gettext --version 2>&1`
    if test "$3" = GNU
    then
      gettext_dir=$dir
    fi
  fi
  if test "$locale_dir" = FAILED && test -f $dir/shar \
     && ($dir/shar --print-text-domain-dir >/dev/null 2>&1)
  then
    locale_dir=`$dir/shar --print-text-domain-dir`
  fi
done
IFS="$save_IFS"
if test "$locale_dir" = FAILED || test "$gettext_dir" = FAILED
then
  echo=echo
else
  TEXTDOMAINDIR=$locale_dir
  export TEXTDOMAINDIR
  TEXTDOMAIN=sharutils
  export TEXTDOMAIN
  echo="$gettext_dir/gettext -s"
fi
touch -am 1231235999 $$.touch >/dev/null 2>&1
if test ! -f 1231235999 && test -f $$.touch; then
  shar_touch=touch
else
  shar_touch=:
  echo
  $echo 'WARNING: not restoring timestamps.  Consider getting and'
  $echo "installing GNU \`touch', distributed in GNU File Utilities..."
  echo
fi
rm -f 1231235999 $$.touch
#
if mkdir _sh03394; then
  $echo 'x -' 'creating lock directory'
else
  $echo 'failed to create lock directory'
  exit 1
fi
# ============= contdeci.tcl ==============
if test -f 'contdeci.tcl' && test "$first_param" != -c; then
  $echo 'x -' SKIPPING 'contdeci.tcl' '(file already exists)'
else
  $echo 'x -' extracting 'contdeci.tcl' '(text)'
  sed 's/^X//' << 'SHAR_EOF' > 'contdeci.tcl' &&
# Yuping Chen
# HW#3 contour.tcl
#
#load vtktcl;
# user interface command widget
source /campus/visualization/vtk/1.3/common/examplesTcl/vtkInt.tcl
X
# create a rendering window and renderer
vtkRenderMaster rm;
set renWin [rm MakeRenderWindow];
set ren1 [$renWin MakeRenderer];
set iren [$renWin MakeRenderWindowInteractor];
X
vtkQuadric quad;
X  quad SetCoefficients  0.5 1 .2 0 .1 0 0 .2 0 0;
vtkSampleFunction sample;
X  sample SetSampleDimensions 50 50 50;
X  sample SetImplicitFunction quad;
#  sample SetScalarFunctionNumber 100;
#  sample SetVectorFunc tionNumber 202;
X  sample Update;
X  
vtkContourFilter cf;
X   cf SetInput [sample GetOutput];
X   cf GenerateValues 5 0.0 1.2;
X  	
vtkDecimate deci; 
X    deci SetInput [cf GetOutput];
X    deci SetTargetReduction 0.5;
X    deci SetAspectRatio 20;
X    deci SetInitialError 0.0002;
X    deci SetErrorIncrement 0.0005;
X    deci SetMaximumIterations 6;
X    deci SetInitialFeatureAngle 45;
X
vtkPolyNormals normals;
X    normals SetInput [deci GetOutput];
X
vtkPolyMapper contMapper;
X  contMapper SetInput [normals GetOutput];
#  eval cutMapper SetScalarRange [sample GetOutput];
X
vtkActor contActor;
X  contActor SetMapper contMapper;
X
# assign our actor to the renderer
$ren1 SetBackground 1 1 1;
$ren1 AddActors contActor;
X
X
# enable user interface interactor
$iren SetUserMethod {wm deiconify .vtkInteract};
$iren Initialize;
set min 0.0;
set max 1.2;
X
# loop over iso-surfaces
for {set nloops 0} {$nloops < 5} {incr nloops} {
X      set value [expr $min+ $nloops*($max/5)];
X      cf SetInput [sample GetOutput];
X      cf GenerateValues $nloops $min $value;
X      $renWin Render;
}
X
# prevent the tk window from showing up then start the event loop
wm withdraw .
X
SHAR_EOF
  $shar_touch -am 0415172097 'contdeci.tcl' &&
  chmod 0600 'contdeci.tcl' ||
  $echo 'restore of' 'contdeci.tcl' 'failed'
  if ( md5sum --help 2>&1 | grep 'sage: md5sum \[' ) >/dev/null 2>&1 \
  && ( md5sum --version 2>&1 | grep -v 'textutils 1.12' ) >/dev/null; then
    md5sum -c << SHAR_EOF >/dev/null 2>&1 \
    || $echo 'contdeci.tcl:' 'MD5 check failed'
09aa705ba784a888bce11a83bf2a79e8  contdeci.tcl
SHAR_EOF
  else
    shar_count="`LC_ALL= LC_CTYPE= LANG= wc -c < 'contdeci.tcl'`"
    test 1707 -eq "$shar_count" ||
    $echo 'contdeci.tcl:' 'original size' '1707,' 'current size' "$shar_count!"
  fi
fi
# ============= contour.tcl ==============
if test -f 'contour.tcl' && test "$first_param" != -c; then
  $echo 'x -' SKIPPING 'contour.tcl' '(file already exists)'
else
  $echo 'x -' extracting 'contour.tcl' '(text)'
  sed 's/^X//' << 'SHAR_EOF' > 'contour.tcl' &&
# Yuping Chen
# HW#3 contour.tcl
#
#load vtktcl;
# user interface command widget
source /campus/visualization/vtk/1.3/common/examplesTcl/vtkInt.tcl
X
# create a rendering window and renderer
vtkRenderMaster rm;
set renWin [rm MakeRenderWindow];
set ren1 [$renWin MakeRenderer];
set iren [$renWin MakeRenderWindowInteractor];
X
vtkQuadric quad;
X  quad SetCoefficients  0.5 1 .2 0 .1 0 0 .2 0 0;
vtkSampleFunction sample;
X  sample SetSampleDimensions 50 50 50;
X  sample SetImplicitFunction quad;
#  sample SetScalarFunctionNumber 100;
#  sample SetVectorFunc tionNumber 202;
X  sample Update;
X  
vtkContourFilter cf;
X   cf SetInput [sample GetOutput];
X   cf GenerateValues 5 0.0 1.2;
X  	
vtkPolyNormals normals;
X    normals SetInput [cf GetOutput];
X
vtkPolyMapper contMapper;
X  contMapper SetInput [normals GetOutput];
#  eval cutMapper SetScalarRange [sample GetOutput];
X
vtkActor contActor;
X  contActor SetMapper contMapper;
X
# assign our actor to the renderer
$ren1 SetBackground 1 1 1;
$ren1 AddActors contActor;
X
X
# enable user interface interactor
$iren SetUserMethod {wm deiconify .vtkInteract};
$iren Initialize;
set min 0.0;
set max 1.2;
X
# loop over iso-surfaces
for {set nloops 0} {$nloops < 5} {incr nloops} {
X      set value [expr $min+ $nloops*($max/5)];
X      cf SetInput [sample GetOutput];
X      cf GenerateValues $nloops $min $value;
X      $renWin Render;
}
X
# prevent the tk window from showing up then start the event loop
wm withdraw .
X
SHAR_EOF
  $shar_touch -am 0415172397 'contour.tcl' &&
  chmod 0600 'contour.tcl' ||
  $echo 'restore of' 'contour.tcl' 'failed'
  if ( md5sum --help 2>&1 | grep 'sage: md5sum \[' ) >/dev/null 2>&1 \
  && ( md5sum --version 2>&1 | grep -v 'textutils 1.12' ) >/dev/null; then
    md5sum -c << SHAR_EOF >/dev/null 2>&1 \
    || $echo 'contour.tcl:' 'MD5 check failed'
0b797d040175cb2fc3d90aaa2d830cc8  contour.tcl
SHAR_EOF
  else
    shar_count="`LC_ALL= LC_CTYPE= LANG= wc -c < 'contour.tcl'`"
    test 1453 -eq "$shar_count" ||
    $echo 'contour.tcl:' 'original size' '1453,' 'current size' "$shar_count!"
  fi
fi
# ============= mrihdeci.tcl ==============
if test -f 'mrihdeci.tcl' && test "$first_param" != -c; then
  $echo 'x -' SKIPPING 'mrihdeci.tcl' '(file already exists)'
else
  $echo 'x -' extracting 'mrihdeci.tcl' '(text)'
  sed 's/^X//' << 'SHAR_EOF' > 'mrihdeci.tcl' &&
# Yuping Chen
# HW3#3 Mhw3.tcl - MRIhead w/ decimation
# If you are using Window95 and vtk 1.3 uncomment the line below
# load vtktcl;
X
# get the interactor ui
source /campus/visualization/vtk/1.3/common/examplesTcl/vtkInt.tcl
X
# First create the render master
vtkRenderMaster rm;
X
# Now create the RenderWindow, Renderer
#
set renWin [rm MakeRenderWindow];
set ren1   [$renWin MakeRenderer];
set iren   [$renWin MakeRenderWindowInteractor];
X
#
# Load up the data
vtkStructuredPointsReader vol;
X    vol SetFilename "MRIdata.vtk"
X    vol DebugOn;
X
vtkMarchingCubes contour;
X  contour SetInput [vol GetOutput];
X  contour SetValue 0 225.0;
X
vtkDecimate deci; 
X    deci SetInput [contour GetOutput];
X    deci SetTargetReduction 0.9;
X
#vtkConnectivityFilter connect;
#    connect SetInput [deci GetOutput];
#    connect ExtractLargestRegion;
X    
#vtkPolyNormals normals;
#    normals SetInput [connect GetOutput];
X
vtkPolyMapper volMapper;
X  volMapper SetInput [deci GetOutput];
X  volMapper ScalarsVisibleOff;
X
vtkActor volActor;
X  volActor SetMapper volMapper;
X
vtkOutlineFilter outLine;
X  outLine SetInput [vol GetOutput];
X
vtkPolyMapper outMapper;
X  outMapper SetInput [outLine GetOutput];
X
vtkActor outActor;
X  outActor SetMapper outMapper;
X
# Add the actors to the renderer, set the background and size
#
$ren1 AddActors outActor;
$ren1 AddActors volActor;
$ren1 SetBackground 0 0 0;
$renWin SetSize 500 400;
$iren Initialize;
X
# render the image
#
$iren SetUserMethod {wm deiconify .vtkInteract};
$renWin Render;
X
set isovalue 225.0;
# loop over iso-surfaces
for {set nloops 0} {$nloops < 20} {incr nloops} {
X      set value [expr $nloops*($isovalue/20)];
#      set value [expr $isovalue-10];
X      contour SetInput [vol GetOutput];
X      contour GenerateValues 0 0.0 $value;
X      $renWin Render;
}
# prevent the tk window from showing up then start the event loop
wm withdraw .
X
SHAR_EOF
  $shar_touch -am 0415183497 'mrihdeci.tcl' &&
  chmod 0600 'mrihdeci.tcl' ||
  $echo 'restore of' 'mrihdeci.tcl' 'failed'
  if ( md5sum --help 2>&1 | grep 'sage: md5sum \[' ) >/dev/null 2>&1 \
  && ( md5sum --version 2>&1 | grep -v 'textutils 1.12' ) >/dev/null; then
    md5sum -c << SHAR_EOF >/dev/null 2>&1 \
    || $echo 'mrihdeci.tcl:' 'MD5 check failed'
b17ac6c2f4fc8f7432c1a060d4e9469e  mrihdeci.tcl
SHAR_EOF
  else
    shar_count="`LC_ALL= LC_CTYPE= LANG= wc -c < 'mrihdeci.tcl'`"
    test 1884 -eq "$shar_count" ||
    $echo 'mrihdeci.tcl:' 'original size' '1884,' 'current size' "$shar_count!"
  fi
fi
# ============= mrihead.tcl ==============
if test -f 'mrihead.tcl' && test "$first_param" != -c; then
  $echo 'x -' SKIPPING 'mrihead.tcl' '(file already exists)'
else
  $echo 'x -' extracting 'mrihead.tcl' '(text)'
  sed 's/^X//' << 'SHAR_EOF' > 'mrihead.tcl' &&
# Yuping Chen
# HW3#3 Mhw3.tcl - MRIhead
#
# If you are using Window95 and vtk 1.3 uncomment the line below
# load vtktcl;
X
# get the interactor ui
source /campus/visualization/vtk/1.3/common/examplesTcl/vtkInt.tcl
X
# First create the render master
vtkRenderMaster rm;
X
# Now create the RenderWindow, Renderer
#
set renWin [rm MakeRenderWindow];
set ren1   [$renWin MakeRenderer];
set iren   [$renWin MakeRenderWindowInteractor];
X
#
# Load up the data
vtkStructuredPointsReader vol;
X    vol SetFilename "MRIdata.vtk"
X    vol DebugOn;
X
vtkMarchingCubes contour;
X  contour SetInput [vol GetOutput];
X  contour SetValue 0 225.0;
X
vtkPolyMapper volMapper;
X  volMapper SetInput [contour GetOutput];
X  volMapper ScalarsVisibleOff;
X
vtkActor volActor;
X  volActor SetMapper volMapper;
X
vtkOutlineFilter outLine;
X  outLine SetInput [vol GetOutput];
X
vtkPolyMapper outMapper;
X  outMapper SetInput [outLine GetOutput];
X
vtkActor outActor;
X  outActor SetMapper outMapper;
X
# Add the actors to the renderer, set the background and size
#
$ren1 AddActors outActor;
$ren1 AddActors volActor;
$ren1 SetBackground 0 0 0;
$renWin SetSize 500 400;
$iren Initialize;
X
# render the image
#
$iren SetUserMethod {wm deiconify .vtkInteract};
$renWin Render;
X
set isovalue 225.0;
# loop over iso-surfaces
for {set nloops 0} {$nloops < 50} {incr nloops} {
X      set value [expr $nloops*($isovalue/50)];
X      contour SetInput [vol GetOutput];
X      contour SetValue 0 $value;
X      $renWin Render;
}
# prevent the tk window from showing up then start the event loop
wm withdraw .
X
SHAR_EOF
  $shar_touch -am 0415173897 'mrihead.tcl' &&
  chmod 0600 'mrihead.tcl' ||
  $echo 'restore of' 'mrihead.tcl' 'failed'
  if ( md5sum --help 2>&1 | grep 'sage: md5sum \[' ) >/dev/null 2>&1 \
  && ( md5sum --version 2>&1 | grep -v 'textutils 1.12' ) >/dev/null; then
    md5sum -c << SHAR_EOF >/dev/null 2>&1 \
    || $echo 'mrihead.tcl:' 'MD5 check failed'
937d9c3c7c1d71d6b0ac4d74bf052cd9  mrihead.tcl
SHAR_EOF
  else
    shar_count="`LC_ALL= LC_CTYPE= LANG= wc -c < 'mrihead.tcl'`"
    test 1554 -eq "$shar_count" ||
    $echo 'mrihead.tcl:' 'original size' '1554,' 'current size' "$shar_count!"
  fi
fi
# ============= phhog.tcl ==============
if test -f 'phhog.tcl' && test "$first_param" != -c; then
  $echo 'x -' SKIPPING 'phhog.tcl' '(file already exists)'
else
  $echo 'x -' extracting 'phhog.tcl' '(binary)'
  sed 's/^X//' << 'SHAR_EOF' | uudecode &&
begin 600 phhog.tcl
M(W5N;VUM970@=&AE(&QI;F4@8F5L;W<@:68@>6]U(&%R92!O;B!7:6YD;W=S
M.34*(R!L;V%D('9T:W1C;#L*(R!G970@=&AE(&EN=&5R86-T;W(@=6D*<V]U
M<F-E("]C86UP=7,O=FES=6%L:7IA=&EO;B]V=&LO,2XS+V-O;6UO;B]E>&%M
M<&QE<U1C;"]V=&M);G0N=&-L"@HC(&-R96%T92!P;&%N97,*(R!&:7)S="!C
M<F5A=&4@=&AE(')E;F1E<B!M87-T97(*=G1K4F5N9&5R36%S=&5R(')M.PH*
M(R!.;W<@8W)E871E('1H92!296YD97)7:6YD;W<L(%)E;F1E<F5R(&%N9"!B
M;W1H($%C=&]R<PHC"G-E="!R96Y7:6X@6W)M($UA:V5296YD97)7:6YD;W==
M.PIS970@<F5N,2`@(%LD<F5N5VEN($UA:V5296YD97)E<ET["G-E="!I<F5N
M(%LD<F5N5VEN($UA:V5296YD97)7:6YD;W=);G1E<F%C=&]R73L*"B,@8W)E
M871E('!I<&5L:6YE"B,*=G1K4$Q/5#-$4F5A9&5R('!L,V0["B`@("!P;#-D
M(%-E=%A96D9I;&5N86UE(")C;VUB>'EZ+F)I;B(*("`@('!L,V0@4V5T449I
M;&5N86UE(")C;VUB<2YB:6XB"B`@("!P;#-D(%-E=%-C86QA<D9U;F-T:6]N
M3G5M8F5R(#$P,#L*("`@('!L,V0@4V5T5F5C=&]R1G5N8W1I;VY.=6UB97(@
M,C`R.PH@("`@<&PS9"!5<&1A=&4["@IV=&M0;&%N95-O=7)C92!P;&%N93L*
M("`@('!L86YE(%-E=%)E<V]L=71I;VX@-3`@-3`["G9T:U1R86YS9F]R;2!T
M<F%N<U`Q.PH@("`@=')A;G-0,2!4<F%N<VQA=&4@,RXW(#`N,"`R."XS-SL*
M("`@('1R86YS4#$@4V-A;&4@-2`U(#4["B`@("!T<F%N<U`Q(%)O=&%T95D@
M.3`["G9T:U1R86YS9F]R;5!O;'E&:6QT97(@='!D,0H@("`@='!D,2!3971)
M;G!U="!;<&QA;F4@1V5T3W5T<'5T73L*("`@('1P9#$@4V5T5')A;G-F;W)M
M('1R86YS4#$["G9T:T]U=&QI;F5&:6QT97(@;W5T5'!D,3L*("`@(&]U=%1P
M9#$@4V5T26YP=70@6W1P9#$@1V5T3W5T<'5T73L*=G1K4&]L>4UA<'!E<B!M
M87!4<&0Q.PH@("`@;6%P5'!D,2!3971);G!U="!;;W5T5'!D,2!'971/=71P
M=71=.PIV=&M!8W1O<B!T<&0Q06-T;W(["B`@("!T<&0Q06-T;W(@4V5T36%P
M<&5R(&UA<%1P9#$["B`@("!;='!D,4%C=&]R($=E=%!R;W!E<G1Y72!3971#
M;VQO<B`P(#`@,#L*"G9T:U1R86YS9F]R;2!T<F%N<U`R.PH@("`@=')A;G-0
M,B!4<F%N<VQA=&4@.2XR(#`N,"`S,2XR,#L*("`@('1R86YS4#(@4V-A;&4@
M-2`U(#4["B`@("!T<F%N<U`R(%)O=&%T95D@.3`["G9T:U1R86YS9F]R;5!O
M;'E&:6QT97(@='!D,@H@("`@='!D,B!3971);G!U="!;<&QA;F4@1V5T3W5T
M<'5T73L*("`@('1P9#(@4V5T5')A;G-F;W)M('1R86YS4#(["G9T:T]U=&QI
M;F5&:6QT97(@;W5T5'!D,CL*("`@(&]U=%1P9#(@4V5T26YP=70@6W1P9#(@
M1V5T3W5T<'5T73L*=G1K4&]L>4UA<'!E<B!M87!4<&0R.PH@("`@;6%P5'!D
M,B!3971);G!U="!;;W5T5'!D,B!'971/=71P=71=.PIV=&M!8W1O<B!T<&0R
M06-T;W(["B`@("!T<&0R06-T;W(@4V5T36%P<&5R(&UA<%1P9#(["B`@("!;
M='!D,D%C=&]R($=E=%!R;W!E<G1Y72!3971#;VQO<B`P(#`@,#L*"G9T:U1R
M86YS9F]R;2!T<F%N<U`S.PH@("`@=')A;G-0,R!4<F%N<VQA=&4@,3,N,C<@
M,"XP(#,S+C,P.PH@("`@=')A;G-0,R!38V%L92`U(#4@-3L*("`@('1R86YS
M4#,@4F]T871E62`Y,#L*=G1K5')A;G-F;W)M4&]L>49I;'1E<B!T<&0S"B`@
M("!T<&0S(%-E=$EN<'5T(%MP;&%N92!'971/=71P=71=.PH@("`@='!D,R!3
M9714<F%N<V9O<FT@=')A;G-0,SL*=G1K3W5T;&EN949I;'1E<B!O=714<&0S
M.PH@("`@;W5T5'!D,R!3971);G!U="!;='!D,R!'971/=71P=71=.PIV=&M0
M;VQY36%P<&5R(&UA<%1P9#,["B`@("!M87!4<&0S(%-E=$EN<'5T(%MO=714
M<&0S($=E=$]U='!U=%T["G9T:T%C=&]R('1P9#-!8W1O<CL*("`@('1P9#-!
M8W1O<B!3971-87!P97(@;6%P5'!D,SL*("`@(%MT<&0S06-T;W(@1V5T4')O
M<&5R='E=(%-E=$-O;&]R(#`@,"`P.PH*=G1K07!P96YD4&]L>41A=&$@87!P
M96YD1CL*("`@(&%P<&5N9$8@061D26YP=70@6W1P9#$@1V5T3W5T<'5T73L-
M"B`@("!A<'!E;F1&($%D9$EN<'5T(%MT<&0R($=E=$]U='!U=%T["B`@("!A
M<'!E;F1&($%D9$EN<'5T(%MT<&0S($=E=$]U='!U=%T["@IV=&M0<F]B949I
M;'1E<B!P<F]B93L*("`@('!R;V)E(%-E=$EN<'5T(%MA<'!E;F1&($=E=$]U
M='!U=%T["B`@("!P<F]B92!39713;W5R8V4@6W!L,V0@1V5T3W5T<'5T73L*
M"B-V=&M#;VYT;W5R1FEL=&5R(&-O;G1O=7(["B,@("`@8V]N=&]U<B!3971)
M;G!U="!;<')O8F4@1V5T3W5T<'5T73L*(R`@("!E=F%L(&-O;G1O=7(@1V5N
M97)A=&5686QU97,@-3`@6UMP;#-D($=E=$]U='!U=%T@1V5T4V-A;&%R4F%N
M9V5=.PH*=G1K2&5D9V5(;V<@:&AO9SL*("`@(&AH;V<@4V5T26YP=70@6W!R
M;V)E($=E=$]U='!U=%T["B`@("!H:&]G(%-E=%-C86QE1F%C=&]R(#`N,#`X
M.PHC("`@(&5V86P@:&5D9V5H;V<@4V5T4V-A;&5&86-T;W(@6UMP;#-D($=E
M=$]U='!U=%T@1V5T4V-A;&5&86-T;W)=.PD*"@IV=&M0;VQY36%P<&5R(&AH
M;V=-87!P97(["B`@("!H:&]G36%P<&5R(%-E=$EN<'5T(%MH:&]G($=E=$]U
M='!U=%T["B`@("!E=F%L(&AH;V=-87!P97(@4V5T4V-A;&%R4F%N9V4@6UMP
M;#-D($=E=$]U='!U=%T@1V5T4V-A;&%R4F%N9V5=.PH*=G1K06-T;W(@<&QA
M;F5!8W1O<CL*("`@('!L86YE06-T;W(@4V5T36%P<&5R(&AH;V=-87!P97([
M"@IV=&M3=')U8W1U<F5D1W)I9$]U=&QI;F5&:6QT97(@;W5T;&EN93L*("`@
M(&]U=&QI;F4@4V5T26YP=70@6W!L,V0@1V5T3W5T<'5T73L*=G1K4&]L>4UA
M<'!E<B!O=71L:6YE36%P<&5R.PH@("`@;W5T;&EN94UA<'!E<B!3971);G!U
M="!;;W5T;&EN92!'971/=71P=71=.PIV=&M!8W1O<B!O=71L:6YE06-T;W([
M"B`@("!O=71L:6YE06-T;W(@4V5T36%P<&5R(&]U=&QI;F5-87!P97(["B`@
M("!;;W5T;&EN94%C=&]R($=E=%!R;W!E<G1Y72!3971#;VQO<B`P(#`@,#L*
M"B1R96XQ($%D9$%C=&]R<R!O=71L:6YE06-T;W(["B1R96XQ($%D9$%C=&]R
M<R!P;&%N94%C=&]R.PHD<F5N,2!!9&1!8W1O<G,@='!D,4%C=&]R.PHD<F5N
M,2!!9&1!8W1O<G,@='!D,D%C=&]R.PHD<F5N,2!!9&1!8W1O<G,@='!D,T%C
M=&]R.PHD<F5N,2!3971"86-K9W)O=6YD(#$@,2`Q.PHD<F5N5VEN(%-E=%-I
M>F4@-3`P(#4P,#L*)&ER96X@26YI=&EA;&EZ93L*"G-E="!C86TQ(%LD<F5N
M,2!'971!8W1I=F5#86UE<F%=.PHD8V%M,2!3971#;&EP<&EN9U)A;F=E(#,N
M.34R.3<@-3`["B1C86TQ(%-E=$9O8V%L4&]I;G0@."XX.#DP."`P+C4Y-3`S
M."`R.2XS,S0R.PHD8V%M,2!39710;W-I=&EO;B`M,3(N,S,S,B`S,2XW-#<Y
M(#0Q+C(S.#<["B1C86TQ($-A;&-6:65W4&QA;F5.;W)M86P["B1C86TQ(%-E
M=%9I97=5<"`P+C`V,#<W,B`M,"XS,3DY,#4@,"XY-#4T.3@["@HC(')E;F1E
M<B!T:&4@:6UA9V4*(PHD:7)E;B!39715<V5R365T:&]D('MW;2!D96EC;VYI
M9GD@+G9T:TEN=&5R86-T?3L*)')E;E=I;B!296YD97(["@HC('!R979E;G0@
M=&AE('1K('=I;F1O=R!F<F]M('-H;W=I;F<@=7`@=&AE;B!S=&%R="!T:&4@
<979E;G0@;&]O<`IW;2!W:71H9')A=R`N"@H*"G`@
`
end
SHAR_EOF
  $shar_touch -am 0412170397 'phhog.tcl' &&
  chmod 0600 'phhog.tcl' ||
  $echo 'restore of' 'phhog.tcl' 'failed'
  if ( md5sum --help 2>&1 | grep 'sage: md5sum \[' ) >/dev/null 2>&1 \
  && ( md5sum --version 2>&1 | grep -v 'textutils 1.12' ) >/dev/null; then
    md5sum -c << SHAR_EOF >/dev/null 2>&1 \
    || $echo 'phhog.tcl:' 'MD5 check failed'
08234db2fe07671816a143ac2cde81b4  phhog.tcl
SHAR_EOF
  else
    shar_count="`LC_ALL= LC_CTYPE= LANG= wc -c < 'phhog.tcl'`"
    test 3583 -eq "$shar_count" ||
    $echo 'phhog.tcl:' 'original size' '3583,' 'current size' "$shar_count!"
  fi
fi
# ============= pStr.tcl ==============
if test -f 'pStr.tcl' && test "$first_param" != -c; then
  $echo 'x -' SKIPPING 'pStr.tcl' '(file already exists)'
else
  $echo 'x -' extracting 'pStr.tcl' '(text)'
  sed 's/^X//' << 'SHAR_EOF' > 'pStr.tcl' &&
#Yuping Chen
#HW#3 pStr.tcl 9.4b
#
#unommet the line below if you are on Windows95
# load vtktcl;
# get the interactor ui
source /campus/visualization/vtk/1.3/common/examplesTcl/vtkInt.tcl
X
# create planes
# First create the render master
vtkRenderMaster rm;
X
# Now create the RenderWindow, Renderer and both Actors
#
set renWin [rm MakeRenderWindow];
set ren1   [$renWin MakeRenderer];
set iren [$renWin MakeRenderWindowInteractor];
X
# create pipeline
#
vtkPLOT3DReader pl3d;
X    pl3d SetXYZFilename "combxyz.bin"
X    pl3d SetQFilename "combq.bin"
X    pl3d SetScalarFunctionNumber 100;
X    pl3d SetVectorFunctionNumber 202;
X    pl3d Update;
X    
vtkPlaneSource plane;
X    plane SetResolution 50 50;
vtkTransform transP1;
X    transP1 Translate 3.7 0.0 28.37;
X    transP1 Scale 5 5 5;
X    transP1 RotateY 90;
vtkTransformPolyFilter tpd1
X    tpd1 SetInput [plane GetOutput];
X    tpd1 SetTransform transP1;
vtkOutlineFilter outTpd1;
X    outTpd1 SetInput [tpd1 GetOutput];
vtkPolyMapper mapTpd1;
X    mapTpd1 SetInput [outTpd1 GetOutput];
vtkActor tpd1Actor;
X    tpd1Actor SetMapper mapTpd1;
X    [tpd1Actor GetProperty] SetColor 0 0 0;
X
vtkTransform transP2;
X    transP2 Translate 9.2 0.0 31.20;
X    transP2 Scale 5 5 5;
X    transP2 RotateY 90;
vtkTransformPolyFilter tpd2
X    tpd2 SetInput [plane GetOutput];
X    tpd2 SetTransform transP2;
vtkOutlineFilter outTpd2;
X    outTpd2 SetInput [tpd2 GetOutput];
vtkPolyMapper mapTpd2;
X    mapTpd2 SetInput [outTpd2 GetOutput];
vtkActor tpd2Actor;
X    tpd2Actor SetMapper mapTpd2;
X    [tpd2Actor GetProperty] SetColor 0 0 0;
X
vtkTransform transP3;
X    transP3 Translate 13.27 0.0 33.30;
X    transP3 Scale 5 5 5;
X    transP3 RotateY 90;
vtkTransformPolyFilter tpd3
X    tpd3 SetInput [plane GetOutput];
X    tpd3 SetTransform transP3;
vtkOutlineFilter outTpd3;
X    outTpd3 SetInput [tpd3 GetOutput];
vtkDataSetMapper mapTpd3;
X    mapTpd3 SetInput [outTpd3 GetOutput];
vtkActor tpd3Actor;
X    tpd3Actor SetMapper mapTpd3;
X    [tpd3Actor GetProperty] SetColor 0 0 0;
X
vtkAppendPolyData appendF;
X    appendF AddInput [tpd1 GetOutput];
X    appendF AddInput [tpd2 GetOutput];
X    appendF AddInput [tpd3 GetOutput];
X
#vtkProbeFilter probe;
#    probe SetInput [appendF GetOutput];
#    probe SetSource [pl3d GetOutput];
#vtkContourFilter contour;
#    contour SetInput [probe GetOutput];
#    eval contour GenerateValues 50 [[pl3d GetOutput] GetScalarRange];
##### HW#3 9.4 StreamLine
X
# Create source for streamtubes
vtkPointSource seeds1;
X    eval seeds1 SetCenter 3.7 0.0 28.37;
X    seeds1 SetRadius 0.6;    
X    seeds1 SetNumberOfPoints 300;
X
vtkPointSource seeds2;
X    eval seeds2 SetCenter 9.2 0.0 31.20;
X    seeds2 SetRadius 0.9;    
X    seeds2 SetNumberOfPoints 500;
X
vtkPointSource seeds3;
X    eval seeds3 SetCenter 13.27 0.0 33.3;
X    seeds3 SetRadius 0.8;    
X    seeds3 SetNumberOfPoints 400;
X
vtkAppendFilter seeds;
X    seeds AddInput [seeds1 GetOutput];
X    seeds AddInput [seeds2 GetOutput];
X    seeds AddInput [seeds3 GetOutput];
X
vtkStreamLine streamers;
X    streamers SetInput [pl3d GetOutput];
X    streamers SetSource [seeds GetOutput];
X    streamers SetMaximumPropagationTime 100;
X    streamers SetStepLength 0.1;
X    streamers Update;
X
vtkPolyMapper streamMapper;
X    streamMapper SetInput [streamers GetOutput];
X    streamMapper SetScalarRange 2 10;
X    eval streamMapper SetScalarRange [[pl3d GetOutput] GetScalarRange];
X
vtkActor planeActor;
X    planeActor SetMapper streamMapper;
X
vtkStructuredGridOutlineFilter outline;
X    outline SetInput [pl3d GetOutput];
vtkPolyMapper outlineMapper;
X    outlineMapper SetInput [outline GetOutput];
vtkActor outlineActor;
X    outlineActor SetMapper outlineMapper;
X    [outlineActor GetProperty] SetColor 0 0 0;
X
$ren1 AddActors outlineActor;
$ren1 AddActors planeActor;
$ren1 AddActors tpd1Actor;
$ren1 AddActors tpd2Actor;
$ren1 AddActors tpd3Actor;
$ren1 SetBackground 1 1 1;
$renWin SetSize 500 500;
$iren Initialize;
X
set cam1 [$ren1 GetActiveCamera];
$cam1 SetClippingRange 3.95297 50;
$cam1 SetFocalPoint 8.88908 0.595038 29.3342;
$cam1 SetPosition -12.3332 31.7479 41.2387;
$cam1 CalcViewPlaneNormal;
$cam1 SetViewUp 0.060772 -0.319905 0.945498;
X
# render the image
#
$iren SetUserMethod {wm deiconify .vtkInteract};
$renWin Render;
X
# prevent the tk window from showing up then start the event loop
wm withdraw .
X
X
X
SHAR_EOF
  $shar_touch -am 0415173297 'pStr.tcl' &&
  chmod 0600 'pStr.tcl' ||
  $echo 'restore of' 'pStr.tcl' 'failed'
  if ( md5sum --help 2>&1 | grep 'sage: md5sum \[' ) >/dev/null 2>&1 \
  && ( md5sum --version 2>&1 | grep -v 'textutils 1.12' ) >/dev/null; then
    md5sum -c << SHAR_EOF >/dev/null 2>&1 \
    || $echo 'pStr.tcl:' 'MD5 check failed'
46601314797babdc12f060f34aeb3586  pStr.tcl
SHAR_EOF
  else
    shar_count="`LC_ALL= LC_CTYPE= LANG= wc -c < 'pStr.tcl'`"
    test 4316 -eq "$shar_count" ||
    $echo 'pStr.tcl:' 'original size' '4316,' 'current size' "$shar_count!"
  fi
fi
# ============= pwarp.tcl ==============
if test -f 'pwarp.tcl' && test "$first_param" != -c; then
  $echo 'x -' SKIPPING 'pwarp.tcl' '(file already exists)'
else
  $echo 'x -' extracting 'pwarp.tcl' '(text)'
  sed 's/^X//' << 'SHAR_EOF' > 'pwarp.tcl' &&
#Yuping Chen
#HW#3 pwarp.tcl 9.4c
#
#unommet the line below if you are on Windows95
# load vtktcl;
# get the interactor ui
source /campus/visualization/vtk/1.3/common/examplesTcl/vtkInt.tcl
X
# create planes
# First create the render master
vtkRenderMaster rm;
X
# Now create the RenderWindow, Renderer and both Actors
#
set renWin [rm MakeRenderWindow];
set ren1   [$renWin MakeRenderer];
set iren [$renWin MakeRenderWindowInteractor];
X
# create pipeline
#
vtkPLOT3DReader pl3d;
X    pl3d SetXYZFilename "combxyz.bin"
X    pl3d SetQFilename "combq.bin"
X    pl3d SetScalarFunctionNumber 100;
X    pl3d SetVectorFunctionNumber 202;
X    pl3d Update;
X
vtkPlaneSource plane;
X    plane SetResolution 50 50;
vtkTransform transP1;
X    transP1 Translate 3.7 0.0 28.37;
X    transP1 Scale 5 5 5;
X    transP1 RotateY 90;
vtkTransformPolyFilter tpd1
X    tpd1 SetInput [plane GetOutput];
X    tpd1 SetTransform transP1;
vtkOutlineFilter outTpd1;
X    outTpd1 SetInput [tpd1 GetOutput];
vtkPolyMapper mapTpd1;
X    mapTpd1 SetInput [outTpd1 GetOutput];
vtkActor tpd1Actor;
X    tpd1Actor SetMapper mapTpd1;
X    [tpd1Actor GetProperty] SetColor 0 0 0;
X
vtkTransform transP2;
X    transP2 Translate 9.2 0.0 31.20;
X    transP2 Scale 5 5 5;
X    transP2 RotateY 90;
vtkTransformPolyFilter tpd2
X    tpd2 SetInput [plane GetOutput];
X    tpd2 SetTransform transP2;
vtkOutlineFilter outTpd2;
X    outTpd2 SetInput [tpd2 GetOutput];
vtkPolyMapper mapTpd2;
X    mapTpd2 SetInput [outTpd2 GetOutput];
vtkActor tpd2Actor;
X    tpd2Actor SetMapper mapTpd2;
X    [tpd2Actor GetProperty] SetColor 0 0 0;
X
vtkTransform transP3;
X    transP3 Translate 13.27 0.0 33.30;
X    transP3 Scale 5 5 5;
X    transP3 RotateY 90;
vtkTransformPolyFilter tpd3
X    tpd3 SetInput [plane GetOutput];
X    tpd3 SetTransform transP3;
vtkOutlineFilter outTpd3;
X    outTpd3 SetInput [tpd3 GetOutput];
vtkPolyMapper mapTpd3;
X    mapTpd3 SetInput [outTpd3 GetOutput];
vtkActor tpd3Actor;
X    tpd3Actor SetMapper mapTpd3;
X    [tpd3Actor GetProperty] SetColor 0 0 0;
X
vtkAppendPolyData appendF;
X    appendF AddInput [tpd1 GetOutput];
X    appendF AddInput [tpd2 GetOutput];
X    appendF AddInput [tpd3 GetOutput];
X
vtkProbeFilter probe;
X    probe SetInput [appendF GetOutput];
X    probe SetSource [pl3d GetOutput];
X
######## HW #3 9.4 -Warp ###
vtkGeometryFilter geom;
X    geom SetInput [probe GetOutput];
#    eval contour GenerateValues 100 [[pl3d GetOutput] GetScalarRange];
X
vtkWarpVector warp;
X    warp SetInput [geom GetOutput];
X    warp SetScaleFactor 0.005;
X    
vtkDataSetMapper warpMapper;
X    warpMapper SetInput [warp GetOutput];
X    eval warpMapper SetScalarRange [[pl3d GetOutput] GetScalarRange];
vtkActor planeActor;
X    planeActor SetMapper warpMapper;
vtkStructuredGridOutlineFilter outline;
X    outline SetInput [pl3d GetOutput];
vtkPolyMapper outlineMapper;
X    outlineMapper SetInput [outline GetOutput];
vtkActor outlineActor;
X    outlineActor SetMapper outlineMapper;
X    [outlineActor GetProperty] SetColor 0 0 0;
X
$ren1 AddActors outlineActor;
$ren1 AddActors planeActor;
$ren1 AddActors tpd1Actor;
$ren1 AddActors tpd2Actor;
$ren1 AddActors tpd3Actor;
$ren1 SetBackground 1 1 1;
$renWin SetSize 500 500;
$iren Initialize;
X
set cam1 [$ren1 GetActiveCamera];
$cam1 SetClippingRange 3.95297 50;
$cam1 SetFocalPoint 8.88908 0.595038 29.3342;
$cam1 SetPosition -12.3332 31.7479 41.2387;
$cam1 CalcViewPlaneNormal;
$cam1 SetViewUp 0.060772 -0.319905 0.945498;
X
# render the image
#
$iren SetUserMethod {wm deiconify .vtkInteract};
$renWin Render;
X
# prevent the tk window from showing up then start the event loop
wm withdraw .
X
X
X
SHAR_EOF
  $shar_touch -am 0415175697 'pwarp.tcl' &&
  chmod 0600 'pwarp.tcl' ||
  $echo 'restore of' 'pwarp.tcl' 'failed'
  if ( md5sum --help 2>&1 | grep 'sage: md5sum \[' ) >/dev/null 2>&1 \
  && ( md5sum --version 2>&1 | grep -v 'textutils 1.12' ) >/dev/null; then
    md5sum -c << SHAR_EOF >/dev/null 2>&1 \
    || $echo 'pwarp.tcl:' 'MD5 check failed'
ebf3025dac7c6168b4774757f11b855a  pwarp.tcl
SHAR_EOF
  else
    shar_count="`LC_ALL= LC_CTYPE= LANG= wc -c < 'pwarp.tcl'`"
    test 3576 -eq "$shar_count" ||
    $echo 'pwarp.tcl:' 'original size' '3576,' 'current size' "$shar_count!"
  fi
fi
# ============= pvnorm.tcl ==============
if test -f 'pvnorm.tcl' && test "$first_param" != -c; then
  $echo 'x -' SKIPPING 'pvnorm.tcl' '(file already exists)'
else
  $echo 'x -' extracting 'pvnorm.tcl' '(text)'
  sed 's/^X//' << 'SHAR_EOF' > 'pvnorm.tcl' &&
#Yuping Chen
#HW#3 pvnorm.tcl - 9.4d
#
#unommet the line below if you are on Windows95
# load vtktcl;
# get the interactor ui
source /campus/visualization/vtk/1.3/common/examplesTcl/vtkInt.tcl
X
# create planes
# First create the render master
vtkRenderMaster rm;
X
# Now create the RenderWindow, Renderer and both Actors
#
set renWin [rm MakeRenderWindow];
set ren1   [$renWin MakeRenderer];
set iren [$renWin MakeRenderWindowInteractor];
X
# create pipeline
#
vtkPLOT3DReader pl3d;
X    pl3d SetXYZFilename "combxyz.bin"
X    pl3d SetQFilename "combq.bin"
X    pl3d SetScalarFunctionNumber 100;
X    pl3d SetVectorFunctionNumber 202;
X    pl3d Update;
X
vtkPlaneSource plane;
X    plane SetResolution 50 50;
vtkTransform transP1;
X    transP1 Translate 3.7 0.0 28.37;
X    transP1 Scale 5 5 5;
X    transP1 RotateY 90;
vtkTransformPolyFilter tpd1
X    tpd1 SetInput [plane GetOutput];
X    tpd1 SetTransform transP1;
vtkOutlineFilter outTpd1;
X    outTpd1 SetInput [tpd1 GetOutput];
vtkPolyMapper mapTpd1;
X    mapTpd1 SetInput [outTpd1 GetOutput];
vtkActor tpd1Actor;
X    tpd1Actor SetMapper mapTpd1;
X    [tpd1Actor GetProperty] SetColor 0 0 0;
X
vtkTransform transP2;
X    transP2 Translate 9.2 0.0 31.20;
X    transP2 Scale 5 5 5;
X    transP2 RotateY 90;
vtkTransformPolyFilter tpd2
X    tpd2 SetInput [plane GetOutput];
X    tpd2 SetTransform transP2;
vtkOutlineFilter outTpd2;
X    outTpd2 SetInput [tpd2 GetOutput];
vtkPolyMapper mapTpd2;
X    mapTpd2 SetInput [outTpd2 GetOutput];
vtkActor tpd2Actor;
X    tpd2Actor SetMapper mapTpd2;
X    [tpd2Actor GetProperty] SetColor 0 0 0;
X
vtkTransform transP3;
X    transP3 Translate 13.27 0.0 33.30;
X    transP3 Scale 5 5 5;
X    transP3 RotateY 90;
vtkTransformPolyFilter tpd3
X    tpd3 SetInput [plane GetOutput];
X    tpd3 SetTransform transP3;
vtkOutlineFilter outTpd3;
X    outTpd3 SetInput [tpd3 GetOutput];
vtkPolyMapper mapTpd3;
X    mapTpd3 SetInput [outTpd3 GetOutput];
vtkActor tpd3Actor;
X    tpd3Actor SetMapper mapTpd3;
X    [tpd3Actor GetProperty] SetColor 0 0 0;
X
vtkAppendPolyData appendF;
X    appendF AddInput [tpd1 GetOutput];
X    appendF AddInput [tpd2 GetOutput];
X    appendF AddInput [tpd3 GetOutput];
X
vtkProbeFilter probe;
X    probe SetInput [appendF GetOutput];
X    probe SetSource [pl3d GetOutput];
#vtkContourFilter contour;
#    contour SetInput [probe GetOutput];
#    eval contour GenerateValues 100 [[pl3d GetOutput] GetScalarRange];
X
######## HW #3 9.4 -VectorNorm ###
vtkVectorNorm vnorm;
X    vnorm SetInput [probe GetOutput];
X    vnorm NormalizeOn;
X    vnorm SetNormalize 1;
X        
vtkDataSetMapper vnormMapper;
X    vnormMapper SetInput [vnorm GetOutput];
X    eval vnormMapper SetScalarRange [[pl3d GetOutput] GetScalarRange];
vtkActor planeActor;
X    planeActor SetMapper vnormMapper;
vtkStructuredGridOutlineFilter outline;
X    outline SetInput [pl3d GetOutput];
vtkPolyMapper outlineMapper;
X    outlineMapper SetInput [outline GetOutput];
vtkActor outlineActor;
X    outlineActor SetMapper outlineMapper;
X    [outlineActor GetProperty] SetColor 0 0 0;
X
$ren1 AddActors outlineActor;
$ren1 AddActors planeActor;
$ren1 AddActors tpd1Actor;
$ren1 AddActors tpd2Actor;
$ren1 AddActors tpd3Actor;
$ren1 SetBackground 1 1 1;
$renWin SetSize 500 500;
$iren Initialize;
X
set cam1 [$ren1 GetActiveCamera];
$cam1 SetClippingRange 3.95297 50;
$cam1 SetFocalPoint 8.88908 0.595038 29.3342;
$cam1 SetPosition -12.3332 31.7479 41.2387;
$cam1 CalcViewPlaneNormal;
$cam1 SetViewUp 0.060772 -0.319905 0.945498;
X
# render the image
#
$iren SetUserMethod {wm deiconify .vtkInteract};
$renWin Render;
X
# prevent the tk window from showing up then start the event loop
wm withdraw .
X
X
X
SHAR_EOF
  $shar_touch -am 0414205197 'pvnorm.tcl' &&
  chmod 0600 'pvnorm.tcl' ||
  $echo 'restore of' 'pvnorm.tcl' 'failed'
  if ( md5sum --help 2>&1 | grep 'sage: md5sum \[' ) >/dev/null 2>&1 \
  && ( md5sum --version 2>&1 | grep -v 'textutils 1.12' ) >/dev/null; then
    md5sum -c << SHAR_EOF >/dev/null 2>&1 \
    || $echo 'pvnorm.tcl:' 'MD5 check failed'
6a88e6343029702ee708f935ef5d23e6  pvnorm.tcl
SHAR_EOF
  else
    shar_count="`LC_ALL= LC_CTYPE= LANG= wc -c < 'pvnorm.tcl'`"
    test 3621 -eq "$shar_count" ||
    $echo 'pvnorm.tcl:' 'original size' '3621,' 'current size' "$shar_count!"
  fi
fi
rm -fr _sh03394
exit 0

From ???@??? Wed Apr 16 07:18:23 1997
Received: from camaro.nic.rpi.edu (schnem@camaro.nic.rpi.edu [128.113.113.10])
	by mail1.its.rpi.edu (8.8.5/8.8.5) with ESMTP id TAA103444
	for <citrit@rpi.edu>; Tue, 15 Apr 1997 19:03:03 -0400
From: Matthew Schnee <schnem>
Received: (schnem@localhost) by camaro.nic.rpi.edu (8.6.9/8.6.4) id TAA22856 for citrit@rpi.edu; Tue, 15 Apr 1997 19:01:48 -0400
Date: Tue, 15 Apr 1997 19:01:48 -0400
Message-Id: <199704152301.TAA22856@camaro.nic.rpi.edu>
To: citrit@rpi.edu
Subject: Homework 3
X-UIDL: aea904c9beda62d89ced051fa87abfb4

#!/bin/sh
# This is a shell archive (produced by GNU sharutils 4.2).
# To extract the files from this archive, save it to some FILE, remove
# everything before the `!/bin/sh' line above, then type `sh FILE'.
#
# Made on 1997-04-15 19:01 EDT by <schnem@camaro>.
# Source directory was `/afs/rpi.edu/home/89/schnem/private/graphvis/hw3/new'.
#
# Existing files will *not* be overwritten unless `-c' is specified.
#
# This shar contains:
# length mode       name
# ------ ---------- ------------------------------------------
#   1732 -rw------- control.tcl
#   1710 -rw------- ex63a.tcl
#   1904 -rw------- ex63b.tcl
#   3581 -rw------- ex94dot.tcl
#   3344 -rw------- ex94hedge.tcl
#   3318 -rw------- ex94norm.tcl
#   3408 -rw------- ex94warp.tcl
#
save_IFS="${IFS}"
IFS="${IFS}:"
gettext_dir=FAILED
locale_dir=FAILED
first_param="$1"
for dir in $PATH
do
  if test "$gettext_dir" = FAILED && test -f $dir/gettext \
     && ($dir/gettext --version >/dev/null 2>&1)
  then
    set `$dir/gettext --version 2>&1`
    if test "$3" = GNU
    then
      gettext_dir=$dir
    fi
  fi
  if test "$locale_dir" = FAILED && test -f $dir/shar \
     && ($dir/shar --print-text-domain-dir >/dev/null 2>&1)
  then
    locale_dir=`$dir/shar --print-text-domain-dir`
  fi
done
IFS="$save_IFS"
if test "$locale_dir" = FAILED || test "$gettext_dir" = FAILED
then
  echo=echo
else
  TEXTDOMAINDIR=$locale_dir
  export TEXTDOMAINDIR
  TEXTDOMAIN=sharutils
  export TEXTDOMAIN
  echo="$gettext_dir/gettext -s"
fi
touch -am 1231235999 $$.touch >/dev/null 2>&1
if test ! -f 1231235999 && test -f $$.touch; then
  shar_touch=touch
else
  shar_touch=:
  echo
  $echo 'WARNING: not restoring timestamps.  Consider getting and'
  $echo "installing GNU \`touch', distributed in GNU File Utilities..."
  echo
fi
rm -f 1231235999 $$.touch
#
if mkdir _sh22836; then
  $echo 'x -' 'creating lock directory'
else
  $echo 'failed to create lock directory'
  exit 1
fi
# ============= control.tcl ==============
if test -f 'control.tcl' && test "$first_param" != -c; then
  $echo 'x -' SKIPPING 'control.tcl' '(file already exists)'
else
  $echo 'x -' extracting 'control.tcl' '(text)'
  sed 's/^X//' << 'SHAR_EOF' > 'control.tcl' &&
X
proc control_panel { } {
X  global run min max delta current;
X  button .start_b -text "Start" -command { set run 1 };
X  button .stop_b -text "Stop" -command { set run 0 };
X
X  pack .start_b .stop_b -fill x -side top;
X
X
X  frame .min
X  frame .max
X  frame .delta
X  frame .cur
X
X  label .min.l -text "Min"
X  label .max.l -text "Max"
X  label .delta.l -text "Delta"
X  label .cur.l -text "Cur"
X  entry .min.e -width 20 -relief sunken -textvariable min
X  entry .max.e -width 20 -relief sunken -textvariable max
X  entry .delta.e -width 20 -relief sunken -textvariable delta
X  entry .cur.e -width 20 -relief sunken -textvariable current
X 
X  bind .cur.e <Return> set_new_values
X
X  pack .min.l -side left -fill x
X  pack .min.e -side right 
X
X  pack .max.l -side left -fill x
X  pack .max.e -side right 
X
X  pack .delta.l -side left -fill x
X  pack .delta.e -side right 
X
X  pack .cur.l -side left -fill x
X  pack .cur.e -side right 
X 
X  pack .min .max .delta .cur -side top -fill x
X
X  button .dec_on -text "Decimation On" -command { deci_on }
X  button .dec_off -text "Decimation Off" -command { deci_off }
X
X  pack .dec_on .dec_off -side top -fill x
X
X  button .quit -text "Quit" -command { exit }
X  pack .quit -side bottom -fill x
X
}
X
proc set_new_values { } {
X  global renWin current
X  generate_contour $current;
X  $renWin Render;
X  update;
}
X
proc iterate { } {
X    global continue iteration run min max delta current renWin;
X    set j 1;
X    while {$j==1 } {
X	tkwait variable run;
X	while { $run ==1 } {
X	    set current [expr $current-$delta];
X	    generate_contour $current;
X	    incr iteration;
X	    if {$current <= $min} {set delta [expr -$delta]}
X	    if {$current >= $max} {set delta [expr -$delta]}
X	    $renWin Render;
X	    update;
X	}
X    }
}
SHAR_EOF
  $shar_touch -am 0414142997 'control.tcl' &&
  chmod 0600 'control.tcl' ||
  $echo 'restore of' 'control.tcl' 'failed'
  if ( md5sum --help 2>&1 | grep 'sage: md5sum \[' ) >/dev/null 2>&1 \
  && ( md5sum --version 2>&1 | grep -v 'textutils 1.12' ) >/dev/null; then
    md5sum -c << SHAR_EOF >/dev/null 2>&1 \
    || $echo 'control.tcl:' 'MD5 check failed'
e8217b77cccccd7a412374de0f93de01  control.tcl
SHAR_EOF
  else
    shar_count="`LC_ALL= LC_CTYPE= LANG= wc -c < 'control.tcl'`"
    test 1732 -eq "$shar_count" ||
    $echo 'control.tcl:' 'original size' '1732,' 'current size' "$shar_count!"
  fi
fi
# ============= ex63a.tcl ==============
if test -f 'ex63a.tcl' && test "$first_param" != -c; then
  $echo 'x -' SKIPPING 'ex63a.tcl' '(file already exists)'
else
  $echo 'x -' extracting 'ex63a.tcl' '(text)'
  sed 's/^X//' << 'SHAR_EOF' > 'ex63a.tcl' &&
# load vtktcl;
# user interface command widget
source vtkInt.tcl
X
set continue 1;
set iteration 0;
set run 0;
set min 0;
set max 1.2;
set delta 0.2;
set current $max;
X
source control.tcl
X
proc generate_contour { value } {
X  
X  contours SetValue 0 $value;
X
}
X
# create a rendering window and renderer
vtkRenderMaster rm;
set renWin [rm MakeRenderWindow];
set ren1 [$renWin MakeRenderer];
set iren [$renWin MakeRenderWindowInteractor];
X
vtkQuadric quad;
X  quad SetCoefficients 0.5 1 .2 0 .1 0 0 .2 0 0;
vtkSampleFunction sample;
X  sample SetSampleDimensions 40 40 40;
X  sample SetImplicitFunction quad;
X
vtkContourFilter contours;
X  contours SetInput [sample GetOutput];
X  contours SetValue 0 $max;
X
vtkPolyNormals norm
X  norm SetInput [contours GetOutput];
X
vtkDecimate decimate
X  decimate SetInput [norm GetOutput];
X  decimate SetTargetReduction 0.6;
X  decimate SetMaximumIterations 6;
X  decimate PreserveEdgesOn
X
vtkPolyMapper contMapper;
X  contMapper SetInput [decimate GetOutput];
X  contMapper SetScalarRange 0.0 1.2;
X
vtkActor contActor;
X  contActor SetMapper contMapper;
X
# assign our actor to the renderer
$ren1 SetBackground 1 1 1;
$ren1 AddActors contActor;
X
$ren1 SetEndRenderMethod allow_continue;
X
# enable user interface interactor
$iren SetUserMethod {  wm deiconify .vtkInteract };
$iren Initialize
X
X
# prevent the tk window from showing up then start the event loop
#wm withdraw .
X
X
proc deci_on { } {
X  global renWin run
X  contMapper SetInput [decimate GetOutput];
X  if { $run ==0 } {
X    $renWin Render;
X  }   
}
X
proc deci_off { } {
X  global renWin run
X  contMapper SetInput [contours GetOutput];
X  if { $run ==0 } {
X    $renWin Render;
X  }   
}
X
X
control_panel;
X
X
X
iterate;
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
SHAR_EOF
  $shar_touch -am 0414142997 'ex63a.tcl' &&
  chmod 0600 'ex63a.tcl' ||
  $echo 'restore of' 'ex63a.tcl' 'failed'
  if ( md5sum --help 2>&1 | grep 'sage: md5sum \[' ) >/dev/null 2>&1 \
  && ( md5sum --version 2>&1 | grep -v 'textutils 1.12' ) >/dev/null; then
    md5sum -c << SHAR_EOF >/dev/null 2>&1 \
    || $echo 'ex63a.tcl:' 'MD5 check failed'
4436ff9b64e1481a995cf90ec156039e  ex63a.tcl
SHAR_EOF
  else
    shar_count="`LC_ALL= LC_CTYPE= LANG= wc -c < 'ex63a.tcl'`"
    test 1710 -eq "$shar_count" ||
    $echo 'ex63a.tcl:' 'original size' '1710,' 'current size' "$shar_count!"
  fi
fi
# ============= ex63b.tcl ==============
if test -f 'ex63b.tcl' && test "$first_param" != -c; then
  $echo 'x -' SKIPPING 'ex63b.tcl' '(file already exists)'
else
  $echo 'x -' extracting 'ex63b.tcl' '(text)'
  sed 's/^X//' << 'SHAR_EOF' > 'ex63b.tcl' &&
# If you are using Window95 and vtk 1.3 uncomment the line below
# load vtktcl;
X
# get the interactor ui
source vtkInt.tcl
X
set iteration 0;
set run 0;
set min 700;
set max 1300;
set delta 100;
set current $max;
X
source control.tcl
X
proc generate_contour { value } {
X
X  contour SetValue 0 $value;
X
}
X
X
# First create the render master
vtkRenderMaster rm;
X
# Now create the RenderWindow, Renderer
#
set renWin [rm MakeRenderWindow];
set ren1   [$renWin MakeRenderer];
set iren   [$renWin MakeRenderWindowInteractor];
X
#
# Load up the data
vtkStructuredPointsReader vol;
X    vol SetFilename "MRIdata.vtk"
X    vol DebugOn;
X
vtkMarchingCubes contour;
X  contour SetInput [vol GetOutput];
X  contour SetValue 0 $max;
X
vtkPolyNormals norm
X  norm SetInput [contour GetOutput];
X
vtkDecimate decimate
X  decimate SetInput [norm GetOutput];
X  decimate SetTargetReduction 0.7;
X  decimate SetMaximumIterations 6;
#  decimate PreserveEdgesOn
X
vtkPolyMapper volMapper;
X  volMapper SetInput [decimate GetOutput];
X  volMapper ScalarsVisibleOff;
X
vtkActor volActor;
X  volActor SetMapper volMapper;
X
vtkOutlineFilter outLine;
X  outLine SetInput [vol GetOutput];
X
vtkPolyMapper outMapper;
X  outMapper SetInput [outLine GetOutput];
X
vtkActor outActor;
X  outActor SetMapper outMapper;
X
# Add the actors to the renderer, set the background and size
#
$ren1 AddActors outActor;
$ren1 AddActors volActor;
$ren1 SetBackground 0 0 0;
$renWin SetSize 500 400;
$iren Initialize;
X
# render the image
#
$iren SetUserMethod {wm deiconify .vtkInteract};
$renWin Render;
X
# prevent the tk window from showing up then start the event loop
#wm withdraw .
X
proc deci_on { } {
X  global renWin run
X  volMapper SetInput [decimate GetOutput];
X  if { $run ==0 } {
X    $renWin Render;
X  }
}
X
proc deci_off { } {
X  global renWin run 
X  volMapper SetInput [contour GetOutput];
X  if { $run ==0 } {
X    $renWin Render;
X  }
}
X
control_panel;
X
iterate;
X
X
SHAR_EOF
  $shar_touch -am 0414142997 'ex63b.tcl' &&
  chmod 0600 'ex63b.tcl' ||
  $echo 'restore of' 'ex63b.tcl' 'failed'
  if ( md5sum --help 2>&1 | grep 'sage: md5sum \[' ) >/dev/null 2>&1 \
  && ( md5sum --version 2>&1 | grep -v 'textutils 1.12' ) >/dev/null; then
    md5sum -c << SHAR_EOF >/dev/null 2>&1 \
    || $echo 'ex63b.tcl:' 'MD5 check failed'
115d5be263576891a3c7f470ecb849f2  ex63b.tcl
SHAR_EOF
  else
    shar_count="`LC_ALL= LC_CTYPE= LANG= wc -c < 'ex63b.tcl'`"
    test 1904 -eq "$shar_count" ||
    $echo 'ex63b.tcl:' 'original size' '1904,' 'current size' "$shar_count!"
  fi
fi
# ============= ex94dot.tcl ==============
if test -f 'ex94dot.tcl' && test "$first_param" != -c; then
  $echo 'x -' SKIPPING 'ex94dot.tcl' '(file already exists)'
else
  $echo 'x -' extracting 'ex94dot.tcl' '(text)'
  sed 's/^X//' << 'SHAR_EOF' > 'ex94dot.tcl' &&
#unommet the line below if you are on Windows95
# load vtktcl;
# get the interactor ui
source vtkInt.tcl
X
# create planes
# First create the render master
vtkRenderMaster rm;
X
# Now create the RenderWindow, Renderer and both Actors
#
set renWin [rm MakeRenderWindow];
set ren1   [$renWin MakeRenderer];
set iren [$renWin MakeRenderWindowInteractor];
X
# create pipeline
#
vtkPLOT3DReader pl3d;
X    pl3d SetXYZFilename "combxyz.bin"
X    pl3d SetQFilename "combq.bin"
X    pl3d SetScalarFunctionNumber 100;
X    pl3d SetVectorFunctionNumber 202;
X    pl3d Update;
X
vtkPlaneSource plane;
X    plane SetResolution 50 50;
vtkTransform transP1;
X    transP1 Translate 3.7 0.0 28.37;
X    transP1 Scale 5 5 5;
X    transP1 RotateY 90;
vtkTransformPolyFilter tpd1
X    tpd1 SetInput [plane GetOutput];
X    tpd1 SetTransform transP1;
vtkOutlineFilter outTpd1;
X    outTpd1 SetInput [tpd1 GetOutput];
vtkPolyMapper mapTpd1;
X    mapTpd1 SetInput [outTpd1 GetOutput];
vtkActor tpd1Actor;
X    tpd1Actor SetMapper mapTpd1;
X    [tpd1Actor GetProperty] SetColor 0 0 0;
X
vtkTransform transP2;
X    transP2 Translate 9.2 0.0 31.20;
X    transP2 Scale 5 5 5;
X    transP2 RotateY 90;
vtkTransformPolyFilter tpd2
X    tpd2 SetInput [plane GetOutput];
X    tpd2 SetTransform transP2;
vtkOutlineFilter outTpd2;
X    outTpd2 SetInput [tpd2 GetOutput];
vtkPolyMapper mapTpd2;
X    mapTpd2 SetInput [outTpd2 GetOutput];
vtkActor tpd2Actor;
X    tpd2Actor SetMapper mapTpd2;
X    [tpd2Actor GetProperty] SetColor 0 0 0;
X
vtkTransform transP3;
X    transP3 Translate 13.27 0.0 33.30;
X    transP3 Scale 5 5 5;
X    transP3 RotateY 90;
vtkTransformPolyFilter tpd3
X    tpd3 SetInput [plane GetOutput];
X    tpd3 SetTransform transP3;
vtkOutlineFilter outTpd3;
X    outTpd3 SetInput [tpd3 GetOutput];
vtkPolyMapper mapTpd3;
X    mapTpd3 SetInput [outTpd3 GetOutput];
vtkActor tpd3Actor;
X    tpd3Actor SetMapper mapTpd3;
X    [tpd3Actor GetProperty] SetColor 0 0 0;
X
vtkAppendPolyData appendF;
X    appendF AddInput [tpd1 GetOutput];
X    appendF AddInput [tpd2 GetOutput];
X    appendF AddInput [tpd3 GetOutput];
X
vtkProbeFilter probe;
X    probe SetInput [appendF GetOutput];
X    probe SetSource [pl3d GetOutput];
X
vtkGeometryFilter ds2poly;
X    ds2poly SetInput [probe GetOutput];
X
vtkCleanPolyData clean;
X    clean SetInput [ds2poly GetOutput];
vtkPolyNormals normals;
X    normals SetInput [clean GetOutput];
X    normals SetFeatureAngle 60;
X
vtkVectorDot dot;
X    dot SetInput [normals GetOutput];
X    eval dot SetScalarRange [[pl3d GetOutput] GetScalarRange];
X
vtkDataSetMapper dotMapper;
X    dotMapper SetInput [dot GetOutput];
X    eval dotMapper SetScalarRange [[pl3d GetOutput] GetScalarRange];
vtkActor planeActor;
X    planeActor SetMapper dotMapper;
X
vtkStructuredGridOutlineFilter outline;
X    outline SetInput [pl3d GetOutput];
vtkPolyMapper outlineMapper;
X    outlineMapper SetInput [outline GetOutput];
vtkActor outlineActor;
X    outlineActor SetMapper outlineMapper;
X    [outlineActor GetProperty] SetColor 0 0 0;
X
$ren1 AddActors outlineActor;
$ren1 AddActors planeActor;
$ren1 AddActors tpd1Actor;
$ren1 AddActors tpd2Actor;
$ren1 AddActors tpd3Actor;
$ren1 SetBackground 1 1 1;
$renWin SetSize 500 500;
$iren Initialize;
X
set cam1 [$ren1 GetActiveCamera];
$cam1 SetClippingRange 3.95297 50;
$cam1 SetFocalPoint 8.88908 0.595038 29.3342;
$cam1 SetPosition -12.3332 31.7479 41.2387;
$cam1 CalcViewPlaneNormal;
$cam1 SetViewUp 0.060772 -0.319905 0.945498;
X
# render the image
#
$iren SetUserMethod {wm deiconify .vtkInteract};
$renWin Render;
X
# prevent the tk window from showing up then start the event loop
wm withdraw .
X
X
X
SHAR_EOF
  $shar_touch -am 0415121097 'ex94dot.tcl' &&
  chmod 0600 'ex94dot.tcl' ||
  $echo 'restore of' 'ex94dot.tcl' 'failed'
  if ( md5sum --help 2>&1 | grep 'sage: md5sum \[' ) >/dev/null 2>&1 \
  && ( md5sum --version 2>&1 | grep -v 'textutils 1.12' ) >/dev/null; then
    md5sum -c << SHAR_EOF >/dev/null 2>&1 \
    || $echo 'ex94dot.tcl:' 'MD5 check failed'
d6c3c91a1dc1395b2abd0f310a1eee88  ex94dot.tcl
SHAR_EOF
  else
    shar_count="`LC_ALL= LC_CTYPE= LANG= wc -c < 'ex94dot.tcl'`"
    test 3581 -eq "$shar_count" ||
    $echo 'ex94dot.tcl:' 'original size' '3581,' 'current size' "$shar_count!"
  fi
fi
# ============= ex94hedge.tcl ==============
if test -f 'ex94hedge.tcl' && test "$first_param" != -c; then
  $echo 'x -' SKIPPING 'ex94hedge.tcl' '(file already exists)'
else
  $echo 'x -' extracting 'ex94hedge.tcl' '(text)'
  sed 's/^X//' << 'SHAR_EOF' > 'ex94hedge.tcl' &&
#unommet the line below if you are on Windows95
# load vtktcl;
# get the interactor ui
source vtkInt.tcl
X
# create planes
# First create the render master
vtkRenderMaster rm;
X
# Now create the RenderWindow, Renderer and both Actors
#
set renWin [rm MakeRenderWindow];
set ren1   [$renWin MakeRenderer];
set iren [$renWin MakeRenderWindowInteractor];
X
# create pipeline
#
vtkPLOT3DReader pl3d;
X    pl3d SetXYZFilename "combxyz.bin"
X    pl3d SetQFilename "combq.bin"
X    pl3d SetScalarFunctionNumber 100;
X    pl3d SetVectorFunctionNumber 202;
X    pl3d Update;
X
vtkPlaneSource plane;
X    plane SetResolution 50 50;
vtkTransform transP1;
X    transP1 Translate 3.7 0.0 28.37;
X    transP1 Scale 5 5 5;
X    transP1 RotateY 90;
vtkTransformPolyFilter tpd1
X    tpd1 SetInput [plane GetOutput];
X    tpd1 SetTransform transP1;
vtkOutlineFilter outTpd1;
X    outTpd1 SetInput [tpd1 GetOutput];
vtkPolyMapper mapTpd1;
X    mapTpd1 SetInput [outTpd1 GetOutput];
vtkActor tpd1Actor;
X    tpd1Actor SetMapper mapTpd1;
X    [tpd1Actor GetProperty] SetColor 0 0 0;
X
vtkTransform transP2;
X    transP2 Translate 9.2 0.0 31.20;
X    transP2 Scale 5 5 5;
X    transP2 RotateY 90;
vtkTransformPolyFilter tpd2
X    tpd2 SetInput [plane GetOutput];
X    tpd2 SetTransform transP2;
vtkOutlineFilter outTpd2;
X    outTpd2 SetInput [tpd2 GetOutput];
vtkPolyMapper mapTpd2;
X    mapTpd2 SetInput [outTpd2 GetOutput];
vtkActor tpd2Actor;
X    tpd2Actor SetMapper mapTpd2;
X    [tpd2Actor GetProperty] SetColor 0 0 0;
X
vtkTransform transP3;
X    transP3 Translate 13.27 0.0 33.30;
X    transP3 Scale 5 5 5;
X    transP3 RotateY 90;
vtkTransformPolyFilter tpd3
X    tpd3 SetInput [plane GetOutput];
X    tpd3 SetTransform transP3;
vtkOutlineFilter outTpd3;
X    outTpd3 SetInput [tpd3 GetOutput];
vtkPolyMapper mapTpd3;
X    mapTpd3 SetInput [outTpd3 GetOutput];
vtkActor tpd3Actor;
X    tpd3Actor SetMapper mapTpd3;
X    [tpd3Actor GetProperty] SetColor 0 0 0;
X
vtkAppendPolyData appendF;
X    appendF AddInput [tpd1 GetOutput];
X    appendF AddInput [tpd2 GetOutput];
X    appendF AddInput [tpd3 GetOutput];
X
vtkProbeFilter probe;
X    probe SetInput [appendF GetOutput];
X    probe SetSource [pl3d GetOutput];
X
vtkHedgeHog contour;
X    contour SetInput [probe GetOutput];
X    contour SetScaleFactor 0.01;
X
vtkPolyMapper contourMapper;
X    contourMapper SetInput [contour GetOutput];
X    eval contourMapper SetScalarRange [[pl3d GetOutput] GetScalarRange];
vtkActor planeActor;
X    planeActor SetMapper contourMapper;
X
vtkStructuredGridOutlineFilter outline;
X    outline SetInput [pl3d GetOutput];
vtkPolyMapper outlineMapper;
X    outlineMapper SetInput [outline GetOutput];
vtkActor outlineActor;
X    outlineActor SetMapper outlineMapper;
X    [outlineActor GetProperty] SetColor 0 0 0;
X
$ren1 AddActors outlineActor;
$ren1 AddActors planeActor;
$ren1 AddActors tpd1Actor;
$ren1 AddActors tpd2Actor;
$ren1 AddActors tpd3Actor;
$ren1 SetBackground 1 1 1;
$renWin SetSize 500 500;
$iren Initialize;
X
set cam1 [$ren1 GetActiveCamera];
$cam1 SetClippingRange 3.95297 50;
$cam1 SetFocalPoint 8.88908 0.595038 29.3342;
$cam1 SetPosition -12.3332 31.7479 41.2387;
$cam1 CalcViewPlaneNormal;
$cam1 SetViewUp 0.060772 -0.319905 0.945498;
X
# render the image
#
$iren SetUserMethod {wm deiconify .vtkInteract};
$renWin Render;
X
# prevent the tk window from showing up then start the event loop
wm withdraw .
X
X
X
SHAR_EOF
  $shar_touch -am 0414001797 'ex94hedge.tcl' &&
  chmod 0600 'ex94hedge.tcl' ||
  $echo 'restore of' 'ex94hedge.tcl' 'failed'
  if ( md5sum --help 2>&1 | grep 'sage: md5sum \[' ) >/dev/null 2>&1 \
  && ( md5sum --version 2>&1 | grep -v 'textutils 1.12' ) >/dev/null; then
    md5sum -c << SHAR_EOF >/dev/null 2>&1 \
    || $echo 'ex94hedge.tcl:' 'MD5 check failed'
3cbddf3689de64761b878cd4e7e47ce0  ex94hedge.tcl
SHAR_EOF
  else
    shar_count="`LC_ALL= LC_CTYPE= LANG= wc -c < 'ex94hedge.tcl'`"
    test 3344 -eq "$shar_count" ||
    $echo 'ex94hedge.tcl:' 'original size' '3344,' 'current size' "$shar_count!"
  fi
fi
# ============= ex94norm.tcl ==============
if test -f 'ex94norm.tcl' && test "$first_param" != -c; then
  $echo 'x -' SKIPPING 'ex94norm.tcl' '(file already exists)'
else
  $echo 'x -' extracting 'ex94norm.tcl' '(text)'
  sed 's/^X//' << 'SHAR_EOF' > 'ex94norm.tcl' &&
#unommet the line below if you are on Windows95
# load vtktcl;
# get the interactor ui
source vtkInt.tcl
X
# create planes
# First create the render master
vtkRenderMaster rm;
X
# Now create the RenderWindow, Renderer and both Actors
#
set renWin [rm MakeRenderWindow];
set ren1   [$renWin MakeRenderer];
set iren [$renWin MakeRenderWindowInteractor];
X
# create pipeline
#
vtkPLOT3DReader pl3d;
X    pl3d SetXYZFilename "combxyz.bin"
X    pl3d SetQFilename "combq.bin"
X    pl3d SetScalarFunctionNumber 100;
X    pl3d SetVectorFunctionNumber 202;
X    pl3d Update;
X
vtkPlaneSource plane;
X    plane SetResolution 50 50;
vtkTransform transP1;
X    transP1 Translate 3.7 0.0 28.37;
X    transP1 Scale 5 5 5;
X    transP1 RotateY 90;
vtkTransformPolyFilter tpd1
X    tpd1 SetInput [plane GetOutput];
X    tpd1 SetTransform transP1;
vtkOutlineFilter outTpd1;
X    outTpd1 SetInput [tpd1 GetOutput];
vtkPolyMapper mapTpd1;
X    mapTpd1 SetInput [outTpd1 GetOutput];
vtkActor tpd1Actor;
X    tpd1Actor SetMapper mapTpd1;
X    [tpd1Actor GetProperty] SetColor 0 0 0;
X
vtkTransform transP2;
X    transP2 Translate 9.2 0.0 31.20;
X    transP2 Scale 5 5 5;
X    transP2 RotateY 90;
vtkTransformPolyFilter tpd2
X    tpd2 SetInput [plane GetOutput];
X    tpd2 SetTransform transP2;
vtkOutlineFilter outTpd2;
X    outTpd2 SetInput [tpd2 GetOutput];
vtkPolyMapper mapTpd2;
X    mapTpd2 SetInput [outTpd2 GetOutput];
vtkActor tpd2Actor;
X    tpd2Actor SetMapper mapTpd2;
X    [tpd2Actor GetProperty] SetColor 0 0 0;
X
vtkTransform transP3;
X    transP3 Translate 13.27 0.0 33.30;
X    transP3 Scale 5 5 5;
X    transP3 RotateY 90;
vtkTransformPolyFilter tpd3
X    tpd3 SetInput [plane GetOutput];
X    tpd3 SetTransform transP3;
vtkOutlineFilter outTpd3;
X    outTpd3 SetInput [tpd3 GetOutput];
vtkPolyMapper mapTpd3;
X    mapTpd3 SetInput [outTpd3 GetOutput];
vtkActor tpd3Actor;
X    tpd3Actor SetMapper mapTpd3;
X    [tpd3Actor GetProperty] SetColor 0 0 0;
X
vtkAppendPolyData appendF;
X    appendF AddInput [tpd1 GetOutput];
X    appendF AddInput [tpd2 GetOutput];
X    appendF AddInput [tpd3 GetOutput];
X
vtkProbeFilter probe;
X    probe SetInput [appendF GetOutput];
X    probe SetSource [pl3d GetOutput];
X
vtkVectorNorm norm;
X    norm SetInput [probe GetOutput];
X    norm NormalizeOn;
X
vtkDataSetMapper normMapper;
X    normMapper SetInput [norm GetOutput];
X    eval normMapper SetScalarRange [[pl3d GetOutput] GetScalarRange];
X
vtkActor planeActor;
X    planeActor SetMapper normMapper;
X
vtkStructuredGridOutlineFilter outline;
X    outline SetInput [pl3d GetOutput];
vtkPolyMapper outlineMapper;
X    outlineMapper SetInput [outline GetOutput];
vtkActor outlineActor;
X    outlineActor SetMapper outlineMapper;
X    [outlineActor GetProperty] SetColor 0 0 0;
X
$ren1 AddActors outlineActor;
$ren1 AddActors planeActor;
$ren1 AddActors tpd1Actor;
$ren1 AddActors tpd2Actor;
$ren1 AddActors tpd3Actor;
$ren1 SetBackground 1 1 1;
$renWin SetSize 500 500;
$iren Initialize;
X
set cam1 [$ren1 GetActiveCamera];
$cam1 SetClippingRange 3.95297 50;
$cam1 SetFocalPoint 8.88908 0.595038 29.3342;
$cam1 SetPosition -12.3332 31.7479 41.2387;
$cam1 CalcViewPlaneNormal;
$cam1 SetViewUp 0.060772 -0.319905 0.945498;
X
# render the image
#
$iren SetUserMethod {wm deiconify .vtkInteract};
$renWin Render;
X
# prevent the tk window from showing up then start the event loop
wm withdraw .
X
X
X
SHAR_EOF
  $shar_touch -am 0415121097 'ex94norm.tcl' &&
  chmod 0600 'ex94norm.tcl' ||
  $echo 'restore of' 'ex94norm.tcl' 'failed'
  if ( md5sum --help 2>&1 | grep 'sage: md5sum \[' ) >/dev/null 2>&1 \
  && ( md5sum --version 2>&1 | grep -v 'textutils 1.12' ) >/dev/null; then
    md5sum -c << SHAR_EOF >/dev/null 2>&1 \
    || $echo 'ex94norm.tcl:' 'MD5 check failed'
4ed1115665261dff0f427d83872d46a7  ex94norm.tcl
SHAR_EOF
  else
    shar_count="`LC_ALL= LC_CTYPE= LANG= wc -c < 'ex94norm.tcl'`"
    test 3318 -eq "$shar_count" ||
    $echo 'ex94norm.tcl:' 'original size' '3318,' 'current size' "$shar_count!"
  fi
fi
# ============= ex94warp.tcl ==============
if test -f 'ex94warp.tcl' && test "$first_param" != -c; then
  $echo 'x -' SKIPPING 'ex94warp.tcl' '(file already exists)'
else
  $echo 'x -' extracting 'ex94warp.tcl' '(text)'
  sed 's/^X//' << 'SHAR_EOF' > 'ex94warp.tcl' &&
#unommet the line below if you are on Windows95
# load vtktcl;
# get the interactor ui
source vtkInt.tcl
X
# create planes
# First create the render master
vtkRenderMaster rm;
X
# Now create the RenderWindow, Renderer and both Actors
#
set renWin [rm MakeRenderWindow];
set ren1   [$renWin MakeRenderer];
set iren [$renWin MakeRenderWindowInteractor];
X
# create pipeline
#
vtkPLOT3DReader pl3d;
X    pl3d SetXYZFilename "combxyz.bin"
X    pl3d SetQFilename "combq.bin"
X    pl3d SetScalarFunctionNumber 100;
X    pl3d SetVectorFunctionNumber 202;
X    pl3d Update;
X
vtkPlaneSource plane;
X    plane SetResolution 50 50;
vtkTransform transP1;
X    transP1 Translate 3.7 0.0 28.37;
X    transP1 Scale 5 5 5;
X    transP1 RotateY 90;
vtkTransformPolyFilter tpd1
X    tpd1 SetInput [plane GetOutput];
X    tpd1 SetTransform transP1;
vtkOutlineFilter outTpd1;
X    outTpd1 SetInput [tpd1 GetOutput];
vtkPolyMapper mapTpd1;
X    mapTpd1 SetInput [outTpd1 GetOutput];
vtkActor tpd1Actor;
X    tpd1Actor SetMapper mapTpd1;
X    [tpd1Actor GetProperty] SetColor 0 0 0;
X
vtkTransform transP2;
X    transP2 Translate 9.2 0.0 31.20;
X    transP2 Scale 5 5 5;
X    transP2 RotateY 90;
vtkTransformPolyFilter tpd2
X    tpd2 SetInput [plane GetOutput];
X    tpd2 SetTransform transP2;
vtkOutlineFilter outTpd2;
X    outTpd2 SetInput [tpd2 GetOutput];
vtkPolyMapper mapTpd2;
X    mapTpd2 SetInput [outTpd2 GetOutput];
vtkActor tpd2Actor;
X    tpd2Actor SetMapper mapTpd2;
X    [tpd2Actor GetProperty] SetColor 0 0 0;
X
vtkTransform transP3;
X    transP3 Translate 13.27 0.0 33.30;
X    transP3 Scale 5 5 5;
X    transP3 RotateY 90;
vtkTransformPolyFilter tpd3
X    tpd3 SetInput [plane GetOutput];
X    tpd3 SetTransform transP3;
vtkOutlineFilter outTpd3;
X    outTpd3 SetInput [tpd3 GetOutput];
vtkPolyMapper mapTpd3;
X    mapTpd3 SetInput [outTpd3 GetOutput];
vtkActor tpd3Actor;
X    tpd3Actor SetMapper mapTpd3;
X    [tpd3Actor GetProperty] SetColor 0 0 0;
X
vtkAppendPolyData appendF;
X    appendF AddInput [tpd1 GetOutput];
X    appendF AddInput [tpd2 GetOutput];
X    appendF AddInput [tpd3 GetOutput];
X
vtkProbeFilter probe;
X    probe SetInput [appendF GetOutput];
X    probe SetSource [pl3d GetOutput];
X
vtkGeometryFilter ds2poly;
X    ds2poly SetInput [probe GetOutput];
X
vtkWarpVector warp;
X    warp SetInput [ds2poly GetOutput];
X    warp SetScaleFactor 0.005;
X
vtkDataSetMapper contourMapper;
X    contourMapper SetInput [warp GetOutput];
X    eval contourMapper SetScalarRange [[pl3d GetOutput] GetScalarRange];
vtkActor planeActor;
X    planeActor SetMapper contourMapper;
X
vtkStructuredGridOutlineFilter outline;
X    outline SetInput [pl3d GetOutput];
vtkPolyMapper outlineMapper;
X    outlineMapper SetInput [outline GetOutput];
vtkActor outlineActor;
X    outlineActor SetMapper outlineMapper;
X    [outlineActor GetProperty] SetColor 0 0 0;
X
$ren1 AddActors outlineActor;
$ren1 AddActors planeActor;
$ren1 AddActors tpd1Actor;
$ren1 AddActors tpd2Actor;
$ren1 AddActors tpd3Actor;
$ren1 SetBackground 1 1 1;
$renWin SetSize 500 500;
$iren Initialize;
X
set cam1 [$ren1 GetActiveCamera];
$cam1 SetClippingRange 3.95297 50;
$cam1 SetFocalPoint 8.88908 0.595038 29.3342;
$cam1 SetPosition -12.3332 31.7479 41.2387;
$cam1 CalcViewPlaneNormal;
$cam1 SetViewUp 0.060772 -0.319905 0.945498;
X
# render the image
#
$iren SetUserMethod {wm deiconify .vtkInteract};
$renWin Render;
X
# prevent the tk window from showing up then start the event loop
wm withdraw .
X
X
X
SHAR_EOF
  $shar_touch -am 0415121097 'ex94warp.tcl' &&
  chmod 0600 'ex94warp.tcl' ||
  $echo 'restore of' 'ex94warp.tcl' 'failed'
  if ( md5sum --help 2>&1 | grep 'sage: md5sum \[' ) >/dev/null 2>&1 \
  && ( md5sum --version 2>&1 | grep -v 'textutils 1.12' ) >/dev/null; then
    md5sum -c << SHAR_EOF >/dev/null 2>&1 \
    || $echo 'ex94warp.tcl:' 'MD5 check failed'
8c3039481be681852f02903d96543ac8  ex94warp.tcl
SHAR_EOF
  else
    shar_count="`LC_ALL= LC_CTYPE= LANG= wc -c < 'ex94warp.tcl'`"
    test 3408 -eq "$shar_count" ||
    $echo 'ex94warp.tcl:' 'original size' '3408,' 'current size' "$shar_count!"
  fi
fi
rm -fr _sh22836
exit 0

From ???@??? Wed Apr 16 07:18:24 1997
Received: from pearl.its.rpi.edu (conway@pearl.its.rpi.edu [128.113.24.74])
	by mail1.its.rpi.edu (8.8.5/8.8.5) with ESMTP id UAA138316
	for <citrit>; Tue, 15 Apr 1997 20:31:17 -0400
From: Laurie Conway <conway>
Received: (conway@localhost) by pearl.its.rpi.edu (950413.SGI.8.6.12/8.6.4) id UAA17387 for citrit; Tue, 15 Apr 1997 20:31:17 -0400
Date: Tue, 15 Apr 1997 20:31:17 -0400
Message-Id: <199704160031.UAA17387@pearl.its.rpi.edu>
To: citrit
Subject: HomeWork 3
X-UIDL: 56a70b991c90e04452c157449d0e0df2

#!/bin/sh
# This is a shell archive (produced by GNU sharutils 4.2).
# To extract the files from this archive, save it to some FILE, remove
# everything before the `!/bin/sh' line above, then type `sh FILE'.
#
# Made on 1997-04-15 20:27 EDT by <conway@pearl>.
# Source directory was `/afs/rpi.edu/home/17/conway/DataVis/hw3/arch'.
#
# Existing files will *not* be overwritten unless `-c' is specified.
#
# This shar contains:
# length mode       name
# ------ ---------- ------------------------------------------
#   4177 -rw------- hw3_1a.tcl
#   4280 -rw------- hw3_1b.tcl
#   2063 -rw------- hw3_2a.tcl
#   2553 -rw------- hw3_2b.tcl
#   2278 -rw------- hw3_2c.tcl
#   2465 -rw------- hw3_2d.tcl
#   2731 -rw------- hw3_2e.tcl
#
save_IFS="${IFS}"
IFS="${IFS}:"
gettext_dir=FAILED
locale_dir=FAILED
first_param="$1"
for dir in $PATH
do
  if test "$gettext_dir" = FAILED && test -f $dir/gettext \
     && ($dir/gettext --version >/dev/null 2>&1)
  then
    set `$dir/gettext --version 2>&1`
    if test "$3" = GNU
    then
      gettext_dir=$dir
    fi
  fi
  if test "$locale_dir" = FAILED && test -f $dir/shar \
     && ($dir/shar --print-text-domain-dir >/dev/null 2>&1)
  then
    locale_dir=`$dir/shar --print-text-domain-dir`
  fi
done
IFS="$save_IFS"
if test "$locale_dir" = FAILED || test "$gettext_dir" = FAILED
then
  echo=echo
else
  TEXTDOMAINDIR=$locale_dir
  export TEXTDOMAINDIR
  TEXTDOMAIN=sharutils
  export TEXTDOMAIN
  echo="$gettext_dir/gettext -s"
fi
touch -am 1231235999 $$.touch >/dev/null 2>&1
if test ! -f 1231235999 && test -f $$.touch; then
  shar_touch=touch
else
  shar_touch=:
  echo
  $echo 'WARNING: not restoring timestamps.  Consider getting and'
  $echo "installing GNU \`touch', distributed in GNU File Utilities..."
  echo
fi
rm -f 1231235999 $$.touch
#
if mkdir _sh17290; then
  $echo 'x -' 'creating lock directory'
else
  $echo 'failed to create lock directory'
  exit 1
fi
# ============= hw3_1a.tcl ==============
if test -f 'hw3_1a.tcl' && test "$first_param" != -c; then
  $echo 'x -' SKIPPING 'hw3_1a.tcl' '(file already exists)'
else
  $echo 'x -' extracting 'hw3_1a.tcl' '(text)'
  sed 's/^X//' << 'SHAR_EOF' > 'hw3_1a.tcl' &&
#  Laura Conway
#  Homework 3 Part 1 a
#  Exercise 6.3 
#
# user interface command widget
source vtkInt.tcl
#
# Call Animate from the Interactor window to animate scalar values
#
proc Animate {} {
X
global renWin min max num_increments decimation;
X
X    contours GenerateValues 0 10 10;
X	$renWin Render;
X
X	for {set i 0} { $i < $num_increments} {incr i} {
X		set val [expr $max - ($min + ($i/($num_increments-1.0))*($max - $min))]
X		contours SetValue 0 $val;
X		$renWin Render;
X		puts "SetValue 0 $val"
#
# Since decimation is pretty slow, don't bother with a delay if it's enabled
X		if { $decimation == 0 } {
X		   after 1000
X        }
X	}
X    contours GenerateValues 0 10 10;
X	$renWin Render;
X	for {set i 0} { $i < $num_increments} {incr i} {
X		set val [expr $min + ($i/($num_increments-1.0))*($max - $min)]
X		contours SetValue $i $val;
X		$renWin Render;
X		puts "SetValue $i $val" 
X		if { $decimation == 0 } {
X		   after 500
X        }
X	}
#
# Reset back to original image
#
X	contours GenerateValues $num_increments $min $max;
X	$renWin Render;
X
X    PrintInfo;
}
X
proc ToggleDecimation {} {
X
X  global decimation connectivity; 
X
X  if {$decimation == 0} {
X	set decimation 1
X	puts "Turning on Decimation"
X	if {$connectivity == 1} {
X	   connect SetInput [deci GetOutput];
X	} else {
X       contMapper SetInput [deci GetOutput];
X    }
X  } else {
X	puts "Turning off decimation"
X	set decimation 0
X	if {$connectivity == 1} {
X	   connect SetInput [ contours GetOutput ];
X	} else {
X	   contMapper SetInput [contours GetOutput];
X	}
X  }
}
proc ToggleConnectivity {} {
X
X  global decimation connectivity;
X
X  if {$connectivity == 0} {
X	set connectivity 1
X	puts "Turning on Connectivity (ExtractLargestRegion)"
X	if {$decimation == 1} {
X	   connect SetInput [deci GetOutput];
X	} else {
X       connect SetInput [contours GetOutput];
X	}
X    contMapper SetInput [connect GetOutput];
X  } else {
X	puts "Turning off Connectivity"
X	set connectivity 0
X	if {$decimation == 1} {
X       contMapper SetInput [deci GetOutput];
X    } else {
X       contMapper SetInput [contours GetOutput];
X	}
X  }
}
proc PrintInfo {} {
X
X  global decimation connectivity; 
X
X   puts ""
X   puts ""
X   puts " "
X   puts " "
X   puts " "
X   puts " "
X   puts "Use the Interactor to call the function 'Animate' to animate;"
X   puts "and 'ToggleDecimation' and 'ToggleConnectivity' to add/remove filters."
X   puts ""
X   puts "The pipeline is currently:"
X   puts "   vtkSampleFunction -> "
X   puts "   vtkContourFilter -> "
X   if { $decimation == 1 } {
X      puts "   vtkDecimate -> "
X   } 
X   if { $connectivity == 1 } {
X      puts "   vtkConnectivityFilter -> "
X   }
X   puts "   vtkDataSetMapper"
X   puts " "
X   puts " "
X   puts " "
}
# create a rendering window and renderer
vtkRenderMaster rm;
global min max num_increments decimation connectivity;
set num_increments 5;
set min 0.0
set max 1.2
set decimation 0
set connectivity 0
X
set renWin [rm MakeRenderWindow];
set ren1 [$renWin MakeRenderer];
set iren [$renWin MakeRenderWindowInteractor];
X
vtkQuadric quad;
X  quad SetCoefficients 0.5 1 .2 0 .1 0 0 .2 0 0;
vtkSampleFunction sample;
X  sample SetSampleDimensions 30 30 30;
X  sample SetImplicitFunction quad;
vtkContourFilter contours;
X  contours SetInput [sample GetOutput];
X  contours GenerateValues $num_increments $min $max;
#
#  Decimation and Connectivity filters may be toggled via 
#  ToggleDecimation and ToggleConnectivity to join in the pipeline
#
vtkDecimate deci;
X  deci SetInput [ contours GetOutput ];
X  deci SetTargetReduction 0.9;
X  deci SetMaximumIterations 5;
# deci DebugOn;
vtkConnectivityFilter connect;
X  connect SetInput [contours GetOutput];
X  connect ExtractLargestRegion;
# connect DebugOn;
X
vtkDataSetMapper contMapper;
#  Initially we'll skip the Decimation and Connectivity Filters
X  contMapper SetInput [contours GetOutput]; 
X  contMapper SetScalarRange $min $max;
vtkActor contActor;
X  contActor SetMapper contMapper;
X
# assign our actor to the renderer
$ren1 SetBackground 1 1 1;
$ren1 AddActors contActor;
X
PrintInfo;
X
# enable user interface interactor
$iren SetUserMethod {wm deiconify .vtkInteract};
$iren Initialize;
X
# prevent the tk window from showing up then start the event loop
wm withdraw .
X
SHAR_EOF
  $shar_touch -am 0415192997 'hw3_1a.tcl' &&
  chmod 0600 'hw3_1a.tcl' ||
  $echo 'restore of' 'hw3_1a.tcl' 'failed'
  if ( md5sum --help 2>&1 | grep 'sage: md5sum \[' ) >/dev/null 2>&1 \
  && ( md5sum --version 2>&1 | grep -v 'textutils 1.12' ) >/dev/null; then
    md5sum -c << SHAR_EOF >/dev/null 2>&1 \
    || $echo 'hw3_1a.tcl:' 'MD5 check failed'
e0787052895f459ca16bf8cc1be16104  hw3_1a.tcl
SHAR_EOF
  else
    shar_count="`LC_ALL= LC_CTYPE= LANG= wc -c < 'hw3_1a.tcl'`"
    test 4177 -eq "$shar_count" ||
    $echo 'hw3_1a.tcl:' 'original size' '4177,' 'current size' "$shar_count!"
  fi
fi
# ============= hw3_1b.tcl ==============
if test -f 'hw3_1b.tcl' && test "$first_param" != -c; then
  $echo 'x -' SKIPPING 'hw3_1b.tcl' '(file already exists)'
else
  $echo 'x -' extracting 'hw3_1b.tcl' '(text)'
  sed 's/^X//' << 'SHAR_EOF' > 'hw3_1b.tcl' &&
#  Laura Conway
#  Homework 3 Part 1a
#  Exercise 6.3 b
#
# user interface command widget
source vtkInt.tcl
X
#
# Call Animate from the Interactor window to animate scalar values
#
proc Animate {} {
X
global renWin min max increment current marchingcubes;
X
X	if { $marchingcubes == 1} {
X		for {set i 0} { $i < 11} {incr i} {
X			contours SetValue 0 [expr $min + ($i * $increment)]
X			puts "contours SetValue 0 [expr $min + ($i * $increment)]"
X			$renWin Render;
X		}
X	} else {
X		for {set i 0} { $i < 11} {incr i} {
X			iso SetValue 0 [expr $min + ($i * $increment)]
X			puts "iso SetValue 0 [expr $min + ($i * $increment)]"
X			$renWin Render;
X		}
X	}
X	set current $max;
X	PrintInfo;
}
X
proc TogglePipeLine {} {
X
X  global marchingcubes;
X
X  puts "Switching Pipeline";
X  if {$marchingcubes == 0} {
X	set marchingcubes 1
X    clean SetInput [contours GetOutput];
X  } else {
X	set marchingcubes 0
X    clean SetInput [iso GetOutput];
X  }
X  PrintPipeLine;
}
proc ToggleConnectivity {} {
X
X  global connectivity;
X
X	if {$connectivity == 0} {
X		set connectivity 1
X		puts "Turning on Connectivity (ExtractLargestRegion)"
X		contMapper SetInput [connect GetOutput];
X	} else {
X		puts "Turning off Connectivity"
X		set connectivity 0
X		contMapper SetInput [deci GetOutput];
X	}
X	PrintPipeLine;
}
X
proc PrintInfo {} {
X
X   global marchingcubes;
X
X	puts ""
X	puts ""
X	puts " "
X	puts " "
X	puts " "
X	puts " "
X	puts "Use the Interactor to call these functions:" 
X	puts "   'Animate' to animate"
X	puts "   'Next' to go to the next iso surface"
X	puts "   'Redraw' to reset to first iso surface";
X	puts "   'TogglePipeLine' to switch between MarchingCubes and ContourFilter";
X	puts "   'ToggleConnectivity' to enable/disable the connectivity filter "; 	puts ""
X	PrintPipeLine; 
X	puts " "
X	puts " "
X	puts " "
}
proc PrintPipeLine {} {
X
X    global marchingcubes connectivity;
X
X	puts "The pipeline is currently:"
X	if { $marchingcubes == 1 } {
X		puts "   vtkMarchingCubes -> "
X	} else {
X		puts "   vtkContourFilter -> "
X	}
X	puts "   vtkCleanPolyData ->"
X	puts "   vtkDecimate -> "
X	if { $connectivity == 1 } {
X	  puts "   vtkConnectivityFilter -> "
X	}
X	puts "   vtkDataSetMapper"
}
proc Next {} {
X
global renWin min max current increment marchingcubes;
X
X	set current [expr $current + $increment];
X	if {$current > $max} {
X	  set current $min;
X	}
X	puts "Setting value to $current"
X	if { $marchingcubes == 1} {
X		contours SetValue 0 $current;
X	} else {
X		iso SetValue 0 $current;
X	}
X	$renWin Render;
}
X
X
proc Redraw {} {
X
global renWin min marchingcubes;
X
X	if { $marchingcubes == 1} {
X		contours SetValue 0 $min;
X	} else {
X		iso SetValue 0 $min;
X	}
X	$renWin Render;
X
X	PrintInfo;
}
X
X
# create a rendering window and renderer
vtkRenderMaster rm;
global renWin min max current connectivity marchingcubes;
set renWin [rm MakeRenderWindow];
set ren1 [$renWin MakeRenderer];
set iren [$renWin MakeRenderWindowInteractor];
set min 200;
set max 2200.0;
set connectivity 1
set marchingcubes 1
set current 200
set increment [expr ($max - $min)/10.0];
X
vtkStructuredPointsReader reader;
X  reader SetFilename "MRIdata.vtk"
#  reader DebugOn;
X
#
#  Doing either MarchingCubes or ContourFilter based on user input
#
vtkMarchingCubes contours;
X  contours SetInput [reader GetOutput];
X  contours SetValue 0 $min;
X
vtkContourFilter iso;
X  iso SetInput [reader GetOutput];
X  iso SetValue 0 $min;
X
vtkCleanPolyData clean;
X	clean SetInput [contours GetOutput];
X
vtkDecimate deci;
X  deci SetInput [ clean GetOutput ];
X  deci SetTargetReduction 0.9;
X  deci SetMaximumIterations 3;
#  deci DebugOn;
X
vtkConnectivityFilter connect;
X  connect SetInput [deci GetOutput];
X  connect ExtractLargestRegion;
# connect DebugOn;
X
vtkDataSetMapper contMapper;
X  contMapper SetInput [connect GetOutput];
X  contMapper SetScalarRange $min $max;
X
vtkActor contActor;
X  contActor SetMapper contMapper;
X
# assign our actor to the renderer
$ren1 SetBackground 1 1 1;
$ren1 AddActors contActor;
X
# Put this guy in an upright postition
set camera [$ren1 GetActiveCamera ];
$camera SetPosition -105.0 -13.0 -63.0;
$camera SetViewUp 0.0 -1.0 0.5;
$camera CalcViewPlaneNormal;
X
PrintInfo;
X
# enable user interface interactor
$iren SetUserMethod {wm deiconify .vtkInteract};
$iren Initialize;
X
# prevent the tk window from showing up then start the event loop
wm withdraw .
X
SHAR_EOF
  $shar_touch -am 0415202297 'hw3_1b.tcl' &&
  chmod 0600 'hw3_1b.tcl' ||
  $echo 'restore of' 'hw3_1b.tcl' 'failed'
  if ( md5sum --help 2>&1 | grep 'sage: md5sum \[' ) >/dev/null 2>&1 \
  && ( md5sum --version 2>&1 | grep -v 'textutils 1.12' ) >/dev/null; then
    md5sum -c << SHAR_EOF >/dev/null 2>&1 \
    || $echo 'hw3_1b.tcl:' 'MD5 check failed'
5f8047d98d39ee1d8061ef3addede9f4  hw3_1b.tcl
SHAR_EOF
  else
    shar_count="`LC_ALL= LC_CTYPE= LANG= wc -c < 'hw3_1b.tcl'`"
    test 4280 -eq "$shar_count" ||
    $echo 'hw3_1b.tcl:' 'original size' '4280,' 'current size' "$shar_count!"
  fi
fi
# ============= hw3_2a.tcl ==============
if test -f 'hw3_2a.tcl' && test "$first_param" != -c; then
  $echo 'x -' SKIPPING 'hw3_2a.tcl' '(file already exists)'
else
  $echo 'x -' extracting 'hw3_2a.tcl' '(text)'
  sed 's/^X//' << 'SHAR_EOF' > 'hw3_2a.tcl' &&
#  Laura Conway
#  Homework 3 Part 2
#  Exercise 9.4 a - Using vtkProbeFilter and vtkHedgeHog 
#
#uncomment the line below if you are on Windows95
# load vtktcl;
# get the interactor ui
source vtkInt.tcl
X
# First create the render master
vtkRenderMaster rm;
X
# Now create the RenderWindow, Renderer and both Actors
#
set renWin [rm MakeRenderWindow];
set ren1   [$renWin MakeRenderer];
set iren [$renWin MakeRenderWindowInteractor];
X
# create pipeline
#
vtkPLOT3DReader pl3d;
X    pl3d SetXYZFilename "combxyz.bin"
X    pl3d SetQFilename "combq.bin"
X    pl3d SetScalarFunctionNumber 100;
X    pl3d SetVectorFunctionNumber 202;
X    pl3d Update;
X
vtkStructuredGridGeometryFilter compPlane;
X	compPlane SetInput [pl3d GetOutput];
X	compPlane SetExtent 0 100 0 100 9 9;
X
vtkProbeFilter probe;
X    probe SetInput [compPlane GetOutput];
X    probe SetSource [pl3d GetOutput];
X
vtkHedgeHog hog;
X  hog SetInput [ probe GetOutput ];
X  hog SetScaleFactor 0.006;
X
vtkPolyMapper hogMapper;
X    hogMapper SetInput [hog GetOutput];
X	eval hogMapper SetScalarRange [[[[pl3d GetOutput] GetPointData] GetScalars] GetRange];
X
vtkActor hogActor;
X	hogActor SetMapper hogMapper;
X
# Outline Box 
vtkStructuredGridOutlineFilter outline;
X    outline SetInput [pl3d GetOutput];
vtkPolyMapper outlineMapper;
X    outlineMapper SetInput [outline GetOutput];
vtkActor outlineActor;
X    outlineActor SetMapper outlineMapper;
X    [outlineActor GetProperty] SetColor 0 0 0;
X
$ren1 AddActors outlineActor;
$ren1 AddActors hogActor;
$ren1 SetBackground 1 1 1;
$renWin SetSize 500 500;
$iren Initialize;
X
set cam1 [$ren1 GetActiveCamera];
$cam1 SetClippingRange 3.95297 50;
$cam1 SetFocalPoint 8.88908 0.595038 29.3342;
$cam1 SetPosition -12.3332 31.7479 41.2387;
$cam1 CalcViewPlaneNormal;
$cam1 SetViewUp 0.060772 -0.319905 0.945498;
X
puts ""
puts ""
puts " This is exercise 9.4 a - Using vtkProbeFilter and vtkHedgeHog  " 
puts ""
X
# render the image
#
$iren SetUserMethod {wm deiconify .vtkInteract};
$renWin Render;
X
# prevent the tk window from showing up then start the event loop
wm withdraw .
X
X
X
SHAR_EOF
  $shar_touch -am 0413140097 'hw3_2a.tcl' &&
  chmod 0600 'hw3_2a.tcl' ||
  $echo 'restore of' 'hw3_2a.tcl' 'failed'
  if ( md5sum --help 2>&1 | grep 'sage: md5sum \[' ) >/dev/null 2>&1 \
  && ( md5sum --version 2>&1 | grep -v 'textutils 1.12' ) >/dev/null; then
    md5sum -c << SHAR_EOF >/dev/null 2>&1 \
    || $echo 'hw3_2a.tcl:' 'MD5 check failed'
d4109367c8455d7da42fa332231424ad  hw3_2a.tcl
SHAR_EOF
  else
    shar_count="`LC_ALL= LC_CTYPE= LANG= wc -c < 'hw3_2a.tcl'`"
    test 2063 -eq "$shar_count" ||
    $echo 'hw3_2a.tcl:' 'original size' '2063,' 'current size' "$shar_count!"
  fi
fi
# ============= hw3_2b.tcl ==============
if test -f 'hw3_2b.tcl' && test "$first_param" != -c; then
  $echo 'x -' SKIPPING 'hw3_2b.tcl' '(file already exists)'
else
  $echo 'x -' extracting 'hw3_2b.tcl' '(text)'
  sed 's/^X//' << 'SHAR_EOF' > 'hw3_2b.tcl' &&
#  Laura Conway
#  Homework 3 Part 2
#  Exercise 9.4 b - Using vtkProbeFilter and vtkStreamLine
#
#uncomment the line below if you are on Windows95
# load vtktcl;
# get the interactor ui
source vtkInt.tcl
puts " "
puts "NOTE NOTE NOTE NOTE NOTE NOTE NOTE NOTE NOTE NOTE NOTE NOTE NOTE NOTE NOTE NOTE"
puts " "
puts "I've had trouble on some systems running out of memory when I run this."
puts "It does work well on hawk.vlsc, but... "
puts "If this happens, remove the '#' before 'compPlane SetExtent 0 100 10 20 4 4' on line 40"
puts " "
puts " "
X
X
# First create the render master
vtkRenderMaster rm;
X
# Now create the RenderWindow, Renderer and both Actors
#
set renWin [rm MakeRenderWindow];
set ren1   [$renWin MakeRenderer];
set iren [$renWin MakeRenderWindowInteractor];
X
# create pipeline
#
vtkPLOT3DReader pl3d;
X    pl3d SetXYZFilename "combxyz.bin"
X    pl3d SetQFilename "combq.bin"
X    pl3d SetScalarFunctionNumber 100;
X    pl3d SetVectorFunctionNumber 202;
X    pl3d Update;
X
vtkStructuredGridGeometryFilter compPlane;
X	compPlane SetInput [pl3d GetOutput];
X	compPlane SetExtent 0 100 0 100 4 4;
#	compPlane SetExtent 0 100 10 20 4 4;
X
vtkProbeFilter probe;
X	probe SetInput [compPlane GetOutput];
X	probe SetSource [pl3d GetOutput];
X	probe DebugOn;
X
vtkStreamLine sl;
X 	sl SetInput [probe GetOutput];
X    sl SetSource [probe GetOutput];
X    sl SetStepLength .5;
X	sl SetMaximumPropagationTime 500;
X	sl DebugOn;
X	sl Update;
X
vtkPolyMapper slMapper;
X    slMapper SetInput [sl GetOutput];
X 	eval slMapper SetScalarRange [[[[pl3d GetOutput] GetPointData] GetScalars] GetRange];
X
vtkActor streamActor;
X	streamActor SetMapper slMapper;
X
# Outline Box 
vtkStructuredGridOutlineFilter outline;
X    outline SetInput [pl3d GetOutput];
vtkPolyMapper outlineMapper;
X    outlineMapper SetInput [outline GetOutput];
vtkActor outlineActor;
X    outlineActor SetMapper outlineMapper;
X    [outlineActor GetProperty] SetColor 0 0 0;
X
$ren1 AddActors outlineActor;
$ren1 AddActors streamActor;
$ren1 SetBackground 1 1 1;
$renWin SetSize 500 500;
$iren Initialize;
X
set cam1 [$ren1 GetActiveCamera];
$cam1 SetClippingRange 3.95297 50;
$cam1 SetFocalPoint 8.88908 0.595038 29.3342;
$cam1 SetPosition -12.3332 31.7479 41.2387;
$cam1 CalcViewPlaneNormal;
$cam1 SetViewUp 0.060772 -0.319905 0.945498;
puts ""
puts ""
puts " This is exercise 9.4 b - Using vtkProbeFilter and vtkStreamLine  " 
puts ""
X
# render the image
#
$iren SetUserMethod {wm deiconify .vtkInteract};
$renWin Render;
X
# prevent the tk window from showing up then start the event loop
wm withdraw .
X
SHAR_EOF
  $shar_touch -am 0415202697 'hw3_2b.tcl' &&
  chmod 0600 'hw3_2b.tcl' ||
  $echo 'restore of' 'hw3_2b.tcl' 'failed'
  if ( md5sum --help 2>&1 | grep 'sage: md5sum \[' ) >/dev/null 2>&1 \
  && ( md5sum --version 2>&1 | grep -v 'textutils 1.12' ) >/dev/null; then
    md5sum -c << SHAR_EOF >/dev/null 2>&1 \
    || $echo 'hw3_2b.tcl:' 'MD5 check failed'
3666514dfdbb5646b0c77b4e2c364001  hw3_2b.tcl
SHAR_EOF
  else
    shar_count="`LC_ALL= LC_CTYPE= LANG= wc -c < 'hw3_2b.tcl'`"
    test 2553 -eq "$shar_count" ||
    $echo 'hw3_2b.tcl:' 'original size' '2553,' 'current size' "$shar_count!"
  fi
fi
# ============= hw3_2c.tcl ==============
if test -f 'hw3_2c.tcl' && test "$first_param" != -c; then
  $echo 'x -' SKIPPING 'hw3_2c.tcl' '(file already exists)'
else
  $echo 'x -' extracting 'hw3_2c.tcl' '(text)'
  sed 's/^X//' << 'SHAR_EOF' > 'hw3_2c.tcl' &&
#  Laura Conway
#  Homework 3 Part 2
#  Exercise 9.4 c - Using vtkProbeFilter and vtkWarpVector
#
#uncomment the line below if you are on Windows95
# load vtktcl;
# get the interactor ui
source vtkInt.tcl
X
# First create the render master
vtkRenderMaster rm;
X
# Now create the RenderWindow, Renderer and both Actors
#
set renWin [rm MakeRenderWindow];
set ren1   [$renWin MakeRenderer];
set iren [$renWin MakeRenderWindowInteractor];
X
# create pipeline
#
vtkPLOT3DReader pl3d;
X    pl3d SetXYZFilename "combxyz.bin"
X    pl3d SetQFilename "combq.bin"
X    pl3d SetScalarFunctionNumber 100;
X    pl3d SetVectorFunctionNumber 202;
X    pl3d Update;
X
vtkStructuredGridGeometryFilter compPlane;
X	compPlane SetInput [pl3d GetOutput];
X	compPlane SetExtent 0 100 0 100 9 9;
X
vtkProbeFilter probe;
X    probe SetInput [compPlane GetOutput];
X    probe SetSource [pl3d GetOutput];
X
vtkWarpScalar warp;
X  warp SetInput [ compPlane GetOutput ];
X  warp UseNormalOn;
X  warp SetNormal 1.0 0.0 0.0;
X  warp SetScaleFactor 10.0;
X
vtkGeometryFilter ds2poly;
X  ds2poly SetInput [warp GetOutput];
X
vtkPolyNormals normals;
X	normals SetInput [ds2poly GetOutput];
X	normals SetFeatureAngle 60;
X
vtkDataSetMapper planeMapper;
X  planeMapper SetInput [normals GetOutput];
X  eval planeMapper SetScalarRange [[pl3d GetOutput] GetScalarRange];
X
vtkActor planeActor;
X	planeActor SetMapper planeMapper;
X
# Outline Box 
vtkStructuredGridOutlineFilter outline;
X    outline SetInput [pl3d GetOutput];
vtkPolyMapper outlineMapper;
X    outlineMapper SetInput [outline GetOutput];
vtkActor outlineActor;
X    outlineActor SetMapper outlineMapper;
X    [outlineActor GetProperty] SetColor 0 0 0;
X
$ren1 AddActors outlineActor;
$ren1 AddActors planeActor;
$ren1 SetBackground 1 1 1;
$renWin SetSize 500 500;
$iren Initialize;
X
set cam1 [$ren1 GetActiveCamera];
$cam1 SetClippingRange 3.95297 50;
$cam1 SetFocalPoint 8.88908 0.595038 29.3342;
$cam1 SetPosition -12.3332 31.7479 41.2387;
$cam1 CalcViewPlaneNormal;
$cam1 SetViewUp 0.060772 -0.319905 0.945498;
puts ""
puts ""
puts " This is exercise 9.4 c - Using vtkProbeFilter and vtkWarpVector  " 
puts ""
# render the image
#
$iren SetUserMethod {wm deiconify .vtkInteract};
$renWin Render;
X
# prevent the tk window from showing up then start the event loop
wm withdraw .
X
X
X
SHAR_EOF
  $shar_touch -am 0413140297 'hw3_2c.tcl' &&
  chmod 0600 'hw3_2c.tcl' ||
  $echo 'restore of' 'hw3_2c.tcl' 'failed'
  if ( md5sum --help 2>&1 | grep 'sage: md5sum \[' ) >/dev/null 2>&1 \
  && ( md5sum --version 2>&1 | grep -v 'textutils 1.12' ) >/dev/null; then
    md5sum -c << SHAR_EOF >/dev/null 2>&1 \
    || $echo 'hw3_2c.tcl:' 'MD5 check failed'
c157a4b7982631411f989396711c9c48  hw3_2c.tcl
SHAR_EOF
  else
    shar_count="`LC_ALL= LC_CTYPE= LANG= wc -c < 'hw3_2c.tcl'`"
    test 2278 -eq "$shar_count" ||
    $echo 'hw3_2c.tcl:' 'original size' '2278,' 'current size' "$shar_count!"
  fi
fi
# ============= hw3_2d.tcl ==============
if test -f 'hw3_2d.tcl' && test "$first_param" != -c; then
  $echo 'x -' SKIPPING 'hw3_2d.tcl' '(file already exists)'
else
  $echo 'x -' extracting 'hw3_2d.tcl' '(text)'
  sed 's/^X//' << 'SHAR_EOF' > 'hw3_2d.tcl' &&
#  Laura Conway
#  Homework 3 Part 2
#  Exercise 9.4 d - Using vtkProbeFilter and vtkVectorNorm
#
#uncomment the line below if you are on Windows95
# load vtktcl;
# get the interactor ui
source vtkInt.tcl
X
# First create the render master
vtkRenderMaster rm;
X
# Now create the RenderWindow, Renderer and both Actors
#
set renWin [rm MakeRenderWindow];
set ren1   [$renWin MakeRenderer];
set iren [$renWin MakeRenderWindowInteractor];
X
# create pipeline
#
vtkPLOT3DReader pl3d;
X    pl3d SetXYZFilename "combxyz.bin"
X    pl3d SetQFilename "combq.bin"
X    pl3d SetScalarFunctionNumber 100;
X    pl3d SetVectorFunctionNumber 202;
X    pl3d Update;
X
vtkStructuredGridGeometryFilter compPlane;
X	compPlane SetInput [pl3d GetOutput];
X	compPlane SetExtent 0 100 0 100 9 9;
X
vtkProbeFilter probe;
X    probe SetInput [compPlane GetOutput];
X    probe SetSource [pl3d GetOutput];
X	probe DebugOn;
X
vtkVectorNorm color;
X  color SetInput [ probe GetOutput ];
X  color NormalizeOn;
X  color DebugOn;
X
# Initialize lut to red->blue
vtkLookupTable lut;
X   lut SetHueRange  0.0 0.667;
X
vtkDataSetMapper colorMapper;
X  colorMapper SetInput [color GetOutput];
X  colorMapper SetLookupTable lut;
X  eval colorMapper SetScalarRange -1 1;
X
vtkActor colorActor;
X	colorActor SetMapper colorMapper;
X
# Outline Box 
vtkStructuredGridOutlineFilter outline;
X    outline SetInput [pl3d GetOutput];
vtkPolyMapper outlineMapper;
X    outlineMapper SetInput [outline GetOutput];
vtkActor outlineActor;
X    outlineActor SetMapper outlineMapper;
X    [outlineActor GetProperty] SetColor 0 0 0;
X
$ren1 AddActors outlineActor;
$ren1 AddActors colorActor;
$ren1 SetBackground 1 1 1;
$renWin SetSize 500 500;
$iren Initialize;
X
set cam1 [$ren1 GetActiveCamera];
$cam1 SetClippingRange 3.95297 50;
$cam1 SetFocalPoint 8.88908 0.595038 29.3342;
$cam1 SetPosition -12.3332 31.7479 41.2387;
$cam1 CalcViewPlaneNormal;
$cam1 SetViewUp 0.060772 -0.319905 0.945498;
X
puts ""
puts ""
puts " This is exercise 9.4 d - Using vtkProbeFilter and vtkVectorNorm  " 
puts ""
puts " Lookup table changes from (red->blue) to (blue->red) after 5 seconds..."
puts ""
puts " SetHueRange  0.0 0.667 (red->blue)"
X
# render the image
#
$iren SetUserMethod {wm deiconify .vtkInteract};
$renWin Render;
X
#
# Change lut to blue->red
puts " Waiting 5 seconds..."
after 5000
lut SetHueRange  0.667 0.0;
$renWin Render;
puts " SetHueRange 0.667 0.0 (blue->red)"
X
# prevent the tk window from showing up then start the event loop
wm withdraw .
X
SHAR_EOF
  $shar_touch -am 0413140297 'hw3_2d.tcl' &&
  chmod 0600 'hw3_2d.tcl' ||
  $echo 'restore of' 'hw3_2d.tcl' 'failed'
  if ( md5sum --help 2>&1 | grep 'sage: md5sum \[' ) >/dev/null 2>&1 \
  && ( md5sum --version 2>&1 | grep -v 'textutils 1.12' ) >/dev/null; then
    md5sum -c << SHAR_EOF >/dev/null 2>&1 \
    || $echo 'hw3_2d.tcl:' 'MD5 check failed'
139a2d1630ba37f30c262e2a9129beaf  hw3_2d.tcl
SHAR_EOF
  else
    shar_count="`LC_ALL= LC_CTYPE= LANG= wc -c < 'hw3_2d.tcl'`"
    test 2465 -eq "$shar_count" ||
    $echo 'hw3_2d.tcl:' 'original size' '2465,' 'current size' "$shar_count!"
  fi
fi
# ============= hw3_2e.tcl ==============
if test -f 'hw3_2e.tcl' && test "$first_param" != -c; then
  $echo 'x -' SKIPPING 'hw3_2e.tcl' '(file already exists)'
else
  $echo 'x -' extracting 'hw3_2e.tcl' '(text)'
  sed 's/^X//' << 'SHAR_EOF' > 'hw3_2e.tcl' &&
#  Laura Conway
#  Homework 3 Part 2
#  Exercise 9.4 e - Using vtkProbeFilter and vtkVectorDot
#
#uncomment the line below if you are on Windows95
# load vtktcl;
# get the interactor ui
source vtkInt.tcl
X
# First create the render master
vtkRenderMaster rm;
X
# Now create the RenderWindow, Renderer and both Actors
#
set renWin [rm MakeRenderWindow];
set ren1   [$renWin MakeRenderer];
set iren [$renWin MakeRenderWindowInteractor];
X
# create pipeline
#
vtkPLOT3DReader pl3d;
X    pl3d SetXYZFilename "combxyz.bin"
X    pl3d SetQFilename "combq.bin"
X    pl3d SetScalarFunctionNumber 100;
X    pl3d SetVectorFunctionNumber 202;
X    pl3d Update;
X
vtkStructuredGridGeometryFilter compPlane;
X	compPlane SetInput [pl3d GetOutput];
X	compPlane SetExtent 0 100 0 100 6 6;
X
vtkProbeFilter probe;
X    probe SetInput [compPlane GetOutput];
X    probe SetSource [pl3d GetOutput];
X	probe DebugOn;
X
vtkGeometryFilter ds2poly;
X  ds2poly SetInput [probe GetOutput];
X
vtkCleanPolyData clean;
X	clean SetInput [ds2poly GetOutput];
X
vtkPolyNormals normals;
X	normals SetInput [clean GetOutput];
X	normals SetFeatureAngle 60;
X
vtkVectorDot color;
X  color SetInput [ normals GetOutput ];
X  color DebugOn;
X
# Initialize lut to blue->red
vtkLookupTable lut;
X   lut SetHueRange  0.667 0.0;
X
vtkDataSetMapper colorMapper;
X  colorMapper SetInput [color GetOutput];
# eval colorMapper SetScalarRange [[pl3d GetOutput] GetScalarRange];
X  colorMapper SetLookupTable lut;
X  eval colorMapper SetScalarRange -1 1;
X
vtkActor colorActor;
X	colorActor SetMapper colorMapper;
X
# Outline Box 
vtkStructuredGridOutlineFilter outline;
X    outline SetInput [pl3d GetOutput];
vtkPolyMapper outlineMapper;
X    outlineMapper SetInput [outline GetOutput];
vtkActor outlineActor;
X    outlineActor SetMapper outlineMapper;
X    [outlineActor GetProperty] SetColor 0 0 0;
X
$ren1 AddActors outlineActor;
$ren1 AddActors colorActor;
$ren1 SetBackground 1 1 1;
$renWin SetSize 500 500;
$iren Initialize;
X
set cam1 [$ren1 GetActiveCamera];
$cam1 SetClippingRange 3.95297 50;
$cam1 SetFocalPoint 8.88908 0.595038 29.3342;
$cam1 SetPosition -12.3332 31.7479 41.2387;
$cam1 CalcViewPlaneNormal;
$cam1 SetViewUp 0.060772 -0.319905 0.945498;
X
puts ""
puts ""
puts " This is exercise 9.4 e - Using vtkProbeFilter and vtkVectorDot  "
puts ""
puts " Lookup table changes from (blue->red) to (red->blue) after 5 seconds..."
puts ""
puts " SetHueRange  0.667 0.0 (blue->red)"
X
# render the image
#
$iren SetUserMethod {wm deiconify .vtkInteract};
$renWin Render;
X
#
# Change lut to red->blue
puts " Waiting 5 seconds..."
after 5000
lut SetHueRange  0.0 0.667;
$renWin Render;
puts " SetHueRange  0.0 0.667 (red->blue)"
X
# prevent the tk window from showing up then start the event loop
wm withdraw .
X
SHAR_EOF
  $shar_touch -am 0413140297 'hw3_2e.tcl' &&
  chmod 0600 'hw3_2e.tcl' ||
  $echo 'restore of' 'hw3_2e.tcl' 'failed'
  if ( md5sum --help 2>&1 | grep 'sage: md5sum \[' ) >/dev/null 2>&1 \
  && ( md5sum --version 2>&1 | grep -v 'textutils 1.12' ) >/dev/null; then
    md5sum -c << SHAR_EOF >/dev/null 2>&1 \
    || $echo 'hw3_2e.tcl:' 'MD5 check failed'
1a1d72e08092818e05e237ebe47b812e  hw3_2e.tcl
SHAR_EOF
  else
    shar_count="`LC_ALL= LC_CTYPE= LANG= wc -c < 'hw3_2e.tcl'`"
    test 2731 -eq "$shar_count" ||
    $echo 'hw3_2e.tcl:' 'original size' '2731,' 'current size' "$shar_count!"
  fi
fi
rm -fr _sh17290
exit 0

From ???@??? Wed Apr 16 07:18:25 1997
Received: from lib122.its.rpi.edu (anandk@lib122.its.rpi.edu [128.113.68.128])
	by mail1.its.rpi.edu (8.8.5/8.8.5) with ESMTP id UAA97544
	for <citrit@rpi.edu>; Tue, 15 Apr 1997 20:55:02 -0400
From: Kanwaljit Singh Anand <anandk>
Received: (anandk@localhost) by lib122.its.rpi.edu (8.6.9/8.6.4) id UAA22480 for citrit@rpi.edu; Tue, 15 Apr 1997 20:54:55 -0400
Date: Tue, 15 Apr 1997 20:54:55 -0400
Message-Id: <199704160054.UAA22480@lib122.its.rpi.edu>
To: citrit@rpi.edu
Subject: Homework #3
X-UIDL: 8420dab0265aa69139d12815143bf7ac

#!/bin/sh
# This is a shell archive (produced by GNU sharutils 4.2).
# To extract the files from this archive, save it to some FILE, remove
# everything before the `!/bin/sh' line above, then type `sh FILE'.
#
# Made on 1997-04-15 20:54 EDT by <anandk@lib122>.
# Source directory was `/afs/rpi.edu/home/38/anandk/private/ACG/hw3_submission'.
#
# Existing files will *not* be overwritten unless `-c' is specified.
#
# This shar contains:
# length mode       name
# ------ ---------- ------------------------------------------
#   2899 -rw------- 6_3_a.tcl
#   3531 -rw------- 6_3_b.tcl
#   3558 -rw------- 9_4a.tcl
#   2189 -rw------- 9_4b.tcl
#   4148 -rw------- 9_4c.tcl
#   3483 -rw------- 9_4d.tcl
#   3466 -rw------- 9_4e.tcl
#   3909 -rw------- Decimated_6_3_a.tcl
#   4606 -rw------- Decimated_6_3_b.tcl
#   2311 -rwx------ vtkInt.tcl
#
save_IFS="${IFS}"
IFS="${IFS}:"
gettext_dir=FAILED
locale_dir=FAILED
first_param="$1"
for dir in $PATH
do
  if test "$gettext_dir" = FAILED && test -f $dir/gettext \
     && ($dir/gettext --version >/dev/null 2>&1)
  then
    set `$dir/gettext --version 2>&1`
    if test "$3" = GNU
    then
      gettext_dir=$dir
    fi
  fi
  if test "$locale_dir" = FAILED && test -f $dir/shar \
     && ($dir/shar --print-text-domain-dir >/dev/null 2>&1)
  then
    locale_dir=`$dir/shar --print-text-domain-dir`
  fi
done
IFS="$save_IFS"
if test "$locale_dir" = FAILED || test "$gettext_dir" = FAILED
then
  echo=echo
else
  TEXTDOMAINDIR=$locale_dir
  export TEXTDOMAINDIR
  TEXTDOMAIN=sharutils
  export TEXTDOMAIN
  echo="$gettext_dir/gettext -s"
fi
touch -am 1231235999 $$.touch >/dev/null 2>&1
if test ! -f 1231235999 && test -f $$.touch; then
  shar_touch=touch
else
  shar_touch=:
  echo
  $echo 'WARNING: not restoring timestamps.  Consider getting and'
  $echo "installing GNU \`touch', distributed in GNU File Utilities..."
  echo
fi
rm -f 1231235999 $$.touch
#
if mkdir _sh22196; then
  $echo 'x -' 'creating lock directory'
else
  $echo 'failed to create lock directory'
  exit 1
fi
# ============= 6_3_a.tcl ==============
if test -f '6_3_a.tcl' && test "$first_param" != -c; then
  $echo 'x -' SKIPPING '6_3_a.tcl' '(file already exists)'
else
  $echo 'x -' extracting '6_3_a.tcl' '(text)'
  sed 's/^X//' << 'SHAR_EOF' > '6_3_a.tcl' &&
#Homework No 3: Advanced Computer Graphics & Data Visualization
#Kanwaljit Anand - ID#: 185-74-8536
#Problem 6.4(a): Animating the Quad function
X
source vtkInt.tcl
X
vtkRenderMaster rm;
set renWin [rm MakeRenderWindow];
set ren1 [$renWin MakeRenderer];
set iren [$renWin MakeRenderWindowInteractor];
X
vtkQuadric quad;
X  quad SetCoefficients 0.5 1 .2 0 .1 0 0 .2 0 0;
X
vtkSampleFunction sample;
X  sample SetSampleDimensions 25 25 25;
X  sample SetImplicitFunction quad;
X
vtkActor contActor1;  
vtkActor contActor2;  
vtkActor contActor3;  
vtkActor contActor4;  
X  
vtkPolyMapper contMapper1;
vtkPolyMapper contMapper2;
vtkPolyMapper contMapper3;
vtkPolyMapper contMapper4;
X
vtkContourFilter contours1;
vtkContourFilter contours2;
vtkContourFilter contours3;
vtkContourFilter contours4;
X
$ren1 SetBackground 1 1 1;
X
contours1 SetInput [sample GetOutput];
contours1 GenerateValues 3 0.0 0.5;
contMapper1 SetInput [contours1 GetOutput];
contMapper1 SetScalarRange 0.0 3.0;
contActor1 SetMapper contMapper1;
X
contours2 SetInput [sample GetOutput];
contours2 GenerateValues 5 0.0 0.7;  
contMapper2 SetInput [contours2 GetOutput];
contMapper2 SetScalarRange 0.0 3.0;
contActor2 SetMapper contMapper2;
X
contours3 SetInput [sample GetOutput];
contours3 GenerateValues 7 0.0 0.9;  
contMapper3 SetInput [contours3 GetOutput];
contMapper3 SetScalarRange 0.0 3.0;
contActor3 SetMapper contMapper3;
X
contours4 SetInput [sample GetOutput];
contours4 GenerateValues 9 0.0 1.1;  
contMapper4 SetInput [contours4 GetOutput];
contMapper4 SetScalarRange 0.0 3.0;
contActor4 SetMapper contMapper4;
X
$ren1 AddActors contActor1;
$ren1 AddActors contActor2;
$ren1 AddActors contActor3;
$ren1 AddActors contActor4;
X
# enable user interface interactor
X	puts "Initializing renderer\n"
$iren SetUserMethod {wm deiconify .vtkInteract};
$iren Initialize;
X
#	puts "All actors are off to begin with"
X	contActor1 VisibilityOff;	
X	contActor2 VisibilityOff;
X	contActor3 VisibilityOff;
X	contActor4 VisibilityOff;
X	contActor1 VisibilityOn;	
X	$renWin Render;
X
X	puts "\n\tStarting Rendering Loop ... use Control-C to exit\n"
X
for {set counter 1} {$counter > 0} {incr counter} {
X
X	puts "Displaying Iso-surface #1 now"	
X	
X	contActor2 VisibilityOff;
X	contActor1 VisibilityOn;
X	$renWin Render;
X	
X	puts "Displaying Iso-surface #2 now"	
X
X	contActor1 VisibilityOff;	
X	contActor2 VisibilityOn;
X	$renWin Render;
X	
X	puts "Displaying Iso-surface #3 now"	
X
X	contActor2 VisibilityOff;
X	contActor3 VisibilityOn;
X	$renWin Render;
X	
X	puts "Displaying Iso-surface #4 now"	
X
X	contActor3 VisibilityOff;
X	contActor4 VisibilityOn;
X	$renWin Render;
X	
X	puts "Displaying Iso-surface #3 now"	
X
X	contActor4 VisibilityOff;
X	contActor3 VisibilityOn;
X	$renWin Render;
X	
X	puts "Displaying Iso-surface #2 now"	
X
X	contActor3 VisibilityOff;
X	contActor2 VisibilityOn;
X	$renWin Render;	
}	
X
# prevent the tk window from showing up then start the event loop
wm withdraw .
X
SHAR_EOF
  $shar_touch -am 0415203197 '6_3_a.tcl' &&
  chmod 0600 '6_3_a.tcl' ||
  $echo 'restore of' '6_3_a.tcl' 'failed'
  if ( md5sum --help 2>&1 | grep 'sage: md5sum \[' ) >/dev/null 2>&1 \
  && ( md5sum --version 2>&1 | grep -v 'textutils 1.12' ) >/dev/null; then
    md5sum -c << SHAR_EOF >/dev/null 2>&1 \
    || $echo '6_3_a.tcl:' 'MD5 check failed'
67d909dc9ac59e9c9380ecc3ba6c557c  6_3_a.tcl
SHAR_EOF
  else
    shar_count="`LC_ALL= LC_CTYPE= LANG= wc -c < '6_3_a.tcl'`"
    test 2899 -eq "$shar_count" ||
    $echo '6_3_a.tcl:' 'original size' '2899,' 'current size' "$shar_count!"
  fi
fi
# ============= 6_3_b.tcl ==============
if test -f '6_3_b.tcl' && test "$first_param" != -c; then
  $echo 'x -' SKIPPING '6_3_b.tcl' '(file already exists)'
else
  $echo 'x -' extracting '6_3_b.tcl' '(text)'
  sed 's/^X//' << 'SHAR_EOF' > '6_3_b.tcl' &&
#Homework No 3: Advanced Computer Graphics & Data Visualization
#Kanwaljit Anand - ID#: 185-74-8536
#Problem 6.4(b): Animating the MRIHead.vtk dataset
X
source vtkInt.tcl
X
# Create the render master
vtkRenderMaster rm;
X
# Create the RenderWindow, Renderer
set renWin [rm MakeRenderWindow];
set ren1   [$renWin MakeRenderer];
set iren   [$renWin MakeRenderWindowInteractor];
X
# Load the dataset
vtkStructuredPointsReader vol;
X    vol SetFilename "MRIdata.vtk"
X
vtkTransform trans;
X    trans RotateX 180;
X 
vtkMarchingCubes contour1;
X  contour1 SetInput [vol GetOutput];
X  contour1 SetValue 0 200.0;
X
vtkTransformPolyFilter tpf1
X    tpf1 SetInput [contour1 GetOutput];
X    tpf1 SetTransform trans;
X
vtkMarchingCubes contour2;
X  contour2 SetInput [vol GetOutput];
X  contour2 SetValue 0 400.0;
X
vtkTransformPolyFilter tpf2
X    tpf2 SetInput [contour2 GetOutput];
X    tpf2 SetTransform trans;
X
vtkMarchingCubes contour3;
X  contour3 SetInput [vol GetOutput];
X  contour3 SetValue 0 600.0;
X
vtkTransformPolyFilter tpf3
X    tpf3 SetInput [contour3 GetOutput];
X    tpf3 SetTransform trans;
X
vtkMarchingCubes contour4;
X  contour4 SetInput [vol GetOutput];
X  contour4 SetValue 0 800.0;
X
vtkTransformPolyFilter tpf4
X    tpf4 SetInput [contour4 GetOutput];
X    tpf4 SetTransform trans;
X
vtkPolyMapper volMapper1;
X  volMapper1 SetInput [tpf1 GetOutput];
X  volMapper1 ScalarsVisibleOff;
X
vtkPolyMapper volMapper2;
X  volMapper2 SetInput [tpf2 GetOutput];
X  volMapper2 ScalarsVisibleOff;
X
vtkPolyMapper volMapper3;
X  volMapper3 SetInput [tpf3 GetOutput];
X  volMapper3 ScalarsVisibleOff;
X
vtkPolyMapper volMapper4;
X  volMapper4 SetInput [tpf4 GetOutput];
X  volMapper4 ScalarsVisibleOff;
X
vtkActor volActor1;
X  volActor1 SetMapper volMapper1;
X
vtkActor volActor2;
X  volActor2 SetMapper volMapper2;
X
vtkActor volActor3;
X  volActor3 SetMapper volMapper3;
X
vtkActor volActor4;
X  volActor4 SetMapper volMapper4;
X
vtkOutlineFilter outLine;
X  outLine SetInput [vol GetOutput];
X
vtkTransformPolyFilter out
X    out SetInput [outLine GetOutput];
X    out SetTransform trans;
X
vtkPolyMapper outMapper;
X  outMapper SetInput [out GetOutput];
X
vtkActor outActor;
X  outActor SetMapper outMapper;
X
$ren1 AddActors outActor;
$ren1 AddActors volActor1;
$ren1 AddActors volActor2;
$ren1 AddActors volActor3;
$ren1 AddActors volActor4;
X
X	puts "\n\tInitializing Renderer"
X	
$ren1 SetBackground 0 0 0;
$renWin SetSize 500 400;
$iren Initialize;
X
#all are off to begin with:
volActor1 VisibilityOff;	
volActor2 VisibilityOff;
volActor3 VisibilityOff;
volActor4 VisibilityOff;
volActor1 VisibilityOn;	
$renWin Render;
X
X	puts "\n\tEntering Rendering loop ... use Control-C to quit\n"
X
for {set counter 1} {$counter > 0} {incr counter} {
X
X	puts "\tDisplaying iso-surface #1 now"
X	
X	volActor2 VisibilityOff;	
X	volActor1 VisibilityOn;
X	$renWin Render;
X	
X	puts "\tDisplaying iso-surface #2 now"
X
X	volActor1 VisibilityOff;	
X	volActor2 VisibilityOn;
X	$renWin Render;
X	
X	puts "\tDisplaying iso-surface #3 now"
X
X	volActor2 VisibilityOff;
X	volActor3 VisibilityOn;
X	$renWin Render;
X	
X	puts "\tDisplaying iso-surface #4 now"
X
X	volActor3 VisibilityOff;
X	volActor4 VisibilityOn;
X	$renWin Render;
X	
X	puts "\tDisplaying iso-surface #3 now"
X
X	volActor4 VisibilityOff;
X	volActor3 VisibilityOn;
X	$renWin Render;	
X
X	puts "\tDisplaying iso-surface #2 now"
X
X	volActor3 VisibilityOff;	
X	volActor2 VisibilityOn;
X	$renWin Render;	
}	
X
# render the image
$iren SetUserMethod {wm deiconify .vtkInteract};
$renWin Render;
X
# prevent the tk window from showing up then start the event loop
wm withdraw .
X
SHAR_EOF
  $shar_touch -am 0415204297 '6_3_b.tcl' &&
  chmod 0600 '6_3_b.tcl' ||
  $echo 'restore of' '6_3_b.tcl' 'failed'
  if ( md5sum --help 2>&1 | grep 'sage: md5sum \[' ) >/dev/null 2>&1 \
  && ( md5sum --version 2>&1 | grep -v 'textutils 1.12' ) >/dev/null; then
    md5sum -c << SHAR_EOF >/dev/null 2>&1 \
    || $echo '6_3_b.tcl:' 'MD5 check failed'
44bf2e1385a51dc1a83d92bc44fc7769  6_3_b.tcl
SHAR_EOF
  else
    shar_count="`LC_ALL= LC_CTYPE= LANG= wc -c < '6_3_b.tcl'`"
    test 3531 -eq "$shar_count" ||
    $echo '6_3_b.tcl:' 'original size' '3531,' 'current size' "$shar_count!"
  fi
fi
# ============= 9_4a.tcl ==============
if test -f '9_4a.tcl' && test "$first_param" != -c; then
  $echo 'x -' SKIPPING '9_4a.tcl' '(file already exists)'
else
  $echo 'x -' extracting '9_4a.tcl' '(text)'
  sed 's/^X//' << 'SHAR_EOF' > '9_4a.tcl' &&
#Homework No 3: Advanced Computer Graphics & Data Visualization
#Kanwaljit Anand - ID#: 185-74-8536
#Problem 9.4(a): Implementing the Probe and HedgeHog filter.
X
source vtkInt.tcl
X
vtkRenderMaster rm;
set renWin [rm MakeRenderWindow];
set ren1   [$renWin MakeRenderer];
set iren [$renWin MakeRenderWindowInteractor];
X
# create pipeline
vtkPLOT3DReader pl3d;
X    pl3d SetXYZFilename "combxyz.bin"
X    pl3d SetQFilename "combq.bin"
X    pl3d SetScalarFunctionNumber 100;
X    pl3d SetVectorFunctionNumber 202;
X    pl3d Update;
X
vtkPlaneSource plane;
X    plane SetResolution 50 50;
X
vtkTransform transP1;
X    transP1 Translate 3.7 0.0 28.37;
X    transP1 Scale 5 5 5;
X    transP1 RotateY 90;
vtkTransformPolyFilter tpd1
X    tpd1 SetInput [plane GetOutput];
X    tpd1 SetTransform transP1;
vtkOutlineFilter outTpd1;
X    outTpd1 SetInput [tpd1 GetOutput];
vtkPolyMapper mapTpd1;
X    mapTpd1 SetInput [outTpd1 GetOutput];
vtkActor tpd1Actor;
X    tpd1Actor SetMapper mapTpd1;
X    [tpd1Actor GetProperty] SetColor 0 0 0;
X
vtkTransform transP2;
X    transP2 Translate 9.2 0.0 31.20;
X    transP2 Scale 5 5 5;
X    transP2 RotateY 90;
vtkTransformPolyFilter tpd2
X    tpd2 SetInput [plane GetOutput];
X    tpd2 SetTransform transP2;
vtkOutlineFilter outTpd2;
X    outTpd2 SetInput [tpd2 GetOutput];
vtkPolyMapper mapTpd2;
X    mapTpd2 SetInput [outTpd2 GetOutput];
vtkActor tpd2Actor;
X    tpd2Actor SetMapper mapTpd2;
X    [tpd2Actor GetProperty] SetColor 0 0 0;
X
vtkTransform transP3;
X    transP3 Translate 13.27 0.0 33.30;
X    transP3 Scale 5 5 5;
X    transP3 RotateY 90;
vtkTransformPolyFilter tpd3
X    tpd3 SetInput [plane GetOutput];
X    tpd3 SetTransform transP3;
vtkOutlineFilter outTpd3;
X    outTpd3 SetInput [tpd3 GetOutput];
vtkPolyMapper mapTpd3;
X    mapTpd3 SetInput [outTpd3 GetOutput];
vtkActor tpd3Actor;
X    tpd3Actor SetMapper mapTpd3;
X    [tpd3Actor GetProperty] SetColor 0 0 0;
X
vtkAppendPolyData appendF;
X    appendF AddInput [tpd1 GetOutput];
X    appendF AddInput [tpd2 GetOutput];
X    appendF AddInput [tpd3 GetOutput];
X    
vtkProbeFilter probe;
X    probe SetInput [appendF GetOutput];
X    probe SetSource [pl3d GetOutput];
X
vtkHedgeHog hg;
X    hg SetScaleFactor 0.01;
X    hg SetInput [probe GetOutput];
X
vtkPolyMapper hgMapper;
X    hgMapper SetInput [hg GetOutput];
X    eval hgMapper SetScalarRange [[pl3d GetOutput] GetScalarRange];
X
vtkActor hgActor;
X    hgActor SetMapper hgMapper;
X 
vtkContourFilter contour;
X    contour SetInput [probe GetOutput];
X    eval contour GenerateValues 150 [[pl3d GetOutput] GetScalarRange];
vtkPolyMapper contourMapper;
X    contourMapper SetInput [contour GetOutput];
X    eval contourMapper SetScalarRange [[pl3d GetOutput] GetScalarRange];
vtkActor planeActor;
X    planeActor SetMapper contourMapper;
X
vtkStructuredGridOutlineFilter outline;
X    outline SetInput [pl3d GetOutput];
vtkPolyMapper outlineMapper;
X    outlineMapper SetInput [outline GetOutput];
vtkActor outlineActor;
X    outlineActor SetMapper outlineMapper;
X    [outlineActor GetProperty] SetColor 0 0 0;
X
$ren1 AddActors outlineActor;
#$ren1 AddActors planeActor;
$ren1 AddActors hgActor;
$ren1 AddActors tpd1Actor;
$ren1 AddActors tpd2Actor;
$ren1 AddActors tpd3Actor;
$ren1 SetBackground 1 1 1;
$renWin SetSize 500 500;
$iren Initialize;
X
set cam1 [$ren1 GetActiveCamera];
$cam1 SetClippingRange 3.95297 50;
$cam1 SetFocalPoint 8.88908 0.595038 29.3342;
$cam1 SetPosition -12.3332 31.7479 41.2387;
$cam1 CalcViewPlaneNormal;
$cam1 SetViewUp 0.060772 -0.319905 0.945498;
X
$iren SetUserMethod {wm deiconify .vtkInteract};
$renWin Render;
X
wm withdraw .
X
X
X
SHAR_EOF
  $shar_touch -am 0415174697 '9_4a.tcl' &&
  chmod 0600 '9_4a.tcl' ||
  $echo 'restore of' '9_4a.tcl' 'failed'
  if ( md5sum --help 2>&1 | grep 'sage: md5sum \[' ) >/dev/null 2>&1 \
  && ( md5sum --version 2>&1 | grep -v 'textutils 1.12' ) >/dev/null; then
    md5sum -c << SHAR_EOF >/dev/null 2>&1 \
    || $echo '9_4a.tcl:' 'MD5 check failed'
939148b6bdf9c87f5ee2d137baa652ea  9_4a.tcl
SHAR_EOF
  else
    shar_count="`LC_ALL= LC_CTYPE= LANG= wc -c < '9_4a.tcl'`"
    test 3558 -eq "$shar_count" ||
    $echo '9_4a.tcl:' 'original size' '3558,' 'current size' "$shar_count!"
  fi
fi
# ============= 9_4b.tcl ==============
if test -f '9_4b.tcl' && test "$first_param" != -c; then
  $echo 'x -' SKIPPING '9_4b.tcl' '(file already exists)'
else
  $echo 'x -' extracting '9_4b.tcl' '(text)'
  sed 's/^X//' << 'SHAR_EOF' > '9_4b.tcl' &&
#Homework No 3: Advanced Computer Graphics & Data Visualization
#Kanwaljit Anand - ID#: 185-74-8536
#Problem 9.4(b): Implementing the Probe and StreamLine filter.
X
puts "Implementing StreamLine Filter"
source vtkInt.tcl
vtkRenderMaster rm;
X
set renWin [rm MakeRenderWindow];
set ren1   [$renWin MakeRenderer];
set iren [$renWin MakeRenderWindowInteractor];
X
# create pipeline
vtkPLOT3DReader pl3d;
X    pl3d SetXYZFilename "combxyz.bin"
X    pl3d SetQFilename "combq.bin"
X    pl3d SetScalarFunctionNumber 100;
X    pl3d SetVectorFunctionNumber 202;
X    pl3d Update;
X
vtkPlaneSource plane;
X    plane SetResolution 10 10;
X
puts "\tGenerating vtkPointSource ... "
X
#using vtkPointSource to generate points:
vtkPointSource psource;
X   psource SetRadius 0.80;
X   eval psource SetCenter 3.5 2.0 26.0
X   psource SetNumberOfPoints 100;
X		
X	puts "\tGenerating StreamLine"
vtkStreamLine streamL;
X    streamL SetInput [pl3d GetOutput];
X	 streamL SetSource [psource GetOutput];
X	 streamL SetMaximumPropagationTime 100;
X	 streamL SpeedScalarsOn;
X	 streamL SetIntegrationStepLength 0.02;
X	 streamL SetStepLength 0.02;
X	 streamL Update;
X
X	puts "\tGenerating StreamLine Mapper"
X
vtkPolyMapper slMapper;
X    slMapper SetInput [streamL GetOutput];
X    eval slMapper SetScalarRange [[psource GetOutput] GetScalarRange];
X
X	puts "\tGenerating Actors"
X
vtkActor slActor;
X    slActor SetMapper slMapper;
X	 
vtkStructuredGridOutlineFilter outline;
X    outline SetInput [pl3d GetOutput];
vtkPolyMapper outlineMapper;
X    outlineMapper SetInput [outline GetOutput];
X
vtkActor outlineActor;
X    outlineActor SetMapper outlineMapper;
X    [outlineActor GetProperty] SetColor 0 0 0;
X    
X    puts "\tInitializing Interactive Window"
X
$ren1 AddActors outlineActor;
$ren1 AddActors slActor;
$ren1 SetBackground 1 1 1;
$renWin SetSize 500 500;
$iren Initialize;
X
puts "\tSetting up Camera"
X
set cam1 [$ren1 GetActiveCamera];
$cam1 SetClippingRange 3.95297 50;
$cam1 SetFocalPoint 8.88908 0.595038 29.3342;
$cam1 SetPosition -12.3332 31.7479 41.2387;
$cam1 CalcViewPlaneNormal;
$cam1 SetViewUp 0.060772 -0.319905 0.945498;
X
$iren SetUserMethod {wm deiconify .vtkInteract};
$renWin Render;
X
puts "All complete\n"
wm withdraw .
SHAR_EOF
  $shar_touch -am 0415193697 '9_4b.tcl' &&
  chmod 0600 '9_4b.tcl' ||
  $echo 'restore of' '9_4b.tcl' 'failed'
  if ( md5sum --help 2>&1 | grep 'sage: md5sum \[' ) >/dev/null 2>&1 \
  && ( md5sum --version 2>&1 | grep -v 'textutils 1.12' ) >/dev/null; then
    md5sum -c << SHAR_EOF >/dev/null 2>&1 \
    || $echo '9_4b.tcl:' 'MD5 check failed'
cb5bb04b92fc1b539dfc7d26d4aff6cd  9_4b.tcl
SHAR_EOF
  else
    shar_count="`LC_ALL= LC_CTYPE= LANG= wc -c < '9_4b.tcl'`"
    test 2189 -eq "$shar_count" ||
    $echo '9_4b.tcl:' 'original size' '2189,' 'current size' "$shar_count!"
  fi
fi
# ============= 9_4c.tcl ==============
if test -f '9_4c.tcl' && test "$first_param" != -c; then
  $echo 'x -' SKIPPING '9_4c.tcl' '(file already exists)'
else
  $echo 'x -' extracting '9_4c.tcl' '(text)'
  sed 's/^X//' << 'SHAR_EOF' > '9_4c.tcl' &&
#Homework No 3: Advanced Computer Graphics & Data Visualization
#Kanwaljit Anand - ID#: 185-74-8536
#Problem 9.4(c): Implementing the Probe and Warp filter.
X
source vtkInt.tcl
X
vtkRenderMaster rm;
set renWin [rm MakeRenderWindow];
set ren1   [$renWin MakeRenderer];
set iren [$renWin MakeRenderWindowInteractor];
X
# create pipeline
vtkPLOT3DReader pl3d;
X    pl3d SetXYZFilename "combxyz.bin"
X    pl3d SetQFilename "combq.bin"
X    pl3d SetScalarFunctionNumber 100;
X    pl3d SetVectorFunctionNumber 202;
X    pl3d Update;
X
vtkPlaneSource plane;
X    plane SetResolution 25 25;
X
vtkTransform transP1;
X    transP1 Translate 3.7 0.0 28.37;
X    transP1 Scale 5 5 5;
X    transP1 RotateY 90;
vtkTransformPolyFilter tpd1
X    tpd1 SetInput [plane GetOutput];
X    tpd1 SetTransform transP1;
vtkOutlineFilter outTpd1;
X    outTpd1 SetInput [tpd1 GetOutput];
vtkPolyMapper mapTpd1;
X    mapTpd1 SetInput [outTpd1 GetOutput];
vtkActor tpd1Actor;
X    tpd1Actor SetMapper mapTpd1;
X    [tpd1Actor GetProperty] SetColor 0 0 0;
X
vtkTransform transP2;
X    transP2 Translate 9.2 0.0 31.20;
X    transP2 Scale 5 5 5;
X    transP2 RotateY 90;
vtkTransformPolyFilter tpd2
X    tpd2 SetInput [plane GetOutput];
X    tpd2 SetTransform transP2;
vtkOutlineFilter outTpd2;
X    outTpd2 SetInput [tpd2 GetOutput];
vtkPolyMapper mapTpd2;
X    mapTpd2 SetInput [outTpd2 GetOutput];
vtkActor tpd2Actor;
X    tpd2Actor SetMapper mapTpd2;
X    [tpd2Actor GetProperty] SetColor 0 0 0;
X
vtkTransform transP3;
X    transP3 Translate 13.27 0.0 33.30;
X    transP3 Scale 5 5 5;
X    transP3 RotateY 90;
vtkTransformPolyFilter tpd3
X    tpd3 SetInput [plane GetOutput];
X    tpd3 SetTransform transP3;
vtkOutlineFilter outTpd3;
X    outTpd3 SetInput [tpd3 GetOutput];
vtkPolyMapper mapTpd3;
X    mapTpd3 SetInput [outTpd3 GetOutput];
vtkActor tpd3Actor;
X    tpd3Actor SetMapper mapTpd3;
X    [tpd3Actor GetProperty] SetColor 0 0 0;
X
vtkAppendPolyData appendF;
X    appendF AddInput [tpd1 GetOutput];
X    appendF AddInput [tpd2 GetOutput];
X    appendF AddInput [tpd3 GetOutput];
X    
X
vtkProbeFilter probe1;
X    probe1 SetInput [tpd1 GetOutput];
X    probe1 SetSource [pl3d GetOutput];
X
vtkConnectivityFilter contF1;
#This part converts the DataSet to Unstructured grid
X	contF1 SetInput [probe1 GetOutput];
X	contF1 ColorRegionsOn;
X	contF1 ExtractLargestRegion;
X
vtkProbeFilter probe2;
X    probe2 SetInput [tpd2 GetOutput];
X    probe2 SetSource [pl3d GetOutput];
X
vtkConnectivityFilter contF2;
#This part converts the DataSet to Unstructured grid
X	contF2 SetInput [probe2 GetOutput];
X	contF2 ColorRegionsOn;
X	contF2 ExtractLargestRegion;
X
vtkProbeFilter probe3;
X    probe3 SetInput [tpd3 GetOutput];
X    probe3 SetSource [pl3d GetOutput];
X
vtkConnectivityFilter contF3;
#This part converts the DataSet to Unstructured grid
X	contF3 SetInput [probe3 GetOutput];
X	contF3 ColorRegionsOn;
X	contF3 ExtractLargestRegion;
X
vtkAppendFilter appendPF;
X    appendPF AddInput [contF1 GetOutput];
X    appendPF AddInput [contF2 GetOutput];
X    appendPF AddInput [contF3 GetOutput];
X
vtkWarpVector warp;
#warp requires an input of PointSet & returns PointSet
X    warp SetInput [appendPF GetOutput];
X    warp SetScaleFactor .005;
X
vtkDataSetMapper warpMapper;
X    warpMapper SetInput [warp GetOutput];
X    eval warpMapper SetScalarRange [[pl3d GetOutput] GetScalarRange];
X    
vtkActor warpActor;
X    warpActor SetMapper warpMapper;
X	 
vtkStructuredGridOutlineFilter outline;
X    outline SetInput [pl3d GetOutput];
X    
vtkPolyMapper outlineMapper;
X    outlineMapper SetInput [outline GetOutput];
vtkActor outlineActor;
X    outlineActor SetMapper outlineMapper;
X    [outlineActor GetProperty] SetColor 0 0 0;
X
$ren1 AddActors outlineActor;
$ren1 AddActors warpActor;
$ren1 AddActors tpd1Actor;
$ren1 AddActors tpd2Actor;
$ren1 AddActors tpd3Actor;
$ren1 SetBackground 1 1 1;
$renWin SetSize 500 500;
$iren Initialize;
X
set cam1 [$ren1 GetActiveCamera];
$cam1 SetClippingRange 3.95297 50;
$cam1 SetFocalPoint 8.88908 0.595038 29.3342;
$cam1 SetPosition -12.3332 31.7479 41.2387;
$cam1 CalcViewPlaneNormal;
$cam1 SetViewUp 0.060772 -0.319905 0.945498;
X
$iren SetUserMethod {wm deiconify .vtkInteract};
$renWin Render;
wm withdraw .
SHAR_EOF
  $shar_touch -am 0415181797 '9_4c.tcl' &&
  chmod 0600 '9_4c.tcl' ||
  $echo 'restore of' '9_4c.tcl' 'failed'
  if ( md5sum --help 2>&1 | grep 'sage: md5sum \[' ) >/dev/null 2>&1 \
  && ( md5sum --version 2>&1 | grep -v 'textutils 1.12' ) >/dev/null; then
    md5sum -c << SHAR_EOF >/dev/null 2>&1 \
    || $echo '9_4c.tcl:' 'MD5 check failed'
dda66531daff0fc89744b2bb564470db  9_4c.tcl
SHAR_EOF
  else
    shar_count="`LC_ALL= LC_CTYPE= LANG= wc -c < '9_4c.tcl'`"
    test 4148 -eq "$shar_count" ||
    $echo '9_4c.tcl:' 'original size' '4148,' 'current size' "$shar_count!"
  fi
fi
# ============= 9_4d.tcl ==============
if test -f '9_4d.tcl' && test "$first_param" != -c; then
  $echo 'x -' SKIPPING '9_4d.tcl' '(file already exists)'
else
  $echo 'x -' extracting '9_4d.tcl' '(text)'
  sed 's/^X//' << 'SHAR_EOF' > '9_4d.tcl' &&
#Homework No 3: Advanced Computer Graphics & Data Visualization
#Kanwaljit Anand - ID#: 185-74-8536
#Problem 9.4(d): Implementing the Probe and VectorNorm filter.
X
source vtkInt.tcl
vtkRenderMaster rm;
set renWin [rm MakeRenderWindow];
set ren1   [$renWin MakeRenderer];
set iren [$renWin MakeRenderWindowInteractor];
X
# create pipeline
vtkPLOT3DReader pl3d;
X    pl3d SetXYZFilename "combxyz.bin"
X    pl3d SetQFilename "combq.bin"
X    pl3d SetScalarFunctionNumber 100;
X    pl3d SetVectorFunctionNumber 202;
X    pl3d Update;
X
vtkPlaneSource plane;
X    plane SetResolution 50 50;
X
vtkTransform transP1;
X    transP1 Translate 3.7 0.0 28.37;
X    transP1 Scale 5 5 5;
X    transP1 RotateY 90;
vtkTransformPolyFilter tpd1
X    tpd1 SetInput [plane GetOutput];
X    tpd1 SetTransform transP1;
vtkOutlineFilter outTpd1;
X    outTpd1 SetInput [tpd1 GetOutput];
vtkPolyMapper mapTpd1;
X    mapTpd1 SetInput [outTpd1 GetOutput];
vtkActor tpd1Actor;
X    tpd1Actor SetMapper mapTpd1;
X    [tpd1Actor GetProperty] SetColor 0 0 0;
X
vtkTransform transP2;
X    transP2 Translate 9.2 0.0 31.20;
X    transP2 Scale 5 5 5;
X    transP2 RotateY 90;
vtkTransformPolyFilter tpd2
X    tpd2 SetInput [plane GetOutput];
X    tpd2 SetTransform transP2;
vtkOutlineFilter outTpd2;
X    outTpd2 SetInput [tpd2 GetOutput];
vtkPolyMapper mapTpd2;
X    mapTpd2 SetInput [outTpd2 GetOutput];
vtkActor tpd2Actor;
X    tpd2Actor SetMapper mapTpd2;
X    [tpd2Actor GetProperty] SetColor 0 0 0;
X
vtkTransform transP3;
X    transP3 Translate 13.27 0.0 33.30;
X    transP3 Scale 5 5 5;
X    transP3 RotateY 90;
vtkTransformPolyFilter tpd3
X    tpd3 SetInput [plane GetOutput];
X    tpd3 SetTransform transP3;
vtkOutlineFilter outTpd3;
X    outTpd3 SetInput [tpd3 GetOutput];
vtkPolyMapper mapTpd3;
X    mapTpd3 SetInput [outTpd3 GetOutput];
vtkActor tpd3Actor;
X    tpd3Actor SetMapper mapTpd3;
X    [tpd3Actor GetProperty] SetColor 0 0 0;
X
vtkAppendPolyData appendF;
X    appendF AddInput [tpd1 GetOutput];
X    appendF AddInput [tpd2 GetOutput];
X    appendF AddInput [tpd3 GetOutput];
X    
vtkProbeFilter probe;
X    probe SetInput [appendF GetOutput];
X    probe SetSource [pl3d GetOutput];
X
vtkVectorNorm vnorm;
#vnorm requires an input of PointSet & returns PointSet
X    vnorm SetInput [probe GetOutput];
X    vnorm NormalizeOn;
X
vtkContourFilter contour;
X    contour SetInput [vnorm GetOutput];
X    eval contour GenerateValues 150 [[pl3d GetOutput] GetScalarRange];
X
vtkDataSetMapper normMapper;
X    normMapper SetInput [contour GetOutput];
X    eval normMapper SetScalarRange [[pl3d GetOutput] GetScalarRange];
X
vtkActor normActor;
X    normActor SetMapper normMapper;
X	 
vtkStructuredGridOutlineFilter outline;
X    outline SetInput [pl3d GetOutput];
vtkPolyMapper outlineMapper;
X    outlineMapper SetInput [outline GetOutput];
vtkActor outlineActor;
X    outlineActor SetMapper outlineMapper;
X    [outlineActor GetProperty] SetColor 0 0 0;
X
$ren1 AddActors outlineActor;
$ren1 AddActors normActor;
$ren1 AddActors tpd1Actor;
$ren1 AddActors tpd2Actor;
$ren1 AddActors tpd3Actor;
$ren1 SetBackground 1 1 1;
$renWin SetSize 500 500;
$iren Initialize;
X
set cam1 [$ren1 GetActiveCamera];
$cam1 SetClippingRange 3.95297 50;
$cam1 SetFocalPoint 8.88908 0.595038 29.3342;
$cam1 SetPosition -12.3332 31.7479 41.2387;
$cam1 CalcViewPlaneNormal;
$cam1 SetViewUp 0.060772 -0.319905 0.945498;
X
# render the image
$iren SetUserMethod {wm deiconify .vtkInteract};
$renWin Render;
X
# prevent the tk window from showing up then start the event loop
wm withdraw .
SHAR_EOF
  $shar_touch -am 0415182397 '9_4d.tcl' &&
  chmod 0600 '9_4d.tcl' ||
  $echo 'restore of' '9_4d.tcl' 'failed'
  if ( md5sum --help 2>&1 | grep 'sage: md5sum \[' ) >/dev/null 2>&1 \
  && ( md5sum --version 2>&1 | grep -v 'textutils 1.12' ) >/dev/null; then
    md5sum -c << SHAR_EOF >/dev/null 2>&1 \
    || $echo '9_4d.tcl:' 'MD5 check failed'
9cd917c95e9b8363df5b0e20aaaed134  9_4d.tcl
SHAR_EOF
  else
    shar_count="`LC_ALL= LC_CTYPE= LANG= wc -c < '9_4d.tcl'`"
    test 3483 -eq "$shar_count" ||
    $echo '9_4d.tcl:' 'original size' '3483,' 'current size' "$shar_count!"
  fi
fi
# ============= 9_4e.tcl ==============
if test -f '9_4e.tcl' && test "$first_param" != -c; then
  $echo 'x -' SKIPPING '9_4e.tcl' '(file already exists)'
else
  $echo 'x -' extracting '9_4e.tcl' '(text)'
  sed 's/^X//' << 'SHAR_EOF' > '9_4e.tcl' &&
#Homework No 3: Advanced Computer Graphics & Data Visualization
#Kanwaljit Anand - ID#: 185-74-8536
#Problem 9.4(e): Implementing the Probe and VectorDot filter.
X
source vtkInt.tcl
vtkRenderMaster rm;
set renWin [rm MakeRenderWindow];
set ren1   [$renWin MakeRenderer];
set iren [$renWin MakeRenderWindowInteractor];
X
# create pipeline
vtkPLOT3DReader pl3d;
X    pl3d SetXYZFilename "combxyz.bin"
X    pl3d SetQFilename "combq.bin"
X    pl3d SetScalarFunctionNumber 100;
X    pl3d SetVectorFunctionNumber 202;
X    pl3d Update;
X
vtkPlaneSource plane;
X    plane SetResolution 50 50;
X
vtkTransform transP1;
X    transP1 Translate 3.7 0.0 28.37;
X    transP1 Scale 5 5 5;
X    transP1 RotateY 90;
vtkTransformPolyFilter tpd1
X    tpd1 SetInput [plane GetOutput];
X    tpd1 SetTransform transP1;
vtkOutlineFilter outTpd1;
X    outTpd1 SetInput [tpd1 GetOutput];
vtkPolyMapper mapTpd1;
X    mapTpd1 SetInput [outTpd1 GetOutput];
vtkActor tpd1Actor;
X    tpd1Actor SetMapper mapTpd1;
X    [tpd1Actor GetProperty] SetColor 0 0 0;
X
vtkTransform transP2;
X    transP2 Translate 9.2 0.0 31.20;
X    transP2 Scale 5 5 5;
X    transP2 RotateY 90;
vtkTransformPolyFilter tpd2
X    tpd2 SetInput [plane GetOutput];
X    tpd2 SetTransform transP2;
vtkOutlineFilter outTpd2;
X    outTpd2 SetInput [tpd2 GetOutput];
vtkPolyMapper mapTpd2;
X    mapTpd2 SetInput [outTpd2 GetOutput];
vtkActor tpd2Actor;
X    tpd2Actor SetMapper mapTpd2;
X    [tpd2Actor GetProperty] SetColor 0 0 0;
X
vtkTransform transP3;
X    transP3 Translate 13.27 0.0 33.30;
X    transP3 Scale 5 5 5;
X    transP3 RotateY 90;
vtkTransformPolyFilter tpd3
X    tpd3 SetInput [plane GetOutput];
X    tpd3 SetTransform transP3;
vtkOutlineFilter outTpd3;
X    outTpd3 SetInput [tpd3 GetOutput];
vtkPolyMapper mapTpd3;
X    mapTpd3 SetInput [outTpd3 GetOutput];
vtkActor tpd3Actor;
X    tpd3Actor SetMapper mapTpd3;
X    [tpd3Actor GetProperty] SetColor 0 0 0;
X
vtkAppendPolyData appendF;
X    appendF AddInput [tpd1 GetOutput];
X    appendF AddInput [tpd2 GetOutput];
X    appendF AddInput [tpd3 GetOutput];
X    
vtkProbeFilter probe;
X    probe SetInput [appendF GetOutput];
X    probe SetSource [pl3d GetOutput];
X
vtkContourFilter contour;
X    contour SetInput [probe GetOutput];
X    eval contour GenerateValues 50 [[pl3d GetOutput] GetScalarRange];
X
vtkVectorDot vdot;
X    vdot SetInput [contour GetOutput];
#    eval vdot SetScalarRange [[pl3d GetOutput] GetScalarRange];
X
X
vtkDataSetMapper normMapper;
X    normMapper SetInput [vdot GetOutput];
X    eval normMapper SetScalarRange [[pl3d GetOutput] GetScalarRange];
X
vtkActor normActor;
X    normActor SetMapper normMapper;
X	 
vtkStructuredGridOutlineFilter outline;
X    outline SetInput [pl3d GetOutput];
vtkPolyMapper outlineMapper;
X    outlineMapper SetInput [outline GetOutput];
vtkActor outlineActor;
X    outlineActor SetMapper outlineMapper;
X    [outlineActor GetProperty] SetColor 0 0 0;
X
$ren1 AddActors outlineActor;
$ren1 AddActors normActor;
$ren1 AddActors tpd1Actor;
$ren1 AddActors tpd2Actor;
$ren1 AddActors tpd3Actor;
$ren1 SetBackground 1 1 1;
$renWin SetSize 500 500;
$iren Initialize;
X
set cam1 [$ren1 GetActiveCamera];
$cam1 SetClippingRange 3.95297 50;
$cam1 SetFocalPoint 8.88908 0.595038 29.3342;
$cam1 SetPosition -12.3332 31.7479 41.2387;
$cam1 CalcViewPlaneNormal;
$cam1 SetViewUp 0.060772 -0.319905 0.945498;
X
# render the image
#
$iren SetUserMethod {wm deiconify .vtkInteract};
$renWin Render;
X
# prevent the tk window from showing up then start the event loop
wm withdraw .
SHAR_EOF
  $shar_touch -am 0415182997 '9_4e.tcl' &&
  chmod 0600 '9_4e.tcl' ||
  $echo 'restore of' '9_4e.tcl' 'failed'
  if ( md5sum --help 2>&1 | grep 'sage: md5sum \[' ) >/dev/null 2>&1 \
  && ( md5sum --version 2>&1 | grep -v 'textutils 1.12' ) >/dev/null; then
    md5sum -c << SHAR_EOF >/dev/null 2>&1 \
    || $echo '9_4e.tcl:' 'MD5 check failed'
f19305c23d0285dbd0883aa5719e8734  9_4e.tcl
SHAR_EOF
  else
    shar_count="`LC_ALL= LC_CTYPE= LANG= wc -c < '9_4e.tcl'`"
    test 3466 -eq "$shar_count" ||
    $echo '9_4e.tcl:' 'original size' '3466,' 'current size' "$shar_count!"
  fi
fi
# ============= Decimated_6_3_a.tcl ==============
if test -f 'Decimated_6_3_a.tcl' && test "$first_param" != -c; then
  $echo 'x -' SKIPPING 'Decimated_6_3_a.tcl' '(file already exists)'
else
  $echo 'x -' extracting 'Decimated_6_3_a.tcl' '(text)'
  sed 's/^X//' << 'SHAR_EOF' > 'Decimated_6_3_a.tcl' &&
#Homework No 3: Advanced Computer Graphics & Data Visualization
#Kanwaljit Anand - ID#: 185-74-8536
#Problem 6.4(a): Decimating the Quad function
X
source vtkInt.tcl
X
vtkRenderMaster rm;
set renWin [rm MakeRenderWindow];
set ren1 [$renWin MakeRenderer];
set iren [$renWin MakeRenderWindowInteractor];
X
vtkQuadric quad;
X  quad SetCoefficients 0.5 1 .2 0 .1 0 0 .2 0 0;
X
vtkSampleFunction sample;
X  sample SetSampleDimensions 25 25 25;
X  sample SetImplicitFunction quad;
X
vtkActor contActor1;  
vtkActor contActor2;  
vtkActor contActor3;  
vtkActor contActor4;  
X  
vtkPolyMapper contMapper1;
vtkPolyMapper contMapper2;
vtkPolyMapper contMapper3;
vtkPolyMapper contMapper4;
X
vtkContourFilter contours1;
vtkContourFilter contours2;
vtkContourFilter contours3;
vtkContourFilter contours4;
X
vtkDecimate Decimate1;
vtkDecimate Decimate2;
vtkDecimate Decimate3;
vtkDecimate Decimate4;
X
$ren1 SetBackground 1 1 1;
X
contours1 SetInput [sample GetOutput];
contours1 GenerateValues 3 0.0 0.5;
Decimate1 SetInput [contours1 GetOutput];
Decimate1 SetMaximumIterations 10;
Decimate1 SetTargetReduction 0.5;
Decimate1 SetMaximumFeatureAngle 30;
Decimate1 SetInitialError 0.0;
Decimate1 SetErrorIncrement 0.001;
Decimate1 SetMaximumError 0.1;
X
contMapper1 SetInput [Decimate1 GetOutput];
contMapper1 SetScalarRange 0.0 3.0;
contActor1 SetMapper contMapper1;
X
contours2 SetInput [sample GetOutput];
contours2 GenerateValues 5 0.0 0.7;  
Decimate2 SetInput [contours2 GetOutput];
Decimate2 SetMaximumIterations 10;
Decimate2 SetTargetReduction 0.5;
Decimate2 SetMaximumFeatureAngle 30;
Decimate2 SetInitialError 0.0;
Decimate2 SetErrorIncrement 0.001;
Decimate2 SetMaximumError 0.1;
X
contMapper2 SetInput [Decimate2 GetOutput];
contMapper2 SetScalarRange 0.0 3.0;
contActor2 SetMapper contMapper2;
X
contours3 SetInput [sample GetOutput];
contours3 GenerateValues 7 0.0 0.9;  
Decimate3 SetInput [contours3 GetOutput];
Decimate3 SetMaximumIterations 10;
Decimate3 SetTargetReduction 0.5;
Decimate3 SetMaximumFeatureAngle 30;
Decimate3 SetInitialError 0.0;
Decimate3 SetErrorIncrement 0.001;
Decimate3 SetMaximumError 0.1;
X
contMapper3 SetInput [Decimate3 GetOutput];
contMapper3 SetScalarRange 0.0 3.0;
contActor3 SetMapper contMapper3;
X
contours4 SetInput [sample GetOutput];
contours4 GenerateValues 9 0.0 1.1;  
Decimate4 SetInput [contours4 GetOutput];
Decimate4 SetMaximumIterations 10;
Decimate4 SetTargetReduction 0.5;
Decimate4 SetMaximumFeatureAngle 30;
Decimate4 SetInitialError 0.0;
Decimate4 SetErrorIncrement 0.001;
Decimate4 SetMaximumError 0.1;
X
contMapper4 SetInput [Decimate4 GetOutput];
contMapper4 SetScalarRange 0.0 3.0;
contActor4 SetMapper contMapper4;
X
$ren1 AddActors contActor1;
$ren1 AddActors contActor2;
$ren1 AddActors contActor3;
$ren1 AddActors contActor4;
X
# enable user interface interactor
$iren SetUserMethod {wm deiconify .vtkInteract};
$iren Initialize;
X
#	puts "All actors are off to begin with"
X	contActor1 VisibilityOff;	
X	contActor2 VisibilityOff;
X	contActor3 VisibilityOff;
X	contActor4 VisibilityOff;
X	contActor1 VisibilityOn;	
X	$renWin Render;
X
X	puts "\n\tStarting Rendering Loop ... use Control-C to exit\n"
X
for {set counter 1} {$counter > 0} {incr counter} {
X
X	puts "Turning actor #1 on now"	
X	
X	contActor2 VisibilityOff;
X	contActor1 VisibilityOn;
X	$renWin Render;
X	
X	puts "Turning actor #2 on now"	
X
X	contActor1 VisibilityOff;	
X	contActor2 VisibilityOn;
X	$renWin Render;
X	
X	puts "Turning actor #3 on now"	
X
X	contActor2 VisibilityOff;
X	contActor3 VisibilityOn;
X	$renWin Render;
X	
X	puts "Turning actor #4 on now"	
X
X	contActor3 VisibilityOff;
X	contActor4 VisibilityOn;
X	$renWin Render;
X	
X	puts "Turning actor #3 on now"	
X
X	contActor4 VisibilityOff;
X	contActor3 VisibilityOn;
X	$renWin Render;
X	
X	puts "Turning actor #2 on now"	
X
X	contActor3 VisibilityOff;
X	contActor2 VisibilityOn;
X	$renWin Render;	
}	
X
# prevent the tk window from showing up then start the event loop
wm withdraw .
X
SHAR_EOF
  $shar_touch -am 0415195997 'Decimated_6_3_a.tcl' &&
  chmod 0600 'Decimated_6_3_a.tcl' ||
  $echo 'restore of' 'Decimated_6_3_a.tcl' 'failed'
  if ( md5sum --help 2>&1 | grep 'sage: md5sum \[' ) >/dev/null 2>&1 \
  && ( md5sum --version 2>&1 | grep -v 'textutils 1.12' ) >/dev/null; then
    md5sum -c << SHAR_EOF >/dev/null 2>&1 \
    || $echo 'Decimated_6_3_a.tcl:' 'MD5 check failed'
a3eb3cde6a6e5e5cb59f3d1df04e562f  Decimated_6_3_a.tcl
SHAR_EOF
  else
    shar_count="`LC_ALL= LC_CTYPE= LANG= wc -c < 'Decimated_6_3_a.tcl'`"
    test 3909 -eq "$shar_count" ||
    $echo 'Decimated_6_3_a.tcl:' 'original size' '3909,' 'current size' "$shar_count!"
  fi
fi
# ============= Decimated_6_3_b.tcl ==============
if test -f 'Decimated_6_3_b.tcl' && test "$first_param" != -c; then
  $echo 'x -' SKIPPING 'Decimated_6_3_b.tcl' '(file already exists)'
else
  $echo 'x -' extracting 'Decimated_6_3_b.tcl' '(text)'
  sed 's/^X//' << 'SHAR_EOF' > 'Decimated_6_3_b.tcl' &&
#Homework No 3: Advanced Computer Graphics & Data Visualization
#Kanwaljit Anand - ID#: 185-74-8536
#Problem 6.4(b): Decimated-Animation the MRIHead.vtk dataset
X
source vtkInt.tcl
X
vtkRenderMaster rm;
set renWin [rm MakeRenderWindow];
set ren1   [$renWin MakeRenderer];
set iren   [$renWin MakeRenderWindowInteractor];
X
# Load the dataset
vtkStructuredPointsReader vol;
X    vol SetFilename "MRIdata.vtk"
X
vtkTransform trans;
X    trans RotateX 180;
X 
vtkMarchingCubes contour1;
X  contour1 SetInput [vol GetOutput];
X  contour1 SetValue 0 200.0;
X
vtkTransformPolyFilter tpf1
X    tpf1 SetInput [contour1 GetOutput];
X    tpf1 SetTransform trans;
X    
X    puts "\n\tComputing Decimating"
X
vtkDecimate Decimate1
X	Decimate1 SetInput [tpf1 GetOutput];
X	Decimate1 SetMaximumIterations 10;
X	Decimate1 SetTargetReduction 0.5;
X	Decimate1 SetMaximumFeatureAngle 30;
X	Decimate1 SetInitialError 0.0;
X	Decimate1 SetErrorIncrement 0.001;
X	Decimate1 SetMaximumError 0.5;
X
vtkMarchingCubes contour2;
X  contour2 SetInput [vol GetOutput];
X  contour2 SetValue 0 400.0;
X
vtkTransformPolyFilter tpf2
X    tpf2 SetInput [contour2 GetOutput];
X    tpf2 SetTransform trans;
X
vtkDecimate Decimate2
X	Decimate2 SetInput [tpf2 GetOutput];
X	Decimate2 SetMaximumIterations 10;
X	Decimate2 SetTargetReduction 0.5;
X	Decimate2 SetMaximumFeatureAngle 30;
X	Decimate2 SetInitialError 0.0;
X	Decimate2 SetErrorIncrement 0.001;
X	Decimate2 SetMaximumError 0.5;
X
vtkMarchingCubes contour3;
X  contour3 SetInput [vol GetOutput];
X  contour3 SetValue 0 600.0;
X
vtkTransformPolyFilter tpf3
X    tpf3 SetInput [contour3 GetOutput];
X    tpf3 SetTransform trans;
X
vtkDecimate Decimate3
X	Decimate3 SetInput [tpf3 GetOutput];
X	Decimate3 SetMaximumIterations 10;
X	Decimate3 SetTargetReduction 0.5;
X	Decimate3 SetMaximumFeatureAngle 30;
X	Decimate3 SetInitialError 0.0;
X	Decimate3 SetErrorIncrement 0.001;
X	Decimate3 SetMaximumError 0.5;
X
vtkMarchingCubes contour4;
X  contour4 SetInput [vol GetOutput];
X  contour4 SetValue 0 800.0;
X
vtkTransformPolyFilter tpf4
X    tpf4 SetInput [contour4 GetOutput];
X    tpf4 SetTransform trans;
X
vtkDecimate Decimate4
X	Decimate4 SetInput [tpf1 GetOutput];
X	Decimate4 SetMaximumIterations 10;
X	Decimate4 SetTargetReduction 0.5;
X	Decimate4 SetMaximumFeatureAngle 30;
X	Decimate4 SetInitialError 0.0;
X	Decimate4 SetErrorIncrement 0.001;
X	Decimate4 SetMaximumError 0.5;
X	
X	puts "\tSending contents to mapper\n"
X
vtkPolyMapper volMapper1;
X  volMapper1 SetInput [Decimate1 GetOutput];
X  volMapper1 ScalarsVisibleOff;
X
vtkPolyMapper volMapper2;
X  volMapper2 SetInput [Decimate2 GetOutput];
X  volMapper2 ScalarsVisibleOff;
X
vtkPolyMapper volMapper3;
X  volMapper3 SetInput [Decimate3 GetOutput];
X  volMapper3 ScalarsVisibleOff;
X
vtkPolyMapper volMapper4;
X  volMapper4 SetInput [Decimate4 GetOutput];
X  volMapper4 ScalarsVisibleOff;
X
vtkActor volActor1;
X  volActor1 SetMapper volMapper1;
X
vtkActor volActor2;
X  volActor2 SetMapper volMapper2;
X
vtkActor volActor3;
X  volActor3 SetMapper volMapper3;
X
vtkActor volActor4;
X  volActor4 SetMapper volMapper4;
X
vtkOutlineFilter outLine;
X  outLine SetInput [vol GetOutput];
X
vtkTransformPolyFilter out
X    out SetInput [outLine GetOutput];
X    out SetTransform trans;
X
vtkPolyMapper outMapper;
X  outMapper SetInput [out GetOutput];
X
vtkActor outActor;
X  outActor SetMapper outMapper;
X
$ren1 AddActors outActor;
$ren1 AddActors volActor1;
$ren1 AddActors volActor2;
$ren1 AddActors volActor3;
$ren1 AddActors volActor4;
X
X	puts "\tInitializing Renderer"
X
$ren1 SetBackground 0 0 0;
$renWin SetSize 500 400;
$iren Initialize;
X
#all are off to begin with:
volActor1 VisibilityOff;	
volActor2 VisibilityOff;
volActor3 VisibilityOff;
volActor4 VisibilityOff;
volActor1 VisibilityOn;	
$renWin Render;
X
X	puts "\n\tEntering Rendering loop ... use Control-C to quit\n"
X
for {set counter 1} {$counter > 0} {incr counter} {
X
X	puts "Displaying iso-surface #1 now ..."	
X	
X	volActor2 VisibilityOff;	
X	volActor1 VisibilityOn;
X	$renWin Render;
X	
X	puts "Displaying iso-surface #2 now ..."	
X	volActor1 VisibilityOff;	
X	volActor2 VisibilityOn;
X	$renWin Render;
X	
X	puts "Displaying iso-surface #3 now ..."	
X
X	volActor2 VisibilityOff;
X	volActor3 VisibilityOn;
X	$renWin Render;
X	
X	puts "Displaying iso-surface #4 now ..."	
X
X	volActor3 VisibilityOff;
X	volActor4 VisibilityOn;
X	$renWin Render;
X	
X	puts "Displaying iso-surface #3 now ..."	
X
X	volActor4 VisibilityOff;
X	volActor3 VisibilityOn;
X	$renWin Render;	
X
X	puts "Displaying iso-surface #2 now ..."	
X
X	volActor3 VisibilityOff;	
X	volActor2 VisibilityOn;
X	$renWin Render;	
}	
X
# render the image
$iren SetUserMethod {wm deiconify .vtkInteract};
$renWin Render;
wm withdraw .
X
SHAR_EOF
  $shar_touch -am 0415202197 'Decimated_6_3_b.tcl' &&
  chmod 0600 'Decimated_6_3_b.tcl' ||
  $echo 'restore of' 'Decimated_6_3_b.tcl' 'failed'
  if ( md5sum --help 2>&1 | grep 'sage: md5sum \[' ) >/dev/null 2>&1 \
  && ( md5sum --version 2>&1 | grep -v 'textutils 1.12' ) >/dev/null; then
    md5sum -c << SHAR_EOF >/dev/null 2>&1 \
    || $echo 'Decimated_6_3_b.tcl:' 'MD5 check failed'
aa513120708bfba4ada03104c5ba46ee  Decimated_6_3_b.tcl
SHAR_EOF
  else
    shar_count="`LC_ALL= LC_CTYPE= LANG= wc -c < 'Decimated_6_3_b.tcl'`"
    test 4606 -eq "$shar_count" ||
    $echo 'Decimated_6_3_b.tcl:' 'original size' '4606,' 'current size' "$shar_count!"
  fi
fi
# ============= vtkInt.tcl ==============
if test -f 'vtkInt.tcl' && test "$first_param" != -c; then
  $echo 'x -' SKIPPING 'vtkInt.tcl' '(file already exists)'
else
  $echo 'x -' extracting 'vtkInt.tcl' '(text)'
  sed 's/^X//' << 'SHAR_EOF' > 'vtkInt.tcl' &&
# a generic interactor for tcl and vtk
#
catch {unset vtkInteract.bold}
catch {unset vtkInteract.normal}
catch {unset vtkInteract.tagcount}
set vtkInteractBold "-background #43ce80 -relief raised -borderwidth 1"
set vtkInteractNormal "-background #c0c0c0 -relief flat"
set vtkInteractTagcount 1;
X
proc vtkInteract {} {
X
X    proc dovtk {s w} {
X	global vtkInteractBold vtkInteractNormal vtkInteractTagcount;
X	set tag [append tagnum $vtkInteractTagcount];
X	incr vtkInteractTagcount 1;
X	.vtkInteract.text configure -state normal
X	.vtkInteract.text insert end $s $tag
X	eval .vtkInteract.text tag configure $tag $vtkInteractNormal
X	.vtkInteract.text tag bind $tag <Any-Enter> \
X	    ".vtkInteract.text tag configure $tag $vtkInteractBold"
X	.vtkInteract.text tag bind $tag <Any-Leave> \
X	    ".vtkInteract.text tag configure $tag $vtkInteractNormal"
X	.vtkInteract.text tag bind $tag <1> "dovtk [list $s] .vtkInteract";
X	.vtkInteract.text insert end \n; 
X	.vtkInteract.text insert end [uplevel 1 $s]; 
X	.vtkInteract.text insert end \n\n; 
X	.vtkInteract.text configure -state disabled
X	.vtkInteract.text yview end
X    }
X
X    catch {destroy .vtkInteract}
X    toplevel .vtkInteract
X    wm title .vtkInteract "vtk Interactor"
X    wm iconname .vtkInteract "vtk"
X    
X    frame .vtkInteract.buttons
X    pack  .vtkInteract.buttons -side bottom -fill x -pady 2m
X    button .vtkInteract.buttons.dismiss -text Dismiss \
X	-command "wm withdraw .vtkInteract"
X    pack .vtkInteract.buttons.dismiss -side left -expand 1
X    
X    frame .vtkInteract.file
X    label .vtkInteract.file.label -text "Command:" -width 10 -anchor w
X    entry .vtkInteract.file.entry -width 40 
X    bind .vtkInteract.file.entry <Return> {
X	dovtk [%W get] .vtkInteract; %W delete 0 end}
X    pack .vtkInteract.file.label -side left
X    pack .vtkInteract.file.entry -side left -expand 1 -fill x
X    
X    text .vtkInteract.text -yscrollcommand ".vtkInteract.scroll set" \
X	-setgrid true -width 60 -height 8 -wrap word
X    scrollbar .vtkInteract.scroll -command ".vtkInteract.text yview"
X    pack .vtkInteract.scroll -side right -fill y
X    pack .vtkInteract.text -side bottom -expand 1 -fill both
X    pack .vtkInteract.file -pady 3m -padx 2m -side bottom -fill x 
X    
X    .vtkInteract.text configure -state disabled
X    wm withdraw .vtkInteract
}
X
vtkInteract;
X
SHAR_EOF
  $shar_touch -am 0415202397 'vtkInt.tcl' &&
  chmod 0700 'vtkInt.tcl' ||
  $echo 'restore of' 'vtkInt.tcl' 'failed'
  if ( md5sum --help 2>&1 | grep 'sage: md5sum \[' ) >/dev/null 2>&1 \
  && ( md5sum --version 2>&1 | grep -v 'textutils 1.12' ) >/dev/null; then
    md5sum -c << SHAR_EOF >/dev/null 2>&1 \
    || $echo 'vtkInt.tcl:' 'MD5 check failed'
bc7774989c5f676c510275c8faed1e8d  vtkInt.tcl
SHAR_EOF
  else
    shar_count="`LC_ALL= LC_CTYPE= LANG= wc -c < 'vtkInt.tcl'`"
    test 2311 -eq "$shar_count" ||
    $echo 'vtkInt.tcl:' 'original size' '2311,' 'current size' "$shar_count!"
  fi
fi
rm -fr _sh22196
exit 0

From ???@??? Wed Apr 16 07:18:26 1997
Received: from vccnw07.its.rpi.edu (clarkl@vccnw07.its.rpi.edu [128.113.69.57])
	by mail1.its.rpi.edu (8.8.5/8.8.5) with ESMTP id VAA27270
	for <citrit>; Tue, 15 Apr 1997 21:52:01 -0400
From: Landon David Clark <clarkl>
Received: (clarkl@localhost) by vccnw07.its.rpi.edu (SMI-8.6/8.6.4) id VAA08484 for citrit; Tue, 15 Apr 1997 21:51:59 -0400
Date: Tue, 15 Apr 1997 21:51:59 -0400
Message-Id: <199704160151.VAA08484@vccnw07.its.rpi.edu>
To: citrit
Subject: HomeWork 3
X-UIDL: c15f0b8ffd460cc879e5cce0804196f2

#!/bin/sh
# This is a shell archive (produced by GNU sharutils 4.2).
# To extract the files from this archive, save it to some FILE, remove
# everything before the `!/bin/sh' line above, then type `sh FILE'.
#
# Made on 1997-04-15 21:50 EDT by <clarkl@vccnw07.its.rpi.edu>.
# Source directory was `/afs/rpi.edu/home/92/clarkl/advgra/3hw'.
#
# Existing files will *not* be overwritten unless `-c' is specified.
#
# This shar contains:
# length mode       name
# ------ ---------- ------------------------------------------
#   1381 -rw-r--r-- MRIHead.tcl
#   1448 -rw-r--r-- Sample.tcl
#   3769 -rw------- vectordot.tcl
#   3343 -rw------- vectornorm.tcl
#   3341 -rw------- hedgehog.tcl
#   3373 -rw------- streamline.tcl
#   3668 -rw------- warpvector.tcl
#
save_IFS="${IFS}"
IFS="${IFS}:"
gettext_dir=FAILED
locale_dir=FAILED
first_param="$1"
for dir in $PATH
do
  if test "$gettext_dir" = FAILED && test -f $dir/gettext \
     && ($dir/gettext --version >/dev/null 2>&1)
  then
    set `$dir/gettext --version 2>&1`
    if test "$3" = GNU
    then
      gettext_dir=$dir
    fi
  fi
  if test "$locale_dir" = FAILED && test -f $dir/shar \
     && ($dir/shar --print-text-domain-dir >/dev/null 2>&1)
  then
    locale_dir=`$dir/shar --print-text-domain-dir`
  fi
done
IFS="$save_IFS"
if test "$locale_dir" = FAILED || test "$gettext_dir" = FAILED
then
  echo=echo
else
  TEXTDOMAINDIR=$locale_dir
  export TEXTDOMAINDIR
  TEXTDOMAIN=sharutils
  export TEXTDOMAIN
  echo="$gettext_dir/gettext -s"
fi
touch -am 1231235999 $$.touch >/dev/null 2>&1
if test ! -f 1231235999 && test -f $$.touch; then
  shar_touch=touch
else
  shar_touch=:
  echo
  $echo 'WARNING: not restoring timestamps.  Consider getting and'
  $echo "installing GNU \`touch', distributed in GNU File Utilities..."
  echo
fi
rm -f 1231235999 $$.touch
#
if mkdir _sh08468; then
  $echo 'x -' 'creating lock directory'
else
  $echo 'failed to create lock directory'
  exit 1
fi
# ============= MRIHead.tcl ==============
if test -f 'MRIHead.tcl' && test "$first_param" != -c; then
  $echo 'x -' SKIPPING 'MRIHead.tcl' '(file already exists)'
else
  $echo 'x -' extracting 'MRIHead.tcl' '(text)'
  sed 's/^X//' << 'SHAR_EOF' > 'MRIHead.tcl' &&
# If you are using Window95 and vtk 1.3 uncomment the line below
# load vtktcl;
X
# get the interactor u
source VTKINT.TCL
X
# First create the render master
vtkRenderMaster rm;
X
# Now create the RenderWindow, Renderer
#
set renWin [rm MakeRenderWindow];
set ren1   [$renWin MakeRenderer];
set iren   [$renWin MakeRenderWindowInteractor];
X
#
# Load up the data
vtkStructuredPointsReader vol;
X    vol SetFilename "MRIdata.vtk"
#    vol DebugOn;
X
X
X
vtkMarchingCubes contour;
X  contour SetInput [vol GetOutput];
X  contour SetValue 0 225.0;
X
vtkDecimate deci;
X  deci SetInput [contour GetOutput];
X
vtkPolyMapper volMapper;
X  volMapper SetInput [deci GetOutput];
X  volMapper ScalarsVisibleOff;
X
vtkActor volActor;
X  volActor SetMapper volMapper;
X
vtkOutlineFilter outLine;
X  outLine SetInput [vol GetOutput];
X
vtkPolyMapper outMapper;
X  outMapper SetInput [outLine GetOutput];
X
vtkActor outActor;
X  outActor SetMapper outMapper;
X
# Add the actors to the renderer, set the background and size
#
$ren1 AddActors outActor;
$ren1 AddActors volActor;
$ren1 SetBackground 0 0 0;
$renWin SetSize 500 400;
$iren Initialize;
X
# render the image
#
$iren SetUserMethod {wm deiconify .vtkInteract};
$renWin Render;
X
for {set i 225} {$i > 0} {set i [expr $i - 1]} {
X    contour SetValue 0 $i;
X    $renWin Render;
X    }
X
# prevent the tk window from showing up then start the event loop
wm withdraw .
X
SHAR_EOF
  $shar_touch -am 0415214197 'MRIHead.tcl' &&
  chmod 0644 'MRIHead.tcl' ||
  $echo 'restore of' 'MRIHead.tcl' 'failed'
  if ( md5sum --help 2>&1 | grep 'sage: md5sum \[' ) >/dev/null 2>&1 \
  && ( md5sum --version 2>&1 | grep -v 'textutils 1.12' ) >/dev/null; then
    md5sum -c << SHAR_EOF >/dev/null 2>&1 \
    || $echo 'MRIHead.tcl:' 'MD5 check failed'
c2ba0ab73047b9b3ff0799b41a4b8570  MRIHead.tcl
SHAR_EOF
  else
    shar_count="`LC_ALL= LC_CTYPE= LANG= wc -c < 'MRIHead.tcl'`"
    test 1381 -eq "$shar_count" ||
    $echo 'MRIHead.tcl:' 'original size' '1381,' 'current size' "$shar_count!"
  fi
fi
# ============= Sample.tcl ==============
if test -f 'Sample.tcl' && test "$first_param" != -c; then
  $echo 'x -' SKIPPING 'Sample.tcl' '(file already exists)'
else
  $echo 'x -' extracting 'Sample.tcl' '(text)'
  sed 's/^X//' << 'SHAR_EOF' > 'Sample.tcl' &&
#load vtktcl;
# user interface command widget
source VTKINT.TCL
set x 5;
set y 0.0;
set z 1.2;
X
# create a rendering window and renderer
vtkRenderMaster rm;
set renWin [rm MakeRenderWindow];
set ren1 [$renWin MakeRenderer];
set iren [$renWin MakeRenderWindowInteractor];
X
vtkQuadric quad;
X quad SetCoefficients 0.5 1 .2 0 .1 0 0 .2 0 0;
vtkSampleFunction sample;
X  sample SetSampleDimensions 15 15 15;
X  sample SetImplicitFunction quad;
X
vtkContourFilter contours;
X  contours SetInput [sample GetOutput];
X  contours GenerateValues $x $y $z;
X
vtkTriangleFilter tri;
X  tri SetInput [contours GetOutput];
X
vtkDecimate deci;
X  deci SetInput [tri GetOutput];
X
vtkPolyMapper contMapper;
X  contMapper SetInput [deci GetOutput];
X  contMapper SetScalarRange 0.0 1.2;
vtkActor contActor;
X  contActor SetMapper contMapper;
X
# assign our actor to the renderer
$ren1 SetBackground 1 1 1;
$ren1 AddActors contActor;
X
# enable user interface interactor
$iren SetUserMethod {wm deiconify .vtkInteract};
$iren Initialize;
X
#set x 5;
#set y 0.0;
#set z 9.2;
#contours GenerateValues $x $y $z;
#$renWin Render;
X
#proc anim {$renWin $x $y $z} {
X    for {set i 0} {$i < 50} {incr i; incr i} {
X	#$renWin Render;
X	#set $x [expr [llength $x] + $i];
X	set y [expr $y + .1];
X	set z [expr $z + .1];
X	contours GenerateValues $x $y $z;
X	#$contMapper SetScalarRange $y $z;
X	$renWin Render;
X    }
#}
# prevent the tk window from showing up then start the event loop
wm withdraw .
SHAR_EOF
  $shar_touch -am 0415214497 'Sample.tcl' &&
  chmod 0644 'Sample.tcl' ||
  $echo 'restore of' 'Sample.tcl' 'failed'
  if ( md5sum --help 2>&1 | grep 'sage: md5sum \[' ) >/dev/null 2>&1 \
  && ( md5sum --version 2>&1 | grep -v 'textutils 1.12' ) >/dev/null; then
    md5sum -c << SHAR_EOF >/dev/null 2>&1 \
    || $echo 'Sample.tcl:' 'MD5 check failed'
612de01abf94ffac27ac6ca09a43b4c1  Sample.tcl
SHAR_EOF
  else
    shar_count="`LC_ALL= LC_CTYPE= LANG= wc -c < 'Sample.tcl'`"
    test 1448 -eq "$shar_count" ||
    $echo 'Sample.tcl:' 'original size' '1448,' 'current size' "$shar_count!"
  fi
fi
# ============= vectordot.tcl ==============
if test -f 'vectordot.tcl' && test "$first_param" != -c; then
  $echo 'x -' SKIPPING 'vectordot.tcl' '(file already exists)'
else
  $echo 'x -' extracting 'vectordot.tcl' '(text)'
  sed 's/^X//' << 'SHAR_EOF' > 'vectordot.tcl' &&
#unommet the line below if you are on Windows95
# load vtktcl;
# get the interactor ui
source VTKINT.TCL
X
# create planes
# First create the render master
vtkRenderMaster rm;
X
# Now create the RenderWindow, Renderer and both Actors
#
set renWin [rm MakeRenderWindow];
set ren1   [$renWin MakeRenderer];
set iren [$renWin MakeRenderWindowInteractor];
X
# create pipeline
#
vtkPLOT3DReader pl3d;
X    pl3d SetXYZFilename "combxyz.bin"
X    pl3d SetQFilename "combq.bin"
X    pl3d SetScalarFunctionNumber 100;
X    pl3d SetVectorFunctionNumber 202;
X    pl3d Update;
X
vtkPlaneSource plane;
X    plane SetResolution 50 50;
vtkTransform transP1;
X    transP1 Translate 3.7 0.0 28.37;
X    transP1 Scale 5 5 5;
X    transP1 RotateY 90;
vtkTransformPolyFilter tpd1
X    tpd1 SetInput [plane GetOutput];
X    tpd1 SetTransform transP1;
vtkOutlineFilter outTpd1;
X    outTpd1 SetInput [tpd1 GetOutput];
vtkPolyMapper mapTpd1;
X    mapTpd1 SetInput [outTpd1 GetOutput];
vtkActor tpd1Actor;
X    tpd1Actor SetMapper mapTpd1;
X    [tpd1Actor GetProperty] SetColor 0 0 0;
X
vtkTransform transP2;
X    transP2 Translate 9.2 0.0 31.20;
X    transP2 Scale 5 5 5;
X    transP2 RotateY 90;
vtkTransformPolyFilter tpd2
X    tpd2 SetInput [plane GetOutput];
X    tpd2 SetTransform transP2;
vtkOutlineFilter outTpd2;
X    outTpd2 SetInput [tpd2 GetOutput];
vtkPolyMapper mapTpd2;
X    mapTpd2 SetInput [outTpd2 GetOutput];
vtkActor tpd2Actor;
X    tpd2Actor SetMapper mapTpd2;
X    [tpd2Actor GetProperty] SetColor 0 0 0;
X
vtkTransform transP3;
X    transP3 Translate 13.27 0.0 33.30;
X    transP3 Scale 5 5 5;
X    transP3 RotateY 90;
vtkTransformPolyFilter tpd3
X    tpd3 SetInput [plane GetOutput];
X    tpd3 SetTransform transP3;
vtkOutlineFilter outTpd3;
X    outTpd3 SetInput [tpd3 GetOutput];
vtkPolyMapper mapTpd3;
X    mapTpd3 SetInput [outTpd3 GetOutput];
vtkActor tpd3Actor;
X    tpd3Actor SetMapper mapTpd3;
X    [tpd3Actor GetProperty] SetColor 0 0 0;
X
vtkAppendPolyData appendF;
X    appendF AddInput [tpd1 GetOutput];
X    appendF AddInput [tpd2 GetOutput];
X    appendF AddInput [tpd3 GetOutput];
X
vtkProbeFilter probe;
X    probe SetInput [appendF GetOutput];
X    probe SetSource [pl3d GetOutput];
X
vtkGeometryFilter contour2;
X    contour2 SetInput [probe GetOutput];
#    contour2 SetExtent 0.0 10.0 0.0 20.0 0.0 20.0;
X
#    eval contour2 GenerateValues 50 [[pl3d GetOutput] GetScalarRange];
X
vtkPolyNormals normals;
X    normals SetInput [contour2 GetOutput];
X
#vtkPointSource probe;
#    probe SetNumberOfPoints 100;
#    probe SetCenter 13.27 0.0 33.30;
#    probe SetRadius 2.0;
X
vtkVectorDot contour;
X    contour SetInput [normals GetOutput];
X    eval contour SetScalarRange  [[pl3d GetOutput] GetScalarRange];
X
vtkDataSetMapper contourMapper;
X    contourMapper SetInput [contour GetOutput];
X    eval contourMapper SetScalarRange [[pl3d GetOutput] GetScalarRange];
X
vtkActor planeActor;
X    planeActor SetMapper contourMapper;
X
vtkStructuredGridOutlineFilter outline;
X    outline SetInput [pl3d GetOutput];
vtkPolyMapper outlineMapper;
X    outlineMapper SetInput [outline GetOutput];
vtkActor outlineActor;
X    outlineActor SetMapper outlineMapper;
X    [outlineActor GetProperty] SetColor 0 0 0;
X
$ren1 AddActors outlineActor;
$ren1 AddActors planeActor;
$ren1 AddActors tpd1Actor;
$ren1 AddActors tpd2Actor;
$ren1 AddActors tpd3Actor;
$ren1 SetBackground 1 1 1;
$renWin SetSize 500 500;
$iren Initialize;
X
set cam1 [$ren1 GetActiveCamera];
$cam1 SetClippingRange 3.95297 50;
$cam1 SetFocalPoint 8.88908 0.595038 29.3342;
$cam1 SetPosition -12.3332 31.7479 41.2387;
$cam1 CalcViewPlaneNormal;
$cam1 SetViewUp 0.060772 -0.319905 0.945498;
X
# render the image
#
$iren SetUserMethod {wm deiconify .vtkInteract};
$renWin Render;
X
# prevent the tk window from showing up then start the event loop
wm withdraw .
X
SHAR_EOF
  $shar_touch -am 0415211097 'vectordot.tcl' &&
  chmod 0600 'vectordot.tcl' ||
  $echo 'restore of' 'vectordot.tcl' 'failed'
  if ( md5sum --help 2>&1 | grep 'sage: md5sum \[' ) >/dev/null 2>&1 \
  && ( md5sum --version 2>&1 | grep -v 'textutils 1.12' ) >/dev/null; then
    md5sum -c << SHAR_EOF >/dev/null 2>&1 \
    || $echo 'vectordot.tcl:' 'MD5 check failed'
6626f4a7fbc99e7adb04c61beec22182  vectordot.tcl
SHAR_EOF
  else
    shar_count="`LC_ALL= LC_CTYPE= LANG= wc -c < 'vectordot.tcl'`"
    test 3769 -eq "$shar_count" ||
    $echo 'vectordot.tcl:' 'original size' '3769,' 'current size' "$shar_count!"
  fi
fi
# ============= vectornorm.tcl ==============
if test -f 'vectornorm.tcl' && test "$first_param" != -c; then
  $echo 'x -' SKIPPING 'vectornorm.tcl' '(file already exists)'
else
  $echo 'x -' extracting 'vectornorm.tcl' '(text)'
  sed 's/^X//' << 'SHAR_EOF' > 'vectornorm.tcl' &&
#unommet the line below if you are on Windows95
# load vtktcl;
# get the interactor ui
source VTKINT.TCL
X
# create planes
# First create the render master
vtkRenderMaster rm;
X
# Now create the RenderWindow, Renderer and both Actors
#
set renWin [rm MakeRenderWindow];
set ren1   [$renWin MakeRenderer];
set iren [$renWin MakeRenderWindowInteractor];
X
# create pipeline
#
vtkPLOT3DReader pl3d;
X    pl3d SetXYZFilename "combxyz.bin"
X    pl3d SetQFilename "combq.bin"
X    pl3d SetScalarFunctionNumber 100;
X    pl3d SetVectorFunctionNumber 202;
X    pl3d Update;
X
vtkPlaneSource plane;
X    plane SetResolution 50 50;
vtkTransform transP1;
X    transP1 Translate 3.7 0.0 28.37;
X    transP1 Scale 5 5 5;
X    transP1 RotateY 90;
vtkTransformPolyFilter tpd1
X    tpd1 SetInput [plane GetOutput];
X    tpd1 SetTransform transP1;
vtkOutlineFilter outTpd1;
X    outTpd1 SetInput [tpd1 GetOutput];
vtkPolyMapper mapTpd1;
X    mapTpd1 SetInput [outTpd1 GetOutput];
vtkActor tpd1Actor;
X    tpd1Actor SetMapper mapTpd1;
X    [tpd1Actor GetProperty] SetColor 0 0 0;
X
vtkTransform transP2;
X    transP2 Translate 9.2 0.0 31.20;
X    transP2 Scale 5 5 5;
X    transP2 RotateY 90;
vtkTransformPolyFilter tpd2
X    tpd2 SetInput [plane GetOutput];
X    tpd2 SetTransform transP2;
vtkOutlineFilter outTpd2;
X    outTpd2 SetInput [tpd2 GetOutput];
vtkPolyMapper mapTpd2;
X    mapTpd2 SetInput [outTpd2 GetOutput];
vtkActor tpd2Actor;
X    tpd2Actor SetMapper mapTpd2;
X    [tpd2Actor GetProperty] SetColor 0 0 0;
X
vtkTransform transP3;
X    transP3 Translate 13.27 0.0 33.30;
X    transP3 Scale 5 5 5;
X    transP3 RotateY 90;
vtkTransformPolyFilter tpd3
X    tpd3 SetInput [plane GetOutput];
X    tpd3 SetTransform transP3;
vtkOutlineFilter outTpd3;
X    outTpd3 SetInput [tpd3 GetOutput];
vtkPolyMapper mapTpd3;
X    mapTpd3 SetInput [outTpd3 GetOutput];
vtkActor tpd3Actor;
X    tpd3Actor SetMapper mapTpd3;
X    [tpd3Actor GetProperty] SetColor 0 0 0;
X
vtkAppendPolyData appendF;
X    appendF AddInput [tpd1 GetOutput];
X    appendF AddInput [tpd2 GetOutput];
X    appendF AddInput [tpd3 GetOutput];
X
vtkProbeFilter probe;
X    probe SetInput [appendF GetOutput];
X    probe SetSource [pl3d GetOutput];
X
vtkVectorNorm contour;
X    contour SetInput [probe GetOutput];
X    contour SetNormalize 1;
X
vtkDataSetMapper contourMapper;
X    contourMapper SetInput [contour GetOutput];
X    eval contourMapper SetScalarRange [[pl3d GetOutput] GetScalarRange];
X
vtkActor planeActor;
X    planeActor SetMapper contourMapper;
X
vtkStructuredGridOutlineFilter outline;
X    outline SetInput [pl3d GetOutput];
vtkPolyMapper outlineMapper;
X    outlineMapper SetInput [outline GetOutput];
vtkActor outlineActor;
X    outlineActor SetMapper outlineMapper;
X    [outlineActor GetProperty] SetColor 0 0 0;
X
$ren1 AddActors outlineActor;
$ren1 AddActors planeActor;
$ren1 AddActors tpd1Actor;
$ren1 AddActors tpd2Actor;
$ren1 AddActors tpd3Actor;
$ren1 SetBackground 1 1 1;
$renWin SetSize 500 500;
$iren Initialize;
X
set cam1 [$ren1 GetActiveCamera];
$cam1 SetClippingRange 3.95297 50;
$cam1 SetFocalPoint 8.88908 0.595038 29.3342;
$cam1 SetPosition -12.3332 31.7479 41.2387;
$cam1 CalcViewPlaneNormal;
$cam1 SetViewUp 0.060772 -0.319905 0.945498;
X
# render the image
#
$iren SetUserMethod {wm deiconify .vtkInteract};
$renWin Render;
X
# prevent the tk window from showing up then start the event loop
wm withdraw .
X
SHAR_EOF
  $shar_touch -am 0415210697 'vectornorm.tcl' &&
  chmod 0600 'vectornorm.tcl' ||
  $echo 'restore of' 'vectornorm.tcl' 'failed'
  if ( md5sum --help 2>&1 | grep 'sage: md5sum \[' ) >/dev/null 2>&1 \
  && ( md5sum --version 2>&1 | grep -v 'textutils 1.12' ) >/dev/null; then
    md5sum -c << SHAR_EOF >/dev/null 2>&1 \
    || $echo 'vectornorm.tcl:' 'MD5 check failed'
4dd5d4a9a0518ebc0dc0c9689aca8aa6  vectornorm.tcl
SHAR_EOF
  else
    shar_count="`LC_ALL= LC_CTYPE= LANG= wc -c < 'vectornorm.tcl'`"
    test 3343 -eq "$shar_count" ||
    $echo 'vectornorm.tcl:' 'original size' '3343,' 'current size' "$shar_count!"
  fi
fi
# ============= hedgehog.tcl ==============
if test -f 'hedgehog.tcl' && test "$first_param" != -c; then
  $echo 'x -' SKIPPING 'hedgehog.tcl' '(file already exists)'
else
  $echo 'x -' extracting 'hedgehog.tcl' '(text)'
  sed 's/^X//' << 'SHAR_EOF' > 'hedgehog.tcl' &&
#unommet the line below if you are on Windows95
# load vtktcl;
# get the interactor ui
source VTKINT.TCL
X
# create planes
# First create the render master
vtkRenderMaster rm;
X
# Now create the RenderWindow, Renderer and both Actors
#
set renWin [rm MakeRenderWindow];
set ren1   [$renWin MakeRenderer];
set iren [$renWin MakeRenderWindowInteractor];
X
# create pipeline
#
vtkPLOT3DReader pl3d;
X    pl3d SetXYZFilename "combxyz.bin"
X    pl3d SetQFilename "combq.bin"
X    pl3d SetScalarFunctionNumber 100;
X    pl3d SetVectorFunctionNumber 202;
X    pl3d Update;
X
vtkPlaneSource plane;
X    plane SetResolution 50 50;
vtkTransform transP1;
X    transP1 Translate 3.7 0.0 28.37;
X    transP1 Scale 5 5 5;
X    transP1 RotateY 90;
vtkTransformPolyFilter tpd1
X    tpd1 SetInput [plane GetOutput];
X    tpd1 SetTransform transP1;
vtkOutlineFilter outTpd1;
X    outTpd1 SetInput [tpd1 GetOutput];
vtkPolyMapper mapTpd1;
X    mapTpd1 SetInput [outTpd1 GetOutput];
vtkActor tpd1Actor;
X    tpd1Actor SetMapper mapTpd1;
X    [tpd1Actor GetProperty] SetColor 0 0 0;
X
vtkTransform transP2;
X    transP2 Translate 9.2 0.0 31.20;
X    transP2 Scale 5 5 5;
X    transP2 RotateY 90;
vtkTransformPolyFilter tpd2
X    tpd2 SetInput [plane GetOutput];
X    tpd2 SetTransform transP2;
vtkOutlineFilter outTpd2;
X    outTpd2 SetInput [tpd2 GetOutput];
vtkPolyMapper mapTpd2;
X    mapTpd2 SetInput [outTpd2 GetOutput];
vtkActor tpd2Actor;
X    tpd2Actor SetMapper mapTpd2;
X    [tpd2Actor GetProperty] SetColor 0 0 0;
X
vtkTransform transP3;
X    transP3 Translate 13.27 0.0 33.30;
X    transP3 Scale 5 5 5;
X    transP3 RotateY 90;
vtkTransformPolyFilter tpd3
X    tpd3 SetInput [plane GetOutput];
X    tpd3 SetTransform transP3;
vtkOutlineFilter outTpd3;
X    outTpd3 SetInput [tpd3 GetOutput];
vtkPolyMapper mapTpd3;
X    mapTpd3 SetInput [outTpd3 GetOutput];
vtkActor tpd3Actor;
X    tpd3Actor SetMapper mapTpd3;
X    [tpd3Actor GetProperty] SetColor 0 0 0;
X
vtkAppendPolyData appendF;
X    appendF AddInput [tpd1 GetOutput];
X    appendF AddInput [tpd2 GetOutput];
X    appendF AddInput [tpd3 GetOutput];
X
vtkProbeFilter probe;
X    probe SetInput [appendF GetOutput];
X    probe SetSource [pl3d GetOutput];
X
vtkHedgeHog contour;
X    contour SetInput [probe GetOutput];
X    contour SetScaleFactor .06;
X
vtkPolyMapper contourMapper;
X    contourMapper SetInput [contour GetOutput];
X    eval contourMapper SetScalarRange [[pl3d GetOutput] GetScalarRange];
vtkActor planeActor;
X    planeActor SetMapper contourMapper;
X
vtkStructuredGridOutlineFilter outline;
X    outline SetInput [pl3d GetOutput];
vtkPolyMapper outlineMapper;
X    outlineMapper SetInput [outline GetOutput];
vtkActor outlineActor;
X    outlineActor SetMapper outlineMapper;
X    [outlineActor GetProperty] SetColor 0 0 0;
X
$ren1 AddActors outlineActor;
$ren1 AddActors planeActor;
$ren1 AddActors tpd1Actor;
$ren1 AddActors tpd2Actor;
$ren1 AddActors tpd3Actor;
$ren1 SetBackground 1 1 1;
$renWin SetSize 500 500;
$iren Initialize;
X
set cam1 [$ren1 GetActiveCamera];
$cam1 SetClippingRange 3.95297 50;
$cam1 SetFocalPoint 8.88908 0.595038 29.3342;
$cam1 SetPosition -12.3332 31.7479 41.2387;
$cam1 CalcViewPlaneNormal;
$cam1 SetViewUp 0.060772 -0.319905 0.945498;
X
# render the image
#
$iren SetUserMethod {wm deiconify .vtkInteract};
$renWin Render;
X
# prevent the tk window from showing up then start the event loop
wm withdraw .
X
SHAR_EOF
  $shar_touch -am 0413152097 'hedgehog.tcl' &&
  chmod 0600 'hedgehog.tcl' ||
  $echo 'restore of' 'hedgehog.tcl' 'failed'
  if ( md5sum --help 2>&1 | grep 'sage: md5sum \[' ) >/dev/null 2>&1 \
  && ( md5sum --version 2>&1 | grep -v 'textutils 1.12' ) >/dev/null; then
    md5sum -c << SHAR_EOF >/dev/null 2>&1 \
    || $echo 'hedgehog.tcl:' 'MD5 check failed'
91bb016a2250c0de2c1f1c15fb2b5422  hedgehog.tcl
SHAR_EOF
  else
    shar_count="`LC_ALL= LC_CTYPE= LANG= wc -c < 'hedgehog.tcl'`"
    test 3341 -eq "$shar_count" ||
    $echo 'hedgehog.tcl:' 'original size' '3341,' 'current size' "$shar_count!"
  fi
fi
# ============= streamline.tcl ==============
if test -f 'streamline.tcl' && test "$first_param" != -c; then
  $echo 'x -' SKIPPING 'streamline.tcl' '(file already exists)'
else
  $echo 'x -' extracting 'streamline.tcl' '(text)'
  sed 's/^X//' << 'SHAR_EOF' > 'streamline.tcl' &&
#unommet the line below if you are on Windows95
# load vtktcl;
# get the interactor ui
source VTKINT.TCL
X
# create planes
# First create the render master
vtkRenderMaster rm;
X
# Now create the RenderWindow, Renderer and both Actors
#
set renWin [rm MakeRenderWindow];
set ren1   [$renWin MakeRenderer];
set iren [$renWin MakeRenderWindowInteractor];
X
# create pipeline
#
vtkPLOT3DReader pl3d;
X    pl3d SetXYZFilename "combxyz.bin"
X    pl3d SetQFilename "combq.bin"
X    pl3d SetScalarFunctionNumber 100;
X    pl3d SetVectorFunctionNumber 202;
X    pl3d Update;
X
vtkPlaneSource plane;
X    plane SetResolution 50 50;
vtkTransform transP1;
X    transP1 Translate 3.7 0.0 28.37;
X    transP1 Scale 5 5 5;
X    transP1 RotateY 90;
vtkTransformPolyFilter tpd1
X    tpd1 SetInput [plane GetOutput];
X    tpd1 SetTransform transP1;
vtkOutlineFilter outTpd1;
X    outTpd1 SetInput [tpd1 GetOutput];
vtkPolyMapper mapTpd1;
X    mapTpd1 SetInput [outTpd1 GetOutput];
vtkActor tpd1Actor;
X    tpd1Actor SetMapper mapTpd1;
X    [tpd1Actor GetProperty] SetColor 0 0 0;
X
vtkTransform transP2;
X    transP2 Translate 9.2 0.0 31.20;
X    transP2 Scale 5 5 5;
X    transP2 RotateY 90;
vtkTransformPolyFilter tpd2
X    tpd2 SetInput [plane GetOutput];
X    tpd2 SetTransform transP2;
vtkOutlineFilter outTpd2;
X    outTpd2 SetInput [tpd2 GetOutput];
vtkPolyMapper mapTpd2;
X    mapTpd2 SetInput [outTpd2 GetOutput];
vtkActor tpd2Actor;
X    tpd2Actor SetMapper mapTpd2;
X    [tpd2Actor GetProperty] SetColor 0 0 0;
X
vtkTransform transP3;
X    transP3 Translate 13.27 0.0 33.30;
X    transP3 Scale 5 5 5;
X    transP3 RotateY 90;
vtkTransformPolyFilter tpd3
X    tpd3 SetInput [plane GetOutput];
X    tpd3 SetTransform transP3;
vtkOutlineFilter outTpd3;
X    outTpd3 SetInput [tpd3 GetOutput];
vtkPolyMapper mapTpd3;
X    mapTpd3 SetInput [outTpd3 GetOutput];
vtkActor tpd3Actor;
X    tpd3Actor SetMapper mapTpd3;
X    [tpd3Actor GetProperty] SetColor 0 0 0;
X
vtkAppendPolyData appendF;
X    appendF AddInput [tpd1 GetOutput];
X    appendF AddInput [tpd2 GetOutput];
X    appendF AddInput [tpd3 GetOutput];
X
vtkPointSource probe;
X    probe SetNumberOfPoints 100;
X    probe SetCenter 13.27 0.0 33.30;
X    probe SetRadius 1.0;
X    
X
vtkStreamLine contour;
X    contour SetSource [probe GetOutput];
X    contour SetInput [pl3d GetOutput];
X
vtkPolyMapper contourMapper;
X    contourMapper SetInput [contour GetOutput];
X    eval contourMapper SetScalarRange [[pl3d GetOutput] GetScalarRange];
vtkActor planeActor;
X    planeActor SetMapper contourMapper;
X
vtkStructuredGridOutlineFilter outline;
X    outline SetInput [pl3d GetOutput];
vtkPolyMapper outlineMapper;
X    outlineMapper SetInput [outline GetOutput];
vtkActor outlineActor;
X    outlineActor SetMapper outlineMapper;
X    [outlineActor GetProperty] SetColor 0 0 0;
X
$ren1 AddActors outlineActor;
$ren1 AddActors planeActor;
$ren1 AddActors tpd1Actor;
$ren1 AddActors tpd2Actor;
$ren1 AddActors tpd3Actor;
$ren1 SetBackground 1 1 1;
$renWin SetSize 500 500;
$iren Initialize;
X
set cam1 [$ren1 GetActiveCamera];
$cam1 SetClippingRange 3.95297 50;
$cam1 SetFocalPoint 8.88908 0.595038 29.3342;
$cam1 SetPosition -12.3332 31.7479 41.2387;
$cam1 CalcViewPlaneNormal;
$cam1 SetViewUp 0.060772 -0.319905 0.945498;
X
# render the image
#
$iren SetUserMethod {wm deiconify .vtkInteract};
$renWin Render;
X
# prevent the tk window from showing up then start the event loop
wm withdraw .
X
SHAR_EOF
  $shar_touch -am 0415195697 'streamline.tcl' &&
  chmod 0600 'streamline.tcl' ||
  $echo 'restore of' 'streamline.tcl' 'failed'
  if ( md5sum --help 2>&1 | grep 'sage: md5sum \[' ) >/dev/null 2>&1 \
  && ( md5sum --version 2>&1 | grep -v 'textutils 1.12' ) >/dev/null; then
    md5sum -c << SHAR_EOF >/dev/null 2>&1 \
    || $echo 'streamline.tcl:' 'MD5 check failed'
049836cadf43b6abcc29b93b4630f746  streamline.tcl
SHAR_EOF
  else
    shar_count="`LC_ALL= LC_CTYPE= LANG= wc -c < 'streamline.tcl'`"
    test 3373 -eq "$shar_count" ||
    $echo 'streamline.tcl:' 'original size' '3373,' 'current size' "$shar_count!"
  fi
fi
# ============= warpvector.tcl ==============
if test -f 'warpvector.tcl' && test "$first_param" != -c; then
  $echo 'x -' SKIPPING 'warpvector.tcl' '(file already exists)'
else
  $echo 'x -' extracting 'warpvector.tcl' '(text)'
  sed 's/^X//' << 'SHAR_EOF' > 'warpvector.tcl' &&
#unommet the line below if you are on Windows95
# load vtktcl;
# get the interactor ui
source VTKINT.TCL
X
# create planes
# First create the render master
vtkRenderMaster rm;
X
# Now create the RenderWindow, Renderer and both Actors
#
set renWin [rm MakeRenderWindow];
set ren1   [$renWin MakeRenderer];
set iren [$renWin MakeRenderWindowInteractor];
X
# create pipeline
#
vtkPLOT3DReader pl3d;
X    pl3d SetXYZFilename "combxyz.bin"
X    pl3d SetQFilename "combq.bin"
X    pl3d SetScalarFunctionNumber 100;
X    pl3d SetVectorFunctionNumber 202;
X    pl3d Update;
X
vtkPlaneSource plane;
X    plane SetResolution 50 50;
vtkTransform transP1;
X    transP1 Translate 3.7 0.0 28.37;
X    transP1 Scale 5 5 5;
X    transP1 RotateY 90;
vtkTransformPolyFilter tpd1
X    tpd1 SetInput [plane GetOutput];
X    tpd1 SetTransform transP1;
vtkOutlineFilter outTpd1;
X    outTpd1 SetInput [tpd1 GetOutput];
vtkPolyMapper mapTpd1;
X    mapTpd1 SetInput [outTpd1 GetOutput];
vtkActor tpd1Actor;
X    tpd1Actor SetMapper mapTpd1;
X    [tpd1Actor GetProperty] SetColor 0 0 0;
X
vtkTransform transP2;
X    transP2 Translate 9.2 0.0 31.20;
X    transP2 Scale 5 5 5;
X    transP2 RotateY 90;
vtkTransformPolyFilter tpd2
X    tpd2 SetInput [plane GetOutput];
X    tpd2 SetTransform transP2;
vtkOutlineFilter outTpd2;
X    outTpd2 SetInput [tpd2 GetOutput];
vtkPolyMapper mapTpd2;
X    mapTpd2 SetInput [outTpd2 GetOutput];
vtkActor tpd2Actor;
X    tpd2Actor SetMapper mapTpd2;
X    [tpd2Actor GetProperty] SetColor 0 0 0;
X
vtkTransform transP3;
X    transP3 Translate 13.27 0.0 33.30;
X    transP3 Scale 5 5 5;
X    transP3 RotateY 90;
vtkTransformPolyFilter tpd3
X    tpd3 SetInput [plane GetOutput];
X    tpd3 SetTransform transP3;
vtkOutlineFilter outTpd3;
X    outTpd3 SetInput [tpd3 GetOutput];
vtkPolyMapper mapTpd3;
X    mapTpd3 SetInput [outTpd3 GetOutput];
vtkActor tpd3Actor;
X    tpd3Actor SetMapper mapTpd3;
X    [tpd3Actor GetProperty] SetColor 0 0 0;
X
vtkAppendPolyData appendF;
X    appendF AddInput [tpd1 GetOutput];
X    appendF AddInput [tpd2 GetOutput];
X    appendF AddInput [tpd3 GetOutput];
X
vtkProbeFilter probe;
X    probe SetInput [appendF GetOutput];
X    probe SetSource [pl3d GetOutput];
X
vtkGeometryFilter contour2;
X    contour2 SetInput [probe GetOutput];
#    contour2 SetExtent 0.0 10.0 0.0 20.0 0.0 20.0;
X
#    eval contour2 GenerateValues 50 [[pl3d GetOutput] GetScalarRange];
X
#vtkPointSource probe;
#    probe SetNumberOfPoints 100;
#    probe SetCenter 13.27 0.0 33.30;
#    probe SetRadius 2.0;
X
vtkWarpVector contour;
X    contour SetInput [contour2 GetOutput];
X    contour SetScaleFactor .005;
X
vtkDataSetMapper contourMapper;
X    contourMapper SetInput [contour GetOutput];
X    eval contourMapper SetScalarRange [[pl3d GetOutput] GetScalarRange];
X
vtkActor planeActor;
X    planeActor SetMapper contourMapper;
X
vtkStructuredGridOutlineFilter outline;
X    outline SetInput [pl3d GetOutput];
vtkPolyMapper outlineMapper;
X    outlineMapper SetInput [outline GetOutput];
vtkActor outlineActor;
X    outlineActor SetMapper outlineMapper;
X    [outlineActor GetProperty] SetColor 0 0 0;
X
$ren1 AddActors outlineActor;
$ren1 AddActors planeActor;
$ren1 AddActors tpd1Actor;
$ren1 AddActors tpd2Actor;
$ren1 AddActors tpd3Actor;
$ren1 SetBackground 1 1 1;
$renWin SetSize 500 500;
$iren Initialize;
X
set cam1 [$ren1 GetActiveCamera];
$cam1 SetClippingRange 3.95297 50;
$cam1 SetFocalPoint 8.88908 0.595038 29.3342;
$cam1 SetPosition -12.3332 31.7479 41.2387;
$cam1 CalcViewPlaneNormal;
$cam1 SetViewUp 0.060772 -0.319905 0.945498;
X
# render the image
#
$iren SetUserMethod {wm deiconify .vtkInteract};
$renWin Render;
X
# prevent the tk window from showing up then start the event loop
wm withdraw .
X
SHAR_EOF
  $shar_touch -am 0415203797 'warpvector.tcl' &&
  chmod 0600 'warpvector.tcl' ||
  $echo 'restore of' 'warpvector.tcl' 'failed'
  if ( md5sum --help 2>&1 | grep 'sage: md5sum \[' ) >/dev/null 2>&1 \
  && ( md5sum --version 2>&1 | grep -v 'textutils 1.12' ) >/dev/null; then
    md5sum -c << SHAR_EOF >/dev/null 2>&1 \
    || $echo 'warpvector.tcl:' 'MD5 check failed'
4b3bac990cfd9d7d6a49f462725b03a0  warpvector.tcl
SHAR_EOF
  else
    shar_count="`LC_ALL= LC_CTYPE= LANG= wc -c < 'warpvector.tcl'`"
    test 3668 -eq "$shar_count" ||
    $echo 'warpvector.tcl:' 'original size' '3668,' 'current size' "$shar_count!"
  fi
fi
rm -fr _sh08468
exit 0

From ???@??? Wed Apr 16 07:18:28 1997
Received: from vcmr-13.rcs.rpi.edu (kholma@vcmr-13.rcs.rpi.edu [128.113.113.34])
	by mail1.its.rpi.edu (8.8.5/8.8.5) with ESMTP id WAA87070
	for <citrit@rpi.edu>; Tue, 15 Apr 1997 22:22:13 -0400
From: Alexander Holmansky <kholma>
Received: (kholma@localhost) by vcmr-13.rcs.rpi.edu (SMI-8.6/8.6.4) id WAA07611 for citrit@rpi.edu; Tue, 15 Apr 1997 22:22:10 -0400
Date: Tue, 15 Apr 1997 22:22:10 -0400
Message-Id: <199704160222.WAA07611@vcmr-13.rcs.rpi.edu>
To: citrit@rpi.edu
Subject: HomeWork 3
X-UIDL: 21a4cfa612e1eeaa7ec033267652c5df

#!/bin/sh
# This is a shell archive (produced by GNU sharutils 4.2).
# To extract the files from this archive, save it to some FILE, remove
# everything before the `!/bin/sh' line above, then type `sh FILE'.
#
# Made on 1997-04-15 22:21 EDT by <kholma@vcmr-13.rcs.rpi.edu>.
# Source directory was `/afs/rpi.edu/home/95/kholma/class/vis/hw3'.
#
# Existing files will *not* be overwritten unless `-c' is specified.
#
# This shar contains:
# length mode       name
# ------ ---------- ------------------------------------------
#   4258 -rw------- e63a.tcl
#   4600 -rw------- e63b.tcl
#   3284 -rw------- e94hedge.tcl
#   3016 -rw------- e94stream.tcl
#   3550 -rw------- e94vnorm.tcl
#   3386 -rw------- e94warp.tcl
#
save_IFS="${IFS}"
IFS="${IFS}:"
gettext_dir=FAILED
locale_dir=FAILED
first_param="$1"
for dir in $PATH
do
  if test "$gettext_dir" = FAILED && test -f $dir/gettext \
     && ($dir/gettext --version >/dev/null 2>&1)
  then
    set `$dir/gettext --version 2>&1`
    if test "$3" = GNU
    then
      gettext_dir=$dir
    fi
  fi
  if test "$locale_dir" = FAILED && test -f $dir/shar \
     && ($dir/shar --print-text-domain-dir >/dev/null 2>&1)
  then
    locale_dir=`$dir/shar --print-text-domain-dir`
  fi
done
IFS="$save_IFS"
if test "$locale_dir" = FAILED || test "$gettext_dir" = FAILED
then
  echo=echo
else
  TEXTDOMAINDIR=$locale_dir
  export TEXTDOMAINDIR
  TEXTDOMAIN=sharutils
  export TEXTDOMAIN
  echo="$gettext_dir/gettext -s"
fi
touch -am 1231235999 $$.touch >/dev/null 2>&1
if test ! -f 1231235999 && test -f $$.touch; then
  shar_touch=touch
else
  shar_touch=:
  echo
  $echo 'WARNING: not restoring timestamps.  Consider getting and'
  $echo "installing GNU \`touch', distributed in GNU File Utilities..."
  echo
fi
rm -f 1231235999 $$.touch
#
if mkdir _sh07541; then
  $echo 'x -' 'creating lock directory'
else
  $echo 'failed to create lock directory'
  exit 1
fi
# ============= e63a.tcl ==============
if test -f 'e63a.tcl' && test "$first_param" != -c; then
  $echo 'x -' SKIPPING 'e63a.tcl' '(file already exists)'
else
  $echo 'x -' extracting 'e63a.tcl' '(text)'
  sed 's/^X//' << 'SHAR_EOF' > 'e63a.tcl' &&
# Graphics & Visualization
# Spring 1997
#
# Homework 3
#
# Alexander Holmansky
#
X
X
# user interface command widget
source vtkInt.tcl
X
# create a rendering window and renderer
vtkRenderMaster rm;
set renWin [rm MakeRenderWindow];
set ren1 [$renWin MakeRenderer];
set iren [$renWin MakeRenderWindowInteractor];
X
vtkQuadric quad;
X  quad SetCoefficients 0.5 1 .2 0 .1 0 0 .2 0 0;
vtkSampleFunction sample;
X  sample SetSampleDimensions 20 20 20;
X  sample SetImplicitFunction quad;
X
# Construct 9 filters
vtkContourFilter contour1;
X  contour1 SetInput [sample GetOutput];
X  contour1 GenerateValues 1 0.0 0.12;
vtkContourFilter contour2;
X  contour2 SetInput [sample GetOutput];
X  contour2 GenerateValues 1 0.12 0.24;
vtkContourFilter contour3;
X  contour3 SetInput [sample GetOutput];
X  contour3 GenerateValues 1 0.24 0.36;
vtkContourFilter contour4;
X  contour4 SetInput [sample GetOutput];
X  contour4 GenerateValues 1 0.36 0.48;  
vtkContourFilter contour5;
X  contour5 SetInput [sample GetOutput];
X  contour5 GenerateValues 1 0.48 0.60;
vtkContourFilter contour6;
X  contour6 SetInput [sample GetOutput];
X  contour6 GenerateValues 1 0.60 0.72;
vtkContourFilter contour7;
X  contour7 SetInput [sample GetOutput];
X  contour7 GenerateValues 1 0.72 0.84;
vtkContourFilter contour8;
X  contour8 SetInput [sample GetOutput];
X  contour8 GenerateValues 1 0.84 0.96;
vtkContourFilter contour9;
X  contour9 SetInput [sample GetOutput];
X  contour9 GenerateValues 1 0.96 1.2;
X
# create mappers
vtkPolyMapper contMapper1;
X  contMapper1 SetInput [contour1 GetOutput];
X  contMapper1 SetScalarRange 0.0 1.2;
vtkPolyMapper contMapper2;
X  contMapper2 SetInput [contour2 GetOutput];
X  contMapper2 SetScalarRange 0.0 1.2;
vtkPolyMapper contMapper3;
X  contMapper3 SetInput [contour3 GetOutput];
X  contMapper3 SetScalarRange 0.0 1.2;
vtkPolyMapper contMapper4;
X  contMapper4 SetInput [contour4 GetOutput];
X  contMapper4 SetScalarRange 0.0 1.2;
vtkPolyMapper contMapper5;
X  contMapper5 SetInput [contour5 GetOutput];
X  contMapper5 SetScalarRange 0.0 1.2;
vtkPolyMapper contMapper6;
X  contMapper6 SetInput [contour6 GetOutput];
X  contMapper6 SetScalarRange 0.0 1.2;
vtkPolyMapper contMapper7;
X  contMapper7 SetInput [contour7 GetOutput];
X  contMapper7 SetScalarRange 0.0 1.2;
vtkPolyMapper contMapper8;
X  contMapper8 SetInput [contour8 GetOutput];
X  contMapper8 SetScalarRange 0.0 1.2;
vtkPolyMapper contMapper9;
X  contMapper9 SetInput [contour9 GetOutput];
X  contMapper9 SetScalarRange 0.0 1.2;
X
# create actors
vtkActor contActor1;
X  contActor1 SetMapper contMapper1;
X
vtkActor contActor2;
X  contActor2 SetMapper contMapper2;
X  contActor2 VisibilityOff;
vtkActor contActor3;
X  contActor3 SetMapper contMapper3;
X  contActor3 VisibilityOff;
vtkActor contActor4;
X  contActor4 SetMapper contMapper4;
X  contActor4 VisibilityOff;
vtkActor contActor5;
X  contActor5 SetMapper contMapper5;
X  contActor5 VisibilityOff;
vtkActor contActor6;
X  contActor6 SetMapper contMapper6;
X  contActor6 VisibilityOff;
vtkActor contActor7;
X  contActor7 SetMapper contMapper7;
X  contActor7 VisibilityOff;
vtkActor contActor8;
X  contActor8 SetMapper contMapper8;
X  contActor8 VisibilityOff;
vtkActor contActor9;
X  contActor9 SetMapper contMapper9;
X  contActor9 VisibilityOff;
X
# assign our actors to the renderer
$ren1 SetBackground 1 1 1;
$ren1 AddActors contActor1;
$ren1 AddActors contActor2;
$ren1 AddActors contActor3;
$ren1 AddActors contActor4;
$ren1 AddActors contActor5;
$ren1 AddActors contActor6;
$ren1 AddActors contActor7;
$ren1 AddActors contActor8;
$ren1 AddActors contActor9;
X
X
# enable user interface interactor
$iren SetUserMethod {wm deiconify .vtkInteract};
$iren Initialize;
X
# prevent the tk window from showing up then start the event loop
wm withdraw .
X
contActor1 VisibilityOff;
contActor2 VisibilityOn;
$renWin Render;
contActor2 VisibilityOff;
contActor3 VisibilityOn;
$renWin Render;
contActor3 VisibilityOff;
contActor4 VisibilityOn;
$renWin Render;
contActor4 VisibilityOff;
contActor5 VisibilityOn;
$renWin Render;
contActor5 VisibilityOff;
contActor6 VisibilityOn;
$renWin Render;
contActor6 VisibilityOff;
contActor7 VisibilityOn;
$renWin Render;
contActor7 VisibilityOff;
contActor8 VisibilityOn;
$renWin Render;
contActor8 VisibilityOff;
contActor9 VisibilityOn;
$renWin Render;
X
X
X
SHAR_EOF
  $shar_touch -am 0410210197 'e63a.tcl' &&
  chmod 0600 'e63a.tcl' ||
  $echo 'restore of' 'e63a.tcl' 'failed'
  if ( md5sum --help 2>&1 | grep 'sage: md5sum \[' ) >/dev/null 2>&1 \
  && ( md5sum --version 2>&1 | grep -v 'textutils 1.12' ) >/dev/null; then
    md5sum -c << SHAR_EOF >/dev/null 2>&1 \
    || $echo 'e63a.tcl:' 'MD5 check failed'
900a8ca796cf33543a5c3127f6c2661f  e63a.tcl
SHAR_EOF
  else
    shar_count="`LC_ALL= LC_CTYPE= LANG= wc -c < 'e63a.tcl'`"
    test 4258 -eq "$shar_count" ||
    $echo 'e63a.tcl:' 'original size' '4258,' 'current size' "$shar_count!"
  fi
fi
# ============= e63b.tcl ==============
if test -f 'e63b.tcl' && test "$first_param" != -c; then
  $echo 'x -' SKIPPING 'e63b.tcl' '(file already exists)'
else
  $echo 'x -' extracting 'e63b.tcl' '(text)'
  sed 's/^X//' << 'SHAR_EOF' > 'e63b.tcl' &&
# get the interactor ui
source vtkInt.tcl
X
# First create the render master
vtkRenderMaster rm;
X
# Now create the RenderWindow, Renderer
#
set renWin [rm MakeRenderWindow];
set ren1   [$renWin MakeRenderer];
set iren   [$renWin MakeRenderWindowInteractor];
X
#
# Load up the data
vtkStructuredPointsReader vol;
X    vol SetFilename "MRIdata.vtk"
X    vol DebugOn;
X
vtkMarchingCubes contour1;
X  contour1 SetInput [vol GetOutput];
X  contour1 GenerateValues 1 0.0 25.0;
vtkMarchingCubes contour2;
X  contour2 SetInput [vol GetOutput];
X  contour2 GenerateValues 1 25.0 50.0;
vtkMarchingCubes contour3;
X  contour3 SetInput [vol GetOutput];
X  contour3 GenerateValues 1 50.0 75.0;
vtkMarchingCubes contour4;
X  contour4 SetInput [vol GetOutput];
X  contour4 GenerateValues 1 75.0 100.0;
vtkMarchingCubes contour5;
X  contour5 SetInput [vol GetOutput];
X  contour5 GenerateValues 1 100.0 125.0;
vtkMarchingCubes contour6;
X  contour6 SetInput [vol GetOutput];
X  contour6 GenerateValues 1 125.0 150.0;
vtkMarchingCubes contour7;
X  contour7 SetInput [vol GetOutput];
X  contour7 GenerateValues 1 150.0 175.0;
vtkMarchingCubes contour8;
X  contour8 SetInput [vol GetOutput];
X  contour8 GenerateValues 1 175.0 200.0;
vtkMarchingCubes contour9;
X  contour9 SetInput [vol GetOutput];
X  contour9 GenerateValues 1 200.0 225.0;
vtkMarchingCubes contour10;
X  contour10 SetInput [vol GetOutput];
X  contour10 GenerateValues 1 225.0 255.0;
X
X
X
vtkPolyMapper volMapper1;
X  volMapper1 SetInput [contour1 GetOutput];
X  volMapper1 ScalarsVisibleOff;
vtkPolyMapper volMapper2;
X  volMapper2 SetInput [contour2 GetOutput];
X  volMapper2 ScalarsVisibleOff;
vtkPolyMapper volMapper3;
X  volMapper3 SetInput [contour2 GetOutput];
X  volMapper3 ScalarsVisibleOff;
vtkPolyMapper volMapper4;
X  volMapper4 SetInput [contour4 GetOutput];
X  volMapper4 ScalarsVisibleOff;
vtkPolyMapper volMapper5;
X  volMapper5 SetInput [contour5 GetOutput];
X  volMapper5 ScalarsVisibleOff;
vtkPolyMapper volMapper6;
X  volMapper6 SetInput [contour6 GetOutput];
X  volMapper6 ScalarsVisibleOff;
vtkPolyMapper volMapper7;
X  volMapper7 SetInput [contour7 GetOutput];
X  volMapper7 ScalarsVisibleOff;
vtkPolyMapper volMapper8;
X  volMapper8 SetInput [contour8 GetOutput];
X  volMapper8 ScalarsVisibleOff;
vtkPolyMapper volMapper9;
X  volMapper9 SetInput [contour9 GetOutput];
X  volMapper9 ScalarsVisibleOff;
vtkPolyMapper volMapper10;
X  volMapper10 SetInput [contour10 GetOutput];
X  volMapper10 ScalarsVisibleOff;
X
X
X
vtkActor volActor1;
X  volActor1 SetMapper volMapper1;
vtkActor volActor2;
X  volActor2 SetMapper volMapper2;
X  volActor2 VisibilityOff;
vtkActor volActor3;
X  volActor3 SetMapper volMapper3;
X  volActor3 VisibilityOff;
vtkActor volActor4;
X  volActor4 SetMapper volMapper4;
X  volActor4 VisibilityOff;
vtkActor volActor5;
X  volActor5 SetMapper volMapper5;
X  volActor5 VisibilityOff;
vtkActor volActor6;
X  volActor6 SetMapper volMapper6;
X  volActor6 VisibilityOff;
vtkActor volActor7;
X  volActor7 SetMapper volMapper7;
X  volActor7 VisibilityOff;
vtkActor volActor8;
X  volActor8 SetMapper volMapper8;
X  volActor8 VisibilityOff;
vtkActor volActor9;
X  volActor9 SetMapper volMapper9;
X  volActor9 VisibilityOff;
vtkActor volActor10;
X  volActor10 SetMapper volMapper10;
X  volActor10 VisibilityOff;
X  
X
vtkOutlineFilter outLine;
X  outLine SetInput [vol GetOutput];
X
vtkPolyMapper outMapper;
X  outMapper SetInput [outLine GetOutput];
X
vtkActor outActor;
X  outActor SetMapper outMapper;
X
# Add the actors to the renderer, set the background and size
#
$ren1 AddActors outActor;
X
$ren1 AddActors volActor1;
$ren1 AddActors volActor2;
$ren1 AddActors volActor3;
$ren1 AddActors volActor4;
$ren1 AddActors volActor5;
$ren1 AddActors volActor6;
$ren1 AddActors volActor7;
$ren1 AddActors volActor8;
$ren1 AddActors volActor9;
$ren1 AddActors volActor10;
X
X
$ren1 SetBackground 0 0 0;
$renWin SetSize 500 400;
$iren Initialize;
X
# render the image
#
$iren SetUserMethod {wm deiconify .vtkInteract};
$renWin Render;
X
# prevent the tk window from showing up then start the event loop
wm withdraw .
X
volActor1 VisibilityOff;
volActor2 VisibilityOn;
$renWin Render;
volActor2 VisibilityOff;
volActor3 VisibilityOn;
$renWin Render;
volActor3 VisibilityOff;
volActor4 VisibilityOn;
$renWin Render;
volActor4 VisibilityOff;
volActor5 VisibilityOn;
$renWin Render;
volActor5 VisibilityOff;
volActor6 VisibilityOn;
$renWin Render;
volActor6 VisibilityOff;
volActor7 VisibilityOn;
$renWin Render;
volActor7 VisibilityOff;
volActor8 VisibilityOn;
$renWin Render;
volActor8 VisibilityOff;
volActor9 VisibilityOn;
$renWin Render;
volActor9 VisibilityOff;
volActor10 VisibilityOn;
$renWin Render;
SHAR_EOF
  $shar_touch -am 0410215297 'e63b.tcl' &&
  chmod 0600 'e63b.tcl' ||
  $echo 'restore of' 'e63b.tcl' 'failed'
  if ( md5sum --help 2>&1 | grep 'sage: md5sum \[' ) >/dev/null 2>&1 \
  && ( md5sum --version 2>&1 | grep -v 'textutils 1.12' ) >/dev/null; then
    md5sum -c << SHAR_EOF >/dev/null 2>&1 \
    || $echo 'e63b.tcl:' 'MD5 check failed'
532a79a08a45edd68da53c191be667c8  e63b.tcl
SHAR_EOF
  else
    shar_count="`LC_ALL= LC_CTYPE= LANG= wc -c < 'e63b.tcl'`"
    test 4600 -eq "$shar_count" ||
    $echo 'e63b.tcl:' 'original size' '4600,' 'current size' "$shar_count!"
  fi
fi
# ============= e94hedge.tcl ==============
if test -f 'e94hedge.tcl' && test "$first_param" != -c; then
  $echo 'x -' SKIPPING 'e94hedge.tcl' '(file already exists)'
else
  $echo 'x -' extracting 'e94hedge.tcl' '(text)'
  sed 's/^X//' << 'SHAR_EOF' > 'e94hedge.tcl' &&
X
# get the interactor ui
source vtkInt.tcl
X
# create planes
# First create the render master
vtkRenderMaster rm;
X
# Now create the RenderWindow, Renderer and both Actors
#
set renWin [rm MakeRenderWindow];
set ren1   [$renWin MakeRenderer];
set iren [$renWin MakeRenderWindowInteractor];
X
# create pipeline
#
vtkPLOT3DReader pl3d;
X    pl3d SetXYZFilename "combxyz.bin"
X    pl3d SetQFilename "combq.bin"
X    pl3d SetScalarFunctionNumber 100;
X    pl3d SetVectorFunctionNumber 202;
X    pl3d Update;
X
vtkPlaneSource plane;
X    plane SetResolution 50 50;
vtkTransform transP1;
X    transP1 Translate 3.7 0.0 28.37;
X    transP1 Scale 5 5 5;
X    transP1 RotateY 90;
vtkTransformPolyFilter tpd1
X    tpd1 SetInput [plane GetOutput];
X    tpd1 SetTransform transP1;
vtkOutlineFilter outTpd1;
X    outTpd1 SetInput [tpd1 GetOutput];
vtkPolyMapper mapTpd1;
X    mapTpd1 SetInput [outTpd1 GetOutput];
vtkActor tpd1Actor;
X    tpd1Actor SetMapper mapTpd1;
X    [tpd1Actor GetProperty] SetColor 0 0 0;
X
vtkTransform transP2;
X    transP2 Translate 9.2 0.0 31.20;
X    transP2 Scale 5 5 5;
X    transP2 RotateY 90;
vtkTransformPolyFilter tpd2
X    tpd2 SetInput [plane GetOutput];
X    tpd2 SetTransform transP2;
vtkOutlineFilter outTpd2;
X    outTpd2 SetInput [tpd2 GetOutput];
vtkPolyMapper mapTpd2;
X    mapTpd2 SetInput [outTpd2 GetOutput];
vtkActor tpd2Actor;
X    tpd2Actor SetMapper mapTpd2;
X    [tpd2Actor GetProperty] SetColor 0 0 0;
X
vtkTransform transP3;
X    transP3 Translate 13.27 0.0 33.30;
X    transP3 Scale 5 5 5;
X    transP3 RotateY 90;
vtkTransformPolyFilter tpd3
X    tpd3 SetInput [plane GetOutput];
X    tpd3 SetTransform transP3;
vtkOutlineFilter outTpd3;
X    outTpd3 SetInput [tpd3 GetOutput];
vtkPolyMapper mapTpd3;
X    mapTpd3 SetInput [outTpd3 GetOutput];
vtkActor tpd3Actor;
X    tpd3Actor SetMapper mapTpd3;
X    [tpd3Actor GetProperty] SetColor 0 0 0;
X
vtkAppendPolyData appendF;
X    appendF AddInput [tpd1 GetOutput];
X    appendF AddInput [tpd2 GetOutput];
X    appendF AddInput [tpd3 GetOutput];
X
vtkProbeFilter probe;
X    probe SetInput [appendF GetOutput];
X    probe SetSource [pl3d GetOutput];
X
vtkHedgeHog oriLines;
X	oriLines SetInput [probe GetOutput];
X	oriLines SetScaleFactor 0.01;
X	
vtkPolyMapper contourMapper;
X    contourMapper SetInput [oriLines GetOutput];
X    eval contourMapper SetScalarRange [[pl3d GetOutput] GetScalarRange];
X    
vtkActor planeActor;
X    planeActor SetMapper contourMapper;
X
vtkStructuredGridOutlineFilter outline;
X    outline SetInput [pl3d GetOutput];
vtkPolyMapper outlineMapper;
X    outlineMapper SetInput [outline GetOutput];
vtkActor outlineActor;
X    outlineActor SetMapper outlineMapper;
X    [outlineActor GetProperty] SetColor 0 0 0;
X
$ren1 AddActors outlineActor;
$ren1 AddActors planeActor;
$ren1 AddActors tpd1Actor;
$ren1 AddActors tpd2Actor;
$ren1 AddActors tpd3Actor;
$ren1 SetBackground 1 1 1;
$renWin SetSize 500 500;
$iren Initialize;
X
set cam1 [$ren1 GetActiveCamera];
$cam1 SetClippingRange 3.95297 50;
$cam1 SetFocalPoint 8.88908 0.595038 29.3342;
$cam1 SetPosition -12.3332 31.7479 41.2387;
$cam1 CalcViewPlaneNormal;
$cam1 SetViewUp 0.060772 -0.319905 0.945498;
X
# render the image
#
$iren SetUserMethod {wm deiconify .vtkInteract};
$renWin Render;
X
# prevent the tk window from showing up then start the event loop
wm withdraw .
X
SHAR_EOF
  $shar_touch -am 0410224297 'e94hedge.tcl' &&
  chmod 0600 'e94hedge.tcl' ||
  $echo 'restore of' 'e94hedge.tcl' 'failed'
  if ( md5sum --help 2>&1 | grep 'sage: md5sum \[' ) >/dev/null 2>&1 \
  && ( md5sum --version 2>&1 | grep -v 'textutils 1.12' ) >/dev/null; then
    md5sum -c << SHAR_EOF >/dev/null 2>&1 \
    || $echo 'e94hedge.tcl:' 'MD5 check failed'
ec4c37421e9c7438c5356a45d8ab0734  e94hedge.tcl
SHAR_EOF
  else
    shar_count="`LC_ALL= LC_CTYPE= LANG= wc -c < 'e94hedge.tcl'`"
    test 3284 -eq "$shar_count" ||
    $echo 'e94hedge.tcl:' 'original size' '3284,' 'current size' "$shar_count!"
  fi
fi
# ============= e94stream.tcl ==============
if test -f 'e94stream.tcl' && test "$first_param" != -c; then
  $echo 'x -' SKIPPING 'e94stream.tcl' '(file already exists)'
else
  $echo 'x -' extracting 'e94stream.tcl' '(text)'
  sed 's/^X//' << 'SHAR_EOF' > 'e94stream.tcl' &&
# Uncomment this line if using Vtk 1.3 and Win95
# load vtktcl;
X
# get the interactor ui
source vtkInt.tcl
X
# create planes
# First create the render master
vtkRenderMaster rm;
X
# Now create the RenderWindow, Renderer and both Actors
#
set renWin [rm MakeRenderWindow];
set ren1   [$renWin MakeRenderer];
set iren [$renWin MakeRenderWindowInteractor];
X
# create pipeline
#
vtkPLOT3DReader pl3d;
X    pl3d SetXYZFilename "combxyz.bin"
X    pl3d SetQFilename "combq.bin"
X    pl3d SetScalarFunctionNumber 100;
X    pl3d SetVectorFunctionNumber 202;
X    pl3d Update;
X
vtkPointSource ptsrc1;
X	ptsrc1 SetNumberOfPoints 25;
X	eval ptsrc1 SetCenter 3.7 0.0 28.37;
X	ptsrc1 SetRadius 0.5;
vtkStreamLine strLine1; 
X	strLine1 SetInput [pl3d GetOutput];
X	strLine1 SetSource [ptsrc1 GetOutput];
X	strLine1 SetStepLength 0.1;
X	strLine1 SetMaximumPropagationTime 500;
X	strLine1 Update;
vtkPolyMapper streamMapper1;
X    streamMapper1 SetInput [strLine1 GetOutput];
X    eval streamMapper1 SetScalarRange [[pl3d GetOutput] GetScalarRange];    
vtkActor streamActor1;
X    streamActor1 SetMapper streamMapper1;
X
X
vtkPointSource ptsrc2;
X	ptsrc2 SetNumberOfPoints 25;
X	eval ptsrc2 SetCenter 9.2 0.0 31.20;
X	ptsrc2 SetRadius 0.5;
vtkStreamLine strLine2; # DataSetToPoly
X	strLine2 SetInput [pl3d GetOutput];
X	strLine2 SetSource [ptsrc2 GetOutput];
X	strLine2 SetStepLength 0.1;
X	strLine2 SetMaximumPropagationTime 500;
X	strLine2 Update;
vtkPolyMapper streamMapper2;
X    streamMapper2 SetInput [strLine2 GetOutput];
X    eval streamMapper2 SetScalarRange [[pl3d GetOutput] GetScalarRange];    
vtkActor streamActor2;
X    streamActor2 SetMapper streamMapper2;
X
X
vtkPointSource ptsrc3;
X	ptsrc3 SetNumberOfPoints 25;
X	eval ptsrc3 SetCenter 13.27 0.0 33.30;
X	ptsrc3 SetRadius 0.5;
vtkStreamLine strLine3;
X	strLine3 SetInput [pl3d GetOutput];
X	strLine3 SetSource [ptsrc3 GetOutput];
X	strLine3 SetStepLength 0.1;
X	strLine3 SetMaximumPropagationTime 500;
X	strLine3 Update;
vtkPolyMapper streamMapper3;
X    streamMapper3 SetInput [strLine3 GetOutput];
X    eval streamMapper3 SetScalarRange [[pl3d GetOutput] GetScalarRange];    
vtkActor streamActor3;
X    streamActor3 SetMapper streamMapper3;
X
X
vtkStructuredGridOutlineFilter outline;
X    outline SetInput [pl3d GetOutput];
vtkPolyMapper outlineMapper;
X    outlineMapper SetInput [outline GetOutput];
vtkActor outlineActor;
X    outlineActor SetMapper outlineMapper;
X    [outlineActor GetProperty] SetColor 0 0 0;
X
$ren1 AddActors outlineActor;
$ren1 AddActors streamActor1;
$ren1 AddActors streamActor2;
$ren1 AddActors streamActor3;
X
$ren1 SetBackground 1 1 1;
$renWin SetSize 500 500;
$iren Initialize;
X
set cam1 [$ren1 GetActiveCamera];
$cam1 SetClippingRange 3.95297 50;
$cam1 SetFocalPoint 8.88908 0.595038 29.3342;
$cam1 SetPosition -12.3332 31.7479 41.2387;
$cam1 CalcViewPlaneNormal;
$cam1 SetViewUp 0.060772 -0.319905 0.945498;
X
# render the image
#
$iren SetUserMethod {wm deiconify .vtkInteract};
$renWin Render;
X
# prevent the tk window from showing up then start the event loop
wm withdraw .
X
SHAR_EOF
  $shar_touch -am 0415220897 'e94stream.tcl' &&
  chmod 0600 'e94stream.tcl' ||
  $echo 'restore of' 'e94stream.tcl' 'failed'
  if ( md5sum --help 2>&1 | grep 'sage: md5sum \[' ) >/dev/null 2>&1 \
  && ( md5sum --version 2>&1 | grep -v 'textutils 1.12' ) >/dev/null; then
    md5sum -c << SHAR_EOF >/dev/null 2>&1 \
    || $echo 'e94stream.tcl:' 'MD5 check failed'
9b8294f58b71445e04ddcd9e0b8e4390  e94stream.tcl
SHAR_EOF
  else
    shar_count="`LC_ALL= LC_CTYPE= LANG= wc -c < 'e94stream.tcl'`"
    test 3016 -eq "$shar_count" ||
    $echo 'e94stream.tcl:' 'original size' '3016,' 'current size' "$shar_count!"
  fi
fi
# ============= e94vnorm.tcl ==============
if test -f 'e94vnorm.tcl' && test "$first_param" != -c; then
  $echo 'x -' SKIPPING 'e94vnorm.tcl' '(file already exists)'
else
  $echo 'x -' extracting 'e94vnorm.tcl' '(text)'
  sed 's/^X//' << 'SHAR_EOF' > 'e94vnorm.tcl' &&
# Uncomment this line if using Vtk 1.3 & Win95
#load vtktcl;
X
# get the interactor ui
source vtkInt.tcl
X
# create planes
# First create the render master
vtkRenderMaster rm;
X
# Now create the RenderWindow, Renderer and both Actors
#
set renWin [rm MakeRenderWindow];
set ren1   [$renWin MakeRenderer];
set iren [$renWin MakeRenderWindowInteractor];
X
# create pipeline
#
vtkPLOT3DReader pl3d;
X    pl3d SetXYZFilename "combxyz.bin"
X    pl3d SetQFilename "combq.bin"
X    pl3d SetScalarFunctionNumber 100;
X    pl3d SetVectorFunctionNumber 202;
X    pl3d Update;
X
vtkPlaneSource plane;
X    plane SetResolution 50 50;
vtkTransform transP1;
X    transP1 Translate 3.7 0.0 28.37;
X    transP1 Scale 5 5 5;
X    transP1 RotateY 90;
vtkTransformPolyFilter tpd1;
X    tpd1 SetInput [plane GetOutput];
X    tpd1 SetTransform transP1;
vtkOutlineFilter outTpd1;
X    outTpd1 SetInput [tpd1 GetOutput];
vtkPolyMapper mapTpd1;
X    mapTpd1 SetInput [outTpd1 GetOutput];
vtkActor tpd1Actor;
X    tpd1Actor SetMapper mapTpd1;
X    [tpd1Actor GetProperty] SetColor 0 0 0;
X
vtkTransform transP2;
X    transP2 Translate 9.2 0.0 31.20;
X    transP2 Scale 5 5 5;
X    transP2 RotateY 90;
vtkTransformPolyFilter tpd2;
X    tpd2 SetInput [plane GetOutput];
X    tpd2 SetTransform transP2;
vtkOutlineFilter outTpd2;
X    outTpd2 SetInput [tpd2 GetOutput];
vtkPolyMapper mapTpd2;
X    mapTpd2 SetInput [outTpd2 GetOutput];
vtkActor tpd2Actor;
X    tpd2Actor SetMapper mapTpd2;
X    [tpd2Actor GetProperty] SetColor 0 0 0;
X
vtkTransform transP3;
X    transP3 Translate 13.27 0.0 33.30;
X    transP3 Scale 5 5 5;
X    transP3 RotateY 90;
vtkTransformPolyFilter tpd3;
X    tpd3 SetInput [plane GetOutput];
X    tpd3 SetTransform transP3;
vtkOutlineFilter outTpd3;
X    outTpd3 SetInput [tpd3 GetOutput];
vtkPolyMapper mapTpd3;
X    mapTpd3 SetInput [outTpd3 GetOutput];
vtkActor tpd3Actor;
X    tpd3Actor SetMapper mapTpd3;
X    [tpd3Actor GetProperty] SetColor 0 0 0;
X
vtkAppendPolyData appendF;
X    appendF AddInput [tpd1 GetOutput];
X    appendF AddInput [tpd2 GetOutput];
X    appendF AddInput [tpd3 GetOutput];
X
vtkProbeFilter probe;
X    probe SetInput [appendF GetOutput];
X    probe SetSource [pl3d GetOutput];
X
# create a VectorNorm filter
vtkVectorNorm vectNorm;
X	vectNorm SetInput [probe GetOutput];
X	vectNorm NormalizeOn;
X
# create vector normals
vtkGeometryFilter ds2poly;
X    ds2poly SetInput [vectNorm GetOutput];
vtkPolyNormals normals;
X    normals SetInput [ds2poly GetOutput];
X    normals SetFeatureAngle 60;
X
vtkPolyMapper planeMapper;
X    planeMapper SetInput [normals GetOutput];
X    eval planeMapper SetScalarRange [[pl3d GetOutput] GetScalarRange];
X
vtkActor planeActor;
X    planeActor SetMapper planeMapper;
X
vtkStructuredGridOutlineFilter outline;
X    outline SetInput [pl3d GetOutput];
vtkPolyMapper outlineMapper;
X    outlineMapper SetInput [outline GetOutput];
vtkActor outlineActor;
X    outlineActor SetMapper outlineMapper;
X    [outlineActor GetProperty] SetColor 0 0 0;
X
$ren1 AddActors outlineActor;
$ren1 AddActors planeActor;
$ren1 AddActors tpd1Actor;
$ren1 AddActors tpd2Actor;
$ren1 AddActors tpd3Actor;
$ren1 SetBackground 1 1 1;
$renWin SetSize 500 500;
$iren Initialize;
X
set cam1 [$ren1 GetActiveCamera];
$cam1 SetClippingRange 3.95297 50;
$cam1 SetFocalPoint 8.88908 0.595038 29.3342;
$cam1 SetPosition -12.3332 31.7479 41.2387;
$cam1 CalcViewPlaneNormal;
$cam1 SetViewUp 0.060772 -0.319905 0.945498;
X
# render the image
#
$iren SetUserMethod {wm deiconify .vtkInteract};
$renWin Render;
X
# prevent the tk window from showing up then start the event loop
wm withdraw .
X
SHAR_EOF
  $shar_touch -am 0415221197 'e94vnorm.tcl' &&
  chmod 0600 'e94vnorm.tcl' ||
  $echo 'restore of' 'e94vnorm.tcl' 'failed'
  if ( md5sum --help 2>&1 | grep 'sage: md5sum \[' ) >/dev/null 2>&1 \
  && ( md5sum --version 2>&1 | grep -v 'textutils 1.12' ) >/dev/null; then
    md5sum -c << SHAR_EOF >/dev/null 2>&1 \
    || $echo 'e94vnorm.tcl:' 'MD5 check failed'
cc37c4ad9549616ff6709301db17534e  e94vnorm.tcl
SHAR_EOF
  else
    shar_count="`LC_ALL= LC_CTYPE= LANG= wc -c < 'e94vnorm.tcl'`"
    test 3550 -eq "$shar_count" ||
    $echo 'e94vnorm.tcl:' 'original size' '3550,' 'current size' "$shar_count!"
  fi
fi
# ============= e94warp.tcl ==============
if test -f 'e94warp.tcl' && test "$first_param" != -c; then
  $echo 'x -' SKIPPING 'e94warp.tcl' '(file already exists)'
else
  $echo 'x -' extracting 'e94warp.tcl' '(text)'
  sed 's/^X//' << 'SHAR_EOF' > 'e94warp.tcl' &&
# Uncomment this line if using Vtk 1.3 & Win95
#load vtktcl;
X
# get the interactor ui
source vtkInt.tcl
X
# create planes
# First create the render master
vtkRenderMaster rm;
X
# Now create the RenderWindow, Renderer and both Actors
#
set renWin [rm MakeRenderWindow];
set ren1   [$renWin MakeRenderer];
set iren [$renWin MakeRenderWindowInteractor];
X
# create pipeline
#
vtkPLOT3DReader pl3d;
X    pl3d SetXYZFilename "combxyz.bin"
X    pl3d SetQFilename "combq.bin"
X    pl3d SetScalarFunctionNumber 100;
X    pl3d SetVectorFunctionNumber 202;
X    pl3d Update;
X
vtkPlaneSource plane;
X    plane SetResolution 50 50;
vtkTransform transP1;
X    transP1 Translate 3.7 0.0 28.37;
X    transP1 Scale 5 5 5;
X    transP1 RotateY 90;
vtkTransformPolyFilter tpd1;
X    tpd1 SetInput [plane GetOutput];
X    tpd1 SetTransform transP1;
vtkOutlineFilter outTpd1;
X    outTpd1 SetInput [tpd1 GetOutput];
vtkPolyMapper mapTpd1;
X    mapTpd1 SetInput [outTpd1 GetOutput];
vtkActor tpd1Actor;
X    tpd1Actor SetMapper mapTpd1;
X    [tpd1Actor GetProperty] SetColor 0 0 0;
X
vtkTransform transP2;
X    transP2 Translate 9.2 0.0 31.20;
X    transP2 Scale 5 5 5;
X    transP2 RotateY 90;
vtkTransformPolyFilter tpd2;
X    tpd2 SetInput [plane GetOutput];
X    tpd2 SetTransform transP2;
vtkOutlineFilter outTpd2;
X    outTpd2 SetInput [tpd2 GetOutput];
vtkPolyMapper mapTpd2;
X    mapTpd2 SetInput [outTpd2 GetOutput];
vtkActor tpd2Actor;
X    tpd2Actor SetMapper mapTpd2;
X    [tpd2Actor GetProperty] SetColor 0 0 0;
X
vtkTransform transP3;
X    transP3 Translate 13.27 0.0 33.30;
X    transP3 Scale 5 5 5;
X    transP3 RotateY 90;
vtkTransformPolyFilter tpd3;
X    tpd3 SetInput [plane GetOutput];
X    tpd3 SetTransform transP3;
vtkOutlineFilter outTpd3;
X    outTpd3 SetInput [tpd3 GetOutput];
vtkPolyMapper mapTpd3;
X    mapTpd3 SetInput [outTpd3 GetOutput];
vtkActor tpd3Actor;
X    tpd3Actor SetMapper mapTpd3;
X    [tpd3Actor GetProperty] SetColor 0 0 0;
X
vtkAppendPolyData appendF;
X    appendF AddInput [tpd1 GetOutput];
X    appendF AddInput [tpd2 GetOutput];
X    appendF AddInput [tpd3 GetOutput];
X
vtkProbeFilter probe;
X    probe SetInput [appendF GetOutput];
X    probe SetSource [pl3d GetOutput];
X
vtkGeometryFilter geo;
X	geo SetInput [probe GetOutput];
X
vtkWarpVector warp;
X    warp SetInput [geo GetOutput];
X    warp SetScaleFactor 0.005;
X
vtkDataSetMapper planeMapper;
X    planeMapper SetInput [warp GetOutput];
X    eval planeMapper SetScalarRange [[pl3d GetOutput] GetScalarRange];
X
vtkActor planeActor;
X    planeActor SetMapper planeMapper;
X
vtkStructuredGridOutlineFilter outline;
X    outline SetInput [pl3d GetOutput];
vtkPolyMapper outlineMapper;
X    outlineMapper SetInput [outline GetOutput];
vtkActor outlineActor;
X    outlineActor SetMapper outlineMapper;
X    [outlineActor GetProperty] SetColor 0 0 0;
X
$ren1 AddActors outlineActor;
$ren1 AddActors planeActor;
$ren1 AddActors tpd1Actor;
$ren1 AddActors tpd2Actor;
$ren1 AddActors tpd3Actor;
$ren1 SetBackground 1 1 1;
$renWin SetSize 500 500;
$iren Initialize;
X
set cam1 [$ren1 GetActiveCamera];
$cam1 SetClippingRange 3.95297 50;
$cam1 SetFocalPoint 8.88908 0.595038 29.3342;
$cam1 SetPosition -12.3332 31.7479 41.2387;
$cam1 CalcViewPlaneNormal;
$cam1 SetViewUp 0.060772 -0.319905 0.945498;
X
# render the image
#
$iren SetUserMethod {wm deiconify .vtkInteract};
$renWin Render;
X
# prevent the tk window from showing up then start the event loop
wm withdraw .
X
SHAR_EOF
  $shar_touch -am 0415221397 'e94warp.tcl' &&
  chmod 0600 'e94warp.tcl' ||
  $echo 'restore of' 'e94warp.tcl' 'failed'
  if ( md5sum --help 2>&1 | grep 'sage: md5sum \[' ) >/dev/null 2>&1 \
  && ( md5sum --version 2>&1 | grep -v 'textutils 1.12' ) >/dev/null; then
    md5sum -c << SHAR_EOF >/dev/null 2>&1 \
    || $echo 'e94warp.tcl:' 'MD5 check failed'
375ac444f71f478dc09da530863b5278  e94warp.tcl
SHAR_EOF
  else
    shar_count="`LC_ALL= LC_CTYPE= LANG= wc -c < 'e94warp.tcl'`"
    test 3386 -eq "$shar_count" ||
    $echo 'e94warp.tcl:' 'original size' '3386,' 'current size' "$shar_count!"
  fi
fi
rm -fr _sh07541
exit 0

From ???@??? Wed Apr 16 07:18:29 1997
Received: from vccsouth-14.its.rpi.edu (jainh@vccsouth-14.its.rpi.edu [128.113.28.24])
	by mail1.its.rpi.edu (8.8.5/8.8.5) with ESMTP id WAA71762
	for <citrit@rpi.edu>; Tue, 15 Apr 1997 22:23:11 -0400
From: Hemant Jain <jainh>
Received: (jainh@localhost) by vccsouth-14.its.rpi.edu (951211.SGI.8.6.12.PATCH1042/8.6.4) id WAA24362 for citrit@rpi.edu; Tue, 15 Apr 1997 22:23:09 -0400
Date: Tue, 15 Apr 1997 22:23:09 -0400
Message-Id: <199704160223.WAA24362@vccsouth-14.its.rpi.edu>
To: citrit@rpi.edu
Subject: HomeWork 3
X-UIDL: d7e880b10cc6fc7d9ce73defc54219b5

#!/bin/sh
# This is a shell archive (produced by GNU sharutils 4.2).
# To extract the files from this archive, save it to some FILE, remove
# everything before the `!/bin/sh' line above, then type `sh FILE'.
#
# Made on 1997-04-15 22:22 EDT by <jainh@vccsouth-14>.
# Source directory was `/afs/rpi.edu/home/92/jainh/courses/GraphVis/hw3/tmp'.
#
# Existing files will *not* be overwritten unless `-c' is specified.
#
# This shar contains:
# length mode       name
# ------ ---------- ------------------------------------------
#   1763 -rw------- MRIDec.tcl
#   1554 -rw------- MRIHead.tcl
#   3446 -rw------- probecomHH.tcl
#   2030 -rw------- probecomSL.tcl
#   3598 -rw------- probecomVD.tcl
#   3428 -rw------- probecomVN.tcl
#   3835 -rw------- probecomWP.tcl
#   1379 -rw------- quad.tcl
#   1689 -rw------- quadDec.tcl
#   2311 -rw------- vtkInt.tcl
#
save_IFS="${IFS}"
IFS="${IFS}:"
gettext_dir=FAILED
locale_dir=FAILED
first_param="$1"
for dir in $PATH
do
  if test "$gettext_dir" = FAILED && test -f $dir/gettext \
     && ($dir/gettext --version >/dev/null 2>&1)
  then
    set `$dir/gettext --version 2>&1`
    if test "$3" = GNU
    then
      gettext_dir=$dir
    fi
  fi
  if test "$locale_dir" = FAILED && test -f $dir/shar \
     && ($dir/shar --print-text-domain-dir >/dev/null 2>&1)
  then
    locale_dir=`$dir/shar --print-text-domain-dir`
  fi
done
IFS="$save_IFS"
if test "$locale_dir" = FAILED || test "$gettext_dir" = FAILED
then
  echo=echo
else
  TEXTDOMAINDIR=$locale_dir
  export TEXTDOMAINDIR
  TEXTDOMAIN=sharutils
  export TEXTDOMAIN
  echo="$gettext_dir/gettext -s"
fi
touch -am 1231235999 $$.touch >/dev/null 2>&1
if test ! -f 1231235999 && test -f $$.touch; then
  shar_touch=touch
else
  shar_touch=:
  echo
  $echo 'WARNING: not restoring timestamps.  Consider getting and'
  $echo "installing GNU \`touch', distributed in GNU File Utilities..."
  echo
fi
rm -f 1231235999 $$.touch
#
if mkdir _sh24337; then
  $echo 'x -' 'creating lock directory'
else
  $echo 'failed to create lock directory'
  exit 1
fi
# ============= MRIDec.tcl ==============
if test -f 'MRIDec.tcl' && test "$first_param" != -c; then
  $echo 'x -' SKIPPING 'MRIDec.tcl' '(file already exists)'
else
  $echo 'x -' extracting 'MRIDec.tcl' '(text)'
  sed 's/^X//' << 'SHAR_EOF' > 'MRIDec.tcl' &&
# get the interactor ui
source vtkInt.tcl
X
# First create the render master
vtkRenderMaster rm;
X
# Now create the RenderWindow, Renderer
#
set renWin [rm MakeRenderWindow];
set ren1   [$renWin MakeRenderer];
set iren   [$renWin MakeRenderWindowInteractor];
X
#
# Load up the data
vtkStructuredPointsReader vol;
X    vol SetFilename "/home/62/citrit/public/Spring97/examples/Vtk/MRIdata.vtk"
#    vol DebugOn;
X    vol Update;
X
vtkMarchingCubes contour;
X  contour SetInput [vol GetOutput];
X  contour SetValue 0 250.0;
X
vtkTriangleFilter tri;
X    tri SetInput [contour GetOutput];
vtkDecimate deci;
X    deci SetInput [tri GetOutput];
X    deci SetTargetReduction 0.9;
X    deci SetAspectRatio 20;
X    deci SetInitialError 0.0005;
X    deci SetErrorIncrement 0.001;
X    deci SetMaximumIterations 2;
X    deci SetInitialFeatureAngle 30;
#    deci DebugOn;
X
vtkConnectivityFilter connect;
X    connect SetInput [deci GetOutput];
X    connect ExtractLargestRegion;
vtkDataSetMapper volMapper;
X    volMapper SetInput [connect GetOutput];
X    volMapper ScalarsVisibleOff;
X
vtkActor volActor;
X  volActor SetMapper volMapper;
X
vtkOutlineFilter outLine;
X  outLine SetInput [vol GetOutput];
X
vtkPolyMapper outMapper;
X  outMapper SetInput [outLine GetOutput];
X
vtkActor outActor;
X  outActor SetMapper outMapper;
X
# Add the actors to the renderer, set the background and size
#
$ren1 AddActors outActor;
$ren1 AddActors volActor;
$ren1 SetBackground 0 0 0;
$renWin SetSize 500 400;
$iren Initialize;
X
# render the image
#
$iren SetUserMethod {wm deiconify .vtkInteract};
X
X for {set j 0} {$j < 20} {incr j} {
X  set value [expr 25.0 + ($j)*(220.0/19.0)];
X  contour SetValue 0 $value;
X  $renWin Render;
X }
X
X
# prevent the tk window from showing up then start the event loop
wm withdraw .
X
SHAR_EOF
  $shar_touch -am 0415221797 'MRIDec.tcl' &&
  chmod 0600 'MRIDec.tcl' ||
  $echo 'restore of' 'MRIDec.tcl' 'failed'
  if ( md5sum --help 2>&1 | grep 'sage: md5sum \[' ) >/dev/null 2>&1 \
  && ( md5sum --version 2>&1 | grep -v 'textutils 1.12' ) >/dev/null; then
    md5sum -c << SHAR_EOF >/dev/null 2>&1 \
    || $echo 'MRIDec.tcl:' 'MD5 check failed'
194462ccae198e47dca75b4eb2dad79e  MRIDec.tcl
SHAR_EOF
  else
    shar_count="`LC_ALL= LC_CTYPE= LANG= wc -c < 'MRIDec.tcl'`"
    test 1763 -eq "$shar_count" ||
    $echo 'MRIDec.tcl:' 'original size' '1763,' 'current size' "$shar_count!"
  fi
fi
# ============= MRIHead.tcl ==============
if test -f 'MRIHead.tcl' && test "$first_param" != -c; then
  $echo 'x -' SKIPPING 'MRIHead.tcl' '(file already exists)'
else
  $echo 'x -' extracting 'MRIHead.tcl' '(text)'
  sed 's/^X//' << 'SHAR_EOF' > 'MRIHead.tcl' &&
# get the interactor ui
source vtkInt.tcl
X
# First create the render master
vtkRenderMaster rm;
X
# Now create the RenderWindow, Renderer
#
set renWin [rm MakeRenderWindow];
set ren1   [$renWin MakeRenderer];
set iren   [$renWin MakeRenderWindowInteractor];
X
#
# Load up the data
vtkStructuredPointsReader vol;
X    vol SetFilename "/home/62/citrit/public/Spring97/examples/Vtk/MRIdata.vtk"
#   vol DebugOn;
X
vtkMarchingCubes contour;
X  contour SetInput [vol GetOutput];
X  contour SetValue 0 250.0;
X
vtkConnectivityFilter connect;
X    connect SetInput [contour GetOutput];
X    connect ExtractLargestRegion;
vtkDataSetMapper volMapper;
X    volMapper SetInput [connect GetOutput];
X    volMapper ScalarsVisibleOff;
X
#vtkPolyMapper volMapper;
# volMapper SetInput [contour GetOutput];
# volMapper ScalarsVisibleOff;
X
vtkActor volActor;
X  volActor SetMapper volMapper;
X
vtkOutlineFilter outLine;
X  outLine SetInput [vol GetOutput];
X
vtkPolyMapper outMapper;
X  outMapper SetInput [outLine GetOutput];
X
vtkActor outActor;
X  outActor SetMapper outMapper;
X
# Add the actors to the renderer, set the background and size
#
$ren1 AddActors outActor;
$ren1 AddActors volActor;
$ren1 SetBackground 0 0 0;
$renWin SetSize 500 400;
$iren Initialize;
X
# render the image
#
$iren SetUserMethod {wm deiconify .vtkInteract};
X
for {set k 0} {$k < 2} {incr k} {
X for {set j 0} {$j < 20} {incr j} {
X  set value [expr 35.0 + ($j)*(220.0/19.0)];
X  contour SetValue 0 $value;
X  $renWin Render;
X }
}
X
X
# prevent the tk window from showing up then start the event loop
wm withdraw .
X
SHAR_EOF
  $shar_touch -am 0415221797 'MRIHead.tcl' &&
  chmod 0600 'MRIHead.tcl' ||
  $echo 'restore of' 'MRIHead.tcl' 'failed'
  if ( md5sum --help 2>&1 | grep 'sage: md5sum \[' ) >/dev/null 2>&1 \
  && ( md5sum --version 2>&1 | grep -v 'textutils 1.12' ) >/dev/null; then
    md5sum -c << SHAR_EOF >/dev/null 2>&1 \
    || $echo 'MRIHead.tcl:' 'MD5 check failed'
94364e7cfe9644e29eb9537716312db9  MRIHead.tcl
SHAR_EOF
  else
    shar_count="`LC_ALL= LC_CTYPE= LANG= wc -c < 'MRIHead.tcl'`"
    test 1554 -eq "$shar_count" ||
    $echo 'MRIHead.tcl:' 'original size' '1554,' 'current size' "$shar_count!"
  fi
fi
# ============= probecomHH.tcl ==============
if test -f 'probecomHH.tcl' && test "$first_param" != -c; then
  $echo 'x -' SKIPPING 'probecomHH.tcl' '(file already exists)'
else
  $echo 'x -' extracting 'probecomHH.tcl' '(text)'
  sed 's/^X//' << 'SHAR_EOF' > 'probecomHH.tcl' &&
# probe and Hedgehog filters
X
X
# get the interactor ui
source vtkInt.tcl
X
# create planes
# First create the render master
vtkRenderMaster rm;
X
# Now create the RenderWindow, Renderer and both Actors
#
set renWin [rm MakeRenderWindow];
set ren1   [$renWin MakeRenderer];
set iren [$renWin MakeRenderWindowInteractor];
X
# create pipeline
#
vtkPLOT3DReader pl3d;
X    pl3d SetXYZFilename "/home/62/citrit/public/Spring97/examples/Vtk/COMBXYZ.BIN"
X    pl3d SetQFilename "/home/62/citrit/public/Spring97/examples/Vtk/COMBQ.BIN"
X    pl3d SetScalarFunctionNumber 100;
X    pl3d SetVectorFunctionNumber 202;
X    pl3d Update;
X
vtkPlaneSource plane;
X    plane SetResolution 50 50;
vtkTransform transP1;
X    transP1 Translate 3.7 0.0 28.37;
X    transP1 Scale 5 5 5;
X    transP1 RotateY 90;
vtkTransformPolyFilter tpd1
X    tpd1 SetInput [plane GetOutput];
X    tpd1 SetTransform transP1;
vtkOutlineFilter outTpd1;
X    outTpd1 SetInput [tpd1 GetOutput];
vtkPolyMapper mapTpd1;
X    mapTpd1 SetInput [outTpd1 GetOutput];
vtkActor tpd1Actor;
X    tpd1Actor SetMapper mapTpd1;
X    [tpd1Actor GetProperty] SetColor 0 0 0;
X
vtkTransform transP2;
X    transP2 Translate 9.2 0.0 31.20;
X    transP2 Scale 5 5 5;
X    transP2 RotateY 90;
vtkTransformPolyFilter tpd2
X    tpd2 SetInput [plane GetOutput];
X    tpd2 SetTransform transP2;
vtkOutlineFilter outTpd2;
X    outTpd2 SetInput [tpd2 GetOutput];
vtkPolyMapper mapTpd2;
X    mapTpd2 SetInput [outTpd2 GetOutput];
vtkActor tpd2Actor;
X    tpd2Actor SetMapper mapTpd2;
X    [tpd2Actor GetProperty] SetColor 0 0 0;
X
vtkTransform transP3;
X    transP3 Translate 13.27 0.0 33.30;
X    transP3 Scale 5 5 5;
X    transP3 RotateY 90;
vtkTransformPolyFilter tpd3
X    tpd3 SetInput [plane GetOutput];
X    tpd3 SetTransform transP3;
vtkOutlineFilter outTpd3;
X    outTpd3 SetInput [tpd3 GetOutput];
vtkPolyMapper mapTpd3;
X    mapTpd3 SetInput [outTpd3 GetOutput];
vtkActor tpd3Actor;
X    tpd3Actor SetMapper mapTpd3;
X    [tpd3Actor GetProperty] SetColor 0 0 0;
X
vtkAppendPolyData appendF;
X    appendF AddInput [tpd1 GetOutput];
X    appendF AddInput [tpd2 GetOutput];
X    appendF AddInput [tpd3 GetOutput];
X
vtkProbeFilter probe;
X    probe SetInput [appendF GetOutput];
X    probe SetSource [pl3d GetOutput];
X
vtkHedgeHog hhog;
X    hhog SetInput [probe GetOutput];
X    hhog SetScaleFactor 0.007;
vtkLookupTable lut;
X    lut Build;
vtkPolyMapper hhogMapper;
X    hhogMapper SetInput [hhog GetOutput];
X    eval hhogMapper SetScalarRange [[pl3d GetOutput] GetScalarRange];
X    hhogMapper SetLookupTable lut;
vtkActor hhogActor;
X    hhogActor SetMapper hhogMapper;
X
X
vtkStructuredGridOutlineFilter outline;
X    outline SetInput [pl3d GetOutput];
vtkPolyMapper outlineMapper;
X    outlineMapper SetInput [outline GetOutput];
vtkActor outlineActor;
X    outlineActor SetMapper outlineMapper;
X    [outlineActor GetProperty] SetColor 0 0 0;
X
$ren1 AddActors outlineActor;
$ren1 AddActors hhogActor;
$ren1 AddActors tpd1Actor;
$ren1 AddActors tpd2Actor;
$ren1 AddActors tpd3Actor;
$ren1 SetBackground 1 1 1;
$renWin SetSize 500 500;
$iren Initialize;
X
set cam1 [$ren1 GetActiveCamera];
$cam1 SetClippingRange 3.95297 50;
$cam1 SetFocalPoint 8.88908 0.595038 29.3342;
$cam1 SetPosition -12.3332 31.7479 41.2387;
$cam1 CalcViewPlaneNormal;
$cam1 SetViewUp 0.060772 -0.319905 0.945498;
X
# render the image
#
$iren SetUserMethod {wm deiconify .vtkInteract};
$renWin Render;
X
# prevent the tk window from showing up then start the event loop
wm withdraw .
X
X
X
SHAR_EOF
  $shar_touch -am 0415221797 'probecomHH.tcl' &&
  chmod 0600 'probecomHH.tcl' ||
  $echo 'restore of' 'probecomHH.tcl' 'failed'
  if ( md5sum --help 2>&1 | grep 'sage: md5sum \[' ) >/dev/null 2>&1 \
  && ( md5sum --version 2>&1 | grep -v 'textutils 1.12' ) >/dev/null; then
    md5sum -c << SHAR_EOF >/dev/null 2>&1 \
    || $echo 'probecomHH.tcl:' 'MD5 check failed'
fc99a2343299edbb389eb8fe19ccd0e4  probecomHH.tcl
SHAR_EOF
  else
    shar_count="`LC_ALL= LC_CTYPE= LANG= wc -c < 'probecomHH.tcl'`"
    test 3446 -eq "$shar_count" ||
    $echo 'probecomHH.tcl:' 'original size' '3446,' 'current size' "$shar_count!"
  fi
fi
# ============= probecomSL.tcl ==============
if test -f 'probecomSL.tcl' && test "$first_param" != -c; then
  $echo 'x -' SKIPPING 'probecomSL.tcl' '(file already exists)'
else
  $echo 'x -' extracting 'probecomSL.tcl' '(text)'
  sed 's/^X//' << 'SHAR_EOF' > 'probecomSL.tcl' &&
# get the interactor ui
source vtkInt.tcl
X
# create planes
# First create the render master
vtkRenderMaster rm;
X
# Now create the RenderWindow, Renderer and both Actors
#
set renWin [rm MakeRenderWindow];
set ren1   [$renWin MakeRenderer];
set iren [$renWin MakeRenderWindowInteractor];
X
# create pipeline
#
vtkPLOT3DReader pl3d;
X    pl3d SetXYZFilename "/home/62/citrit/public/Spring97/examples/Vtk/COMBXYZ.BIN"
X    pl3d SetQFilename "/home/62/citrit/public/Spring97/examples/Vtk/COMBQ.BIN"
X    pl3d SetScalarFunctionNumber 100;
X    pl3d SetVectorFunctionNumber 202;
X    pl3d Update;
X
# Create source for streamlines
vtkPointSource seeds;
X    seeds SetRadius 4.75;
X    eval seeds SetCenter 6 6 6;
X    seeds SetNumberOfPoints 45;
vtkStreamLine streamers;
X    streamers SetInput [pl3d GetOutput];
X    streamers SetSource [seeds GetOutput];
X    streamers SetStartPosition 6 6 6;
X    streamers SetMaximumPropagationTime 500;
X    streamers SetStepLength 0.1;
X    streamers Update;
vtkPolyMapper mapStreamers;
X    mapStreamers SetInput [streamers GetOutput];
X    eval mapStreamers SetScalarRange \
X       [[[[pl3d GetOutput] GetPointData] GetScalars] GetRange];
vtkActor streamersActor;
X    streamersActor SetMapper mapStreamers;
X
vtkStructuredGridOutlineFilter outline;
X    outline SetInput [pl3d GetOutput];
vtkPolyMapper outlineMapper;
X    outlineMapper SetInput [outline GetOutput];
vtkActor outlineActor;
X    outlineActor SetMapper outlineMapper;
X    [outlineActor GetProperty] SetColor 0 0 0;
X
$ren1 AddActors outlineActor;
$ren1 AddActors streamersActor;
$ren1 SetBackground 1 1 1;
$renWin SetSize 500 500;
$iren Initialize;
X
set cam1 [$ren1 GetActiveCamera];
$cam1 SetClippingRange 3.95297 50;
$cam1 SetFocalPoint 8.88908 0.595038 29.3342;
$cam1 SetPosition -12.3332 31.7479 41.2387;
$cam1 CalcViewPlaneNormal;
$cam1 SetViewUp 0.060772 -0.319905 0.945498;
X
# render the image
#
$iren SetUserMethod {wm deiconify .vtkInteract};
$renWin Render;
X
# prevent the tk window from showing up then start the event loop
wm withdraw .
X
X
X
SHAR_EOF
  $shar_touch -am 0415221797 'probecomSL.tcl' &&
  chmod 0600 'probecomSL.tcl' ||
  $echo 'restore of' 'probecomSL.tcl' 'failed'
  if ( md5sum --help 2>&1 | grep 'sage: md5sum \[' ) >/dev/null 2>&1 \
  && ( md5sum --version 2>&1 | grep -v 'textutils 1.12' ) >/dev/null; then
    md5sum -c << SHAR_EOF >/dev/null 2>&1 \
    || $echo 'probecomSL.tcl:' 'MD5 check failed'
10ec85fdd1e5d47bbb152c3b38d26e4b  probecomSL.tcl
SHAR_EOF
  else
    shar_count="`LC_ALL= LC_CTYPE= LANG= wc -c < 'probecomSL.tcl'`"
    test 2030 -eq "$shar_count" ||
    $echo 'probecomSL.tcl:' 'original size' '2030,' 'current size' "$shar_count!"
  fi
fi
# ============= probecomVD.tcl ==============
if test -f 'probecomVD.tcl' && test "$first_param" != -c; then
  $echo 'x -' SKIPPING 'probecomVD.tcl' '(file already exists)'
else
  $echo 'x -' extracting 'probecomVD.tcl' '(text)'
  sed 's/^X//' << 'SHAR_EOF' > 'probecomVD.tcl' &&
# probe filter and vectordot filter
X
# get the interactor ui
source vtkInt.tcl
X
# create planes
# First create the render master
vtkRenderMaster rm;
X
# Now create the RenderWindow, Renderer and both Actors
#
set renWin [rm MakeRenderWindow];
set ren1   [$renWin MakeRenderer];
set iren [$renWin MakeRenderWindowInteractor];
X
# create pipeline
#
vtkPLOT3DReader pl3d;
X    pl3d SetXYZFilename "/home/62/citrit/public/Spring97/examples/Vtk/COMBXYZ.BIN"
X    pl3d SetQFilename "/home/62/citrit/public/Spring97/examples/Vtk/COMBQ.BIN"
X    pl3d SetScalarFunctionNumber 100;
X    pl3d SetVectorFunctionNumber 202;
X    pl3d Update;
X
vtkPlaneSource plane;
X    plane SetResolution 50 50;
vtkTransform transP1;
X    transP1 Translate 3.7 0.0 28.37;
X    transP1 Scale 5 5 5;
X    transP1 RotateY 90;
vtkTransformPolyFilter tpd1
X    tpd1 SetInput [plane GetOutput];
X    tpd1 SetTransform transP1;
vtkOutlineFilter outTpd1;
X    outTpd1 SetInput [tpd1 GetOutput];
vtkPolyMapper mapTpd1;
X    mapTpd1 SetInput [outTpd1 GetOutput];
vtkActor tpd1Actor;
X    tpd1Actor SetMapper mapTpd1;
X    [tpd1Actor GetProperty] SetColor 0 0 0;
X
vtkTransform transP2;
X    transP2 Translate 9.2 0.0 31.20;
X    transP2 Scale 5 5 5;
X    transP2 RotateY 90;
vtkTransformPolyFilter tpd2
X    tpd2 SetInput [plane GetOutput];
X    tpd2 SetTransform transP2;
vtkOutlineFilter outTpd2;
X    outTpd2 SetInput [tpd2 GetOutput];
vtkPolyMapper mapTpd2;
X    mapTpd2 SetInput [outTpd2 GetOutput];
vtkActor tpd2Actor;
X    tpd2Actor SetMapper mapTpd2;
X    [tpd2Actor GetProperty] SetColor 0 0 0;
X
vtkTransform transP3;
X    transP3 Translate 13.27 0.0 33.30;
X    transP3 Scale 5 5 5;
X    transP3 RotateY 90;
vtkTransformPolyFilter tpd3
X    tpd3 SetInput [plane GetOutput];
X    tpd3 SetTransform transP3;
vtkOutlineFilter outTpd3;
X    outTpd3 SetInput [tpd3 GetOutput];
vtkPolyMapper mapTpd3;
X    mapTpd3 SetInput [outTpd3 GetOutput];
vtkActor tpd3Actor;
X    tpd3Actor SetMapper mapTpd3;
X    [tpd3Actor GetProperty] SetColor 0 0 0;
X
vtkAppendPolyData appendF;
X    appendF AddInput [tpd1 GetOutput];
X    appendF AddInput [tpd2 GetOutput];
X    appendF AddInput [tpd3 GetOutput];
X
vtkProbeFilter probe;
X    probe SetInput [appendF GetOutput];
X    probe SetSource [pl3d GetOutput];
X
vtkGeometryFilter ds2poly;
X    ds2poly SetInput [probe GetOutput];
vtkCleanPolyData clean;
X    clean SetInput [ds2poly GetOutput];
vtkPolyNormals normals;
X    normals SetInput [clean GetOutput];
vtkVectorDot color;
X    color SetInput [normals GetOutput];
vtkLookupTable lut;
X    lut Build;
vtkDataSetMapper plateMapper;
X    plateMapper SetInput [color GetOutput];
X    plateMapper SetLookupTable lut;
X    plateMapper SetScalarRange -1 1;
vtkActor plateActor;
X    plateActor SetMapper plateMapper;
X
vtkStructuredGridOutlineFilter outline;
X    outline SetInput [pl3d GetOutput];
vtkPolyMapper outlineMapper;
X    outlineMapper SetInput [outline GetOutput];
vtkActor outlineActor;
X    outlineActor SetMapper outlineMapper;
X    [outlineActor GetProperty] SetColor 0 0 0;
X
$ren1 AddActors outlineActor;
$ren1 AddActors plateActor;
$ren1 AddActors tpd1Actor;
$ren1 AddActors tpd2Actor;
$ren1 AddActors tpd3Actor;
$ren1 SetBackground 1 1 1;
$renWin SetSize 500 500;
$iren Initialize;
X
set cam1 [$ren1 GetActiveCamera];
$cam1 SetClippingRange 3.95297 50;
$cam1 SetFocalPoint 8.88908 0.595038 29.3342;
$cam1 SetPosition -12.3332 31.7479 41.2387;
$cam1 CalcViewPlaneNormal;
$cam1 SetViewUp 0.060772 -0.319905 0.945498;
X
# render the image
#
$iren SetUserMethod {wm deiconify .vtkInteract};
$renWin Render;
X
# prevent the tk window from showing up then start the event loop
wm withdraw .
X
X
X
SHAR_EOF
  $shar_touch -am 0415221797 'probecomVD.tcl' &&
  chmod 0600 'probecomVD.tcl' ||
  $echo 'restore of' 'probecomVD.tcl' 'failed'
  if ( md5sum --help 2>&1 | grep 'sage: md5sum \[' ) >/dev/null 2>&1 \
  && ( md5sum --version 2>&1 | grep -v 'textutils 1.12' ) >/dev/null; then
    md5sum -c << SHAR_EOF >/dev/null 2>&1 \
    || $echo 'probecomVD.tcl:' 'MD5 check failed'
6886ee3d4c4462fcaf5a346b2c5dc373  probecomVD.tcl
SHAR_EOF
  else
    shar_count="`LC_ALL= LC_CTYPE= LANG= wc -c < 'probecomVD.tcl'`"
    test 3598 -eq "$shar_count" ||
    $echo 'probecomVD.tcl:' 'original size' '3598,' 'current size' "$shar_count!"
  fi
fi
# ============= probecomVN.tcl ==============
if test -f 'probecomVN.tcl' && test "$first_param" != -c; then
  $echo 'x -' SKIPPING 'probecomVN.tcl' '(file already exists)'
else
  $echo 'x -' extracting 'probecomVN.tcl' '(text)'
  sed 's/^X//' << 'SHAR_EOF' > 'probecomVN.tcl' &&
# probe filter and vectornorm filter
X
# get the interactor ui
source vtkInt.tcl
X
# create planes
# First create the render master
vtkRenderMaster rm;
X
# Now create the RenderWindow, Renderer and both Actors
#
set renWin [rm MakeRenderWindow];
set ren1   [$renWin MakeRenderer];
set iren [$renWin MakeRenderWindowInteractor];
X
# create pipeline
#
vtkPLOT3DReader pl3d;
X    pl3d SetXYZFilename "/home/62/citrit/public/Spring97/examples/Vtk/COMBXYZ.BIN"
X    pl3d SetQFilename "/home/62/citrit/public/Spring97/examples/Vtk/COMBQ.BIN"
X    pl3d SetScalarFunctionNumber 100;
X    pl3d SetVectorFunctionNumber 202;
X    pl3d Update;
X
vtkPlaneSource plane;
X    plane SetResolution 50 50;
vtkTransform transP1;
X    transP1 Translate 3.7 0.0 28.37;
X    transP1 Scale 5 5 5;
X    transP1 RotateY 90;
vtkTransformPolyFilter tpd1
X    tpd1 SetInput [plane GetOutput];
X    tpd1 SetTransform transP1;
vtkOutlineFilter outTpd1;
X    outTpd1 SetInput [tpd1 GetOutput];
vtkPolyMapper mapTpd1;
X    mapTpd1 SetInput [outTpd1 GetOutput];
vtkActor tpd1Actor;
X    tpd1Actor SetMapper mapTpd1;
X    [tpd1Actor GetProperty] SetColor 0 0 0;
X
vtkTransform transP2;
X    transP2 Translate 9.2 0.0 31.20;
X    transP2 Scale 5 5 5;
X    transP2 RotateY 90;
vtkTransformPolyFilter tpd2
X    tpd2 SetInput [plane GetOutput];
X    tpd2 SetTransform transP2;
vtkOutlineFilter outTpd2;
X    outTpd2 SetInput [tpd2 GetOutput];
vtkPolyMapper mapTpd2;
X    mapTpd2 SetInput [outTpd2 GetOutput];
vtkActor tpd2Actor;
X    tpd2Actor SetMapper mapTpd2;
X    [tpd2Actor GetProperty] SetColor 0 0 0;
X
vtkTransform transP3;
X    transP3 Translate 13.27 0.0 33.30;
X    transP3 Scale 5 5 5;
X    transP3 RotateY 90;
vtkTransformPolyFilter tpd3
X    tpd3 SetInput [plane GetOutput];
X    tpd3 SetTransform transP3;
vtkOutlineFilter outTpd3;
X    outTpd3 SetInput [tpd3 GetOutput];
vtkPolyMapper mapTpd3;
X    mapTpd3 SetInput [outTpd3 GetOutput];
vtkActor tpd3Actor;
X    tpd3Actor SetMapper mapTpd3;
X    [tpd3Actor GetProperty] SetColor 0 0 0;
X
vtkAppendPolyData appendF;
X    appendF AddInput [tpd1 GetOutput];
X    appendF AddInput [tpd2 GetOutput];
X    appendF AddInput [tpd3 GetOutput];
X
vtkProbeFilter probe;
X    probe SetInput [appendF GetOutput];
X    probe SetSource [pl3d GetOutput];
X
vtkVectorNorm color;
X    color SetInput [probe GetOutput];
X    color SetNormalize 1;
vtkLookupTable lut;
X    lut Build;
vtkDataSetMapper plateMapper;
X    plateMapper SetInput [color GetOutput];
X    plateMapper SetLookupTable lut;
X    plateMapper SetScalarRange 0 1;
vtkActor plateActor;
X    plateActor SetMapper plateMapper;
X
vtkStructuredGridOutlineFilter outline;
X    outline SetInput [pl3d GetOutput];
vtkPolyMapper outlineMapper;
X    outlineMapper SetInput [outline GetOutput];
vtkActor outlineActor;
X    outlineActor SetMapper outlineMapper;
X    [outlineActor GetProperty] SetColor 0 0 0;
X
$ren1 AddActors outlineActor;
$ren1 AddActors plateActor;
$ren1 AddActors tpd1Actor;
$ren1 AddActors tpd2Actor;
$ren1 AddActors tpd3Actor;
$ren1 SetBackground 1 1 1;
$renWin SetSize 500 500;
$iren Initialize;
X
set cam1 [$ren1 GetActiveCamera];
$cam1 SetClippingRange 3.95297 50;
$cam1 SetFocalPoint 8.88908 0.595038 29.3342;
$cam1 SetPosition -12.3332 31.7479 41.2387;
$cam1 CalcViewPlaneNormal;
$cam1 SetViewUp 0.060772 -0.319905 0.945498;
X
# render the image
#
$iren SetUserMethod {wm deiconify .vtkInteract};
$renWin Render;
X
# prevent the tk window from showing up then start the event loop
wm withdraw .
X
X
X
SHAR_EOF
  $shar_touch -am 0415221797 'probecomVN.tcl' &&
  chmod 0600 'probecomVN.tcl' ||
  $echo 'restore of' 'probecomVN.tcl' 'failed'
  if ( md5sum --help 2>&1 | grep 'sage: md5sum \[' ) >/dev/null 2>&1 \
  && ( md5sum --version 2>&1 | grep -v 'textutils 1.12' ) >/dev/null; then
    md5sum -c << SHAR_EOF >/dev/null 2>&1 \
    || $echo 'probecomVN.tcl:' 'MD5 check failed'
d610656f33e48cbcab397c7833dfdc7e  probecomVN.tcl
SHAR_EOF
  else
    shar_count="`LC_ALL= LC_CTYPE= LANG= wc -c < 'probecomVN.tcl'`"
    test 3428 -eq "$shar_count" ||
    $echo 'probecomVN.tcl:' 'original size' '3428,' 'current size' "$shar_count!"
  fi
fi
# ============= probecomWP.tcl ==============
if test -f 'probecomWP.tcl' && test "$first_param" != -c; then
  $echo 'x -' SKIPPING 'probecomWP.tcl' '(file already exists)'
else
  $echo 'x -' extracting 'probecomWP.tcl' '(text)'
  sed 's/^X//' << 'SHAR_EOF' > 'probecomWP.tcl' &&
# probe and Warp filters
X
X
# get the interactor ui
source vtkInt.tcl
X
# create planes
# First create the render master
vtkRenderMaster rm;
X
# Now create the RenderWindow, Renderer and both Actors
#
set renWin [rm MakeRenderWindow];
set ren1   [$renWin MakeRenderer];
set iren [$renWin MakeRenderWindowInteractor];
X
# create pipeline
#
vtkPLOT3DReader pl3d;
X    pl3d SetXYZFilename "/home/62/citrit/public/Spring97/examples/Vtk/COMBXYZ.BIN"
X    pl3d SetQFilename "/home/62/citrit/public/Spring97/examples/Vtk/COMBQ.BIN"
X    pl3d SetScalarFunctionNumber 100;
X    pl3d SetVectorFunctionNumber 202;
X    pl3d Update;
X
vtkPlaneSource plane;
X    plane SetResolution 50 50;
vtkTransform transP1;
X    transP1 Translate 3.7 0.0 28.37;
X    transP1 Scale 5 5 5;
X    transP1 RotateY 90;
vtkTransformPolyFilter tpd1
X    tpd1 SetInput [plane GetOutput];
X    tpd1 SetTransform transP1;
vtkOutlineFilter outTpd1;
X    outTpd1 SetInput [tpd1 GetOutput];
vtkPolyMapper mapTpd1;
X    mapTpd1 SetInput [outTpd1 GetOutput];
vtkActor tpd1Actor;
X    tpd1Actor SetMapper mapTpd1;
X    [tpd1Actor GetProperty] SetColor 0 0 0;
X
vtkTransform transP2;
X    transP2 Translate 9.2 0.0 31.20;
X    transP2 Scale 5 5 5;
X    transP2 RotateY 90;
vtkTransformPolyFilter tpd2
X    tpd2 SetInput [plane GetOutput];
X    tpd2 SetTransform transP2;
vtkOutlineFilter outTpd2;
X    outTpd2 SetInput [tpd2 GetOutput];
vtkPolyMapper mapTpd2;
X    mapTpd2 SetInput [outTpd2 GetOutput];
vtkActor tpd2Actor;
X    tpd2Actor SetMapper mapTpd2;
X    [tpd2Actor GetProperty] SetColor 0 0 0;
X
vtkTransform transP3;
X    transP3 Translate 13.27 0.0 33.30;
X    transP3 Scale 5 5 5;
X    transP3 RotateY 90;
vtkTransformPolyFilter tpd3
X    tpd3 SetInput [plane GetOutput];
X    tpd3 SetTransform transP3;
vtkOutlineFilter outTpd3;
X    outTpd3 SetInput [tpd3 GetOutput];
vtkPolyMapper mapTpd3;
X    mapTpd3 SetInput [outTpd3 GetOutput];
vtkActor tpd3Actor;
X    tpd3Actor SetMapper mapTpd3;
X    [tpd3Actor GetProperty] SetColor 0 0 0;
X
vtkAppendPolyData appendF;
X    appendF AddInput [tpd1 GetOutput];
X    appendF AddInput [tpd2 GetOutput];
X    appendF AddInput [tpd3 GetOutput];
X
vtkProbeFilter probe;
X    probe SetInput [appendF GetOutput];
X    probe SetSource [pl3d GetOutput];
X    probe Update;
X
vtkGeometryFilter geom;
X    geom SetInput [probe GetOutput];
vtkCleanPolyData cleangeom;
X    cleangeom SetInput [geom GetOutput];
vtkWarpVector warp;
X    warp SetInput [cleangeom GetOutput];
X    warp SetScaleFactor 0.003;
vtkGeometryFilter ds2poly;
X    ds2poly SetInput [warp GetOutput];
vtkCleanPolyData clean;
X    clean SetInput [ds2poly GetOutput];
vtkPolyNormals normals;
X    normals SetInput [clean GetOutput];
X    normals SetFeatureAngle 70;
vtkLookupTable lut;
X    lut Build;
vtkDataSetMapper planeMapper;
X    planeMapper SetInput [normals GetOutput];
X    eval planeMapper SetScalarRange [[pl3d GetOutput] GetScalarRange];
X    planeMapper SetLookupTable lut;
vtkActor planeActor;
X    planeActor SetMapper planeMapper;
X
vtkStructuredGridOutlineFilter outline;
X    outline SetInput [pl3d GetOutput];
vtkPolyMapper outlineMapper;
X    outlineMapper SetInput [outline GetOutput];
vtkActor outlineActor;
X    outlineActor SetMapper outlineMapper;
X    [outlineActor GetProperty] SetColor 0 0 0;
X
$ren1 AddActors outlineActor;
$ren1 AddActors planeActor;
$ren1 AddActors tpd1Actor;
$ren1 AddActors tpd2Actor;
$ren1 AddActors tpd3Actor;
$ren1 SetBackground 1 1 1;
$renWin SetSize 500 500;
$iren Initialize;
X
set cam1 [$ren1 GetActiveCamera];
$cam1 SetClippingRange 3.95297 50;
$cam1 SetFocalPoint 8.88908 0.595038 29.3342;
$cam1 SetPosition -12.3332 33.7479 41.2387;
$cam1 CalcViewPlaneNormal;
$cam1 SetViewUp 0.060772 -0.319905 0.945498;
X
# render the image
#
$iren SetUserMethod {wm deiconify .vtkInteract};
$renWin Render;
X
# prevent the tk window from showing up then start the event loop
wm withdraw .
X
X
X
SHAR_EOF
  $shar_touch -am 0415221797 'probecomWP.tcl' &&
  chmod 0600 'probecomWP.tcl' ||
  $echo 'restore of' 'probecomWP.tcl' 'failed'
  if ( md5sum --help 2>&1 | grep 'sage: md5sum \[' ) >/dev/null 2>&1 \
  && ( md5sum --version 2>&1 | grep -v 'textutils 1.12' ) >/dev/null; then
    md5sum -c << SHAR_EOF >/dev/null 2>&1 \
    || $echo 'probecomWP.tcl:' 'MD5 check failed'
6253b4f13f7baf6887b3d3385eb2fc5e  probecomWP.tcl
SHAR_EOF
  else
    shar_count="`LC_ALL= LC_CTYPE= LANG= wc -c < 'probecomWP.tcl'`"
    test 3835 -eq "$shar_count" ||
    $echo 'probecomWP.tcl:' 'original size' '3835,' 'current size' "$shar_count!"
  fi
fi
# ============= quad.tcl ==============
if test -f 'quad.tcl' && test "$first_param" != -c; then
  $echo 'x -' SKIPPING 'quad.tcl' '(file already exists)'
else
  $echo 'x -' extracting 'quad.tcl' '(text)'
  sed 's/^X//' << 'SHAR_EOF' > 'quad.tcl' &&
# user interface command widget
source vtkInt.tcl
X
# create a rendering window and renderer
vtkRenderMaster rm;
set renWin [rm MakeRenderWindow];
set ren1 [$renWin MakeRenderer];
set iren [$renWin MakeRenderWindowInteractor];
X
vtkQuadric quad;
X  quad SetCoefficients 0.5 1 .2 0 .1 0 0 .2 0 0;
vtkSampleFunction sample;
X  sample SetSampleDimensions 25 25 25;
X  sample SetImplicitFunction quad;
X  sample Update;
X
vtkContourFilter contours;
X  contours SetInput [sample GetOutput];
X  contours SetValue 0 0.5;
vtkPolyMapper contMapper;
X  contMapper SetInput [contours GetOutput];
X  contMapper SetScalarRange 0.0 1.2;
X
vtkActor contActor;
X  contActor SetMapper contMapper;
X
X 
#outline
vtkOutlineFilter outline;
X   outline SetInput [sample GetOutput];
vtkPolyMapper outlineMapper;
X   outlineMapper SetInput [outline GetOutput];
vtkActor outlineActor;
X   outlineActor SetMapper outlineMapper;
X   eval [outlineActor GetProperty] SetColor 0 0 0;
X
$ren1 SetBackground 1.0 1.0 1.0;
$ren1 AddActors contActor;
$ren1 AddActors outlineActor;
X
# enable user interface interactor
$iren SetUserMethod {wm deiconify .vtkInteract};
$iren Initialize;
X
for {set k 0} {$k < 3} {incr k} {
X for {set j 0} {$j < 20} {incr j} {
X  set value [expr 0.0 + ($j)*(12.0/190.0)];
X  contours SetValue 0 $value;
X  $renWin Render;
X }
}
X
# prevent the tk window from showing up then start the event loop
wm withdraw .
SHAR_EOF
  $shar_touch -am 0415221897 'quad.tcl' &&
  chmod 0600 'quad.tcl' ||
  $echo 'restore of' 'quad.tcl' 'failed'
  if ( md5sum --help 2>&1 | grep 'sage: md5sum \[' ) >/dev/null 2>&1 \
  && ( md5sum --version 2>&1 | grep -v 'textutils 1.12' ) >/dev/null; then
    md5sum -c << SHAR_EOF >/dev/null 2>&1 \
    || $echo 'quad.tcl:' 'MD5 check failed'
d4b399aa5271a9d71f90252d9841b477  quad.tcl
SHAR_EOF
  else
    shar_count="`LC_ALL= LC_CTYPE= LANG= wc -c < 'quad.tcl'`"
    test 1379 -eq "$shar_count" ||
    $echo 'quad.tcl:' 'original size' '1379,' 'current size' "$shar_count!"
  fi
fi
# ============= quadDec.tcl ==============
if test -f 'quadDec.tcl' && test "$first_param" != -c; then
  $echo 'x -' SKIPPING 'quadDec.tcl' '(file already exists)'
else
  $echo 'x -' extracting 'quadDec.tcl' '(text)'
  sed 's/^X//' << 'SHAR_EOF' > 'quadDec.tcl' &&
# user interface command widget
source vtkInt.tcl
X
# create a rendering window and renderer
vtkRenderMaster rm;
set renWin [rm MakeRenderWindow];
set ren1 [$renWin MakeRenderer];
set iren [$renWin MakeRenderWindowInteractor];
X
vtkQuadric quad;
X  quad SetCoefficients 0.5 1 .2 0 .1 0 0 .2 0 0;
vtkSampleFunction sample;
X  sample SetSampleDimensions 25 25 25;
X  sample SetImplicitFunction quad;
X  sample Update;
X
vtkContourFilter contours;
X  contours SetInput [sample GetOutput];
X  contours SetValue 0 0.5;
X
vtkTriangleFilter tri;
X    tri SetInput [contours GetOutput];
vtkDecimate deci;
X    deci SetInput [tri GetOutput];
X    deci SetTargetReduction 0.9;
X    deci SetAspectRatio 20;
X    deci SetInitialError 0.0005;
X    deci SetErrorIncrement 0.001;
X    deci SetMaximumIterations 2;
X    deci SetInitialFeatureAngle 30;
X
vtkPolyMapper contMapper;
X  contMapper SetInput [deci GetOutput];
X  contMapper SetScalarRange 0.0 1.2;
X
vtkActor contActor;
X  contActor SetMapper contMapper;
X
X 
#outline
vtkOutlineFilter outline;
X   outline SetInput [sample GetOutput];
vtkPolyMapper outlineMapper;
X   outlineMapper SetInput [outline GetOutput];
vtkActor outlineActor;
X   outlineActor SetMapper outlineMapper;
X   eval [outlineActor GetProperty] SetColor 0 0 0;
X
$ren1 SetBackground 1.0 1.0 1.0;
$ren1 AddActors contActor;
$ren1 AddActors outlineActor;
X
# enable user interface interactor
$iren SetUserMethod {wm deiconify .vtkInteract};
$iren Initialize;
X
for {set k 0} {$k < 3} {incr k} {
X for {set j 0} {$j < 20} {incr j} {
X  set value [expr 0.0 + ($j)*(12.0/190.0)];
X  contours SetValue 0 $value;
X  $renWin Render;
X }
}
X
# prevent the tk window from showing up then start the event loop
wm withdraw .
SHAR_EOF
  $shar_touch -am 0415221997 'quadDec.tcl' &&
  chmod 0600 'quadDec.tcl' ||
  $echo 'restore of' 'quadDec.tcl' 'failed'
  if ( md5sum --help 2>&1 | grep 'sage: md5sum \[' ) >/dev/null 2>&1 \
  && ( md5sum --version 2>&1 | grep -v 'textutils 1.12' ) >/dev/null; then
    md5sum -c << SHAR_EOF >/dev/null 2>&1 \
    || $echo 'quadDec.tcl:' 'MD5 check failed'
77e8ea6e28664d2c05e8122406d9bb4f  quadDec.tcl
SHAR_EOF
  else
    shar_count="`LC_ALL= LC_CTYPE= LANG= wc -c < 'quadDec.tcl'`"
    test 1689 -eq "$shar_count" ||
    $echo 'quadDec.tcl:' 'original size' '1689,' 'current size' "$shar_count!"
  fi
fi
# ============= vtkInt.tcl ==============
if test -f 'vtkInt.tcl' && test "$first_param" != -c; then
  $echo 'x -' SKIPPING 'vtkInt.tcl' '(file already exists)'
else
  $echo 'x -' extracting 'vtkInt.tcl' '(text)'
  sed 's/^X//' << 'SHAR_EOF' > 'vtkInt.tcl' &&
# a generic interactor for tcl and vtk
#
catch {unset vtkInteract.bold}
catch {unset vtkInteract.normal}
catch {unset vtkInteract.tagcount}
set vtkInteractBold "-background #43ce80 -relief raised -borderwidth 1"
set vtkInteractNormal "-background #c0c0c0 -relief flat"
set vtkInteractTagcount 1;
X
proc vtkInteract {} {
X
X    proc dovtk {s w} {
X	global vtkInteractBold vtkInteractNormal vtkInteractTagcount;
X	set tag [append tagnum $vtkInteractTagcount];
X	incr vtkInteractTagcount 1;
X	.vtkInteract.text configure -state normal
X	.vtkInteract.text insert end $s $tag
X	eval .vtkInteract.text tag configure $tag $vtkInteractNormal
X	.vtkInteract.text tag bind $tag <Any-Enter> \
X	    ".vtkInteract.text tag configure $tag $vtkInteractBold"
X	.vtkInteract.text tag bind $tag <Any-Leave> \
X	    ".vtkInteract.text tag configure $tag $vtkInteractNormal"
X	.vtkInteract.text tag bind $tag <1> "dovtk [list $s] .vtkInteract";
X	.vtkInteract.text insert end \n; 
X	.vtkInteract.text insert end [uplevel 1 $s]; 
X	.vtkInteract.text insert end \n\n; 
X	.vtkInteract.text configure -state disabled
X	.vtkInteract.text yview end
X    }
X
X    catch {destroy .vtkInteract}
X    toplevel .vtkInteract
X    wm title .vtkInteract "vtk Interactor"
X    wm iconname .vtkInteract "vtk"
X    
X    frame .vtkInteract.buttons
X    pack  .vtkInteract.buttons -side bottom -fill x -pady 2m
X    button .vtkInteract.buttons.dismiss -text Dismiss \
X	-command "wm withdraw .vtkInteract"
X    pack .vtkInteract.buttons.dismiss -side left -expand 1
X    
X    frame .vtkInteract.file
X    label .vtkInteract.file.label -text "Command:" -width 10 -anchor w
X    entry .vtkInteract.file.entry -width 40 
X    bind .vtkInteract.file.entry <Return> {
X	dovtk [%W get] .vtkInteract; %W delete 0 end}
X    pack .vtkInteract.file.label -side left
X    pack .vtkInteract.file.entry -side left -expand 1 -fill x
X    
X    text .vtkInteract.text -yscrollcommand ".vtkInteract.scroll set" \
X	-setgrid true -width 60 -height 8 -wrap word
X    scrollbar .vtkInteract.scroll -command ".vtkInteract.text yview"
X    pack .vtkInteract.scroll -side right -fill y
X    pack .vtkInteract.text -side bottom -expand 1 -fill both
X    pack .vtkInteract.file -pady 3m -padx 2m -side bottom -fill x 
X    
X    .vtkInteract.text configure -state disabled
X    wm withdraw .vtkInteract
}
X
vtkInteract;
X
SHAR_EOF
  $shar_touch -am 0415221997 'vtkInt.tcl' &&
  chmod 0600 'vtkInt.tcl' ||
  $echo 'restore of' 'vtkInt.tcl' 'failed'
  if ( md5sum --help 2>&1 | grep 'sage: md5sum \[' ) >/dev/null 2>&1 \
  && ( md5sum --version 2>&1 | grep -v 'textutils 1.12' ) >/dev/null; then
    md5sum -c << SHAR_EOF >/dev/null 2>&1 \
    || $echo 'vtkInt.tcl:' 'MD5 check failed'
bc7774989c5f676c510275c8faed1e8d  vtkInt.tcl
SHAR_EOF
  else
    shar_count="`LC_ALL= LC_CTYPE= LANG= wc -c < 'vtkInt.tcl'`"
    test 2311 -eq "$shar_count" ||
    $echo 'vtkInt.tcl:' 'original size' '2311,' 'current size' "$shar_count!"
  fi
fi
rm -fr _sh24337
exit 0

From ???@??? Wed Apr 16 07:18:30 1997
Received: from rpi.edu (root@rpi.edu [128.113.1.7])
	by mail1.its.rpi.edu (8.8.5/8.8.5) with ESMTP id WAA70548
	for <citrit@rpi.edu>; Tue, 15 Apr 1997 22:26:28 -0400
Received: from cs.rpi.edu (root@barney.cs.rpi.edu [128.213.3.4]) by rpi.edu (8.6.9/8.6.4) with ESMTP id WAA10302 for <citrit@rpi.edu>; Tue, 15 Apr 1997 22:26:28 -0400
Received: from tulip.cs.rpi.edu (parkerc@tulip.cs.rpi.edu [128.213.3.44])
	by cs.rpi.edu (8.8.5/8.8.5) with ESMTP id WAA09348
	for <citrit@rpi.edu>; Tue, 15 Apr 1997 22:24:18 -0400 (EDT)
From: Christopher Parker <parkerc@cs.rpi.edu>
Received: (from parkerc@localhost)
	by tulip.cs.rpi.edu (8.8.5/8.8.5) id WAA21487
	for citrit@rpi.edu; Tue, 15 Apr 1997 22:24:18 -0400 (EDT)
Date: Tue, 15 Apr 1997 22:24:18 -0400 (EDT)
Message-Id: <199704160224.WAA21487@tulip.cs.rpi.edu>
To: citrit@rpi.edu
Subject: Homework 3 temp submission
X-UIDL: 04025bda3875c2fa08b81f547abcfcd6

#! /bin/sh
# This is a shell archive.  Remove anything before this line, then feed it
# into a shell via "sh file" or similar.  To overwrite existing files,
# type "sh file -c".
# The tool that generated this appeared in the comp.sources.unix newsgroup;
# send mail to comp-sources-unix@uunet.uu.net if you want that tool.
# Contents:  MRIHead.tcl probehedge.tcl sample.tcl
# Wrapped by parkerc@tulip.cs.rpi.edu on Tue Apr 15 22:22:33 1997
PATH=/bin:/usr/bin:/usr/ucb ; export PATH
echo If this archive is complete, you will see the following message:
echo '          "shar: End of archive."'
if test -f 'MRIHead.tcl' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'MRIHead.tcl'\"
else
  echo shar: Extracting \"'MRIHead.tcl'\" \(1450 characters\)
  sed "s/^X//" >'MRIHead.tcl' <<'END_OF_FILE'
X# If you are using Window95 and vtk 1.3 uncomment the line below
X# load vtktcl;
X
X# get the interactor ui
Xsource vtkInt.tcl
X
X# First create the render master
XvtkRenderMaster rm;
X
X# Now create the RenderWindow, Renderer
X#
Xset renWin [rm MakeRenderWindow];
Xset ren1   [$renWin MakeRenderer];
Xset iren   [$renWin MakeRenderWindowInteractor];
X
X#
X# Load up the data
XvtkStructuredPointsReader vol;
X    vol SetFilename "MRIdata.vtk"
X    vol DebugOn;
X
XvtkMarchingCubes contour;
X  contour SetInput [vol GetOutput];
X  contour SetValue 0 225.0;
X
XvtkPolyMapper volMapper;
X  volMapper SetInput [contour GetOutput];
X  volMapper ScalarsVisibleOff;
X
XvtkActor volActor;
X  volActor SetMapper volMapper;
X
XvtkOutlineFilter outLine;
X  outLine SetInput [vol GetOutput];
X
XvtkPolyMapper outMapper;
X  outMapper SetInput [outLine GetOutput];
X
XvtkActor outActor;
X  outActor SetMapper outMapper;
X
X# Add the actors to the renderer, set the background and size
X#
X$ren1 AddActors outActor;
X$ren1 AddActors volActor;
X$ren1 SetBackground 0 0 0;
X$renWin SetSize 500 400;
X$iren Initialize;
X
X# render the image
X#
X$iren SetUserMethod {wm deiconify .vtkInteract};
X$renWin Render;
X
Xbutton .phred -text stepAnimate -command stepAnimate
Xpack .phred
X
Xproc stepAnimate {} {
X    global renWin;
X	
X    for { set i 10.0 } { $i <= 225.0 } { set i [expr $i + 10] } {
X	contour SetValue 20 $i;
X	$renWin Render
X    }
X}
X
X# prevent the tk window from showing up then start the event loop
X# wm withdraw .
X
END_OF_FILE
  if test 1450 -ne `wc -c <'MRIHead.tcl'`; then
    echo shar: \"'MRIHead.tcl'\" unpacked with wrong size!
  fi
  # end of 'MRIHead.tcl'
fi
if test -f 'probehedge.tcl' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'probehedge.tcl'\"
else
  echo shar: Extracting \"'probehedge.tcl'\" \(3367 characters\)
  sed "s/^X//" >'probehedge.tcl' <<'END_OF_FILE'
X# If you are using Window95 and vtk 1.3 uncomment the line below
X# load vtktcl;
X
X# get the interactor ui
Xsource vtkInt.tcl
X
X# create planes
X# First create the render master
XvtkRenderMaster rm;
X
X# Now create the RenderWindow, Renderer and both Actors
X#
Xset renWin [rm MakeRenderWindow];
Xset ren1   [$renWin MakeRenderer];
Xset iren [$renWin MakeRenderWindowInteractor];
X
X# create pipeline
X#
XvtkPLOT3DReader pl3d;
X    pl3d SetXYZFilename "combxyz.bin"
X    pl3d SetQFilename "combq.bin"
X    pl3d SetScalarFunctionNumber 100;
X    pl3d SetVectorFunctionNumber 202;
X    pl3d Update;
X
XvtkPlaneSource plane;
X    plane SetResolution 50 50;
XvtkTransform transP1;
X    transP1 Translate 3.7 0.0 28.37;
X    transP1 Scale 5 5 5;
X    transP1 RotateY 90;
XvtkTransformPolyFilter tpd1
X    tpd1 SetInput [plane GetOutput];
X    tpd1 SetTransform transP1;
XvtkOutlineFilter outTpd1;
X    outTpd1 SetInput [tpd1 GetOutput];
XvtkPolyMapper mapTpd1;
X    mapTpd1 SetInput [outTpd1 GetOutput];
XvtkActor tpd1Actor;
X    tpd1Actor SetMapper mapTpd1;
X    [tpd1Actor GetProperty] SetColor 0 0 0;
X
XvtkTransform transP2;
X    transP2 Translate 9.2 0.0 31.20;
X    transP2 Scale 5 5 5;
X    transP2 RotateY 90;
XvtkTransformPolyFilter tpd2
X    tpd2 SetInput [plane GetOutput];
X    tpd2 SetTransform transP2;
XvtkOutlineFilter outTpd2;
X    outTpd2 SetInput [tpd2 GetOutput];
XvtkPolyMapper mapTpd2;
X    mapTpd2 SetInput [outTpd2 GetOutput];
XvtkActor tpd2Actor;
X    tpd2Actor SetMapper mapTpd2;
X    [tpd2Actor GetProperty] SetColor 0 0 0;
X
XvtkTransform transP3;
X    transP3 Translate 13.27 0.0 33.30;
X    transP3 Scale 5 5 5;
X    transP3 RotateY 90;
XvtkTransformPolyFilter tpd3
X    tpd3 SetInput [plane GetOutput];
X    tpd3 SetTransform transP3;
XvtkOutlineFilter outTpd3;
X    outTpd3 SetInput [tpd3 GetOutput];
XvtkPolyMapper mapTpd3;
X    mapTpd3 SetInput [outTpd3 GetOutput];
XvtkActor tpd3Actor;
X    tpd3Actor SetMapper mapTpd3;
X    [tpd3Actor GetProperty] SetColor 0 0 0;
X
XvtkAppendPolyData appendF;
X    appendF AddInput [tpd1 GetOutput];
X    appendF AddInput [tpd2 GetOutput];
X    appendF AddInput [tpd3 GetOutput];
X
XvtkProbeFilter probe;
X    probe SetInput [appendF GetOutput];
X    probe SetSource [pl3d GetOutput];
X
XvtkHedgeHog hedgehog;
X    hedgehog SetInput [probe GetOutput];
X    hedgehog SetScaleFactor 0.009;
X
XvtkPolyMapper contourMapper;
X    contourMapper SetInput [hedgehog GetOutput];
X    eval contourMapper SetScalarRange [[pl3d GetOutput] GetScalarRange];
XvtkActor planeActor;
X    planeActor SetMapper contourMapper;
X
XvtkStructuredGridOutlineFilter outline;
X    outline SetInput [pl3d GetOutput];
XvtkPolyMapper outlineMapper;
X    outlineMapper SetInput [outline GetOutput];
XvtkActor outlineActor;
X    outlineActor SetMapper outlineMapper;
X    [outlineActor GetProperty] SetColor 0 0 0;
X
X$ren1 AddActors outlineActor;
X$ren1 AddActors planeActor;
X$ren1 AddActors tpd1Actor;
X$ren1 AddActors tpd2Actor;
X$ren1 AddActors tpd3Actor;
X$ren1 SetBackground 1 1 1;
X$renWin SetSize 500 500;
X$iren Initialize;
X
Xset cam1 [$ren1 GetActiveCamera];
X$cam1 SetClippingRange 3.95297 50;
X$cam1 SetFocalPoint 8.88908 0.595038 29.3342;
X$cam1 SetPosition -12.3332 31.7479 41.2387;
X$cam1 CalcViewPlaneNormal;
X$cam1 SetViewUp 0.060772 -0.319905 0.945498;
X
X# render the image
X#
X$iren SetUserMethod {wm deiconify .vtkInteract};
X$renWin Render;
X
X# prevent the tk window from showing up then start the event loop
Xwm withdraw .
X
X
X
END_OF_FILE
  if test 3367 -ne `wc -c <'probehedge.tcl'`; then
    echo shar: \"'probehedge.tcl'\" unpacked with wrong size!
  fi
  # end of 'probehedge.tcl'
fi
if test -f 'sample.tcl' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'sample.tcl'\"
else
  echo shar: Extracting \"'sample.tcl'\" \(1248 characters\)
  sed "s/^X//" >'sample.tcl' <<'END_OF_FILE'
X# uncomment this line if you are using Windows95/NT
X# load vtktcl;
X# user interface command widget
Xsource /vtk13/examples/vtkInt.tcl
X
X# create a rendering window and renderer
XvtkRenderMaster rm;
Xset renWin [rm MakeRenderWindow];
Xset ren1 [$renWin MakeRenderer];
Xset iren [$renWin MakeRenderWindowInteractor];
X
XvtkQuadric quad;
X  quad SetCoefficients 0.5 1 .2 0 .1 0 0 .2 0 0;
XvtkSampleFunction sample;
X  sample SetSampleDimensions 50 50 50;
X  sample SetImplicitFunction quad;
XvtkContourFilter contours;
X  contours SetInput [sample GetOutput];
X  contours GenerateValues 5 0.0 1.2;
XvtkPolyMapper contMapper;
X  contMapper SetInput [contours GetOutput];
X  contMapper SetScalarRange 0.0 1.2;
XvtkActor contActor;
X  contActor SetMapper contMapper;
X
X# assign our actor to the renderer
X$ren1 SetBackground 1 1 1;
X$ren1 AddActors contActor;
X
X# enable user interface interactor
X$iren SetUserMethod {wm deiconify .vtkInteract};
X$iren Initialize;
X
Xbutton .phred -text stepAnimate -command stepAnimate
Xpack .phred
X
Xproc stepAnimate {} {
X    global renWin;
X
X    for { set i 0.0 } { $i <= 1.2 } { set i [expr $i + 0.2] } {
X	contours GenerateValues 1 $i $i;
X	$renWin Render;
X    }
X}
X
X# prevent the tk window from showing up then start the event loop
X#wm withdraw .
END_OF_FILE
  if test 1248 -ne `wc -c <'sample.tcl'`; then
    echo shar: \"'sample.tcl'\" unpacked with wrong size!
  fi
  # end of 'sample.tcl'
fi
echo shar: End of archive.
exit 0

From ???@??? Wed Apr 16 07:18:31 1997
Received: from vccnw07.its.rpi.edu (platom@vccnw07.its.rpi.edu [128.113.69.57])
	by mail1.its.rpi.edu (8.8.5/8.8.5) with ESMTP id WAA26758
	for <citrit@rpi.edu>; Tue, 15 Apr 1997 22:50:45 -0400
Received: (platom@localhost) by vccnw07.its.rpi.edu (SMI-8.6/8.6.4) id WAA09129 for citrit@rpi.edu; Tue, 15 Apr 1997 22:50:42 -0400
From: "Mark Steven Platosh" <platom@rpi.edu>
Message-Id: <9704152250.ZM9125@vccnw07.its.rpi.edu>
Date: Tue, 15 Apr 1997 22:50:41 -0400
In-Reply-To: "Thomas D. Citriniti" <citrit@rpi.edu>
        "Re: Homework 3 problems" (Apr  3,  2:11pm)
References: <1.5.4.32.19970403191156.00689f7c@mail.its.rpi.edu>
X-Mailer: Z-Mail (3.2.1 10apr95)
To: "Thomas D. Citriniti" <citrit@rpi.edu>
Subject: HW#3
Mime-Version: 1.0
Content-Type: multipart/mixed;
	boundary="PART-BOUNDARY=.19704152250.ZM9125.its.rpi.edu"
X-UIDL: aa261dd1b76d0a5ed9b14e9d7860dcde

Lets try that again
X-Zm-Content-Name: submit
Content-Description: Binary Data
Content-Type: application/octet-stream ; name="submit"

X-Zm-Decoding-Hint: mimencode -b -u 

Attachment Converted: h:\mail\attach\submit
From ???@??? Wed Apr 16 07:18:32 1997
Received: from cortez.sss.rpi.edu (tulumg@cortez.sss.rpi.edu [128.113.113.33])
	by mail1.its.rpi.edu (8.8.5/8.8.5) with ESMTP id WAA74148
	for <citrit@rpi.edu>; Tue, 15 Apr 1997 22:51:39 -0400
From: "Gregory C. Tulumbas" <tulumg>
Received: (tulumg@localhost) by cortez.sss.rpi.edu (8.6.9/8.6.4) id WAA189356 for citrit@rpi.edu; Tue, 15 Apr 1997 22:51:37 -0400
Date: Tue, 15 Apr 1997 22:51:37 -0400
Message-Id: <199704160251.WAA189356@cortez.sss.rpi.edu>
To: citrit@rpi.edu
Subject: HomeWork 3
X-UIDL: 10bd76b8206e1acf419d1423a6492212

#!/bin/sh
# This is a shell archive (produced by GNU sharutils 4.2).
# To extract the files from this archive, save it to some FILE, remove
# everything before the `!/bin/sh' line above, then type `sh FILE'.
#
# Made on 1997-04-15 22:49 EDT by <tulumg@cortez>.
# Source directory was `/afs/rpi.edu/home/05/tulumg/private/tmp'.
#
# Existing files will *not* be overwritten unless `-c' is specified.
#
# This shar contains:
# length mode       name
# ------ ---------- ------------------------------------------
#   2142 -rw-r----- 63a.tcl
#   1539 -rw-r----- 63b.tcl
#   3534 -rw-r----- 94a.tcl
#   3046 -rw-r----- 94c.tcl
#   3489 -rw-r----- 94d.tcl
#
save_IFS="${IFS}"
IFS="${IFS}:"
gettext_dir=FAILED
locale_dir=FAILED
first_param="$1"
for dir in $PATH
do
  if test "$gettext_dir" = FAILED && test -f $dir/gettext \
     && ($dir/gettext --version >/dev/null 2>&1)
  then
    set `$dir/gettext --version 2>&1`
    if test "$3" = GNU
    then
      gettext_dir=$dir
    fi
  fi
  if test "$locale_dir" = FAILED && test -f $dir/shar \
     && ($dir/shar --print-text-domain-dir >/dev/null 2>&1)
  then
    locale_dir=`$dir/shar --print-text-domain-dir`
  fi
done
IFS="$save_IFS"
if test "$locale_dir" = FAILED || test "$gettext_dir" = FAILED
then
  echo=echo
else
  TEXTDOMAINDIR=$locale_dir
  export TEXTDOMAINDIR
  TEXTDOMAIN=sharutils
  export TEXTDOMAIN
  echo="$gettext_dir/gettext -s"
fi
touch -am 1231235999 $$.touch >/dev/null 2>&1
if test ! -f 1231235999 && test -f $$.touch; then
  shar_touch=touch
else
  shar_touch=:
  echo
  $echo 'WARNING: not restoring timestamps.  Consider getting and'
  $echo "installing GNU \`touch', distributed in GNU File Utilities..."
  echo
fi
rm -f 1231235999 $$.touch
#
if mkdir _sh59964; then
  $echo 'x -' 'creating lock directory'
else
  $echo 'failed to create lock directory'
  exit 1
fi
# ============= 63a.tcl ==============
if test -f '63a.tcl' && test "$first_param" != -c; then
  $echo 'x -' SKIPPING '63a.tcl' '(file already exists)'
else
  $echo 'x -' extracting '63a.tcl' '(binary)'
  sed 's/^X//' << 'SHAR_EOF' | uudecode &&
begin 600 63a.tcl
M(R`Z($=R96=O<GD@0RX@5'5L=6UB87,@("T@($%#1R!(;VUE=V]R:R`C,RP@
M4&%R="`V+C,H82D-"B,@.@T*(R`Z(%5S86=E.B!4>7!E(")#>6-L92(@=&\@
M<V5E('1H92!A;FEM871I;VX-"@T*(R!)9B!Y;W4@87)E('5S:6YG(%=I;F1O
M=SDU(&%N9"!V=&L@,2XS('5N8V]M;65N="!T:&4@;&EN92!B96QO=PT*;&]A
M9"!V=&MT8VP[#0H-"B,@=7-E<B!I;G1E<F9A8V4@8V]M;6%N9"!W:61G970-
M"G-O=7)C92!V=&M);G0N=&-L#0H-"B,@8W)E871E(&$@<F5N9&5R:6YG('=I
M;F1O=R!A;F0@<F5N9&5R97(-"G9T:U)E;F1E<DUA<W1E<B!R;3L-"G-E="!R
M96Y7:6X@6W)M($UA:V5296YD97)7:6YD;W==.PT*<V5T(')E;C$@6R1R96Y7
M:6X@36%K95)E;F1E<F5R73L-"G-E="!I<F5N(%LD<F5N5VEN($UA:V5296YD
M97)7:6YD;W=);G1E<F%C=&]R73L-"@T*=G1K475A9')I8R!Q=6%D.PT*("!Q
M=6%D(%-E=$-O969F:6-I96YT<R`P+C4@,2`N,B`P("XQ(#`@,"`N,B`P(#`[
M#0IV=&M386UP;&5&=6YC=&EO;B!S86UP;&4[#0H@('-A;7!L92!3971386UP
M;&5$:6UE;G-I;VYS(#4P(#4P(#4P.PT*("!S86UP;&4@4V5T26UP;&EC:71&
M=6YC=&EO;B!Q=6%D.PT*#0IV=&M#;VYT;W5R1FEL=&5R(&-O;G1O=7(Q.PT*
M("!C;VYT;W5R,2!3971);G!U="!;<V%M<&QE($=E=$]U='!U=%T[#0H@(&-O
M;G1O=7(Q(%-E=%9A;'5E(#`@,"XP.PT*=G1K0V]N=&]U<D9I;'1E<B!C;VYT
M;W5R<SL-"B`@8V]N=&]U<G,@4V5T26YP=70@6W-A;7!L92!'971/=71P=71=
M.PT*("!C;VYT;W5R<R!'96YE<F%T959A;'5E<R`U(#`N,"`Q+C([#0IV=&M0
M;VQY36%P<&5R(&-O;G1-87!P97([#0H@(&-O;G1-87!P97(@4V5T26YP=70@
M6V-O;G1O=7)S($=E=$]U='!U=%T[#0H@(&-O;G1-87!P97(@4V5T4V-A;&%R
M4F%N9V4@,"XP(#$N,CL-"@T*=G1K06-T;W(@8V]N=$%C=&]R.PT*("!C;VYT
M06-T;W(@4V5T36%P<&5R(&-O;G1-87!P97([#0H-"B,@87-S:6=N(&]U<B!A
M8W1O<B!T;R!T:&4@<F5N9&5R97(-"B1R96XQ(%-E=$)A8VMG<F]U;F0@,2`Q
M(#$[#0HD<F5N,2!!9&1!8W1O<G,@8V]N=$%C=&]R.PT*#0HC(&5N86)L92!U
M<V5R(&EN=&5R9F%C92!I;G1E<F%C=&]R#0HD:7)E;B!39715<V5R365T:&]D
M('MW;2!D96EC;VYI9GD@+G9T:TEN=&5R86-T?3L-"B1I<F5N($EN:71I86QI
M>F4[#0H-"B,@<')E=F5N="!T:&4@=&L@=VEN9&]W(&9R;VT@<VAO=VEN9R!U
M<"!T:&5N('-T87)T('1H92!E=F5N="!L;V]P#0IW;2!W:71H9')A=R`N#0H-
M"G!R;V,@0WEC;&4@>WT@>PT*"6=L;V)A;"!C;VYT36%P<&5R.PT*(`EG;&]B
M86P@8V]N=&]U<C$[#0H@"6=L;V)A;"!C;VYT;W5R<SL-"@EG;&]B86P@<F5N
M5VEN.PT*"0T*"6-O;G1-87!P97(@4V5T26YP=70@6V-O;G1O=7(Q($=E=$]U
M='!U=%T[#0H)("`-"B`@("`@("`@8V]N=&]U<C$@4V5T5F%L=64@,"`P+C`[
M("1R96Y7:6X@4F5N9&5R.PT*("`@("`@("!C;VYT;W5R,2!3971686QU92`P
M(#`N,3L@)')E;E=I;B!296YD97([#0H@("`@("`@(&-O;G1O=7(Q(%-E=%9A
M;'5E(#`@,"XR.R`D<F5N5VEN(%)E;F1E<CL-"B`@("`@("`@8V]N=&]U<C$@
M4V5T5F%L=64@,"`P+C,[("1R96Y7:6X@4F5N9&5R.PT*("`@("`@("!C;VYT
M;W5R,2!3971686QU92`P(#`N-#L@)')E;E=I;B!296YD97([#0H@("`@("`@
M(&-O;G1O=7(Q(%-E=%9A;'5E(#`@,"XU.R`D<F5N5VEN(%)E;F1E<CL-"B`@
M("`@("`@8V]N=&]U<C$@4V5T5F%L=64@,"`P+C8[("1R96Y7:6X@4F5N9&5R
M.PT*("`@("`@("!C;VYT;W5R,2!3971686QU92`P(#`N-SL@)')E;E=I;B!2
M96YD97([#0H@("`@("`@(&-O;G1O=7(Q(%-E=%9A;'5E(#`@,"XX.R`D<F5N
M5VEN(%)E;F1E<CL-"B`@("`@("`@8V]N=&]U<C$@4V5T5F%L=64@,"`P+CD[
M("1R96Y7:6X@4F5N9&5R.PT*("`@("`@("!C;VYT;W5R,2!3971686QU92`P
M(#$N,#L@)')E;E=I;B!296YD97([#0H@("`@("`@(&-O;G1O=7(Q(%-E=%9A
M;'5E(#`@,2XQ.R`D<F5N5VEN(%)E;F1E<CL-"B`@("`@("`@8V]N=&]U<C$@
M4V5T5F%L=64@,"`Q+C([("1R96Y7:6X@4F5N9&5R.PT*("`@("`@("`-"@EC
M;VYT36%P<&5R(%-E=$EN<'5T(%MC;VYT;W5R<R!'971/=71P=71=.PT*("`@
;("`@("`D<F5N5VEN(%)E;F1E<CL-"@T*?0T*
`
end
SHAR_EOF
  $shar_touch -am 0415224697 '63a.tcl' &&
  chmod 0640 '63a.tcl' ||
  $echo 'restore of' '63a.tcl' 'failed'
  if ( md5sum --help 2>&1 | grep 'sage: md5sum \[' ) >/dev/null 2>&1 \
  && ( md5sum --version 2>&1 | grep -v 'textutils 1.12' ) >/dev/null; then
    md5sum -c << SHAR_EOF >/dev/null 2>&1 \
    || $echo '63a.tcl:' 'MD5 check failed'
37365797d77f40bb0c298fc7fd774675  63a.tcl
SHAR_EOF
  else
    shar_count="`LC_ALL= LC_CTYPE= LANG= wc -c < '63a.tcl'`"
    test 2142 -eq "$shar_count" ||
    $echo '63a.tcl:' 'original size' '2142,' 'current size' "$shar_count!"
  fi
fi
# ============= 63b.tcl ==============
if test -f '63b.tcl' && test "$first_param" != -c; then
  $echo 'x -' SKIPPING '63b.tcl' '(file already exists)'
else
  $echo 'x -' extracting '63b.tcl' '(binary)'
  sed 's/^X//' << 'SHAR_EOF' | uudecode &&
begin 600 63b.tcl
M(R`Z($=R96=O<GD@0RX@5'5L=6UB87,@("T@($%#1R!(;VUE=V]R:R`C,RP@
M4&%R="`V+C,H8BD-"B,@.@T*(R`Z(%5S86=E.B!4>7!E(")#>6-L92(@=&\@
M<V5E('1H92!A;FEM871I;VX-"@T*(R!)9B!Y;W4@87)E('5S:6YG(%=I;F1O
M=SDU(&%N9"!V=&L@,2XS('5N8V]M;65N="!T:&4@;&EN92!B96QO=PT*;&]A
M9"!V=&MT8VP[#0H-"B,@9V5T('1H92!I;G1E<F%C=&]R('5I#0IS;W5R8V4@
M=G1K26YT+G1C;`T*#0HC($9I<G-T(&-R96%T92!T:&4@<F5N9&5R(&UA<W1E
M<@T*=G1K4F5N9&5R36%S=&5R(')M.PT*#0HC($YO=R!C<F5A=&4@=&AE(%)E
M;F1E<E=I;F1O=RP@4F5N9&5R97(-"B,-"G-E="!R96Y7:6X@6W)M($UA:V52
M96YD97)7:6YD;W==.PT*<V5T(')E;C$@("!;)')E;E=I;B!-86ME4F5N9&5R
M97)=.PT*<V5T(&ER96X@("!;)')E;E=I;B!-86ME4F5N9&5R5VEN9&]W26YT
M97)A8W1O<ET[#0H-"B,-"B,@3&]A9"!U<"!T:&4@9&%T80T*=G1K4W1R=6-T
M=7)E9%!O:6YT<U)E861E<B!V;VP[#0H@("`@=F]L(%-E=$9I;&5N86UE(")-
M4DED871A+G9T:R(-"B`@("!V;VP@1&5B=6=/;CL-"@T*=G1K36%R8VAI;F=#
M=6)E<R!C;VYT;W5R.PT*("!C;VYT;W5R(%-E=$EN<'5T(%MV;VP@1V5T3W5T
M<'5T73L-"B`@8V]N=&]U<B!3971686QU92`P(#(R-2XP.PT*#0IV=&M0;VQY
M36%P<&5R('9O;$UA<'!E<CL-"B`@=F]L36%P<&5R(%-E=$EN<'5T(%MC;VYT
M;W5R($=E=$]U='!U=%T[#0H-"G9T:T%C=&]R('9O;$%C=&]R.PT*("!V;VQ!
M8W1O<B!3971-87!P97(@=F]L36%P<&5R.PT*#0IV=&M/=71L:6YE1FEL=&5R
M(&]U=$QI;F4[#0H@(&]U=$QI;F4@4V5T26YP=70@6W9O;"!'971/=71P=71=
M.PT*#0IV=&M0;VQY36%P<&5R(&]U=$UA<'!E<CL-"B`@;W5T36%P<&5R(%-E
M=$EN<'5T(%MO=71,:6YE($=E=$]U='!U=%T[#0H-"G9T:T%C=&]R(&]U=$%C
M=&]R.PT*("!O=71!8W1O<B!3971-87!P97(@;W5T36%P<&5R.PT*#0HC($%D
M9"!T:&4@86-T;W)S('1O('1H92!R96YD97)E<BP@<V5T('1H92!B86-K9W)O
M=6YD(&%N9"!S:7IE#0HC#0HD<F5N,2!!9&1!8W1O<G,@;W5T06-T;W([#0HD
M<F5N,2!!9&1!8W1O<G,@=F]L06-T;W([#0HD<F5N,2!3971"86-K9W)O=6YD
M(#`@,"`P.PT*)')E;E=I;B!39713:7IE(#4P,"`T,#`[#0HD:7)E;B!);FET
M:6%L:7IE.PT*#0HC(')E;F1E<B!T:&4@:6UA9V4-"B,-"B1I<F5N(%-E=%5S
M97)-971H;V0@>W=M(&1E:6-O;FEF>2`N=G1K26YT97)A8W1].PT*)')E;E=I
M;B!296YD97([#0H-"B,@<')E=F5N="!T:&4@=&L@=VEN9&]W(&9R;VT@<VAO
M=VEN9R!U<"!T:&5N('-T87)T('1H92!E=F5N="!L;V]P#0IW;2!W:71H9')A
M=R`N#0H-"G!R;V,@0WEC;&4@>WT@>PT*"6=L;V)A;"!V;VQ-87!P97([#0H@
M"6=L;V)A;"!C;VYT;W5R.PT*"6=L;V)A;"!R96Y7:6X[#0H)#0H)9F]R('MS
M970@:2`R,#`P?2![)&D^,CDY?2![:6YC<B!I("TQ,#!]('L@(`T*("`@("`@
M("!C;VYT;W5R(%-E=%9A;'5E(#`@)&D[("1R96Y7:6X@4F5N9&5R.PT*("`@
)("`@("!]#0I]
`
end
SHAR_EOF
  $shar_touch -am 0415224697 '63b.tcl' &&
  chmod 0640 '63b.tcl' ||
  $echo 'restore of' '63b.tcl' 'failed'
  if ( md5sum --help 2>&1 | grep 'sage: md5sum \[' ) >/dev/null 2>&1 \
  && ( md5sum --version 2>&1 | grep -v 'textutils 1.12' ) >/dev/null; then
    md5sum -c << SHAR_EOF >/dev/null 2>&1 \
    || $echo '63b.tcl:' 'MD5 check failed'
66d52f6c76766985ace2d721eb7e2253  63b.tcl
SHAR_EOF
  else
    shar_count="`LC_ALL= LC_CTYPE= LANG= wc -c < '63b.tcl'`"
    test 1539 -eq "$shar_count" ||
    $echo '63b.tcl:' 'original size' '1539,' 'current size' "$shar_count!"
  fi
fi
# ============= 94a.tcl ==============
if test -f '94a.tcl' && test "$first_param" != -c; then
  $echo 'x -' SKIPPING '94a.tcl' '(file already exists)'
else
  $echo 'x -' extracting '94a.tcl' '(binary)'
  sed 's/^X//' << 'SHAR_EOF' | uudecode &&
begin 600 94a.tcl
M(R`Z($=R96=O<GD@0RX@5'5L=6UB87,@("T@($%#1R!(;VUE=V]R:R`C,RP@
M4&%R="`Y+C0H82D-"B,@.@T*#0HC('5N8V]M;65N="!T:&4@;&EN92!B96QO
M=R!I9B!Y;W4@87)E(&]N(%=I;F1O=W,Y-0T*;&]A9"!V=&MT8VP[#0HC(&=E
M="!T:&4@:6YT97)A8W1O<B!U:0T*<V]U<F-E('9T:TEN="YT8VP-"@T*(R!C
M<F5A=&4@<&QA;F5S#0HC($9I<G-T(&-R96%T92!T:&4@<F5N9&5R(&UA<W1E
M<@T*=G1K4F5N9&5R36%S=&5R(')M.PT*#0HC($YO=R!C<F5A=&4@=&AE(%)E
M;F1E<E=I;F1O=RP@4F5N9&5R97(@86YD(&)O=&@@06-T;W)S#0HC#0IS970@
M<F5N5VEN(%MR;2!-86ME4F5N9&5R5VEN9&]W73L-"G-E="!R96XQ("`@6R1R
M96Y7:6X@36%K95)E;F1E<F5R73L-"G-E="!I<F5N(%LD<F5N5VEN($UA:V52
M96YD97)7:6YD;W=);G1E<F%C=&]R73L-"@T*(R!C<F5A=&4@<&EP96QI;F4-
M"B,-"G9T:U!,3U0S1%)E861E<B!P;#-D.PT*("`@('!L,V0@4V5T6%E:1FEL
M96YA;64@(F-O;6)X>7HN8FEN(@T*("`@('!L,V0@4V5T449I;&5N86UE(")C
M;VUB<2YB:6XB#0H@("`@<&PS9"!397138V%L87)&=6YC=&EO;DYU;6)E<B`Q
M,#`[#0H@("`@<&PS9"!3971696-T;W)&=6YC=&EO;DYU;6)E<B`R,#([#0H@
M("`@<&PS9"!5<&1A=&4[#0H-"G9T:U!L86YE4V]U<F-E('!L86YE.PT*("`@
M('!L86YE(%-E=%)E<V]L=71I;VX@-3`@-3`[#0IV=&M4<F%N<V9O<FT@=')A
M;G-0,3L-"B`@("!T<F%N<U`Q(%1R86YS;&%T92`S+C<@,"XP(#(X+C,W.PT*
M("`@('1R86YS4#$@4V-A;&4@-2`U(#4[#0H@("`@=')A;G-0,2!2;W1A=&59
M(#DP.PT*=G1K5')A;G-F;W)M4&]L>49I;'1E<B!T<&0Q#0H@("`@='!D,2!3
M971);G!U="!;<&QA;F4@1V5T3W5T<'5T73L-"B`@("!T<&0Q(%-E=%1R86YS
M9F]R;2!T<F%N<U`Q.PT*=G1K3W5T;&EN949I;'1E<B!O=714<&0Q.PT*("`@
M(&]U=%1P9#$@4V5T26YP=70@6W1P9#$@1V5T3W5T<'5T73L-"G9T:U!O;'E-
M87!P97(@;6%P5'!D,3L-"B`@("!M87!4<&0Q(%-E=$EN<'5T(%MO=714<&0Q
M($=E=$]U='!U=%T[#0IV=&M!8W1O<B!T<&0Q06-T;W([#0H@("`@='!D,4%C
M=&]R(%-E=$UA<'!E<B!M87!4<&0Q.PT*("`@(%MT<&0Q06-T;W(@1V5T4')O
M<&5R='E=(%-E=$-O;&]R(#`@,"`P.PT*#0IV=&M4<F%N<V9O<FT@=')A;G-0
M,CL-"B`@("!T<F%N<U`R(%1R86YS;&%T92`Y+C(@,"XP(#,Q+C(P.PT*("`@
M('1R86YS4#(@4V-A;&4@-2`U(#4[#0H@("`@=')A;G-0,B!2;W1A=&59(#DP
M.PT*=G1K5')A;G-F;W)M4&]L>49I;'1E<B!T<&0R#0H@("`@='!D,B!3971)
M;G!U="!;<&QA;F4@1V5T3W5T<'5T73L-"B`@("!T<&0R(%-E=%1R86YS9F]R
M;2!T<F%N<U`R.PT*=G1K3W5T;&EN949I;'1E<B!O=714<&0R.PT*("`@(&]U
M=%1P9#(@4V5T26YP=70@6W1P9#(@1V5T3W5T<'5T73L-"G9T:U!O;'E-87!P
M97(@;6%P5'!D,CL-"B`@("!M87!4<&0R(%-E=$EN<'5T(%MO=714<&0R($=E
M=$]U='!U=%T[#0IV=&M!8W1O<B!T<&0R06-T;W([#0H@("`@='!D,D%C=&]R
M(%-E=$UA<'!E<B!M87!4<&0R.PT*("`@(%MT<&0R06-T;W(@1V5T4')O<&5R
M='E=(%-E=$-O;&]R(#`@,"`P.PT*#0IV=&M4<F%N<V9O<FT@=')A;G-0,SL-
M"B`@("!T<F%N<U`S(%1R86YS;&%T92`Q,RXR-R`P+C`@,S,N,S`[#0H@("`@
M=')A;G-0,R!38V%L92`U(#4@-3L-"B`@("!T<F%N<U`S(%)O=&%T95D@.3`[
M#0IV=&M4<F%N<V9O<FU0;VQY1FEL=&5R('1P9#,-"B`@("!T<&0S(%-E=$EN
M<'5T(%MP;&%N92!'971/=71P=71=.PT*("`@('1P9#,@4V5T5')A;G-F;W)M
M('1R86YS4#,[#0IV=&M/=71L:6YE1FEL=&5R(&]U=%1P9#,[#0H@("`@;W5T
M5'!D,R!3971);G!U="!;='!D,R!'971/=71P=71=.PT*=G1K4&]L>4UA<'!E
M<B!M87!4<&0S.PT*("`@(&UA<%1P9#,@4V5T26YP=70@6V]U=%1P9#,@1V5T
M3W5T<'5T73L-"G9T:T%C=&]R('1P9#-!8W1O<CL-"B`@("!T<&0S06-T;W(@
M4V5T36%P<&5R(&UA<%1P9#,[#0H@("`@6W1P9#-!8W1O<B!'9710<F]P97)T
M>5T@4V5T0V]L;W(@,"`P(#`[#0H-"G9T:T%P<&5N9%!O;'E$871A(&%P<&5N
M9$8[#0H@("`@87!P96YD1B!!9&1);G!U="!;='!D,2!'971/=71P=71=.PT*
M("`@(&%P<&5N9$8@061D26YP=70@6W1P9#(@1V5T3W5T<'5T73L-"B`@("!A
M<'!E;F1&($%D9$EN<'5T(%MT<&0S($=E=$]U='!U=%T[#0H-"G9T:U!R;V)E
M1FEL=&5R('!R;V)E.PT*("`@('!R;V)E(%-E=$EN<'5T(%MA<'!E;F1&($=E
M=$]U='!U=%T[#0H@("`@<')O8F4@4V5T4V]U<F-E(%MP;#-D($=E=$]U='!U
M=%T[#0H-"G9T:TAE9&=E2&]G(&-O;G1O=7([#0H@("`@8V]N=&]U<B!3971)
M;G!U="!;<')O8F4@1V5T3W5T<'5T73L-"B`@("!C;VYT;W5R(%-E=%-C86QE
M1F%C=&]R(#`N,#$[#0H-"G9T:U!O;'E-87!P97(@8V]N=&]U<DUA<'!E<CL-
M"B`@("!C;VYT;W5R36%P<&5R(%-E=$EN<'5T(%MC;VYT;W5R($=E=$]U='!U
M=%T[#0H@("`@979A;"!C;VYT;W5R36%P<&5R(%-E=%-C86QA<E)A;F=E(%M;
M<&PS9"!'971/=71P=71=($=E=%-C86QA<E)A;F=E73L-"G9T:T%C=&]R('!L
M86YE06-T;W([#0H@("`@<&QA;F5!8W1O<B!3971-87!P97(@8V]N=&]U<DUA
M<'!E<CL-"@T*=G1K4W1R=6-T=7)E9$=R:61/=71L:6YE1FEL=&5R(&]U=&QI
M;F4[#0H@("`@;W5T;&EN92!3971);G!U="!;<&PS9"!'971/=71P=71=.PT*
M=G1K4&]L>4UA<'!E<B!O=71L:6YE36%P<&5R.PT*("`@(&]U=&QI;F5-87!P
M97(@4V5T26YP=70@6V]U=&QI;F4@1V5T3W5T<'5T73L-"G9T:T%C=&]R(&]U
M=&QI;F5!8W1O<CL-"B`@("!O=71L:6YE06-T;W(@4V5T36%P<&5R(&]U=&QI
M;F5-87!P97([#0H@("`@6V]U=&QI;F5!8W1O<B!'9710<F]P97)T>5T@4V5T
M0V]L;W(@,"`P(#`[#0H-"B1R96XQ($%D9$%C=&]R<R!O=71L:6YE06-T;W([
M#0HD<F5N,2!!9&1!8W1O<G,@<&QA;F5!8W1O<CL-"B1R96XQ($%D9$%C=&]R
M<R!T<&0Q06-T;W([#0HD<F5N,2!!9&1!8W1O<G,@='!D,D%C=&]R.PT*)')E
M;C$@061D06-T;W)S('1P9#-!8W1O<CL-"B1R96XQ(%-E=$)A8VMG<F]U;F0@
M,2`Q(#$[#0HD<F5N5VEN(%-E=%-I>F4@-3`P(#4P,#L-"B1I<F5N($EN:71I
M86QI>F4[#0H-"G-E="!C86TQ(%LD<F5N,2!'971!8W1I=F5#86UE<F%=.PT*
M)&-A;3$@4V5T0VQI<'!I;F=286YG92`S+CDU,CDW(#4P.PT*)&-A;3$@4V5T
M1F]C86Q0;VEN="`X+C@X.3`X(#`N-3DU,#,X(#(Y+C,S-#([#0HD8V%M,2!3
M9710;W-I=&EO;B`M,3(N,S,S,B`S,2XW-#<Y(#0Q+C(S.#<[#0HD8V%M,2!#
M86QC5FEE=U!L86YE3F]R;6%L.PT*)&-A;3$@4V5T5FEE=U5P(#`N,#8P-S<R
M("TP+C,Q.3DP-2`P+CDT-30Y.#L-"@T*(R!R96YD97(@=&AE(&EM86=E#0HC
M#0HD:7)E;B!39715<V5R365T:&]D('MW;2!D96EC;VYI9GD@+G9T:TEN=&5R
M86-T?3L-"B1R96Y7:6X@4F5N9&5R.PT*#0HC('!R979E;G0@=&AE('1K('=I
M;F1O=R!F<F]M('-H;W=I;F<@=7`@=&AE;B!S=&%R="!T:&4@979E;G0@;&]O
8<`T*=VT@=VET:&1R87<@+@T*#0H-"@T*
`
end
SHAR_EOF
  $shar_touch -am 0415224697 '94a.tcl' &&
  chmod 0640 '94a.tcl' ||
  $echo 'restore of' '94a.tcl' 'failed'
  if ( md5sum --help 2>&1 | grep 'sage: md5sum \[' ) >/dev/null 2>&1 \
  && ( md5sum --version 2>&1 | grep -v 'textutils 1.12' ) >/dev/null; then
    md5sum -c << SHAR_EOF >/dev/null 2>&1 \
    || $echo '94a.tcl:' 'MD5 check failed'
1238f6542d231ec21349a2c0191e9cae  94a.tcl
SHAR_EOF
  else
    shar_count="`LC_ALL= LC_CTYPE= LANG= wc -c < '94a.tcl'`"
    test 3534 -eq "$shar_count" ||
    $echo '94a.tcl:' 'original size' '3534,' 'current size' "$shar_count!"
  fi
fi
# ============= 94c.tcl ==============
if test -f '94c.tcl' && test "$first_param" != -c; then
  $echo 'x -' SKIPPING '94c.tcl' '(file already exists)'
else
  $echo 'x -' extracting '94c.tcl' '(binary)'
  sed 's/^X//' << 'SHAR_EOF' | uudecode &&
begin 600 94c.tcl
M(R`Z($=R96=O<GD@0RX@5'5L=6UB87,@("T@($%#1R!(;VUE=V]R:R`C,RP@
M4&%R="`Y+C0H8RD-"B,@.@T*#0HC(%5N8V]M;65N="!T:&4@9F]L;&]W:6YG
M(&QI;F4@:68@=7-I;F<@5VEN9&]W.34O3E0-"FQO860@=G1K=&-L.PT*(R!G
M970@=&AE(&EN=&5R86-T;W(@=6D-"G-O=7)C92!V=&M);G0N=&-L#0H-"G9T
M:U)E;F1E<DUA<W1E<B!R;3L-"@T*<V5T(')E;E=I;B!;<FT@36%K95)E;F1E
M<E=I;F1O=UT[#0IS970@<F5N,2`@(%LD<F5N5VEN($UA:V5296YD97)E<ET[
M#0IS970@:7)E;B!;)')E;E=I;B!-86ME4F5N9&5R5VEN9&]W26YT97)A8W1O
M<ET[#0H-"B,@8W)E871E('!I<&5L:6YE#0HC#0IV=&M03$]4,T1296%D97(@
M<&PS9#L-"B`@("!P;#-D(%-E=%A96D9I;&5N86UE(")C;VUB>'EZ+F)I;B(-
M"B`@("!P;#-D(%-E=%%&:6QE;F%M92`B8V]M8G$N8FEN(@T*("`@('!L,V0@
M4V5T4V-A;&%R1G5N8W1I;VY.=6UB97(@,3`P.PT*("`@('!L,V0@4V5T5F5C
M=&]R1G5N8W1I;VY.=6UB97(@,C`R.PT*("`@('!L,V0@57!D871E.PT*#0IV
M=&M3=')U8W1U<F5D1W)I9$=E;VUE=')Y1FEL=&5R('!L86YE.PT*("`@('!L
M86YE(%-E=$EN<'5T(%MP;#-D($=E=$]U='!U=%T[#0H@("`@<&QA;F4@4V5T
M17AT96YT(#$P(#$P(#$@,3`P(#$@,3`P.PT*=G1K4W1R=6-T=7)E9$=R:61'
M96]M971R>49I;'1E<B!P;&%N93([#0H@("`@<&QA;F4R(%-E=$EN<'5T(%MP
M;#-D($=E=$]U='!U=%T[#0H@("`@<&QA;F4R(%-E=$5X=&5N="`S,"`S,"`Q
M(#$P,"`Q(#$P,#L-"G9T:U-T<G5C='5R961'<FED1V5O;65T<GE&:6QT97(@
M<&QA;F4S.PT*("`@('!L86YE,R!3971);G!U="!;<&PS9"!'971/=71P=71=
M.PT*("`@('!L86YE,R!3971%>'1E;G0@-#4@-#4@,2`Q,#`@,2`Q,#`[#0H-
M"G9T:T]U=&QI;F5&:6QT97(@;W5T5'!D.PT*("`@(&]U=%1P9"!3971);G!U
M="!;<&QA;F4@1V5T3W5T<'5T73L-"G9T:U!O;'E-87!P97(@;6%P5'!D.PT*
M("`@(&UA<%1P9"!3971);G!U="!;;W5T5'!D($=E=$]U='!U=%T[#0IV=&M!
M8W1O<B!T<&1!8W1O<CL-"B`@("!T<&1!8W1O<B!3971-87!P97(@;6%P5'!D
M.PT*("`@(%MT<&1!8W1O<B!'9710<F]P97)T>5T@4V5T0V]L;W(@,"`P(#`[
M#0H-"G9T:T]U=&QI;F5&:6QT97(@;W5T5'!D,CL-"B`@("!O=714<&0R(%-E
M=$EN<'5T(%MP;&%N93(@1V5T3W5T<'5T73L-"G9T:U!O;'E-87!P97(@;6%P
M5'!D,CL-"B`@("!M87!4<&0R(%-E=$EN<'5T(%MO=714<&0R($=E=$]U='!U
M=%T[#0IV=&M!8W1O<B!T<&0R06-T;W([#0H@("`@='!D,D%C=&]R(%-E=$UA
M<'!E<B!M87!4<&0R.PT*("`@(%MT<&0R06-T;W(@1V5T4')O<&5R='E=(%-E
M=$-O;&]R(#`@,"`P.PT*#0IV=&M/=71L:6YE1FEL=&5R(&]U=%1P9#,[#0H@
M("`@;W5T5'!D,R!3971);G!U="!;<&QA;F4S($=E=$]U='!U=%T[#0IV=&M0
M;VQY36%P<&5R(&UA<%1P9#,[#0H@("`@;6%P5'!D,R!3971);G!U="!;;W5T
M5'!D,R!'971/=71P=71=.PT*=G1K06-T;W(@='!D,T%C=&]R.PT*("`@('1P
M9#-!8W1O<B!3971-87!P97(@;6%P5'!D,SL-"B`@("!;='!D,T%C=&]R($=E
M=%!R;W!E<G1Y72!3971#;VQO<B`P(#`@,#L-"@T*#0IV=&M!<'!E;F10;VQY
M1&%T82!A<'!E;F1&.PT*("`@(&%P<&5N9$8@061D26YP=70@6W!L86YE($=E
M=$]U='!U=%T[#0H@("`@87!P96YD1B!!9&1);G!U="!;<&QA;F4R($=E=$]U
M='!U=%T[#0H@("`@87!P96YD1B!!9&1);G!U="!;<&QA;F4S($=E=$]U='!U
M=%T[#0H-"G9T:U=A<G!696-T;W(@=V%R<#L-"B`@("!W87)P(%-E=$EN<'5T
M(%MA<'!E;F1&($=E=$]U='!U=%T[#0H@("`@=V%R<"!397138V%L949A8W1O
M<B`P+C`P-#L-"G9T:T=E;VUE=')Y1FEL=&5R(&1S,G!O;'D[#0H@("`@9',R
M<&]L>2!3971);G!U="!;=V%R<"!'971/=71P=71=.PT*=G1K0VQE86Y0;VQY
M1&%T82!C;&5A;CL-"B`@("!C;&5A;B!3971);G!U="!;9',R<&]L>2!'971/
M=71P=71=.PT*=G1K1&%T85-E=$UA<'!E<B!P;&%N94UA<'!E<CL-"B`@("!P
M;&%N94UA<'!E<B!3971);G!U="!;8VQE86X@1V5T3W5T<'5T73L-"G9T:T%C
M=&]R('!L86YE06-T;W([#0H@("`@<&QA;F5!8W1O<B!3971-87!P97(@<&QA
M;F5-87!P97([#0H-"@T*=G1K4W1R=6-T=7)E9$=R:61/=71L:6YE1FEL=&5R
M(&]U=&QI;F4[#0H@("`@;W5T;&EN92!3971);G!U="!;<&PS9"!'971/=71P
M=71=.PT*=G1K4&]L>4UA<'!E<B!O=71L:6YE36%P<&5R.PT*("`@(&]U=&QI
M;F5-87!P97(@4V5T26YP=70@6V]U=&QI;F4@1V5T3W5T<'5T73L-"G9T:T%C
M=&]R(&]U=&QI;F5!8W1O<CL-"B`@("!O=71L:6YE06-T;W(@4V5T36%P<&5R
M(&]U=&QI;F5-87!P97([#0H@("`@6V]U=&QI;F5!8W1O<B!'9710<F]P97)T
M>5T@4V5T0V]L;W(@,"`P(#`[#0H-"B1R96XQ($%D9$%C=&]R<R!O=71L:6YE
M06-T;W([#0HD<F5N,2!!9&1!8W1O<G,@<&QA;F5!8W1O<CL-"B1R96XQ($%D
M9$%C=&]R<R!T<&1!8W1O<CL-"B1R96XQ($%D9$%C=&]R<R!T<&0R06-T;W([
M#0HD<F5N,2!!9&1!8W1O<G,@='!D,T%C=&]R.PT*)')E;C$@4V5T0F%C:V=R
M;W5N9"`Q(#$@,3L-"B1R96Y7:6X@4V5T4VEZ92`U,#`@-3`P.PT*#0IS970@
M8V%M,2!;)')E;C$@1V5T06-T:79E0V%M97)A73L-"B1C86TQ(%-E=$-L:7!P
M:6YG4F%N9V4@,RXY-3(Y-R`U,#L-"B1C86TQ(%-E=$9O8V%L4&]I;G0@."XX
M.#DP."`P+C4Y-3`S."`R.2XS,S0R.PT*)&-A;3$@4V5T4&]S:71I;VX@+3$R
M+C,S,S(@,S$N-S0W.2`T,2XR,S@W.PT*)&-A;3$@0V%L8U9I97=0;&%N94YO
M<FUA;#L-"B1C86TQ(%-E=%9I97=5<"`P+C`V,#<W,B`M,"XS,3DY,#4@,"XY
M-#4T.3@[#0H-"@T*(R!R96YD97(@=&AE(&EM86=E#0HC#0HD:7)E;B!39715
M<V5R365T:&]D('MW;2!D96EC;VYI9GD@+G9T:TEN=&5R86-T?3L-"B1I<F5N
M($EN:71I86QI>F4[#0HD<F5N5VEN(%)E;F1E<CL-"@T*(R!P<F5V96YT('1H
M92!T:R!W:6YD;W<@9G)O;2!S:&]W:6YG('5P('1H96X@<W1A<G0@=&AE(&5V
?96YT(&QO;W`-"G=M('=I=&AD<F%W("X-"@T*#0H-"FX@
`
end
SHAR_EOF
  $shar_touch -am 0415224697 '94c.tcl' &&
  chmod 0640 '94c.tcl' ||
  $echo 'restore of' '94c.tcl' 'failed'
  if ( md5sum --help 2>&1 | grep 'sage: md5sum \[' ) >/dev/null 2>&1 \
  && ( md5sum --version 2>&1 | grep -v 'textutils 1.12' ) >/dev/null; then
    md5sum -c << SHAR_EOF >/dev/null 2>&1 \
    || $echo '94c.tcl:' 'MD5 check failed'
fd2d4f62f356446b02cf2774a3adfb92  94c.tcl
SHAR_EOF
  else
    shar_count="`LC_ALL= LC_CTYPE= LANG= wc -c < '94c.tcl'`"
    test 3046 -eq "$shar_count" ||
    $echo '94c.tcl:' 'original size' '3046,' 'current size' "$shar_count!"
  fi
fi
# ============= 94d.tcl ==============
if test -f '94d.tcl' && test "$first_param" != -c; then
  $echo 'x -' SKIPPING '94d.tcl' '(file already exists)'
else
  $echo 'x -' extracting '94d.tcl' '(binary)'
  sed 's/^X//' << 'SHAR_EOF' | uudecode &&
begin 600 94d.tcl
M(R`Z($=R96=O<GD@0RX@5'5L=6UB87,@("T@($%#1R!(;VUE=V]R:R`C,RP@
M4&%R="`Y+C0H9"D-"B,@.@T*#0HC(%5N8V]M;65N="!T:&4@9F]L;&]W:6YG
M(&QI;F4@:68@=7-I;F<@5VEN9&]W.34O3E0-"FQO860@=G1K=&-L.PT*(R!G
M970@=&AE(&EN=&5R86-T;W(@=6D-"G-O=7)C92!V=&M);G0N=&-L#0H-"G9T
M:U)E;F1E<DUA<W1E<B!R;3L-"@T*<V5T(')E;E=I;B!;<FT@36%K95)E;F1E
M<E=I;F1O=UT[#0IS970@<F5N,2`@(%LD<F5N5VEN($UA:V5296YD97)E<ET[
M#0IS970@:7)E;B!;)')E;E=I;B!-86ME4F5N9&5R5VEN9&]W26YT97)A8W1O
M<ET[#0H-"B,@8W)E871E('!I<&5L:6YE#0HC#0IV=&M03$]4,T1296%D97(@
M<&PS9#L-"B`@("!P;#-D(%-E=%A96D9I;&5N86UE(")C;VUB>'EZ+F)I;B(-
M"B`@("!P;#-D(%-E=%%&:6QE;F%M92`B8V]M8G$N8FEN(@T*("`@('!L,V0@
M4V5T4V-A;&%R1G5N8W1I;VY.=6UB97(@,3`P.PT*("`@('!L,V0@4V5T5F5C
M=&]R1G5N8W1I;VY.=6UB97(@,C`R.PT*("`@('!L,V0@57!D871E.PT*#0IV
M=&M0;&%N95-O=7)C92!P;&%N93L-"B`@("!P;&%N92!3971297-O;'5T:6]N
M(#4P(#4P.PT*=G1K5')A;G-F;W)M('1R86YS4#$[#0H@("`@=')A;G-0,2!4
M<F%N<VQA=&4@,RXW(#`N,"`R."XS-SL-"B`@("!T<F%N<U`Q(%-C86QE(#4@
M-2`U.PT*("`@('1R86YS4#$@4F]T871E62`Y,#L-"G9T:U1R86YS9F]R;5!O
M;'E&:6QT97(@='!D,0T*("`@('1P9#$@4V5T26YP=70@6W!L86YE($=E=$]U
M='!U=%T[#0H@("`@='!D,2!39714<F%N<V9O<FT@=')A;G-0,3L-"G9T:T]U
M=&QI;F5&:6QT97(@;W5T5'!D,3L-"B`@("!O=714<&0Q(%-E=$EN<'5T(%MT
M<&0Q($=E=$]U='!U=%T[#0IV=&M0;VQY36%P<&5R(&UA<%1P9#$[#0H@("`@
M;6%P5'!D,2!3971);G!U="!;;W5T5'!D,2!'971/=71P=71=.PT*=G1K06-T
M;W(@='!D,4%C=&]R.PT*("`@('1P9#%!8W1O<B!3971-87!P97(@;6%P5'!D
M,3L-"B`@("!;='!D,4%C=&]R($=E=%!R;W!E<G1Y72!3971#;VQO<B`P(#`@
M,#L-"@T*=G1K5')A;G-F;W)M('1R86YS4#([#0H@("`@=')A;G-0,B!4<F%N
M<VQA=&4@.2XR(#`N,"`S,2XR,#L-"B`@("!T<F%N<U`R(%-C86QE(#4@-2`U
M.PT*("`@('1R86YS4#(@4F]T871E62`Y,#L-"G9T:U1R86YS9F]R;5!O;'E&
M:6QT97(@='!D,@T*("`@('1P9#(@4V5T26YP=70@6W!L86YE($=E=$]U='!U
M=%T[#0H@("`@='!D,B!39714<F%N<V9O<FT@=')A;G-0,CL-"G9T:T]U=&QI
M;F5&:6QT97(@;W5T5'!D,CL-"B`@("!O=714<&0R(%-E=$EN<'5T(%MT<&0R
M($=E=$]U='!U=%T[#0IV=&M0;VQY36%P<&5R(&UA<%1P9#([#0H@("`@;6%P
M5'!D,B!3971);G!U="!;;W5T5'!D,B!'971/=71P=71=.PT*=G1K06-T;W(@
M='!D,D%C=&]R.PT*("`@('1P9#)!8W1O<B!3971-87!P97(@;6%P5'!D,CL-
M"B`@("!;='!D,D%C=&]R($=E=%!R;W!E<G1Y72!3971#;VQO<B`P(#`@,#L-
M"@T*=G1K5')A;G-F;W)M('1R86YS4#,[#0H@("`@=')A;G-0,R!4<F%N<VQA
M=&4@,3,N,C<@,"XP(#,S+C,P.PT*("`@('1R86YS4#,@4V-A;&4@-2`U(#4[
M#0H@("`@=')A;G-0,R!2;W1A=&59(#DP.PT*=G1K5')A;G-F;W)M4&]L>49I
M;'1E<B!T<&0S#0H@("`@='!D,R!3971);G!U="!;<&QA;F4@1V5T3W5T<'5T
M73L-"B`@("!T<&0S(%-E=%1R86YS9F]R;2!T<F%N<U`S.PT*=G1K3W5T;&EN
M949I;'1E<B!O=714<&0S.PT*("`@(&]U=%1P9#,@4V5T26YP=70@6W1P9#,@
M1V5T3W5T<'5T73L-"G9T:U!O;'E-87!P97(@;6%P5'!D,SL-"B`@("!M87!4
M<&0S(%-E=$EN<'5T(%MO=714<&0S($=E=$]U='!U=%T[#0IV=&M!8W1O<B!T
M<&0S06-T;W([#0H@("`@='!D,T%C=&]R(%-E=$UA<'!E<B!M87!4<&0S.PT*
M("`@(%MT<&0S06-T;W(@1V5T4')O<&5R='E=(%-E=$-O;&]R(#`@,"`P.PT*
M#0IV=&M!<'!E;F10;VQY1&%T82!A<'!E;F1&.PT*("`@(&%P<&5N9$8@061D
M26YP=70@6W1P9#$@1V5T3W5T<'5T73L-"B`@("!A<'!E;F1&($%D9$EN<'5T
M(%MT<&0R($=E=$]U='!U=%T[#0H@("`@87!P96YD1B!!9&1);G!U="!;='!D
M,R!'971/=71P=71=.PT*#0IV=&M0<F]B949I;'1E<B!P<F]B93L-"B`@("!P
M<F]B92!3971);G!U="!;87!P96YD1B!'971/=71P=71=.PT*("`@('!R;V)E
M(%-E=%-O=7)C92!;<&PS9"!'971/=71P=71=.PT*#0IV=&M696-T;W).;W)M
M('=A<G`[#0H@("`@=V%R<"!3971);G!U="!;<')O8F4@1V5T3W5T<'5T73L-
M"B`@("!W87)P($YO<FUA;&EZ94]N#0IV=&M'96]M971R>49I;'1E<B!D<S)P
M;VQY.PT*("`@(&1S,G!O;'D@4V5T26YP=70@6W=A<G`@1V5T3W5T<'5T73L-
M"G9T:T-L96%N4&]L>41A=&$@8VQE86X[#0H@("`@8VQE86X@4V5T26YP=70@
M6V1S,G!O;'D@1V5T3W5T<'5T73L-"G9T:T1A=&%3971-87!P97(@<&QA;F5-
M87!P97([#0H@("`@<&QA;F5-87!P97(@4V5T26YP=70@6V-L96%N($=E=$]U
M='!U=%T[#0IV=&M!8W1O<B!P;&%N94%C=&]R.PT*("`@('!L86YE06-T;W(@
M4V5T36%P<&5R('!L86YE36%P<&5R.PT*("`@('!L86YE06-T;W(@57!D871E
M.PT*#0H-"G9T:U-T<G5C='5R961'<FED3W5T;&EN949I;'1E<B!O=71L:6YE
M.PT*("`@(&]U=&QI;F4@4V5T26YP=70@6W!L,V0@1V5T3W5T<'5T73L-"G9T
M:U!O;'E-87!P97(@;W5T;&EN94UA<'!E<CL-"B`@("!O=71L:6YE36%P<&5R
M(%-E=$EN<'5T(%MO=71L:6YE($=E=$]U='!U=%T[#0IV=&M!8W1O<B!O=71L
M:6YE06-T;W([#0H@("`@;W5T;&EN94%C=&]R(%-E=$UA<'!E<B!O=71L:6YE
M36%P<&5R.PT*("`@(%MO=71L:6YE06-T;W(@1V5T4')O<&5R='E=(%-E=$-O
M;&]R(#`@,"`P.PT*#0HD<F5N,2!!9&1!8W1O<G,@;W5T;&EN94%C=&]R.PT*
M)')E;C$@061D06-T;W)S('!L86YE06-T;W([#0HD<F5N,2!!9&1!8W1O<G,@
M='!D,4%C=&]R.PT*)')E;C$@061D06-T;W)S('1P9#)!8W1O<CL-"B1R96XQ
M($%D9$%C=&]R<R!T<&0S06-T;W([#0HD<F5N,2!3971"86-K9W)O=6YD(#$@
M,2`Q.PT*)')E;E=I;B!39713:7IE(#4P,"`U,#`[#0H-"G-E="!C86TQ(%LD
M<F5N,2!'971!8W1I=F5#86UE<F%=.PT*)&-A;3$@4V5T0VQI<'!I;F=286YG
M92`S+CDU,CDW(#4P.PT*)&-A;3$@4V5T1F]C86Q0;VEN="`X+C@X.3`X(#`N
M-3DU,#,X(#(Y+C,S-#([#0HD8V%M,2!39710;W-I=&EO;B`M,3(N,S,S,B`S
M,2XW-#<Y(#0Q+C(S.#<[#0HD8V%M,2!#86QC5FEE=U!L86YE3F]R;6%L.PT*
M)&-A;3$@4V5T5FEE=U5P(#`N,#8P-S<R("TP+C,Q.3DP-2`P+CDT-30Y.#L-
M"@T*#0HC(')E;F1E<B!T:&4@:6UA9V4-"B,-"B1I<F5N(%-E=%5S97)-971H
M;V0@>W=M(&1E:6-O;FEF>2`N=G1K26YT97)A8W1].PT*)&ER96X@26YI=&EA
M;&EZ93L-"B1R96Y7:6X@4F5N9&5R.PT*#0HC('!R979E;G0@=&AE('1K('=I
M;F1O=R!F<F]M('-H;W=I;F<@=7`@=&AE;B!S=&%R="!T:&4@979E;G0@;&]O
8<`T*=VT@=VET:&1R87<@+@T*#0H-"@T*
`
end
SHAR_EOF
  $shar_touch -am 0415224697 '94d.tcl' &&
  chmod 0640 '94d.tcl' ||
  $echo 'restore of' '94d.tcl' 'failed'
  if ( md5sum --help 2>&1 | grep 'sage: md5sum \[' ) >/dev/null 2>&1 \
  && ( md5sum --version 2>&1 | grep -v 'textutils 1.12' ) >/dev/null; then
    md5sum -c << SHAR_EOF >/dev/null 2>&1 \
    || $echo '94d.tcl:' 'MD5 check failed'
0e5743d8087460bab6b6933514654fe5  94d.tcl
SHAR_EOF
  else
    shar_count="`LC_ALL= LC_CTYPE= LANG= wc -c < '94d.tcl'`"
    test 3489 -eq "$shar_count" ||
    $echo '94d.tcl:' 'original size' '3489,' 'current size' "$shar_count!"
  fi
fi
rm -fr _sh59964
exit 0

From ???@??? Wed Apr 16 07:18:33 1997
Received: from jec317.its.rpi.edu (pedrih@jec317.its.rpi.edu [128.113.10.67])
	by mail1.its.rpi.edu (8.8.5/8.8.5) with ESMTP id XAA97070
	for <citrit@rpi.edu>; Tue, 15 Apr 1997 23:11:00 -0400
From: Helio Pedrini <pedrih>
Received: (pedrih@localhost) by jec317.its.rpi.edu (951211.SGI.8.6.12.PATCH1042/8.6.4) id XAA01467 for citrit@rpi.edu; Tue, 15 Apr 1997 23:10:58 -0400
Date: Tue, 15 Apr 1997 23:10:58 -0400
Message-Id: <199704160310.XAA01467@jec317.its.rpi.edu>
To: citrit@rpi.edu
Subject: HomeWork 3
X-UIDL: a95350c0fbf9fb126a1c97be5f127413

#!/bin/sh
# This is a shell archive (produced by GNU sharutils 4.2).
# To extract the files from this archive, save it to some FILE, remove
# everything before the `!/bin/sh' line above, then type `sh FILE'.
#
# Made on 1997-04-15 23:09 EDT by <pedrih@jec317>.
# Source directory was `/afs/rpi.edu/home/75/pedrih/RPI_courses.dir/DV.dir/hw_3.dir'.
#
# Existing files will *not* be overwritten unless `-c' is specified.
#
# This shar contains:
# length mode       name
# ------ ---------- ------------------------------------------
#   1414 -rw------- deci_ex6_3a.tcl
#   1672 -rw------- deci_ex6_3b.tcl
#   1277 -rw------- exerc6_3a.tcl
#   1534 -rw------- exerc6_3b.tcl
#   4101 -rw------- exerc9_4a.tcl
#   4382 -rw------- exerc9_4b.tcl
#   3848 -rw------- exerc9_4c.tcl
#   3856 -rw------- exerc9_4d.tcl
#   3899 -rw------- exerc9_4e.tcl
#
save_IFS="${IFS}"
IFS="${IFS}:"
gettext_dir=FAILED
locale_dir=FAILED
first_param="$1"
for dir in $PATH
do
  if test "$gettext_dir" = FAILED && test -f $dir/gettext \
     && ($dir/gettext --version >/dev/null 2>&1)
  then
    set `$dir/gettext --version 2>&1`
    if test "$3" = GNU
    then
      gettext_dir=$dir
    fi
  fi
  if test "$locale_dir" = FAILED && test -f $dir/shar \
     && ($dir/shar --print-text-domain-dir >/dev/null 2>&1)
  then
    locale_dir=`$dir/shar --print-text-domain-dir`
  fi
done
IFS="$save_IFS"
if test "$locale_dir" = FAILED || test "$gettext_dir" = FAILED
then
  echo=echo
else
  TEXTDOMAINDIR=$locale_dir
  export TEXTDOMAINDIR
  TEXTDOMAIN=sharutils
  export TEXTDOMAIN
  echo="$gettext_dir/gettext -s"
fi
touch -am 1231235999 $$.touch >/dev/null 2>&1
if test ! -f 1231235999 && test -f $$.touch; then
  shar_touch=touch
else
  shar_touch=:
  echo
  $echo 'WARNING: not restoring timestamps.  Consider getting and'
  $echo "installing GNU \`touch', distributed in GNU File Utilities..."
  echo
fi
rm -f 1231235999 $$.touch
#
if mkdir _sh01441; then
  $echo 'x -' 'creating lock directory'
else
  $echo 'failed to create lock directory'
  exit 1
fi
# ============= deci_ex6_3a.tcl ==============
if test -f 'deci_ex6_3a.tcl' && test "$first_param" != -c; then
  $echo 'x -' SKIPPING 'deci_ex6_3a.tcl' '(file already exists)'
else
  $echo 'x -' extracting 'deci_ex6_3a.tcl' '(text)'
  sed 's/^X//' << 'SHAR_EOF' > 'deci_ex6_3a.tcl' &&
# Homework 3 - Advanced Computer Graphics and Data Visualization
# Helio Pedrini
#
# Animation sequence for the quadric example including Decimation filter 
X
# get the interactor ui
source /campus/visualization/vtk/1.1/common/examples/tcl/vtkInt.tcl
X
# create the render master
vtkRenderMaster rm;
X
# create a RenderWindow and Renderer
set renWin [rm MakeRenderWindow];
set ren1 [$renWin MakeRenderer];
set iren [$renWin MakeRenderWindowInteractor];
X
vtkQuadric quad;
X  quad SetCoefficients 0.5 1 .2 0 .1 0 0 .2 0 0;
X  
vtkSampleFunction sample;
X  sample SetSampleDimensions 50 50 50;
X  sample SetImplicitFunction quad;
X  
vtkContourFilter contours;
X  contours SetInput [sample GetOutput];
X  contours GenerateValues 5 0.0 1.2;
X
vtkDecimate decimation;
X  decimation SetInput [contours GetOutput];
X  decimation SetTargetReduction 0.9;
X  
vtkPolyMapper contMapper;
X  contMapper SetInput [decimation GetOutput];
X  contMapper SetScalarRange 0.0 1.2;
X  
vtkActor contActor;
X  contActor SetMapper contMapper;
X
# assign our actor to the renderer
$ren1 SetBackground 1 1 1;
$ren1 AddActors contActor;
X
# render the sequence of images, creating an animation.
for {set iteration 0} {$iteration <= 4} {incr iteration 1} {
X   contours GenerateValues $iteration 0.0 1.2;
X   $iren SetUserMethod {wm deiconify .vtkInteract};
X   $iren Initialize;
}
X
# prevent the tk window from showing up then start the event loop
wm withdraw .
X
SHAR_EOF
  $shar_touch -am 0415224597 'deci_ex6_3a.tcl' &&
  chmod 0600 'deci_ex6_3a.tcl' ||
  $echo 'restore of' 'deci_ex6_3a.tcl' 'failed'
  if ( md5sum --help 2>&1 | grep 'sage: md5sum \[' ) >/dev/null 2>&1 \
  && ( md5sum --version 2>&1 | grep -v 'textutils 1.12' ) >/dev/null; then
    md5sum -c << SHAR_EOF >/dev/null 2>&1 \
    || $echo 'deci_ex6_3a.tcl:' 'MD5 check failed'
db00da1c77f53ff7ae52489b939ea35c  deci_ex6_3a.tcl
SHAR_EOF
  else
    shar_count="`LC_ALL= LC_CTYPE= LANG= wc -c < 'deci_ex6_3a.tcl'`"
    test 1414 -eq "$shar_count" ||
    $echo 'deci_ex6_3a.tcl:' 'original size' '1414,' 'current size' "$shar_count!"
  fi
fi
# ============= deci_ex6_3b.tcl ==============
if test -f 'deci_ex6_3b.tcl' && test "$first_param" != -c; then
  $echo 'x -' SKIPPING 'deci_ex6_3b.tcl' '(file already exists)'
else
  $echo 'x -' extracting 'deci_ex6_3b.tcl' '(text)'
  sed 's/^X//' << 'SHAR_EOF' > 'deci_ex6_3b.tcl' &&
# Homework 3 - Advanced Computer Graphics and Data Visualization
# Helio Pedrini
#
# Animation sequence for the MRIhead example including Decimation filter
X
# get the interactor ui
source /campus/visualization/vtk/1.1/common/examples/tcl/vtkInt.tcl
X
# create the render master
vtkRenderMaster rm;
X
# create the RenderWindow and Renderer
set renWin [rm MakeRenderWindow];
set ren1   [$renWin MakeRenderer];
set iren   [$renWin MakeRenderWindowInteractor];
X
# load up the data
vtkStructuredPointsReader vol;
X    vol SetFilename "/home/62/citrit/public/Spring97/examples/Vtk/MRIdata.vtk"
X    vol DebugOn;
X
vtkMarchingCubes contour;
X  contour SetInput [vol GetOutput];
X  contour SetValue 0 225.0;
X
vtkDecimate decimation;
X  decimation SetInput [contour GetOutput];
X  decimation SetTargetReduction 0.9;
X  
vtkPolyMapper volMapper;
X  volMapper SetInput [decimation GetOutput];
X  volMapper ScalarsVisibleOff;
X
vtkActor volActor;
X  volActor SetMapper volMapper;
X
vtkOutlineFilter outLine;
X  outLine SetInput [vol GetOutput];
X
vtkPolyMapper outMapper;
X  outMapper SetInput [outLine GetOutput];
X
vtkActor outActor;
X  outActor SetMapper outMapper;
X
# add the actors to the renderer, set the background and size
$ren1 AddActors outActor;
$ren1 AddActors volActor;
$ren1 SetBackground 0 0 0;
$renWin SetSize 500 400;
X
# render the sequence of images, creating an animation
set value 225.0;
for {set iteration 0} {$iteration <= 4} {incr iteration 1} {
X   contour GenerateValues $iteration 0.0 $value;
X   set value [expr $value-10];
X   $iren SetUserMethod {wm deiconify .vtkInteract};
X   $renWin Render;
}
X
# prevent the tk window from showing up then start the event loop
wm withdraw .
SHAR_EOF
  $shar_touch -am 0415230797 'deci_ex6_3b.tcl' &&
  chmod 0600 'deci_ex6_3b.tcl' ||
  $echo 'restore of' 'deci_ex6_3b.tcl' 'failed'
  if ( md5sum --help 2>&1 | grep 'sage: md5sum \[' ) >/dev/null 2>&1 \
  && ( md5sum --version 2>&1 | grep -v 'textutils 1.12' ) >/dev/null; then
    md5sum -c << SHAR_EOF >/dev/null 2>&1 \
    || $echo 'deci_ex6_3b.tcl:' 'MD5 check failed'
86b16e3e91d085709e40ab7428065fea  deci_ex6_3b.tcl
SHAR_EOF
  else
    shar_count="`LC_ALL= LC_CTYPE= LANG= wc -c < 'deci_ex6_3b.tcl'`"
    test 1672 -eq "$shar_count" ||
    $echo 'deci_ex6_3b.tcl:' 'original size' '1672,' 'current size' "$shar_count!"
  fi
fi
# ============= exerc6_3a.tcl ==============
if test -f 'exerc6_3a.tcl' && test "$first_param" != -c; then
  $echo 'x -' SKIPPING 'exerc6_3a.tcl' '(file already exists)'
else
  $echo 'x -' extracting 'exerc6_3a.tcl' '(text)'
  sed 's/^X//' << 'SHAR_EOF' > 'exerc6_3a.tcl' &&
# Homework 3 - Advanced Computer Graphics and Data Visualization
# Helio Pedrini
#
# Animation sequence for the quadric example
X
# get the interactor ui
source /campus/visualization/vtk/1.1/common/examples/tcl/vtkInt.tcl
X
# create the render master
vtkRenderMaster rm;
X
# create a RenderWindow and Renderer
set renWin [rm MakeRenderWindow];
set ren1 [$renWin MakeRenderer];
set iren [$renWin MakeRenderWindowInteractor];
X
vtkQuadric quad;
X  quad SetCoefficients 0.5 1 .2 0 .1 0 0 .2 0 0;
X  
vtkSampleFunction sample;
X  sample SetSampleDimensions 50 50 50;
X  sample SetImplicitFunction quad;
X  
vtkContourFilter contours;
X  contours SetInput [sample GetOutput];
X  contours GenerateValues 5 0.0 1.2;
X  
vtkPolyMapper contMapper;
X  contMapper SetInput [contours GetOutput];
X  contMapper SetScalarRange 0.0 1.2;
X  
vtkActor contActor;
X  contActor SetMapper contMapper;
X
# assign our actor to the renderer
$ren1 SetBackground 1 1 1;
$ren1 AddActors contActor;
X
# render the sequence of images, creating an animation.
for {set iteration 0} {$iteration <= 4} {incr iteration 1} {
X   contours GenerateValues $iteration 0.0 1.2;
X   $iren SetUserMethod {wm deiconify .vtkInteract};
X   $iren Initialize;
}
X
# prevent the tk window from showing up then start the event loop
wm withdraw .
X
SHAR_EOF
  $shar_touch -am 0415224597 'exerc6_3a.tcl' &&
  chmod 0600 'exerc6_3a.tcl' ||
  $echo 'restore of' 'exerc6_3a.tcl' 'failed'
  if ( md5sum --help 2>&1 | grep 'sage: md5sum \[' ) >/dev/null 2>&1 \
  && ( md5sum --version 2>&1 | grep -v 'textutils 1.12' ) >/dev/null; then
    md5sum -c << SHAR_EOF >/dev/null 2>&1 \
    || $echo 'exerc6_3a.tcl:' 'MD5 check failed'
32b536996680a6195251805d642497e9  exerc6_3a.tcl
SHAR_EOF
  else
    shar_count="`LC_ALL= LC_CTYPE= LANG= wc -c < 'exerc6_3a.tcl'`"
    test 1277 -eq "$shar_count" ||
    $echo 'exerc6_3a.tcl:' 'original size' '1277,' 'current size' "$shar_count!"
  fi
fi
# ============= exerc6_3b.tcl ==============
if test -f 'exerc6_3b.tcl' && test "$first_param" != -c; then
  $echo 'x -' SKIPPING 'exerc6_3b.tcl' '(file already exists)'
else
  $echo 'x -' extracting 'exerc6_3b.tcl' '(text)'
  sed 's/^X//' << 'SHAR_EOF' > 'exerc6_3b.tcl' &&
# Homework 3 - Advanced Computer Graphics and Data Visualization
# Helio Pedrini
#
# Animation sequence for the MRIhead example
X
# get the interactor ui
source /campus/visualization/vtk/1.1/common/examples/tcl/vtkInt.tcl
X
# create the render master
vtkRenderMaster rm;
X
# create the RenderWindow and Renderer
set renWin [rm MakeRenderWindow];
set ren1   [$renWin MakeRenderer];
set iren   [$renWin MakeRenderWindowInteractor];
X
# load up the data
vtkStructuredPointsReader vol;
X    vol SetFilename "/home/62/citrit/public/Spring97/examples/Vtk/MRIdata.vtk"
X    vol DebugOn;
X
vtkMarchingCubes contour;
X  contour SetInput [vol GetOutput];
X  contour SetValue 0 225.0;
X
vtkPolyMapper volMapper;
X  volMapper SetInput [contour GetOutput];
X  volMapper ScalarsVisibleOff;
X
vtkActor volActor;
X  volActor SetMapper volMapper;
X
vtkOutlineFilter outLine;
X  outLine SetInput [vol GetOutput];
X
vtkPolyMapper outMapper;
X  outMapper SetInput [outLine GetOutput];
X
vtkActor outActor;
X  outActor SetMapper outMapper;
X
# add the actors to the renderer, set the background and size
$ren1 AddActors outActor;
$ren1 AddActors volActor;
$ren1 SetBackground 0 0 0;
$renWin SetSize 500 400;
X
# render the sequence of images, creating an animation
set value 225.0;
for {set iteration 0} {$iteration <= 4} {incr iteration 1} {
X   contour GenerateValues $iteration 0.0 $value;
X   set value [expr $value-10];
X   $iren SetUserMethod {wm deiconify .vtkInteract};
X   $renWin Render;
}
X
# prevent the tk window from showing up then start the event loop
wm withdraw .
SHAR_EOF
  $shar_touch -am 0415230597 'exerc6_3b.tcl' &&
  chmod 0600 'exerc6_3b.tcl' ||
  $echo 'restore of' 'exerc6_3b.tcl' 'failed'
  if ( md5sum --help 2>&1 | grep 'sage: md5sum \[' ) >/dev/null 2>&1 \
  && ( md5sum --version 2>&1 | grep -v 'textutils 1.12' ) >/dev/null; then
    md5sum -c << SHAR_EOF >/dev/null 2>&1 \
    || $echo 'exerc6_3b.tcl:' 'MD5 check failed'
a8b68d7a7fe3640d322e47ade28475db  exerc6_3b.tcl
SHAR_EOF
  else
    shar_count="`LC_ALL= LC_CTYPE= LANG= wc -c < 'exerc6_3b.tcl'`"
    test 1534 -eq "$shar_count" ||
    $echo 'exerc6_3b.tcl:' 'original size' '1534,' 'current size' "$shar_count!"
  fi
fi
# ============= exerc9_4a.tcl ==============
if test -f 'exerc9_4a.tcl' && test "$first_param" != -c; then
  $echo 'x -' SKIPPING 'exerc9_4a.tcl' '(file already exists)'
else
  $echo 'x -' extracting 'exerc9_4a.tcl' '(text)'
  sed 's/^X//' << 'SHAR_EOF' > 'exerc9_4a.tcl' &&
# Homework 3 - Advanced Computer Graphics and Data Visualization
# Helio Pedrini
#
# Visualization of velocity flow in the combustor by using "vtkProbeFilter" and "vtkHedgeHog"
X
# get the interactor ui
source /campus/visualization/vtk/1.1/common/examples/tcl/vtkInt.tcl
X
# create the render master
vtkRenderMaster rm;
X
# create a RenderWindow and Renderer
set renWin [rm MakeRenderWindow];
set ren1   [$renWin MakeRenderer];
set iren [$renWin MakeRenderWindowInteractor];
X
# create pipeline
vtkPLOT3DReader pl3d;
X    pl3d SetXYZFilename "/home/62/citrit/public/Spring97/examples/Vtk/COMBXYZ.BIN"
X    pl3d SetQFilename "/home/62/citrit/public/Spring97/examples/Vtk/COMBQ.BIN"
X    pl3d SetScalarFunctionNumber 100;
X    pl3d SetVectorFunctionNumber 202;
X    pl3d Update;
X
vtkPlaneSource plane;
X    plane SetResolution 50 50;
X
vtkTransform transP1;
X    transP1 Translate 3.7 0.0 28.37;
X    transP1 Scale 5 5 5;
X    transP1 RotateY 90;
X    
vtkTransformPolyFilter tpd1
X    tpd1 SetInput [plane GetOutput];
X    tpd1 SetTransform transP1;
X    
vtkOutlineFilter outTpd1;
X    outTpd1 SetInput [tpd1 GetOutput];
X    
vtkPolyMapper mapTpd1;
X    mapTpd1 SetInput [outTpd1 GetOutput];
X    
vtkActor tpd1Actor;
X    tpd1Actor SetMapper mapTpd1;
X    [tpd1Actor GetProperty] SetColor 0 0 0;
X
vtkTransform transP2;
X    transP2 Translate 9.2 0.0 31.20;
X    transP2 Scale 5 5 5;
X    transP2 RotateY 90;
X    
vtkTransformPolyFilter tpd2
X    tpd2 SetInput [plane GetOutput];
X    tpd2 SetTransform transP2;
X    
vtkOutlineFilter outTpd2;
X    outTpd2 SetInput [tpd2 GetOutput];
X    
vtkPolyMapper mapTpd2;
X    mapTpd2 SetInput [outTpd2 GetOutput];
X    
vtkActor tpd2Actor;
X    tpd2Actor SetMapper mapTpd2;
X    [tpd2Actor GetProperty] SetColor 0 0 0;
X
vtkTransform transP3;
X    transP3 Translate 13.27 0.0 33.30;
X    transP3 Scale 5 5 5;
X    transP3 RotateY 90;
X    
vtkTransformPolyFilter tpd3
X    tpd3 SetInput [plane GetOutput];
X    tpd3 SetTransform transP3;
X    
vtkOutlineFilter outTpd3;
X    outTpd3 SetInput [tpd3 GetOutput];
X    
vtkPolyMapper mapTpd3;
X    mapTpd3 SetInput [outTpd3 GetOutput];
X    
vtkActor tpd3Actor;
X    tpd3Actor SetMapper mapTpd3;
X    [tpd3Actor GetProperty] SetColor 0 0 0;
X
vtkAppendPolyData appendF;
X    appendF AddInput [tpd1 GetOutput];
X    appendF AddInput [tpd2 GetOutput];
X    appendF AddInput [tpd3 GetOutput];
X    
vtkProbeFilter probe;
X    probe SetInput [appendF GetOutput];
X    probe SetSource [pl3d GetOutput];
X
# vtkHedgeHog: create oriented lines from vector data
vtkHedgeHog hedgehog;
X    hedgehog SetScaleFactor 0.008;
X    hedgehog SetInput [probe GetOutput];
X    
# HedgeHog Mapper
vtkPolyMapper hedgehogMapper;
X    hedgehogMapper SetInput [hedgehog GetOutput];
X    eval hedgehogMapper SetScalarRange [[pl3d GetOutput] GetScalarRange];
X    
# HedgeHog Actor
vtkActor hedgehogActor;
X    hedgehogActor SetMapper hedgehogMapper;
X
vtkContourFilter contour;
X    contour SetInput [hedgehog GetOutput];
X    eval contour GenerateValues 50 [[pl3d GetOutput] GetScalarRange];
X    
vtkPolyMapper contourMapper;
X    contourMapper SetInput [contour GetOutput];
X    eval contourMapper SetScalarRange [[pl3d GetOutput] GetScalarRange];
X    
vtkActor planeActor;
X    planeActor SetMapper contourMapper;
X
vtkStructuredGridOutlineFilter outline;
X    outline SetInput [pl3d GetOutput];
X    
vtkPolyMapper outlineMapper;
X    outlineMapper SetInput [outline GetOutput];
X    
vtkActor outlineActor;
X    outlineActor SetMapper outlineMapper;
X    [outlineActor GetProperty] SetColor 0 0 0;
X
$ren1 AddActors outlineActor;
$ren1 AddActors hedgehogActor;
$ren1 AddActors tpd1Actor;
$ren1 AddActors tpd2Actor;
$ren1 AddActors tpd3Actor;
$ren1 SetBackground 1 1 1;
$renWin SetSize 500 500;
$iren Initialize;
X
set cam1 [$ren1 GetActiveCamera];
$cam1 SetClippingRange 3.95297 50;
$cam1 SetFocalPoint 8.88908 0.595038 29.3342;
$cam1 SetPosition -12.3332 31.7479 41.2387;
$cam1 CalcViewPlaneNormal;
$cam1 SetViewUp 0.060772 -0.319905 0.945498;
X
# render the image
$iren SetUserMethod {wm deiconify .vtkInteract};
$renWin Render;
X
# prevent the tk window from showing up then start the event loop
wm withdraw .
SHAR_EOF
  $shar_touch -am 0415230097 'exerc9_4a.tcl' &&
  chmod 0600 'exerc9_4a.tcl' ||
  $echo 'restore of' 'exerc9_4a.tcl' 'failed'
  if ( md5sum --help 2>&1 | grep 'sage: md5sum \[' ) >/dev/null 2>&1 \
  && ( md5sum --version 2>&1 | grep -v 'textutils 1.12' ) >/dev/null; then
    md5sum -c << SHAR_EOF >/dev/null 2>&1 \
    || $echo 'exerc9_4a.tcl:' 'MD5 check failed'
6a95b9296017aa1b3cbd565c5b81b883  exerc9_4a.tcl
SHAR_EOF
  else
    shar_count="`LC_ALL= LC_CTYPE= LANG= wc -c < 'exerc9_4a.tcl'`"
    test 4101 -eq "$shar_count" ||
    $echo 'exerc9_4a.tcl:' 'original size' '4101,' 'current size' "$shar_count!"
  fi
fi
# ============= exerc9_4b.tcl ==============
if test -f 'exerc9_4b.tcl' && test "$first_param" != -c; then
  $echo 'x -' SKIPPING 'exerc9_4b.tcl' '(file already exists)'
else
  $echo 'x -' extracting 'exerc9_4b.tcl' '(text)'
  sed 's/^X//' << 'SHAR_EOF' > 'exerc9_4b.tcl' &&
# Homework 3 - Advanced Computer Graphics and Data Visualization
# Helio Pedrini
#
# Visualization of velocity flow in the combustor by using "vtkProbeFilter" and "vtkStreamLine"
X
# get the interactor ui
source /campus/visualization/vtk/1.1/common/examples/tcl/vtkInt.tcl
X
# create the render master
vtkRenderMaster rm;
X
# create a RenderWindow and Renderer
set renWin [rm MakeRenderWindow];
set ren1   [$renWin MakeRenderer];
set iren [$renWin MakeRenderWindowInteractor];
X
# create pipeline
vtkPLOT3DReader pl3d;
X    pl3d SetXYZFilename "/home/62/citrit/public/Spring97/examples/Vtk/COMBXYZ.BIN"
X    pl3d SetQFilename "/home/62/citrit/public/Spring97/examples/Vtk/COMBQ.BIN"
X    pl3d SetScalarFunctionNumber 100;
X    pl3d SetVectorFunctionNumber 202;
X    pl3d Update;
X
vtkPlaneSource plane;
X    plane SetResolution 50 50;
X
vtkTransform transP1;
X    transP1 Translate 3.7 0.0 28.37;
X    transP1 Scale 5 5 5;
X    transP1 RotateY 90;
X    
vtkTransformPolyFilter tpd1
X    tpd1 SetInput [plane GetOutput];
X    tpd1 SetTransform transP1;
X    
vtkOutlineFilter outTpd1;
X    outTpd1 SetInput [tpd1 GetOutput];
X    
vtkPolyMapper mapTpd1;
X    mapTpd1 SetInput [outTpd1 GetOutput];
X    
vtkActor tpd1Actor;
X    tpd1Actor SetMapper mapTpd1;
X    [tpd1Actor GetProperty] SetColor 0 0 0;
X
vtkTransform transP2;
X    transP2 Translate 9.2 0.0 31.20;
X    transP2 Scale 5 5 5;
X    transP2 RotateY 90;
X    
vtkTransformPolyFilter tpd2
X    tpd2 SetInput [plane GetOutput];
X    tpd2 SetTransform transP2;
X    
vtkOutlineFilter outTpd2;
X    outTpd2 SetInput [tpd2 GetOutput];
X    
vtkPolyMapper mapTpd2;
X    mapTpd2 SetInput [outTpd2 GetOutput];
X    
vtkActor tpd2Actor;
X    tpd2Actor SetMapper mapTpd2;
X    [tpd2Actor GetProperty] SetColor 0 0 0;
X
vtkTransform transP3;
X    transP3 Translate 13.27 0.0 33.30;
X    transP3 Scale 5 5 5;
X    transP3 RotateY 90;
X    
vtkTransformPolyFilter tpd3
X    tpd3 SetInput [plane GetOutput];
X    tpd3 SetTransform transP3;
X    
vtkOutlineFilter outTpd3;
X    outTpd3 SetInput [tpd3 GetOutput];
X    
vtkPolyMapper mapTpd3;
X    mapTpd3 SetInput [outTpd3 GetOutput];
X    
vtkActor tpd3Actor;
X    tpd3Actor SetMapper mapTpd3;
X    [tpd3Actor GetProperty] SetColor 0 0 0;
X
vtkAppendPolyData appendF;
X    appendF AddInput [tpd1 GetOutput];
X    appendF AddInput [tpd2 GetOutput];
X    appendF AddInput [tpd3 GetOutput];
X    
vtkProbeFilter probe;
X    probe SetInput [appendF GetOutput];
X    probe SetSource [pl3d GetOutput];
X
# create random clouds of points
vtkPointSource seeds1;
X    eval seeds1 SetCenter 3.7 0.0 28.37;
X    seeds1 SetRadius 0.6;
X    seeds1 SetNumberOfPoints 50;
X
vtkPointSource seeds2;
X    eval seeds2 SetCenter 9.2 0.0 31.20;
X    seeds2 SetRadius 0.8;
X    seeds2 SetNumberOfPoints 100;
X
vtkPointSource seeds3;
X    eval seeds3 SetCenter 13.27 0.0 33.30;
X    seeds3 SetRadius 1.0;
X    seeds3 SetNumberOfPoints 100;
X
vtkAppendFilter seeds;
X    seeds AddInput [seeds1 GetOutput];
X    seeds AddInput [seeds2 GetOutput];
X    seeds AddInput [seeds3 GetOutput];
X
# vtkStreamLine: generate streamline
vtkStreamLine stream_line;
X    stream_line SetInput [probe GetOutput];
X    stream_line SetSource [seeds GetOutput];
X    stream_line SetMaximumPropagationTime 100;
X    stream_line SetStepLength 0.1;
X
# StreamLine Mapper
vtkPolyMapper streamlineMapper;
X    streamlineMapper SetInput [stream_line GetOutput];
X    eval streamlineMapper SetScalarRange [[pl3d GetOutput] GetScalarRange];
X
# StreamLine Actor
vtkActor streamlineActor;
X    streamlineActor SetMapper streamlineMapper;
X	 
vtkStructuredGridOutlineFilter outline;
X    outline SetInput [pl3d GetOutput];
X
vtkPolyMapper outlineMapper;
X    outlineMapper SetInput [outline GetOutput];
X
vtkActor outlineActor;
X    outlineActor SetMapper outlineMapper;
X    [outlineActor GetProperty] SetColor 0 0 0;
X
$ren1 AddActors outlineActor;
$ren1 AddActors streamlineActor;
$ren1 AddActors tpd1Actor;
$ren1 AddActors tpd2Actor;
$ren1 AddActors tpd3Actor;
$ren1 SetBackground 1 1 1;
$renWin SetSize 500 500;
$iren Initialize;
X
set cam1 [$ren1 GetActiveCamera];
$cam1 SetClippingRange 3.95297 50;
$cam1 SetFocalPoint 8.88908 0.595038 29.3342;
$cam1 SetPosition -12.3332 31.7479 41.2387;
$cam1 CalcViewPlaneNormal;
$cam1 SetViewUp 0.060772 -0.319905 0.945498;
X
# render the image
$iren SetUserMethod {wm deiconify .vtkInteract};
$renWin Render;
X
# prevent the tk window from showing up then start the event loop
wm withdraw .
SHAR_EOF
  $shar_touch -am 0415230197 'exerc9_4b.tcl' &&
  chmod 0600 'exerc9_4b.tcl' ||
  $echo 'restore of' 'exerc9_4b.tcl' 'failed'
  if ( md5sum --help 2>&1 | grep 'sage: md5sum \[' ) >/dev/null 2>&1 \
  && ( md5sum --version 2>&1 | grep -v 'textutils 1.12' ) >/dev/null; then
    md5sum -c << SHAR_EOF >/dev/null 2>&1 \
    || $echo 'exerc9_4b.tcl:' 'MD5 check failed'
d64e8f891a42223fdb3b3a8affb6f061  exerc9_4b.tcl
SHAR_EOF
  else
    shar_count="`LC_ALL= LC_CTYPE= LANG= wc -c < 'exerc9_4b.tcl'`"
    test 4382 -eq "$shar_count" ||
    $echo 'exerc9_4b.tcl:' 'original size' '4382,' 'current size' "$shar_count!"
  fi
fi
# ============= exerc9_4c.tcl ==============
if test -f 'exerc9_4c.tcl' && test "$first_param" != -c; then
  $echo 'x -' SKIPPING 'exerc9_4c.tcl' '(file already exists)'
else
  $echo 'x -' extracting 'exerc9_4c.tcl' '(text)'
  sed 's/^X//' << 'SHAR_EOF' > 'exerc9_4c.tcl' &&
# Homework 3 - Advanced Computer Graphics and Data Visualization
# Helio Pedrini
#
# Visualization of velocity flow in the combustor by using "vtkProbeFilter" and "vtkWarpVector"
X
# get the interactor ui
source /campus/visualization/vtk/1.1/common/examples/tcl/vtkInt.tcl
X
# create the render master
vtkRenderMaster rm;
X
# create the RenderWindow, Renderer and both Actors
set renWin [rm MakeRenderWindow];
set ren1   [$renWin MakeRenderer];
set iren [$renWin MakeRenderWindowInteractor];
X
# create pipeline
vtkPLOT3DReader pl3d;
X    pl3d SetXYZFilename "/home/62/citrit/public/Spring97/examples/Vtk/COMBXYZ.BIN"
X    pl3d SetQFilename "/home/62/citrit/public/Spring97/examples/Vtk/COMBQ.BIN"
X    pl3d SetScalarFunctionNumber 100;
X    pl3d SetVectorFunctionNumber 202;
X    pl3d Update;
X
vtkPlaneSource plane;
X    plane SetResolution 50 50;
X
vtkTransform transP1;
X    transP1 Translate 3.7 0.0 28.37;
X    transP1 Scale 5 5 5;
X    transP1 RotateY 90;
X
vtkTransformPolyFilter tpd1
X    tpd1 SetInput [plane GetOutput];
X    tpd1 SetTransform transP1;
X
vtkOutlineFilter outTpd1;
X    outTpd1 SetInput [tpd1 GetOutput];
X
vtkPolyMapper mapTpd1;
X    mapTpd1 SetInput [outTpd1 GetOutput];
X
vtkActor tpd1Actor;
X    tpd1Actor SetMapper mapTpd1;
X    [tpd1Actor GetProperty] SetColor 0 0 0;
X
vtkTransform transP2;
X    transP2 Translate 9.2 0.0 31.20;
X    transP2 Scale 5 5 5;
X    transP2 RotateY 90;
X
vtkTransformPolyFilter tpd2
X    tpd2 SetInput [plane GetOutput];
X    tpd2 SetTransform transP2;
X
vtkOutlineFilter outTpd2;
X    outTpd2 SetInput [tpd2 GetOutput];
X
vtkPolyMapper mapTpd2;
X    mapTpd2 SetInput [outTpd2 GetOutput];
X
vtkActor tpd2Actor;
X    tpd2Actor SetMapper mapTpd2;
X    [tpd2Actor GetProperty] SetColor 0 0 0;
X
vtkTransform transP3;
X    transP3 Translate 13.27 0.0 33.30;
X    transP3 Scale 5 5 5;
X    transP3 RotateY 90;
X
vtkTransformPolyFilter tpd3
X    tpd3 SetInput [plane GetOutput];
X    tpd3 SetTransform transP3;
X
vtkOutlineFilter outTpd3;
X    outTpd3 SetInput [tpd3 GetOutput];
X
vtkPolyMapper mapTpd3;
X    mapTpd3 SetInput [outTpd3 GetOutput];
X
vtkActor tpd3Actor;
X    tpd3Actor SetMapper mapTpd3;
X    [tpd3Actor GetProperty] SetColor 0 0 0;
X
vtkAppendPolyData appendF;
X    appendF AddInput [tpd1 GetOutput];
X    appendF AddInput [tpd2 GetOutput];
X    appendF AddInput [tpd3 GetOutput];
X       
vtkProbeFilter probe;
X    probe SetInput [appendF GetOutput];
X    probe SetSource [pl3d GetOutput];
X
# vtkGeometryFilter: extract geometry from data
vtkGeometryFilter ds2poly;
X    ds2poly SetInput [probe GetOutput];
X
# vtkWarpVector: deform geometry with vector data
vtkWarpVector warpvector;
X    warpvector SetInput [ds2poly GetOutput];
X    warpvector SetScaleFactor 0.004;
X     
# WarpVector Mapper
vtkDataSetMapper warpvectorMapper;
X    warpvectorMapper SetInput [warpvector GetOutput];
X    eval warpvectorMapper SetScalarRange [[pl3d GetOutput] GetScalarRange];
X
# WarpVector Actor
vtkActor warpvectorActor;
X    warpvectorActor SetMapper warpvectorMapper;
X	 
vtkStructuredGridOutlineFilter outline;
X    outline SetInput [pl3d GetOutput];
X
vtkPolyMapper outlineMapper;
X    outlineMapper SetInput [outline GetOutput];
X
vtkActor outlineActor;
X    outlineActor SetMapper outlineMapper;
X    [outlineActor GetProperty] SetColor 0 0 0;
X
$ren1 AddActors outlineActor;
$ren1 AddActors warpvectorActor;
$ren1 AddActors tpd1Actor;
$ren1 AddActors tpd2Actor;
$ren1 AddActors tpd3Actor;
$ren1 SetBackground 1 1 1;
$renWin SetSize 500 500;
$iren Initialize;
X
set cam1 [$ren1 GetActiveCamera];
$cam1 SetClippingRange 3.95297 50;
$cam1 SetFocalPoint 8.88908 0.595038 29.3342;
$cam1 SetPosition -12.3332 31.7479 41.2387;
$cam1 CalcViewPlaneNormal;
$cam1 SetViewUp 0.060772 -0.319905 0.945498;
X
# render the image
$iren SetUserMethod {wm deiconify .vtkInteract};
$renWin Render;
X
# prevent the tk window from showing up then start the event loop
wm withdraw .
SHAR_EOF
  $shar_touch -am 0415230197 'exerc9_4c.tcl' &&
  chmod 0600 'exerc9_4c.tcl' ||
  $echo 'restore of' 'exerc9_4c.tcl' 'failed'
  if ( md5sum --help 2>&1 | grep 'sage: md5sum \[' ) >/dev/null 2>&1 \
  && ( md5sum --version 2>&1 | grep -v 'textutils 1.12' ) >/dev/null; then
    md5sum -c << SHAR_EOF >/dev/null 2>&1 \
    || $echo 'exerc9_4c.tcl:' 'MD5 check failed'
6a75a1d9890b07516452392f45106575  exerc9_4c.tcl
SHAR_EOF
  else
    shar_count="`LC_ALL= LC_CTYPE= LANG= wc -c < 'exerc9_4c.tcl'`"
    test 3848 -eq "$shar_count" ||
    $echo 'exerc9_4c.tcl:' 'original size' '3848,' 'current size' "$shar_count!"
  fi
fi
# ============= exerc9_4d.tcl ==============
if test -f 'exerc9_4d.tcl' && test "$first_param" != -c; then
  $echo 'x -' SKIPPING 'exerc9_4d.tcl' '(file already exists)'
else
  $echo 'x -' extracting 'exerc9_4d.tcl' '(text)'
  sed 's/^X//' << 'SHAR_EOF' > 'exerc9_4d.tcl' &&
# Homework 3 - Advanced Computer Graphics and Data Visualization
# Helio Pedrini
#
# Visualization of velocity flow in the combustor by using "vtkProbeFilter" and "vtkVectorNorm"
X
# get the interactor ui
source /campus/visualization/vtk/1.1/common/examples/tcl/vtkInt.tcl
X
# create the render master
vtkRenderMaster rm;
X
# create a RenderWindow and Renderer
set renWin [rm MakeRenderWindow];
set ren1   [$renWin MakeRenderer];
set iren [$renWin MakeRenderWindowInteractor];
X
# create pipeline
vtkPLOT3DReader pl3d;
X    pl3d SetXYZFilename "/home/62/citrit/public/Spring97/examples/Vtk/COMBXYZ.BIN"
X    pl3d SetQFilename "/home/62/citrit/public/Spring97/examples/Vtk/COMBQ.BIN"
X    pl3d SetScalarFunctionNumber 100;
X    pl3d SetVectorFunctionNumber 202;
X    pl3d Update;
X
vtkPlaneSource plane;
X    plane SetResolution 50 50;
X
vtkTransform transP1;
X    transP1 Translate 3.7 0.0 28.37;
X    transP1 Scale 5 5 5;
X    transP1 RotateY 90;
X
vtkTransformPolyFilter tpd1
X    tpd1 SetInput [plane GetOutput];
X    tpd1 SetTransform transP1;
X
vtkOutlineFilter outTpd1;
X    outTpd1 SetInput [tpd1 GetOutput];
X
vtkPolyMapper mapTpd1;
X    mapTpd1 SetInput [outTpd1 GetOutput];
X
vtkActor tpd1Actor;
X    tpd1Actor SetMapper mapTpd1;
X    [tpd1Actor GetProperty] SetColor 0 0 0;
X
vtkTransform transP2;
X    transP2 Translate 9.2 0.0 31.20;
X    transP2 Scale 5 5 5;
X    transP2 RotateY 90;
X
vtkTransformPolyFilter tpd2
X    tpd2 SetInput [plane GetOutput];
X    tpd2 SetTransform transP2;
X
vtkOutlineFilter outTpd2;
X    outTpd2 SetInput [tpd2 GetOutput];
X
vtkPolyMapper mapTpd2;
X    mapTpd2 SetInput [outTpd2 GetOutput];
X
vtkActor tpd2Actor;
X    tpd2Actor SetMapper mapTpd2;
X    [tpd2Actor GetProperty] SetColor 0 0 0;
X
vtkTransform transP3;
X    transP3 Translate 13.27 0.0 33.30;
X    transP3 Scale 5 5 5;
X    transP3 RotateY 90;
X
vtkTransformPolyFilter tpd3
X    tpd3 SetInput [plane GetOutput];
X    tpd3 SetTransform transP3;
X
vtkOutlineFilter outTpd3;
X    outTpd3 SetInput [tpd3 GetOutput];
X
vtkPolyMapper mapTpd3;
X    mapTpd3 SetInput [outTpd3 GetOutput];
X
vtkActor tpd3Actor;
X    tpd3Actor SetMapper mapTpd3;
X    [tpd3Actor GetProperty] SetColor 0 0 0;
X
vtkAppendPolyData appendF;
X    appendF AddInput [tpd1 GetOutput];
X    appendF AddInput [tpd2 GetOutput];
X    appendF AddInput [tpd3 GetOutput];
X    
vtkProbeFilter probe;
X    probe SetInput [appendF GetOutput];
X    probe SetSource [pl3d GetOutput];
X
# vtkVectorNorm: generate scalars from Euclidean norm of vectors
vtkVectorNorm vectornorm;
X    vectornorm SetInput [probe GetOutput];
X    vectornorm NormalizeOn;
X    
vtkContourFilter contour;
X    contour SetInput [vectornorm GetOutput];
X    eval contour GenerateValues 50 [[pl3d GetOutput] GetScalarRange];
X
# VectorNorm Mapper
vtkDataSetMapper vectornormMapper;
X    vectornormMapper SetInput [contour GetOutput];
X    eval vectornormMapper SetScalarRange [[pl3d GetOutput] GetScalarRange];
X
# VectorNorm Actor
vtkActor vectornormActor;
X    vectornormActor SetMapper vectornormMapper;
X	 
vtkStructuredGridOutlineFilter outline;
X    outline SetInput [pl3d GetOutput];
X
vtkPolyMapper outlineMapper;
X    outlineMapper SetInput [outline GetOutput];
X
vtkActor outlineActor;
X    outlineActor SetMapper outlineMapper;
X    [outlineActor GetProperty] SetColor 0 0 0;
X
$ren1 AddActors outlineActor;
$ren1 AddActors vectornormActor;
$ren1 AddActors tpd1Actor;
$ren1 AddActors tpd2Actor;
$ren1 AddActors tpd3Actor;
$ren1 SetBackground 1 1 1;
$renWin SetSize 500 500;
$iren Initialize;
X
set cam1 [$ren1 GetActiveCamera];
$cam1 SetClippingRange 3.95297 50;
$cam1 SetFocalPoint 8.88908 0.595038 29.3342;
$cam1 SetPosition -12.3332 31.7479 41.2387;
$cam1 CalcViewPlaneNormal;
$cam1 SetViewUp 0.060772 -0.319905 0.945498;
X
# render the image
$iren SetUserMethod {wm deiconify .vtkInteract};
$renWin Render;
X
# prevent the tk window from showing up then start the event loop
wm withdraw .
SHAR_EOF
  $shar_touch -am 0415230297 'exerc9_4d.tcl' &&
  chmod 0600 'exerc9_4d.tcl' ||
  $echo 'restore of' 'exerc9_4d.tcl' 'failed'
  if ( md5sum --help 2>&1 | grep 'sage: md5sum \[' ) >/dev/null 2>&1 \
  && ( md5sum --version 2>&1 | grep -v 'textutils 1.12' ) >/dev/null; then
    md5sum -c << SHAR_EOF >/dev/null 2>&1 \
    || $echo 'exerc9_4d.tcl:' 'MD5 check failed'
d0f01543baee61377992e3087a7158c3  exerc9_4d.tcl
SHAR_EOF
  else
    shar_count="`LC_ALL= LC_CTYPE= LANG= wc -c < 'exerc9_4d.tcl'`"
    test 3856 -eq "$shar_count" ||
    $echo 'exerc9_4d.tcl:' 'original size' '3856,' 'current size' "$shar_count!"
  fi
fi
# ============= exerc9_4e.tcl ==============
if test -f 'exerc9_4e.tcl' && test "$first_param" != -c; then
  $echo 'x -' SKIPPING 'exerc9_4e.tcl' '(file already exists)'
else
  $echo 'x -' extracting 'exerc9_4e.tcl' '(text)'
  sed 's/^X//' << 'SHAR_EOF' > 'exerc9_4e.tcl' &&
# Homework 3 - Advanced Computer Graphics and Data Visualization
# Helio Pedrini
#
# Visualization of velocity flow in the combustor by using "vtkProbeFilter" and "vtkVectorDot"
X
# get the interactor ui
source /campus/visualization/vtk/1.1/common/examples/tcl/vtkInt.tcl
X
# create the render master
vtkRenderMaster rm;
X
# create the RenderWindow, Renderer and both Actors
set renWin [rm MakeRenderWindow];
set ren1   [$renWin MakeRenderer];
set iren [$renWin MakeRenderWindowInteractor];
X
# create pipeline
vtkPLOT3DReader pl3d;
X    pl3d SetXYZFilename "/home/62/citrit/public/Spring97/examples/Vtk/COMBXYZ.BIN"
X    pl3d SetQFilename "/home/62/citrit/public/Spring97/examples/Vtk/COMBQ.BIN"
X    pl3d SetScalarFunctionNumber 100;
X    pl3d SetVectorFunctionNumber 202;
X    pl3d Update;
X
vtkPlaneSource plane;
X    plane SetResolution 50 50;
X
vtkTransform transP1;
X    transP1 Translate 3.7 0.0 28.37;
X    transP1 Scale 5 5 5;
X    transP1 RotateY 90;
X
vtkTransformPolyFilter tpd1
X    tpd1 SetInput [plane GetOutput];
X    tpd1 SetTransform transP1;
X
vtkOutlineFilter outTpd1;
X    outTpd1 SetInput [tpd1 GetOutput];
X
vtkPolyMapper mapTpd1;
X    mapTpd1 SetInput [outTpd1 GetOutput];
X
vtkActor tpd1Actor;
X    tpd1Actor SetMapper mapTpd1;
X    [tpd1Actor GetProperty] SetColor 0 0 0;
X
vtkTransform transP2;
X    transP2 Translate 9.2 0.0 31.20;
X    transP2 Scale 5 5 5;
X    transP2 RotateY 90;
X
vtkTransformPolyFilter tpd2
X    tpd2 SetInput [plane GetOutput];
X    tpd2 SetTransform transP2;
X
vtkOutlineFilter outTpd2;
X    outTpd2 SetInput [tpd2 GetOutput];
X
vtkPolyMapper mapTpd2;
X    mapTpd2 SetInput [outTpd2 GetOutput];
X
vtkActor tpd2Actor;
X    tpd2Actor SetMapper mapTpd2;
X    [tpd2Actor GetProperty] SetColor 0 0 0;
X
vtkTransform transP3;
X    transP3 Translate 13.27 0.0 33.30;
X    transP3 Scale 5 5 5;
X    transP3 RotateY 90;
X
vtkTransformPolyFilter tpd3
X    tpd3 SetInput [plane GetOutput];
X    tpd3 SetTransform transP3;
X
vtkOutlineFilter outTpd3;
X    outTpd3 SetInput [tpd3 GetOutput];
X
vtkPolyMapper mapTpd3;
X    mapTpd3 SetInput [outTpd3 GetOutput];
X
vtkActor tpd3Actor;
X    tpd3Actor SetMapper mapTpd3;
X    [tpd3Actor GetProperty] SetColor 0 0 0;
X
vtkAppendPolyData appendF;
X    appendF AddInput [tpd1 GetOutput];
X    appendF AddInput [tpd2 GetOutput];
X    appendF AddInput [tpd3 GetOutput];
X    
vtkProbeFilter probe;
X    probe SetInput [appendF GetOutput];
X    probe SetSource [pl3d GetOutput];
X
vtkContourFilter contour;
X    contour SetInput [probe GetOutput];
X    eval contour GenerateValues 50 [[pl3d GetOutput] GetScalarRange];
X
# vtkVectorDot: generate scalars from dot product of vectors and normals
vtkVectorDot vectordot;
X    vectordot SetInput [probe GetOutput];
X    eval contour GenerateValues 50 [[pl3d GetOutput] GetScalarRange];
X
# VectorDot Mapper
vtkDataSetMapper vectordotMapper;
X    vectordotMapper SetInput [contour GetOutput];
X    eval vectordotMapper SetScalarRange [[pl3d GetOutput] GetScalarRange];
X
# VectorDot Actor
vtkActor vectordotActor;
X    vectordotActor SetMapper vectordotMapper;
X	 
vtkStructuredGridOutlineFilter outline;
X    outline SetInput [pl3d GetOutput];
X
vtkPolyMapper outlineMapper;
X    outlineMapper SetInput [outline GetOutput];
X
vtkActor outlineActor;
X    outlineActor SetMapper outlineMapper;
X    [outlineActor GetProperty] SetColor 0 0 0;
X
$ren1 AddActors outlineActor;
$ren1 AddActors vectordotActor;
$ren1 AddActors tpd1Actor;
$ren1 AddActors tpd2Actor;
$ren1 AddActors tpd3Actor;
$ren1 SetBackground 1 1 1;
$renWin SetSize 500 500;
$iren Initialize;
X
set cam1 [$ren1 GetActiveCamera];
$cam1 SetClippingRange 3.95297 50;
$cam1 SetFocalPoint 8.88908 0.595038 29.3342;
$cam1 SetPosition -12.3332 31.7479 41.2387;
$cam1 CalcViewPlaneNormal;
$cam1 SetViewUp 0.060772 -0.319905 0.945498;
X
# render the image
$iren SetUserMethod {wm deiconify .vtkInteract};
$renWin Render;
X
# prevent the tk window from showing up then start the event loop
wm withdraw .
SHAR_EOF
  $shar_touch -am 0415230397 'exerc9_4e.tcl' &&
  chmod 0600 'exerc9_4e.tcl' ||
  $echo 'restore of' 'exerc9_4e.tcl' 'failed'
  if ( md5sum --help 2>&1 | grep 'sage: md5sum \[' ) >/dev/null 2>&1 \
  && ( md5sum --version 2>&1 | grep -v 'textutils 1.12' ) >/dev/null; then
    md5sum -c << SHAR_EOF >/dev/null 2>&1 \
    || $echo 'exerc9_4e.tcl:' 'MD5 check failed'
bc325ed15781cbeaca63eef21193006c  exerc9_4e.tcl
SHAR_EOF
  else
    shar_count="`LC_ALL= LC_CTYPE= LANG= wc -c < 'exerc9_4e.tcl'`"
    test 3899 -eq "$shar_count" ||
    $echo 'exerc9_4e.tcl:' 'original size' '3899,' 'current size' "$shar_count!"
  fi
fi
rm -fr _sh01441
exit 0

From ???@??? Wed Apr 16 07:18:35 1997
Received: from cs.rpi.edu (root@barney.cs.rpi.edu [128.213.3.4])
	by mail1.its.rpi.edu (8.8.5/8.8.5) with ESMTP id XAA08414
	for <citrit@rpi.edu>; Tue, 15 Apr 1997 23:23:52 -0400
Received: from fridge.cs.rpi.edu (moriartk@fridge.cs.rpi.edu [128.213.2.50])
	by cs.rpi.edu (8.8.5/8.8.5) with ESMTP id XAA10432
	for <citrit@rpi.edu>; Tue, 15 Apr 1997 23:23:49 -0400 (EDT)
From: Kathleen Moriarty <moriartk@cs.rpi.edu>
Received: (from moriartk@localhost)
	by fridge.cs.rpi.edu (8.8.5/8.8.5) id XAA28979
	for citrit@rpi.edu; Tue, 15 Apr 1997 23:23:47 -0400 (EDT)
Date: Tue, 15 Apr 1997 23:23:47 -0400 (EDT)
Message-Id: <199704160323.XAA28979@fridge.cs.rpi.edu>
To: citrit@rpi.edu
Subject: Homework 3
X-UIDL: bbe05dd8c8aee8f105fddccaf298216c

#! /bin/sh
# This is a shell archive.  Remove anything before this line, then feed it
# into a shell via "sh file" or similar.  To overwrite existing files,
# type "sh file -c".
# The tool that generated this appeared in the comp.sources.unix newsgroup;
# send mail to comp-sources-unix@uunet.uu.net if you want that tool.
# Contents:  MRIHead.tcl MRIHeadDecimate.tcl Sample.tcl
#   SampleDecimate.tcl hedgehog.tcl prob1.tcl prob2.tcl streamline.tcl
#   vectordot.tcl vectornorm.tcl warpvector.tcl
# Wrapped by moriartk@fridge.cs.rpi.edu on Tue Apr 15 23:22:57 1997
PATH=/bin:/usr/bin:/usr/ucb ; export PATH
echo If this archive is complete, you will see the following message:
echo '          "shar: End of archive."'
if test -f 'MRIHead.tcl' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'MRIHead.tcl'\"
else
  echo shar: Extracting \"'MRIHead.tcl'\" \(1242 characters\)
  sed "s/^X//" >'MRIHead.tcl' <<'END_OF_FILE'
X# If you are using Window95 and vtk 1.3 uncomment the line below
X# load vtktcl;
X
X# get the interactor ui
Xsource vtkInt.tcl
X
X# First create the render master
XvtkRenderMaster rm;
X
X# Now create the RenderWindow, Renderer
X#
Xset renWin [rm MakeRenderWindow];
Xset ren1   [$renWin MakeRenderer];
Xset iren   [$renWin MakeRenderWindowInteractor];
X
X#
X# Load up the data
XvtkStructuredPointsReader vol;
X    vol SetFilename "MRIdata.vtk"
X    vol DebugOn;
X
XvtkMarchingCubes contour;
X  contour SetInput [vol GetOutput];
X  contour SetValue 0 225.0;
X
XvtkPolyMapper volMapper;
X  volMapper SetInput [contour GetOutput];
X  volMapper ScalarsVisibleOff;
X
XvtkActor volActor;
X  volActor SetMapper volMapper;
X
XvtkOutlineFilter outLine;
X  outLine SetInput [vol GetOutput];
X
XvtkPolyMapper outMapper;
X  outMapper SetInput [outLine GetOutput];
X
XvtkActor outActor;
X  outActor SetMapper outMapper;
X
X# Add the actors to the renderer, set the background and size
X#
X$ren1 AddActors outActor;
X$ren1 AddActors volActor;
X$ren1 SetBackground 0 0 0;
X$renWin SetSize 500 400;
X$iren Initialize;
X
X# render the image
X#
X$iren SetUserMethod {wm deiconify .vtkInteract};
X$renWin Render;
X
X# prevent the tk window from showing up then start the event loop
Xwm withdraw .
X
Xsource ./prob2.tcl
END_OF_FILE
  if test 1242 -ne `wc -c <'MRIHead.tcl'`; then
    echo shar: \"'MRIHead.tcl'\" unpacked with wrong size!
  fi
  # end of 'MRIHead.tcl'
fi
if test -f 'MRIHeadDecimate.tcl' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'MRIHeadDecimate.tcl'\"
else
  echo shar: Extracting \"'MRIHeadDecimate.tcl'\" \(1587 characters\)
  sed "s/^X//" >'MRIHeadDecimate.tcl' <<'END_OF_FILE'
X# If you are using Window95 and vtk 1.3 uncomment the line below
X# load vtktcl;
X
X# get the interactor ui
Xsource vtkInt.tcl
X
X# First create the render master
XvtkRenderMaster rm;
X
X# Now create the RenderWindow, Renderer
X#
Xset renWin [rm MakeRenderWindow];
Xset ren1   [$renWin MakeRenderer];
Xset iren   [$renWin MakeRenderWindowInteractor];
X
X#
X# Load up the data
XvtkStructuredPointsReader vol;
X    vol SetFilename "MRIdata.vtk"
X    vol DebugOn;
X
XvtkMarchingCubes contour;
X  contour SetInput [vol GetOutput];
X  contour SetValue 0 225.0;
X
XvtkDecimate deci;
X  deci SetInput [contour GetOutput];
X  deci SetTargetReduction 0.9;
X  deci SetAspectRatio 20;
X  deci SetInitialError 0.0005;
X  deci SetErrorIncrement 0.001;
X  deci SetMaximumIterations 6;
X  deci SetInitialFeatureAngle 30;
X
XvtkConnectivityFilter connect;
X  connect SetInput [deci GetOutput];
X  connect ExtractLargestRegion;
X
XvtkDataSetMapper volMapper;
X  volMapper SetInput [connect GetOutput];
X  volMapper ScalarsVisibleOff;
X
XvtkActor volActor;
X  volActor SetMapper volMapper;
X
XvtkOutlineFilter outLine;
X  outLine SetInput [vol GetOutput];
X
XvtkPolyMapper outMapper;
X  outMapper SetInput [outLine GetOutput];
X
XvtkActor outActor;
X  outActor SetMapper outMapper;
X
X# Add the actors to the renderer, set the background and size
X#
X$ren1 AddActors outActor;
X$ren1 AddActors volActor;
X$ren1 SetBackground 0 0 0;
X$renWin SetSize 500 400;
X$iren Initialize;
X
X# render the image
X#
X$iren SetUserMethod {wm deiconify .vtkInteract};
X$renWin Render;
X
X# prevent the tk window from showing up then start the event loop
Xwm withdraw .
X
Xsource ./prob2.tcl
END_OF_FILE
  if test 1587 -ne `wc -c <'MRIHeadDecimate.tcl'`; then
    echo shar: \"'MRIHeadDecimate.tcl'\" unpacked with wrong size!
  fi
  # end of 'MRIHeadDecimate.tcl'
fi
if test -f 'Sample.tcl' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'Sample.tcl'\"
else
  echo shar: Extracting \"'Sample.tcl'\" \(968 characters\)
  sed "s/^X//" >'Sample.tcl' <<'END_OF_FILE'
X#load vtktcl;
X# user interface command widget
Xsource ./vtkInt.tcl
X
X# create a rendering window and renderer
XvtkRenderMaster rm;
Xset renWin [rm MakeRenderWindow];
Xset ren1 [$renWin MakeRenderer];
Xset iren [$renWin MakeRenderWindowInteractor];
X
XvtkQuadric quad;
X  quad SetCoefficients 0.5 1 .2 0 .1 0 0 .2 0 0;
XvtkSampleFunction sample;
X  sample SetSampleDimensions 20 20 20;
X  sample SetImplicitFunction quad;
XvtkContourFilter contours;
X  contours SetInput [sample GetOutput];
X  contours GenerateValues 5 0.0 1.2;
XvtkPolyMapper contMapper;
X  contMapper SetInput [contours GetOutput];
X  contMapper SetScalarRange 0.0 1.2;
XvtkActor contActor;
X  contActor SetMapper contMapper;
X
X# assign our actor to the renderer
X$ren1 SetBackground 1 1 1;
X$ren1 AddActors contActor;
X
X# enable user interface interactor
X$iren SetUserMethod {wm deiconify .vtkInteract};
X$iren Initialize;
X
X# prevent the tk window from showing up then start the event loop
Xwm withdraw .
X
Xsource ./prob1.tcl
END_OF_FILE
  if test 968 -ne `wc -c <'Sample.tcl'`; then
    echo shar: \"'Sample.tcl'\" unpacked with wrong size!
  fi
  # end of 'Sample.tcl'
fi
if test -f 'SampleDecimate.tcl' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'SampleDecimate.tcl'\"
else
  echo shar: Extracting \"'SampleDecimate.tcl'\" \(1309 characters\)
  sed "s/^X//" >'SampleDecimate.tcl' <<'END_OF_FILE'
X#load vtktcl;
X# user interface command widget
Xsource ./vtkInt.tcl
X
X# create a rendering window and renderer
XvtkRenderMaster rm;
Xset renWin [rm MakeRenderWindow];
Xset ren1 [$renWin MakeRenderer];
Xset iren [$renWin MakeRenderWindowInteractor];
X
XvtkQuadric quad;
X  quad SetCoefficients 0.5 1 .2 0 .1 0 0 .2 0 0;
XvtkSampleFunction sample;
X  sample SetSampleDimensions 20 20 20;
X  sample SetImplicitFunction quad;
XvtkContourFilter contours;
X  contours SetInput [sample GetOutput];
X  contours GenerateValues 5 0.0 1.2;
X
XvtkDecimate deci;
X  deci SetInput [contours GetOutput];
X  deci SetTargetReduction 0.9;
X  deci SetAspectRatio 20;
X  deci SetInitialError 0.0005;
X  deci SetErrorIncrement 0.001;
X  deci SetMaximumIterations 6;
X  deci SetInitialFeatureAngle 30;
X
XvtkConnectivityFilter connect;
X  connect SetInput [deci GetOutput];
X  connect ExtractLargestRegion;
X
XvtkDataSetMapper contMapper;
X  contMapper SetInput [connect GetOutput];
X  contMapper ScalarsVisibleOn;
X
XvtkActor contActor;
X  contActor SetMapper contMapper;
X
X# assign our actor to the renderer
X$ren1 SetBackground 1 1 1;
X$ren1 AddActors contActor;
X
X# enable user interface interactor
X$iren SetUserMethod {wm deiconify .vtkInteract};
X$iren Initialize;
X
X# prevent the tk window from showing up then start the event loop
Xwm withdraw .
X
Xsource ./prob1.tcl
END_OF_FILE
  if test 1309 -ne `wc -c <'SampleDecimate.tcl'`; then
    echo shar: \"'SampleDecimate.tcl'\" unpacked with wrong size!
  fi
  # end of 'SampleDecimate.tcl'
fi
if test -f 'hedgehog.tcl' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'hedgehog.tcl'\"
else
  echo shar: Extracting \"'hedgehog.tcl'\" \(3477 characters\)
  sed "s/^X//" >'hedgehog.tcl' <<'END_OF_FILE'
X#unommet the line below if you are on Windows95
X# load vtktcl;
X# get the interactor ui
Xsource vtkInt.tcl
X
X# create planes
X# First create the render master
XvtkRenderMaster rm;
X
X# Now create the RenderWindow, Renderer and both Actors
X#
Xset renWin [rm MakeRenderWindow];
Xset ren1   [$renWin MakeRenderer];
Xset iren [$renWin MakeRenderWindowInteractor];
X
X# create pipeline
X#
XvtkPLOT3DReader pl3d;
X    pl3d SetXYZFilename "combxyz.bin"
X    pl3d SetQFilename "combq.bin"
X    pl3d SetScalarFunctionNumber 100;
X    pl3d SetVectorFunctionNumber 202;
X    pl3d Update;
X
XvtkPlaneSource plane;
X    plane SetResolution 50 50;
XvtkTransform transP1;
X    transP1 Translate 3.7 0.0 28.37;
X    transP1 Scale 5 5 5;
X    transP1 RotateY 90;
XvtkTransformPolyFilter tpd1
X    tpd1 SetInput [plane GetOutput];
X    tpd1 SetTransform transP1;
XvtkOutlineFilter outTpd1;
X    outTpd1 SetInput [tpd1 GetOutput];
XvtkPolyMapper mapTpd1;
X    mapTpd1 SetInput [outTpd1 GetOutput];
XvtkActor tpd1Actor;
X    tpd1Actor SetMapper mapTpd1;
X    [tpd1Actor GetProperty] SetColor 0 0 0;
X
XvtkTransform transP2;
X    transP2 Translate 9.2 0.0 31.20;
X    transP2 Scale 5 5 5;
X    transP2 RotateY 90;
XvtkTransformPolyFilter tpd2
X    tpd2 SetInput [plane GetOutput];
X    tpd2 SetTransform transP2;
XvtkOutlineFilter outTpd2;
X    outTpd2 SetInput [tpd2 GetOutput];
XvtkPolyMapper mapTpd2;
X    mapTpd2 SetInput [outTpd2 GetOutput];
XvtkActor tpd2Actor;
X    tpd2Actor SetMapper mapTpd2;
X    [tpd2Actor GetProperty] SetColor 0 0 0;
X
XvtkTransform transP3;
X    transP3 Translate 13.27 0.0 33.30;
X    transP3 Scale 5 5 5;
X    transP3 RotateY 90;
XvtkTransformPolyFilter tpd3
X    tpd3 SetInput [plane GetOutput];
X    tpd3 SetTransform transP3;
XvtkOutlineFilter outTpd3;
X    outTpd3 SetInput [tpd3 GetOutput];
XvtkPolyMapper mapTpd3;
X    mapTpd3 SetInput [outTpd3 GetOutput];
XvtkActor tpd3Actor;
X    tpd3Actor SetMapper mapTpd3;
X    [tpd3Actor GetProperty] SetColor 0 0 0;
X
XvtkAppendPolyData appendF;
X    appendF AddInput [tpd1 GetOutput];
X    appendF AddInput [tpd2 GetOutput];
X    appendF AddInput [tpd3 GetOutput];
X
XvtkProbeFilter probe;
X    probe SetInput [appendF GetOutput];
X    probe SetSource [pl3d GetOutput];
X
XvtkHedgeHog hedge;
X    hedge SetInput [probe GetOutput ];
X    hedge SetScaleFactor 0.02;
X
X#vtkContourFilter contour;
X#    contour SetInput [probe GetOutput];
X#    eval contour GenerateValues 50 [[pl3d GetOutput] GetScalarRange];
X
XvtkPolyMapper contourMapper;
X    contourMapper SetInput [hedge GetOutput];
X    eval contourMapper SetScalarRange [[pl3d GetOutput] GetScalarRange];
XvtkActor planeActor;
X    planeActor SetMapper contourMapper;
X
XvtkStructuredGridOutlineFilter outline;
X    outline SetInput [pl3d GetOutput];
XvtkPolyMapper outlineMapper;
X    outlineMapper SetInput [outline GetOutput];
XvtkActor outlineActor;
X    outlineActor SetMapper outlineMapper;
X    [outlineActor GetProperty] SetColor 0 0 0;
X
X$ren1 AddActors outlineActor;
X$ren1 AddActors planeActor;
X$ren1 AddActors tpd1Actor;
X$ren1 AddActors tpd2Actor;
X$ren1 AddActors tpd3Actor;
X$ren1 SetBackground 1 1 1;
X$renWin SetSize 500 500;
X$iren Initialize;
X
Xset cam1 [$ren1 GetActiveCamera];
X$cam1 SetClippingRange 3.95297 50;
X$cam1 SetFocalPoint 8.88908 0.595038 29.3342;
X$cam1 SetPosition -12.3332 31.7479 41.2387;
X$cam1 CalcViewPlaneNormal;
X$cam1 SetViewUp 0.060772 -0.319905 0.945498;
X
X# render the image
X#
X$iren SetUserMethod {wm deiconify .vtkInteract};
X$renWin Render;
X
X# prevent the tk window from showing up then start the event loop
Xwm withdraw .
X
X
X
END_OF_FILE
  if test 3477 -ne `wc -c <'hedgehog.tcl'`; then
    echo shar: \"'hedgehog.tcl'\" unpacked with wrong size!
  fi
  # end of 'hedgehog.tcl'
fi
if test -f 'prob1.tcl' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'prob1.tcl'\"
else
  echo shar: Extracting \"'prob1.tcl'\" \(323 characters\)
  sed "s/^X//" >'prob1.tcl' <<'END_OF_FILE'
X  for {set i 1} { $i < 7 } { incr i } {
X    contours GenerateValues 5 0.$i 1.2;
X    $iren Initialize;
X    }
Xfor {set j 2} { $j < 6 } { incr j } {
X    contours GenerateValues 5 0.7 1.$j;
X    $iren Initialize;
X    }
Xfor {set k 5} { $k > 0 } { incr k -1 } {
X    contours GenerateValues $k 0.7 1.6;
X    $iren Initialize;
X    }
END_OF_FILE
  if test 323 -ne `wc -c <'prob1.tcl'`; then
    echo shar: \"'prob1.tcl'\" unpacked with wrong size!
  fi
  # end of 'prob1.tcl'
fi
if test -f 'prob2.tcl' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'prob2.tcl'\"
else
  echo shar: Extracting \"'prob2.tcl'\" \(105 characters\)
  sed "s/^X//" >'prob2.tcl' <<'END_OF_FILE'
X  for {set i 225 } { $i > 50 } { incr i -15 } {
X    contour SetValue 0 $i.0;
X    $iren Initialize;
X    }
END_OF_FILE
  if test 105 -ne `wc -c <'prob2.tcl'`; then
    echo shar: \"'prob2.tcl'\" unpacked with wrong size!
  fi
  # end of 'prob2.tcl'
fi
if test -f 'streamline.tcl' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'streamline.tcl'\"
else
  echo shar: Extracting \"'streamline.tcl'\" \(3880 characters\)
  sed "s/^X//" >'streamline.tcl' <<'END_OF_FILE'
X#unommet the line below if you are on Windows95
X# load vtktcl;
X# get the interactor ui
Xsource vtkInt.tcl
X
X# create planes
X# First create the render master
XvtkRenderMaster rm;
X
X# Now create the RenderWindow, Renderer and both Actors
X#
Xset renWin [rm MakeRenderWindow];
Xset ren1   [$renWin MakeRenderer];
Xset iren [$renWin MakeRenderWindowInteractor];
X
X# create pipeline
X#
XvtkPLOT3DReader pl3d;
X    pl3d SetXYZFilename "combxyz.bin"
X    pl3d SetQFilename "combq.bin"
X    pl3d SetScalarFunctionNumber 100;
X    pl3d SetVectorFunctionNumber 202;
X    pl3d Update;
X
XvtkPlaneSource plane;
X    plane SetResolution 50 50;
XvtkTransform transP1;
X    transP1 Translate 3.7 0.0 28.37;
X    transP1 Scale 5 5 5;
X    transP1 RotateY 90;
XvtkTransformPolyFilter tpd1
X    tpd1 SetInput [plane GetOutput];
X    tpd1 SetTransform transP1;
XvtkOutlineFilter outTpd1;
X    outTpd1 SetInput [tpd1 GetOutput];
XvtkPolyMapper mapTpd1;
X    mapTpd1 SetInput [outTpd1 GetOutput];
XvtkActor tpd1Actor;
X    tpd1Actor SetMapper mapTpd1;
X    [tpd1Actor GetProperty] SetColor 0 0 0;
X
XvtkTransform transP2;
X    transP2 Translate 9.2 0.0 31.20;
X    transP2 Scale 5 5 5;
X    transP2 RotateY 90;
XvtkTransformPolyFilter tpd2
X    tpd2 SetInput [plane GetOutput];
X    tpd2 SetTransform transP2;
XvtkOutlineFilter outTpd2;
X    outTpd2 SetInput [tpd2 GetOutput];
XvtkPolyMapper mapTpd2;
X    mapTpd2 SetInput [outTpd2 GetOutput];
XvtkActor tpd2Actor;
X    tpd2Actor SetMapper mapTpd2;
X    [tpd2Actor GetProperty] SetColor 0 0 0;
X
XvtkTransform transP3;
X    transP3 Translate 13.27 0.0 33.30;
X    transP3 Scale 5 5 5;
X    transP3 RotateY 90;
XvtkTransformPolyFilter tpd3
X    tpd3 SetInput [plane GetOutput];
X    tpd3 SetTransform transP3;
XvtkOutlineFilter outTpd3;
X    outTpd3 SetInput [tpd3 GetOutput];
XvtkPolyMapper mapTpd3;
X    mapTpd3 SetInput [outTpd3 GetOutput];
XvtkActor tpd3Actor;
X    tpd3Actor SetMapper mapTpd3;
X    [tpd3Actor GetProperty] SetColor 0 0 0;
X
XvtkAppendPolyData appendF;
X    appendF AddInput [tpd1 GetOutput];
X    appendF AddInput [tpd2 GetOutput];
X    appendF AddInput [tpd3 GetOutput];
X
XvtkProbeFilter probe;
X    probe SetInput [appendF GetOutput];
X    probe SetSource [pl3d GetOutput];
X
XvtkContourFilter contour;
X    contour SetInput [probe GetOutput];
X    eval contour GenerateValues 50 [[pl3d GetOutput] GetScalarRange];
X
XvtkPointSource points;
X     points SetNumberOfPoints 200;
X     points SetCenter 0.8 -12.2 0.03;
X
XvtkStreamLine stream;
X    stream SetInput [pl3d GetOutput];
X    stream SetSource [points GetOutput];
X    stream SetMaximumPropagationTime 100;
X    stream SpeedScalarsOn;
X    stream SetIntegrationStepLength 0.02;
X    stream SetStepLength 0.02;
X    stream Update;
X    # smaller values result in smoother streamlines, but greater number
X    # of line primitives.
X
XvtkPolyMapper contourMapper;
X    contourMapper SetInput [stream GetOutput];
X    contourMapper ScalarsVisibleOn;
X    eval contourMapper SetScalarRange [[pl3d GetOutput] GetScalarRange];
X
XvtkActor planeActor;
X    planeActor SetMapper contourMapper;
X
XvtkStructuredGridOutlineFilter outline;
X    outline SetInput [pl3d GetOutput];
XvtkPolyMapper outlineMapper;
X    outlineMapper SetInput [outline GetOutput];
XvtkActor outlineActor;
X    outlineActor SetMapper outlineMapper;
X    [outlineActor GetProperty] SetColor 0 0 0;
X
X$ren1 AddActors outlineActor;
X$ren1 AddActors planeActor;
X$ren1 AddActors tpd1Actor;
X$ren1 AddActors tpd2Actor;
X$ren1 AddActors tpd3Actor;
X$ren1 SetBackground 1 1 1;
X$renWin SetSize 500 500;
X$iren Initialize;
X
Xset cam1 [$ren1 GetActiveCamera];
X$cam1 SetClippingRange 3.95297 50;
X$cam1 SetFocalPoint 8.88908 0.595038 29.3342;
X$cam1 SetPosition -12.3332 31.7479 41.2387;
X$cam1 CalcViewPlaneNormal;
X$cam1 SetViewUp 0.060772 -0.319905 0.945498;
X
X# render the image
X#
X$iren SetUserMethod {wm deiconify .vtkInteract};
X$renWin Render;
X
X# prevent the tk window from showing up then start the event loop
Xwm withdraw .
X
X
X
END_OF_FILE
  if test 3880 -ne `wc -c <'streamline.tcl'`; then
    echo shar: \"'streamline.tcl'\" unpacked with wrong size!
  fi
  # end of 'streamline.tcl'
fi
if test -f 'vectordot.tcl' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'vectordot.tcl'\"
else
  echo shar: Extracting \"'vectordot.tcl'\" \(3533 characters\)
  sed "s/^X//" >'vectordot.tcl' <<'END_OF_FILE'
X#unommet the line below if you are on Windows95
X# load vtktcl;
X# get the interactor ui
Xsource vtkInt.tcl
X
X# create planes
X# First create the render master
XvtkRenderMaster rm;
X
X# Now create the RenderWindow, Renderer and both Actors
X#
Xset renWin [rm MakeRenderWindow];
Xset ren1   [$renWin MakeRenderer];
Xset iren [$renWin MakeRenderWindowInteractor];
X
X# create pipeline
X#
XvtkPLOT3DReader pl3d;
X    pl3d SetXYZFilename "combxyz.bin"
X    pl3d SetQFilename "combq.bin"
X    pl3d SetScalarFunctionNumber 100;
X    pl3d SetVectorFunctionNumber 202;
X    pl3d Update;
X
XvtkPlaneSource plane;
X    plane SetResolution 50 50;
XvtkTransform transP1;
X    transP1 Translate 3.7 0.0 28.37;
X    transP1 Scale 5 5 5;
X    transP1 RotateY 90;
XvtkTransformPolyFilter tpd1
X    tpd1 SetInput [plane GetOutput];
X    tpd1 SetTransform transP1;
XvtkOutlineFilter outTpd1;
X    outTpd1 SetInput [tpd1 GetOutput];
XvtkPolyMapper mapTpd1;
X    mapTpd1 SetInput [outTpd1 GetOutput];
XvtkActor tpd1Actor;
X    tpd1Actor SetMapper mapTpd1;
X    [tpd1Actor GetProperty] SetColor 0 0 0;
X
XvtkTransform transP2;
X    transP2 Translate 9.2 0.0 31.20;
X    transP2 Scale 5 5 5;
X    transP2 RotateY 90;
XvtkTransformPolyFilter tpd2
X    tpd2 SetInput [plane GetOutput];
X    tpd2 SetTransform transP2;
XvtkOutlineFilter outTpd2;
X    outTpd2 SetInput [tpd2 GetOutput];
XvtkPolyMapper mapTpd2;
X    mapTpd2 SetInput [outTpd2 GetOutput];
XvtkActor tpd2Actor;
X    tpd2Actor SetMapper mapTpd2;
X    [tpd2Actor GetProperty] SetColor 0 0 0;
X
XvtkTransform transP3;
X    transP3 Translate 13.27 0.0 33.30;
X    transP3 Scale 5 5 5;
X    transP3 RotateY 90;
XvtkTransformPolyFilter tpd3
X    tpd3 SetInput [plane GetOutput];
X    tpd3 SetTransform transP3;
XvtkOutlineFilter outTpd3;
X    outTpd3 SetInput [tpd3 GetOutput];
XvtkPolyMapper mapTpd3;
X    mapTpd3 SetInput [outTpd3 GetOutput];
XvtkActor tpd3Actor;
X    tpd3Actor SetMapper mapTpd3;
X    [tpd3Actor GetProperty] SetColor 0 0 0;
X
XvtkAppendPolyData appendF;
X    appendF AddInput [tpd1 GetOutput];
X    appendF AddInput [tpd2 GetOutput];
X    appendF AddInput [tpd3 GetOutput];
X
XvtkProbeFilter probe;
X    probe SetInput [appendF GetOutput];
X    probe SetSource [pl3d GetOutput];
X
XvtkVectorDot dot;
X    dot SetInput [probe GetOutput];
X    dot SetScalarRange -1.0 1.0;
X    dot Update;
X    #eval dot SetScalarRange [[pl3d GetOutput] GetScalarRange];
X    # generate scalars from dot product of vectors and
X    # normals (e.g., show displacement plot)
X
XvtkDataSetMapper dotMapper;
X    dotMapper SetInput [dot GetOutput];
X    #eval dotMapper SetScalarRange [[pl3d GetOutput] GetScalarRange];
X    dotMapper ScalarsVisibleOn;
XvtkActor planeActor;
X    planeActor SetMapper dotMapper;
X
XvtkStructuredGridOutlineFilter outline;
X    outline SetInput [pl3d GetOutput];
XvtkPolyMapper outlineMapper;
X    outlineMapper SetInput [outline GetOutput];
XvtkActor outlineActor;
X    outlineActor SetMapper outlineMapper;
X    [outlineActor GetProperty] SetColor 0 0 0;
X
X$ren1 AddActors outlineActor;
X$ren1 AddActors planeActor;
X$ren1 AddActors tpd1Actor;
X$ren1 AddActors tpd2Actor;
X$ren1 AddActors tpd3Actor;
X$ren1 SetBackground 1 1 1;
X$renWin SetSize 500 500;
X$iren Initialize;
X
Xset cam1 [$ren1 GetActiveCamera];
X$cam1 SetClippingRange 3.95297 50;
X$cam1 SetFocalPoint 8.88908 0.595038 29.3342;
X$cam1 SetPosition -12.3332 31.7479 41.2387;
X$cam1 CalcViewPlaneNormal;
X$cam1 SetViewUp 0.060772 -0.319905 0.945498;
X
X# render the image
X#
X$iren SetUserMethod {wm deiconify .vtkInteract};
X$renWin Render;
X
X# prevent the tk window from showing up then start the event loop
Xwm withdraw .
X
X
X
END_OF_FILE
  if test 3533 -ne `wc -c <'vectordot.tcl'`; then
    echo shar: \"'vectordot.tcl'\" unpacked with wrong size!
  fi
  # end of 'vectordot.tcl'
fi
if test -f 'vectornorm.tcl' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'vectornorm.tcl'\"
else
  echo shar: Extracting \"'vectornorm.tcl'\" \(3345 characters\)
  sed "s/^X//" >'vectornorm.tcl' <<'END_OF_FILE'
X#unommet the line below if you are on Windows95
X# load vtktcl;
X# get the interactor ui
Xsource vtkInt.tcl
X
X# create planes
X# First create the render master
XvtkRenderMaster rm;
X
X# Now create the RenderWindow, Renderer and both Actors
X#
Xset renWin [rm MakeRenderWindow];
Xset ren1   [$renWin MakeRenderer];
Xset iren [$renWin MakeRenderWindowInteractor];
X
X# create pipeline
X#
XvtkPLOT3DReader pl3d;
X    pl3d SetXYZFilename "combxyz.bin"
X    pl3d SetQFilename "combq.bin"
X    pl3d SetScalarFunctionNumber 100;
X    pl3d SetVectorFunctionNumber 202;
X    pl3d Update;
X
XvtkPlaneSource plane;
X    plane SetResolution 50 50;
XvtkTransform transP1;
X    transP1 Translate 3.7 0.0 28.37;
X    transP1 Scale 5 5 5;
X    transP1 RotateY 90;
XvtkTransformPolyFilter tpd1
X    tpd1 SetInput [plane GetOutput];
X    tpd1 SetTransform transP1;
XvtkOutlineFilter outTpd1;
X    outTpd1 SetInput [tpd1 GetOutput];
XvtkPolyMapper mapTpd1;
X    mapTpd1 SetInput [outTpd1 GetOutput];
XvtkActor tpd1Actor;
X    tpd1Actor SetMapper mapTpd1;
X    [tpd1Actor GetProperty] SetColor 0 0 0;
X
XvtkTransform transP2;
X    transP2 Translate 9.2 0.0 31.20;
X    transP2 Scale 5 5 5;
X    transP2 RotateY 90;
XvtkTransformPolyFilter tpd2
X    tpd2 SetInput [plane GetOutput];
X    tpd2 SetTransform transP2;
XvtkOutlineFilter outTpd2;
X    outTpd2 SetInput [tpd2 GetOutput];
XvtkPolyMapper mapTpd2;
X    mapTpd2 SetInput [outTpd2 GetOutput];
XvtkActor tpd2Actor;
X    tpd2Actor SetMapper mapTpd2;
X    [tpd2Actor GetProperty] SetColor 0 0 0;
X
XvtkTransform transP3;
X    transP3 Translate 13.27 0.0 33.30;
X    transP3 Scale 5 5 5;
X    transP3 RotateY 90;
XvtkTransformPolyFilter tpd3
X    tpd3 SetInput [plane GetOutput];
X    tpd3 SetTransform transP3;
XvtkOutlineFilter outTpd3;
X    outTpd3 SetInput [tpd3 GetOutput];
XvtkPolyMapper mapTpd3;
X    mapTpd3 SetInput [outTpd3 GetOutput];
XvtkActor tpd3Actor;
X    tpd3Actor SetMapper mapTpd3;
X    [tpd3Actor GetProperty] SetColor 0 0 0;
X
XvtkAppendPolyData appendF;
X    appendF AddInput [tpd1 GetOutput];
X    appendF AddInput [tpd2 GetOutput];
X    appendF AddInput [tpd3 GetOutput];
X
XvtkProbeFilter probe;
X    probe SetInput [appendF GetOutput];
X    probe SetSource [pl3d GetOutput];
X
XvtkVectorNorm norm;
X    norm SetInput [probe GetOutput];
X    norm SetNormalize 1;
X    # should be a number between 1 and 0, takes an int value
X
XvtkDataSetMapper normMapper;
X    normMapper SetInput [norm GetOutput];
X    normMapper ScalarsVisibleOn;
X
XvtkActor planeActor;
X    planeActor SetMapper normMapper;
X
XvtkStructuredGridOutlineFilter outline;
X    outline SetInput [pl3d GetOutput];
XvtkPolyMapper outlineMapper;
X    outlineMapper SetInput [outline GetOutput];
XvtkActor outlineActor;
X    outlineActor SetMapper outlineMapper;
X    [outlineActor GetProperty] SetColor 0 0 0;
X
X$ren1 AddActors outlineActor;
X$ren1 AddActors planeActor;
X$ren1 AddActors tpd1Actor;
X$ren1 AddActors tpd2Actor;
X$ren1 AddActors tpd3Actor;
X$ren1 SetBackground 1 1 1;
X$renWin SetSize 500 500;
X$iren Initialize;
X
Xset cam1 [$ren1 GetActiveCamera];
X$cam1 SetClippingRange 3.95297 50;
X$cam1 SetFocalPoint 8.88908 0.595038 29.3342;
X$cam1 SetPosition -12.3332 31.7479 41.2387;
X$cam1 CalcViewPlaneNormal;
X$cam1 SetViewUp 0.060772 -0.319905 0.945498;
X
X# render the image
X#
X$iren SetUserMethod {wm deiconify .vtkInteract};
X$renWin Render;
X
X# prevent the tk window from showing up then start the event loop
Xwm withdraw .
X
X
X
END_OF_FILE
  if test 3345 -ne `wc -c <'vectornorm.tcl'`; then
    echo shar: \"'vectornorm.tcl'\" unpacked with wrong size!
  fi
  # end of 'vectornorm.tcl'
fi
if test -f 'warpvector.tcl' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'warpvector.tcl'\"
else
  echo shar: Extracting \"'warpvector.tcl'\" \(3626 characters\)
  sed "s/^X//" >'warpvector.tcl' <<'END_OF_FILE'
X#unommet the line below if you are on Windows95
X# load vtktcl;
X# get the interactor ui
Xsource vtkInt.tcl
X
X# create planes
X# First create the render master
XvtkRenderMaster rm;
X
X# Now create the RenderWindow, Renderer and both Actors
X#
Xset renWin [rm MakeRenderWindow];
Xset ren1   [$renWin MakeRenderer];
Xset iren [$renWin MakeRenderWindowInteractor];
X
X# create pipeline
X#
XvtkPLOT3DReader pl3d;
X    pl3d SetXYZFilename "combxyz.bin"
X    pl3d SetQFilename "combq.bin"
X    pl3d SetScalarFunctionNumber 100;
X    pl3d SetVectorFunctionNumber 202;
X    pl3d Update;
X
XvtkPlaneSource plane;
X    plane SetResolution 50 50;
XvtkTransform transP1;
X    transP1 Translate 3.7 0.0 28.37;
X    transP1 Scale 5 5 5;
X    transP1 RotateY 90;
XvtkTransformPolyFilter tpd1
X    tpd1 SetInput [plane GetOutput];
X    tpd1 SetTransform transP1;
XvtkOutlineFilter outTpd1;
X    outTpd1 SetInput [tpd1 GetOutput];
XvtkPolyMapper mapTpd1;
X    mapTpd1 SetInput [outTpd1 GetOutput];
XvtkActor tpd1Actor;
X    tpd1Actor SetMapper mapTpd1;
X    [tpd1Actor GetProperty] SetColor 0 0 0;
X
XvtkTransform transP2;
X    transP2 Translate 9.2 0.0 31.20;
X    transP2 Scale 5 5 5;
X    transP2 RotateY 90;
XvtkTransformPolyFilter tpd2
X    tpd2 SetInput [plane GetOutput];
X    tpd2 SetTransform transP2;
XvtkOutlineFilter outTpd2;
X    outTpd2 SetInput [tpd2 GetOutput];
XvtkPolyMapper mapTpd2;
X    mapTpd2 SetInput [outTpd2 GetOutput];
XvtkActor tpd2Actor;
X    tpd2Actor SetMapper mapTpd2;
X    [tpd2Actor GetProperty] SetColor 0 0 0;
X
XvtkTransform transP3;
X    transP3 Translate 13.27 0.0 33.30;
X    transP3 Scale 5 5 5;
X    transP3 RotateY 90;
XvtkTransformPolyFilter tpd3
X    tpd3 SetInput [plane GetOutput];
X    tpd3 SetTransform transP3;
XvtkOutlineFilter outTpd3;
X    outTpd3 SetInput [tpd3 GetOutput];
XvtkPolyMapper mapTpd3;
X    mapTpd3 SetInput [outTpd3 GetOutput];
XvtkActor tpd3Actor;
X    tpd3Actor SetMapper mapTpd3;
X    [tpd3Actor GetProperty] SetColor 0 0 0;
X
XvtkAppendPolyData appendF;
X    appendF AddInput [tpd1 GetOutput];
X    appendF AddInput [tpd2 GetOutput];
X    appendF AddInput [tpd3 GetOutput];
X
XvtkProbeFilter probe;
X    probe SetInput [appendF GetOutput];
X    probe SetSource [pl3d GetOutput];
X
XvtkConnectivityFilter connect;
X    connect SetInput [probe GetOutput];
X    connect ExtractSpecifiedRegions;
X    connect AddSpecifiedRegion 0;
X    connect AddSpecifiedRegion 1;
X    connect AddSpecifiedRegion 2;
X
XvtkWarpVector warp;
X    warp SetInput [connect GetOutput];
X    warp SetScaleFactor 0.005;
X# Modifies point coordinates by moving points along vector times the 
X# scale factor.  Specify value to scale displacement.
X
XvtkDataSetMapper warpmapper;
X    warpmapper SetInput [warp GetOutput];
X    warpmapper ScalarsVisibleOn;
XvtkActor planeActor;
X    planeActor SetMapper warpmapper;
X
XvtkStructuredGridOutlineFilter outline;
X    outline SetInput [pl3d GetOutput];
XvtkPolyMapper outlineMapper;
X    outlineMapper SetInput [outline GetOutput];
XvtkActor outlineActor;
X    outlineActor SetMapper outlineMapper;
X    [outlineActor GetProperty] SetColor 0 0 0;
X
X$ren1 AddActors outlineActor;
X$ren1 AddActors planeActor;
X$ren1 AddActors tpd1Actor;
X$ren1 AddActors tpd2Actor;
X$ren1 AddActors tpd3Actor;
X$ren1 SetBackground 1 1 1;
X$renWin SetSize 500 500;
X$iren Initialize;
X
Xset cam1 [$ren1 GetActiveCamera];
X$cam1 SetClippingRange 3.95297 50;
X$cam1 SetFocalPoint 8.88908 0.595038 29.3342;
X$cam1 SetPosition -12.3332 31.7479 41.2387;
X$cam1 CalcViewPlaneNormal;
X$cam1 SetViewUp 0.060772 -0.319905 0.945498;
X
X# render the image
X#
X$iren SetUserMethod {wm deiconify .vtkInteract};
X$renWin Render;
X
X# prevent the tk window from showing up then start the event loop
Xwm withdraw .
X
X
X
END_OF_FILE
  if test 3626 -ne `wc -c <'warpvector.tcl'`; then
    echo shar: \"'warpvector.tcl'\" unpacked with wrong size!
  fi
  # end of 'warpvector.tcl'
fi
echo shar: End of archive.
exit 0

From ???@??? Wed Apr 16 07:18:37 1997
Received: from cortez.sss.rpi.edu (boothj@cortez.sss.rpi.edu [128.113.113.33])
	by mail1.its.rpi.edu (8.8.5/8.8.5) with ESMTP id XAA69424
	for <citrit@rpi.edu>; Tue, 15 Apr 1997 23:39:14 -0400
From: Jesse Booth <boothj>
Received: (boothj@localhost) by cortez.sss.rpi.edu (8.6.9/8.6.4) id XAA106506 for citrit@rpi.edu; Tue, 15 Apr 1997 23:39:12 -0400
Date: Tue, 15 Apr 1997 23:39:12 -0400
Message-Id: <199704160339.XAA106506@cortez.sss.rpi.edu>
To: citrit@rpi.edu
Subject: HomeWork 3
X-UIDL: 60db92284ad3ed21775dd08097d8f581

#!/bin/sh
# This is a shell archive (produced by GNU sharutils 4.2).
# To extract the files from this archive, save it to some FILE, remove
# everything before the `!/bin/sh' line above, then type `sh FILE'.
#
# Made on 1997-04-15 23:38 EDT by <boothj@cortez>.
# Source directory was `/afs/rpi.edu/home/27/boothj/gfx/hw3'.
#
# Existing files will *not* be overwritten unless `-c' is specified.
#
# This shar contains:
# length mode       name
# ------ ---------- ------------------------------------------
#   1657 -rw-r----- hw3_6-3a.tcl
#   1540 -rw-r----- hw3_6-3b.tcl
#   2528 -rw-r----- hw3_9-4a.tcl
#   2604 -rw-r----- hw3_9-4c.tcl
#   2526 -rw-r----- hw3_9-4d.tcl
#
save_IFS="${IFS}"
IFS="${IFS}:"
gettext_dir=FAILED
locale_dir=FAILED
first_param="$1"
for dir in $PATH
do
  if test "$gettext_dir" = FAILED && test -f $dir/gettext \
     && ($dir/gettext --version >/dev/null 2>&1)
  then
    set `$dir/gettext --version 2>&1`
    if test "$3" = GNU
    then
      gettext_dir=$dir
    fi
  fi
  if test "$locale_dir" = FAILED && test -f $dir/shar \
     && ($dir/shar --print-text-domain-dir >/dev/null 2>&1)
  then
    locale_dir=`$dir/shar --print-text-domain-dir`
  fi
done
IFS="$save_IFS"
if test "$locale_dir" = FAILED || test "$gettext_dir" = FAILED
then
  echo=echo
else
  TEXTDOMAINDIR=$locale_dir
  export TEXTDOMAINDIR
  TEXTDOMAIN=sharutils
  export TEXTDOMAIN
  echo="$gettext_dir/gettext -s"
fi
touch -am 1231235999 $$.touch >/dev/null 2>&1
if test ! -f 1231235999 && test -f $$.touch; then
  shar_touch=touch
else
  shar_touch=:
  echo
  $echo 'WARNING: not restoring timestamps.  Consider getting and'
  $echo "installing GNU \`touch', distributed in GNU File Utilities..."
  echo
fi
rm -f 1231235999 $$.touch
#
if mkdir _sh126370; then
  $echo 'x -' 'creating lock directory'
else
  $echo 'failed to create lock directory'
  exit 1
fi
# ============= hw3_6-3a.tcl ==============
if test -f 'hw3_6-3a.tcl' && test "$first_param" != -c; then
  $echo 'x -' SKIPPING 'hw3_6-3a.tcl' '(file already exists)'
else
  $echo 'x -' extracting 'hw3_6-3a.tcl' '(text)'
  sed 's/^X//' << 'SHAR_EOF' > 'hw3_6-3a.tcl' &&
#
# Advanced Computer Graphics and Data Visualization
# Homework 3
# Exercise 6.3(a)
# Jesse Booth
# April 15, 1997
X
# load vtktcl;
# user interface command widget
source vtkInt.tcl
X
# create a rendering window and renderer
vtkRenderMaster rm;
set renWin [rm MakeRenderWindow];
set ren1 [$renWin MakeRenderer];
set iren [$renWin MakeRenderWindowInteractor];
X
# quadric function
vtkQuadric quad;
X  quad SetCoefficients 0.5 1 .2 0 .1 0 0 .2 0 0;
X
vtkSampleFunction sample;
# reduced to 20 20 20 from 50 50 50 to speed things up
X  sample SetSampleDimensions 20 20 20;
X  sample SetImplicitFunction quad;
X
vtkContourFilter contours;
X  contours SetInput [sample GetOutput];
# display an initial contour
X  contours GenerateValues 1 0.0 0.1;
X
vtkPolyMapper contMapper;
X  contMapper SetInput [contours GetOutput];
X  contMapper SetScalarRange 0.0 1.2;
X
vtkActor contActor;
X  contActor SetMapper contMapper;
X
# assign our actor to the renderer
$ren1 SetBackground 1 1 1;
$ren1 AddActors contActor;
X
# enable user interface interactor
$iren SetUserMethod {wm deiconify .vtkInteract};
$iren Initialize;
X
# prevent the tk window from showing up then start the event loop
wm withdraw .
X
# animate an isosurface
proc animate arg {                                               
X  for {set i 0} {$i < 19} {incr i} {                             
X    contours GenerateValues 1 [expr $i / 15.0] [expr $i / 15.0];
X    $arg Render;                                                 
X  }                                                              
}                                                                
X                                                                 
SHAR_EOF
  $shar_touch -am 0415202497 'hw3_6-3a.tcl' &&
  chmod 0640 'hw3_6-3a.tcl' ||
  $echo 'restore of' 'hw3_6-3a.tcl' 'failed'
  if ( md5sum --help 2>&1 | grep 'sage: md5sum \[' ) >/dev/null 2>&1 \
  && ( md5sum --version 2>&1 | grep -v 'textutils 1.12' ) >/dev/null; then
    md5sum -c << SHAR_EOF >/dev/null 2>&1 \
    || $echo 'hw3_6-3a.tcl:' 'MD5 check failed'
de9b84f10a502c6e219259d49ea5c53c  hw3_6-3a.tcl
SHAR_EOF
  else
    shar_count="`LC_ALL= LC_CTYPE= LANG= wc -c < 'hw3_6-3a.tcl'`"
    test 1657 -eq "$shar_count" ||
    $echo 'hw3_6-3a.tcl:' 'original size' '1657,' 'current size' "$shar_count!"
  fi
fi
# ============= hw3_6-3b.tcl ==============
if test -f 'hw3_6-3b.tcl' && test "$first_param" != -c; then
  $echo 'x -' SKIPPING 'hw3_6-3b.tcl' '(file already exists)'
else
  $echo 'x -' extracting 'hw3_6-3b.tcl' '(text)'
  sed 's/^X//' << 'SHAR_EOF' > 'hw3_6-3b.tcl' &&
#
# Advanced Computer Graphics and Data Visualization
# Homework 3
# Exercise 6.3(b)
# Jesse Booth
# April 15, 1997
#
X
# If you are using Window95 and vtk 1.3 uncomment the line below
# load vtktcl;
X
# get the interactor ui
source vtkInt.tcl
X
# First create the render master
vtkRenderMaster rm;
X
# Now create the RenderWindow, Renderer
#
set renWin [rm MakeRenderWindow];
set ren1   [$renWin MakeRenderer];
set iren   [$renWin MakeRenderWindowInteractor];
X
#
# Load up the data
vtkStructuredPointsReader vol;
X    vol SetFilename "MRIdata.vtk"
X    vol DebugOn;
X
vtkMarchingCubes contour;
X  contour SetInput [vol GetOutput];
#  contour SetValue 0 225.0;
X  contour GenerateValues 1 200 200;
X
vtkPolyMapper volMapper;
X  volMapper SetInput [contour GetOutput];
X  volMapper ScalarsVisibleOff;
X
vtkActor volActor;
X  volActor SetMapper volMapper;
X
vtkOutlineFilter outLine;
X  outLine SetInput [vol GetOutput];
X
vtkPolyMapper outMapper;
X  outMapper SetInput [outLine GetOutput];
X
vtkActor outActor;
X  outActor SetMapper outMapper;
X
# Add the actors to the renderer, set the background and size
#
$ren1 AddActors outActor;
$ren1 AddActors volActor;
$ren1 SetBackground 0 0 0;
$renWin SetSize 500 400;
$iren Initialize;
X
# render the image
#
$iren SetUserMethod {wm deiconify .vtkInteract};
$renWin Render;
X
# prevent the tk window from showing up then start the event loop
wm withdraw .
X
# animate the isosurfaces
proc animate arg {
X  for {set i 200} {$i < 2200} {incr i 100} {
X  	contour GenerateValues 1 $i $i;
X        $arg Render;        
X  }
}
X
SHAR_EOF
  $shar_touch -am 0415202497 'hw3_6-3b.tcl' &&
  chmod 0640 'hw3_6-3b.tcl' ||
  $echo 'restore of' 'hw3_6-3b.tcl' 'failed'
  if ( md5sum --help 2>&1 | grep 'sage: md5sum \[' ) >/dev/null 2>&1 \
  && ( md5sum --version 2>&1 | grep -v 'textutils 1.12' ) >/dev/null; then
    md5sum -c << SHAR_EOF >/dev/null 2>&1 \
    || $echo 'hw3_6-3b.tcl:' 'MD5 check failed'
b8b3959e7123171a851ca33de6d9aa46  hw3_6-3b.tcl
SHAR_EOF
  else
    shar_count="`LC_ALL= LC_CTYPE= LANG= wc -c < 'hw3_6-3b.tcl'`"
    test 1540 -eq "$shar_count" ||
    $echo 'hw3_6-3b.tcl:' 'original size' '1540,' 'current size' "$shar_count!"
  fi
fi
# ============= hw3_9-4a.tcl ==============
if test -f 'hw3_9-4a.tcl' && test "$first_param" != -c; then
  $echo 'x -' SKIPPING 'hw3_9-4a.tcl' '(file already exists)'
else
  $echo 'x -' extracting 'hw3_9-4a.tcl' '(text)'
  sed 's/^X//' << 'SHAR_EOF' > 'hw3_9-4a.tcl' &&
#
# Advanced Computer Graphics and Data Visualization
# Homework 3 - HedgeHog: 9.4(a)
# Jesse Booth
# April 15, 1997
X
#uncomment the line below if you are on Windows95
# load vtktcl;
X
# get the interactor ui
source vtkInt.tcl
X
# First create the render master
vtkRenderMaster rm;
X
# Now create the RenderWindow, Renderer and both Actors
#
set renWin [rm MakeRenderWindow];
set ren1   [$renWin MakeRenderer];
set iren [$renWin MakeRenderWindowInteractor];
X
# create pipeline
#
vtkPLOT3DReader pl3d;
X    pl3d SetXYZFilename "combxyz.bin"
X    pl3d SetQFilename "combq.bin"
X    pl3d SetScalarFunctionNumber 153;  # velocity magnitude
X    pl3d SetVectorFunctionNumber 200;  # velocity
X    pl3d Update;
X
#
# extract planes to pull values from
#
vtkStructuredGridGeometryFilter tpd1;
X    tpd1 SetInput [pl3d GetOutput];
X    tpd1 SetExtent 5 5 1 100 1 100;
vtkStructuredGridGeometryFilter tpd2;
X    tpd2 SetInput [pl3d GetOutput];
X    tpd2 SetExtent 30 30 1 100 1 100;
vtkStructuredGridGeometryFilter tpd3;
X    tpd3 SetInput [pl3d GetOutput];
X    tpd3 SetExtent 55 55 1 100 1 100;
vtkAppendPolyData appendF;
X    appendF AddInput [tpd1 GetOutput];
X    appendF AddInput [tpd2 GetOutput];
X    appendF AddInput [tpd3 GetOutput];
X
#
# probe the planes
#
vtkProbeFilter probe;
X    probe SetInput [appendF GetOutput];
X    probe SetSource [pl3d GetOutput];
X
#
# create HedgeHog filter that receives probed data
#
vtkHedgeHog piggy;
X    piggy SetInput [probe GetOutput];
X    piggy SetScaleFactor 0.001;
vtkPolyMapper piggyMapper;
X    piggyMapper SetInput [piggy GetOutput];
X    eval piggyMapper SetScalarRange [[pl3d GetOutput] GetScalarRange];
vtkActor piggyActor;
X    piggyActor SetMapper piggyMapper;
X
#
# construct outline of combustor
#
vtkStructuredGridOutlineFilter outline;
X    outline SetInput [pl3d GetOutput];
vtkPolyMapper outlineMapper;
X    outlineMapper SetInput [outline GetOutput];
vtkActor outlineActor;
X    outlineActor SetMapper outlineMapper;
X    [outlineActor GetProperty] SetColor 1 1 1;
X
$ren1 AddActors outlineActor;
$ren1 AddActors piggyActor;
$ren1 SetBackground 0.1 0.1 0.1;
$renWin SetSize 500 500;
$iren Initialize;
X
set cam1 [$ren1 GetActiveCamera];
$cam1 SetClippingRange 3.95297 50;
$cam1 SetFocalPoint 8.88908 0.595038 29.3342;
$cam1 SetPosition -12.3332 31.7479 41.2387;
$cam1 CalcViewPlaneNormal;
$cam1 SetViewUp 0.060772 -0.319905 0.945498;
X
# render the image
#
$iren SetUserMethod {wm deiconify .vtkInteract};
$renWin Render;
X
# prevent the tk window from showing up then start the event loop
wm withdraw .
SHAR_EOF
  $shar_touch -am 0415233697 'hw3_9-4a.tcl' &&
  chmod 0640 'hw3_9-4a.tcl' ||
  $echo 'restore of' 'hw3_9-4a.tcl' 'failed'
  if ( md5sum --help 2>&1 | grep 'sage: md5sum \[' ) >/dev/null 2>&1 \
  && ( md5sum --version 2>&1 | grep -v 'textutils 1.12' ) >/dev/null; then
    md5sum -c << SHAR_EOF >/dev/null 2>&1 \
    || $echo 'hw3_9-4a.tcl:' 'MD5 check failed'
0bc2b1ead197242ed2818526133b6f20  hw3_9-4a.tcl
SHAR_EOF
  else
    shar_count="`LC_ALL= LC_CTYPE= LANG= wc -c < 'hw3_9-4a.tcl'`"
    test 2528 -eq "$shar_count" ||
    $echo 'hw3_9-4a.tcl:' 'original size' '2528,' 'current size' "$shar_count!"
  fi
fi
# ============= hw3_9-4c.tcl ==============
if test -f 'hw3_9-4c.tcl' && test "$first_param" != -c; then
  $echo 'x -' SKIPPING 'hw3_9-4c.tcl' '(file already exists)'
else
  $echo 'x -' extracting 'hw3_9-4c.tcl' '(text)'
  sed 's/^X//' << 'SHAR_EOF' > 'hw3_9-4c.tcl' &&
#
# Advanced Computer Graphics and Data Visualization
# Homework 3 - WarpVector: 9.4(c)
# Jesse Booth
# April 15, 1997
X
# uncomment the line below if you are on Windows95
# load vtktcl;
X
# get the interactor ui
source vtkInt.tcl
X
# First create the render master
vtkRenderMaster rm;
X
# Now create the RenderWindow, Renderer and both Actors
#
set renWin [rm MakeRenderWindow];
set ren1   [$renWin MakeRenderer];
set iren [$renWin MakeRenderWindowInteractor];
X
# create pipeline
#
vtkPLOT3DReader pl3d;
X    pl3d SetXYZFilename "combxyz.bin"
X    pl3d SetQFilename "combq.bin"
X    pl3d SetScalarFunctionNumber 153;  # velocity magnitude
X    pl3d SetVectorFunctionNumber 200;  # velocity
X    pl3d Update;
X
#
# extract planes to warp
#
vtkStructuredGridGeometryFilter tpd1;
X    tpd1 SetInput [pl3d GetOutput];
X    tpd1 SetExtent 5 5 1 100 1 100;
vtkStructuredGridGeometryFilter tpd2;
X    tpd2 SetInput [pl3d GetOutput];
X    tpd2 SetExtent 30 30 1 100 1 100;
vtkStructuredGridGeometryFilter tpd3;
X    tpd3 SetInput [pl3d GetOutput];
X    tpd3 SetExtent 50 50 1 100 1 100;
vtkAppendPolyData appendF;
X    appendF AddInput [tpd1 GetOutput];
X    appendF AddInput [tpd2 GetOutput];
X    appendF AddInput [tpd3 GetOutput];
X
#
# create WarpVector filter that warps the three planes
#
vtkWarpVector wv;
X    wv SetInput [appendF GetOutput];
X    wv SetScaleFactor 0.001;
vtkGeometryFilter data2poly;
X    data2poly SetInput [wv GetOutput];
vtkCleanPolyData cleand;
X    cleand SetInput [data2poly GetOutput];
vtkPolyNormals normz;
X    normz SetInput [cleand GetOutput];
X    normz SetFeatureAngle 60;
vtkDataSetMapper wvMapper;
X    wvMapper SetInput [normz GetOutput];
X    eval wvMapper SetScalarRange [[pl3d GetOutput] GetScalarRange];
vtkActor wvActor;
X    wvActor SetMapper wvMapper;
X
#
# construct outline of combustor
#
vtkStructuredGridOutlineFilter outline;
X    outline SetInput [pl3d GetOutput];
vtkPolyMapper outlineMapper;
X    outlineMapper SetInput [outline GetOutput];
vtkActor outlineActor;
X    outlineActor SetMapper outlineMapper;
X    [outlineActor GetProperty] SetColor 1 1 1;
X
$ren1 AddActors outlineActor;
$ren1 AddActors wvActor;
$ren1 SetBackground 0.1 0.1 0.1;
$renWin SetSize 500 500;
$iren Initialize;
X
set cam1 [$ren1 GetActiveCamera];
$cam1 SetClippingRange 3.95297 50;
$cam1 SetFocalPoint 8.88908 0.595038 29.3342;
$cam1 SetPosition -12.3332 31.7479 41.2387;
$cam1 CalcViewPlaneNormal;
$cam1 SetViewUp 0.060772 -0.319905 0.945498;
X
# render the image
#
$iren SetUserMethod {wm deiconify .vtkInteract};
$renWin Render;
X
# prevent the tk window from showing up then start the event loop
wm withdraw .
X
SHAR_EOF
  $shar_touch -am 0415233597 'hw3_9-4c.tcl' &&
  chmod 0640 'hw3_9-4c.tcl' ||
  $echo 'restore of' 'hw3_9-4c.tcl' 'failed'
  if ( md5sum --help 2>&1 | grep 'sage: md5sum \[' ) >/dev/null 2>&1 \
  && ( md5sum --version 2>&1 | grep -v 'textutils 1.12' ) >/dev/null; then
    md5sum -c << SHAR_EOF >/dev/null 2>&1 \
    || $echo 'hw3_9-4c.tcl:' 'MD5 check failed'
f6d503b03c15818c54c96e0afbc55db8  hw3_9-4c.tcl
SHAR_EOF
  else
    shar_count="`LC_ALL= LC_CTYPE= LANG= wc -c < 'hw3_9-4c.tcl'`"
    test 2604 -eq "$shar_count" ||
    $echo 'hw3_9-4c.tcl:' 'original size' '2604,' 'current size' "$shar_count!"
  fi
fi
# ============= hw3_9-4d.tcl ==============
if test -f 'hw3_9-4d.tcl' && test "$first_param" != -c; then
  $echo 'x -' SKIPPING 'hw3_9-4d.tcl' '(file already exists)'
else
  $echo 'x -' extracting 'hw3_9-4d.tcl' '(text)'
  sed 's/^X//' << 'SHAR_EOF' > 'hw3_9-4d.tcl' &&
#
# Advanced Computer Graphics and Data Visualization
# Homework 3 - VectorNorm: 9.4(d)
# Jesse Booth
# April 15, 1997
X
# uncomment the line below if you are on Windows95
# load vtktcl;
X
# get the interactor ui
source vtkInt.tcl
X
# First create the render master
vtkRenderMaster rm;
X
# Now create the RenderWindow, Renderer and both Actors
#
set renWin [rm MakeRenderWindow];
set ren1   [$renWin MakeRenderer];
set iren [$renWin MakeRenderWindowInteractor];
X
# create pipeline
#
vtkPLOT3DReader pl3d;
X    pl3d SetXYZFilename "combxyz.bin"
X    pl3d SetQFilename "combq.bin"
X    pl3d SetScalarFunctionNumber 153;  # velocity magnitude
X    pl3d SetVectorFunctionNumber 200;  # velocity
X    pl3d Update;
X
# extract data planes to use to make smashed vector planes
vtkStructuredGridGeometryFilter tpd1;
X    tpd1 SetInput [pl3d GetOutput];
X    tpd1 SetExtent 5 5 1 100 1 100;
vtkStructuredGridGeometryFilter tpd2;
X    tpd2 SetInput [pl3d GetOutput];
X    tpd2 SetExtent 30 30 1 100 1 100;
vtkStructuredGridGeometryFilter tpd3;
X    tpd3 SetInput [pl3d GetOutput];
X    tpd3 SetExtent 50 50 1 100 1 100;
vtkAppendPolyData appendF;
X    appendF AddInput [tpd1 GetOutput];
X    appendF AddInput [tpd2 GetOutput];
X    appendF AddInput [tpd3 GetOutput];
X
#
# probe the three planes for data points
#
vtkProbeFilter probe;
X    probe SetInput [appendF GetOutput];
X    probe SetSource [pl3d GetOutput];
X
#
# create VectorNorm filter, create scalar planes from vectors
#
vtkVectorNorm vn;
X    vn SetInput [probe GetOutput];
vtkDataSetMapper vnMapper;
X    vnMapper SetInput [vn GetOutput];
X    eval vnMapper SetScalarRange [[pl3d GetOutput] GetScalarRange];
vtkActor vnActor;
X    vnActor SetMapper vnMapper;
X
#
# construct outline of combustor
#
vtkStructuredGridOutlineFilter outline;
X    outline SetInput [pl3d GetOutput];
vtkPolyMapper outlineMapper;
X    outlineMapper SetInput [outline GetOutput];
vtkActor outlineActor;
X    outlineActor SetMapper outlineMapper;
X    [outlineActor GetProperty] SetColor 1 1 1;
X
$ren1 AddActors outlineActor;
$ren1 AddActors vnActor;
$ren1 SetBackground 0.1 0.1 0.1;
$renWin SetSize 500 500;
$iren Initialize;
X
set cam1 [$ren1 GetActiveCamera];
$cam1 SetClippingRange 3.95297 50;
$cam1 SetFocalPoint 8.88908 0.595038 29.3342;
$cam1 SetPosition -12.3332 31.7479 41.2387;
$cam1 CalcViewPlaneNormal;
$cam1 SetViewUp 0.060772 -0.319905 0.945498;
X
# render the image
#
$iren SetUserMethod {wm deiconify .vtkInteract};
$renWin Render;
X
# prevent the tk window from showing up then start the event loop
wm withdraw .
X
SHAR_EOF
  $shar_touch -am 0415233397 'hw3_9-4d.tcl' &&
  chmod 0640 'hw3_9-4d.tcl' ||
  $echo 'restore of' 'hw3_9-4d.tcl' 'failed'
  if ( md5sum --help 2>&1 | grep 'sage: md5sum \[' ) >/dev/null 2>&1 \
  && ( md5sum --version 2>&1 | grep -v 'textutils 1.12' ) >/dev/null; then
    md5sum -c << SHAR_EOF >/dev/null 2>&1 \
    || $echo 'hw3_9-4d.tcl:' 'MD5 check failed'
935105eb05e2f681363131d2a43a46c0  hw3_9-4d.tcl
SHAR_EOF
  else
    shar_count="`LC_ALL= LC_CTYPE= LANG= wc -c < 'hw3_9-4d.tcl'`"
    test 2526 -eq "$shar_count" ||
    $echo 'hw3_9-4d.tcl:' 'original size' '2526,' 'current size' "$shar_count!"
  fi
fi
rm -fr _sh126370
exit 0

From ???@??? Wed Apr 16 07:18:37 1997
Received: from jec314.its.rpi.edu (tehrani@jec314.its.rpi.edu [128.113.10.64])
	by mail1.its.rpi.edu (8.8.5/8.8.5) with ESMTP id XAA73580
	for <citrit@rpi.edu>; Tue, 15 Apr 1997 23:59:57 -0400
From: Mohammad Reza Taei Tehrani <tehrani>
Received: (tehrani@localhost) by jec314.its.rpi.edu (951211.SGI.8.6.12.PATCH1042/8.6.4) id XAA02019 for citrit@rpi.edu; Tue, 15 Apr 1997 23:59:56 -0400
Date: Tue, 15 Apr 1997 23:59:56 -0400
Message-Id: <199704160359.XAA02019@jec314.its.rpi.edu>
To: citrit@rpi.edu
Subject: HomeWork 3
X-UIDL: 026f0bb4ee4119a2e9f4a69f1f4718fe

#!/bin/sh
# This is a shell archive (produced by GNU sharutils 4.2).
# To extract the files from this archive, save it to some FILE, remove
# everything before the `!/bin/sh' line above, then type `sh FILE'.
#
# Made on 1997-04-15 23:53 EDT by <tehrani@jec314>.
# Source directory was `/afs/rpi.edu/locker/68/000868/class/visual/hm3/true'.
#
# Existing files will *not* be overwritten unless `-c' is specified.
#
# This shar contains:
# length mode       name
# ------ ---------- ------------------------------------------
#   2311 -rw------- VTKINT.TCL
#   1055 -rw------- hm3-1-1.tcl
#   1405 -rw------- hm3-1-2.tcl
#   3582 -rw------- hm3-2-1.tcl
#   3867 -rw------- hm3-2-2.tcl
#   3396 -rw------- hm3-2-3.tcl
#   3411 -rw------- hm3-2-4.tcl
#
save_IFS="${IFS}"
IFS="${IFS}:"
gettext_dir=FAILED
locale_dir=FAILED
first_param="$1"
for dir in $PATH
do
  if test "$gettext_dir" = FAILED && test -f $dir/gettext \
     && ($dir/gettext --version >/dev/null 2>&1)
  then
    set `$dir/gettext --version 2>&1`
    if test "$3" = GNU
    then
      gettext_dir=$dir
    fi
  fi
  if test "$locale_dir" = FAILED && test -f $dir/shar \
     && ($dir/shar --print-text-domain-dir >/dev/null 2>&1)
  then
    locale_dir=`$dir/shar --print-text-domain-dir`
  fi
done
IFS="$save_IFS"
if test "$locale_dir" = FAILED || test "$gettext_dir" = FAILED
then
  echo=echo
else
  TEXTDOMAINDIR=$locale_dir
  export TEXTDOMAINDIR
  TEXTDOMAIN=sharutils
  export TEXTDOMAIN
  echo="$gettext_dir/gettext -s"
fi
touch -am 1231235999 $$.touch >/dev/null 2>&1
if test ! -f 1231235999 && test -f $$.touch; then
  shar_touch=touch
else
  shar_touch=:
  echo
  $echo 'WARNING: not restoring timestamps.  Consider getting and'
  $echo "installing GNU \`touch', distributed in GNU File Utilities..."
  echo
fi
rm -f 1231235999 $$.touch
#
if mkdir _sh01971; then
  $echo 'x -' 'creating lock directory'
else
  $echo 'failed to create lock directory'
  exit 1
fi
# ============= VTKINT.TCL ==============
if test -f 'VTKINT.TCL' && test "$first_param" != -c; then
  $echo 'x -' SKIPPING 'VTKINT.TCL' '(file already exists)'
else
  $echo 'x -' extracting 'VTKINT.TCL' '(text)'
  sed 's/^X//' << 'SHAR_EOF' > 'VTKINT.TCL' &&
# a generic interactor for tcl and vtk
#
catch {unset vtkInteract.bold}
catch {unset vtkInteract.normal}
catch {unset vtkInteract.tagcount}
set vtkInteractBold "-background #43ce80 -relief raised -borderwidth 1"
set vtkInteractNormal "-background #c0c0c0 -relief flat"
set vtkInteractTagcount 1;
X
proc vtkInteract {} {
X
X    proc dovtk {s w} {
X	global vtkInteractBold vtkInteractNormal vtkInteractTagcount;
X	set tag [append tagnum $vtkInteractTagcount];
X	incr vtkInteractTagcount 1;
X	.vtkInteract.text configure -state normal
X	.vtkInteract.text insert end $s $tag
X	eval .vtkInteract.text tag configure $tag $vtkInteractNormal
X	.vtkInteract.text tag bind $tag <Any-Enter> \
X	    ".vtkInteract.text tag configure $tag $vtkInteractBold"
X	.vtkInteract.text tag bind $tag <Any-Leave> \
X	    ".vtkInteract.text tag configure $tag $vtkInteractNormal"
X	.vtkInteract.text tag bind $tag <1> "dovtk [list $s] .vtkInteract";
X	.vtkInteract.text insert end \n; 
X	.vtkInteract.text insert end [uplevel 1 $s]; 
X	.vtkInteract.text insert end \n\n; 
X	.vtkInteract.text configure -state disabled
X	.vtkInteract.text yview end
X    }
X
X    catch {destroy .vtkInteract}
X    toplevel .vtkInteract
X    wm title .vtkInteract "vtk Interactor"
X    wm iconname .vtkInteract "vtk"
X    
X    frame .vtkInteract.buttons
X    pack  .vtkInteract.buttons -side bottom -fill x -pady 2m
X    button .vtkInteract.buttons.dismiss -text Dismiss \
X	-command "wm withdraw .vtkInteract"
X    pack .vtkInteract.buttons.dismiss -side left -expand 1
X    
X    frame .vtkInteract.file
X    label .vtkInteract.file.label -text "Command:" -width 10 -anchor w
X    entry .vtkInteract.file.entry -width 40 
X    bind .vtkInteract.file.entry <Return> {
X	dovtk [%W get] .vtkInteract; %W delete 0 end}
X    pack .vtkInteract.file.label -side left
X    pack .vtkInteract.file.entry -side left -expand 1 -fill x
X    
X    text .vtkInteract.text -yscrollcommand ".vtkInteract.scroll set" \
X	-setgrid true -width 60 -height 8 -wrap word
X    scrollbar .vtkInteract.scroll -command ".vtkInteract.text yview"
X    pack .vtkInteract.scroll -side right -fill y
X    pack .vtkInteract.text -side bottom -expand 1 -fill both
X    pack .vtkInteract.file -pady 3m -padx 2m -side bottom -fill x 
X    
X    .vtkInteract.text configure -state disabled
X    wm withdraw .vtkInteract
}
X
vtkInteract;
X
SHAR_EOF
  $shar_touch -am 0415225597 'VTKINT.TCL' &&
  chmod 0600 'VTKINT.TCL' ||
  $echo 'restore of' 'VTKINT.TCL' 'failed'
  if ( md5sum --help 2>&1 | grep 'sage: md5sum \[' ) >/dev/null 2>&1 \
  && ( md5sum --version 2>&1 | grep -v 'textutils 1.12' ) >/dev/null; then
    md5sum -c << SHAR_EOF >/dev/null 2>&1 \
    || $echo 'VTKINT.TCL:' 'MD5 check failed'
bc7774989c5f676c510275c8faed1e8d  VTKINT.TCL
SHAR_EOF
  else
    shar_count="`LC_ALL= LC_CTYPE= LANG= wc -c < 'VTKINT.TCL'`"
    test 2311 -eq "$shar_count" ||
    $echo 'VTKINT.TCL:' 'original size' '2311,' 'current size' "$shar_count!"
  fi
fi
# ============= hm3-1-1.tcl ==============
if test -f 'hm3-1-1.tcl' && test "$first_param" != -c; then
  $echo 'x -' SKIPPING 'hm3-1-1.tcl' '(file already exists)'
else
  $echo 'x -' extracting 'hm3-1-1.tcl' '(binary)'
  sed 's/^X//' << 'SHAR_EOF' | uudecode &&
begin 600 hm3-1-1.tcl
M<V]U<F-E(%942TE.5"Y40TP*<V5T(&UI;B`P+C`*<V5T(&UA>"`Q+C(*"B,@
M8W)E871E(&$@<F5N9&5R:6YG('=I;F1O=R!A;F0@<F5N9&5R97(*=G1K4F5N
M9&5R36%S=&5R(')M.PT*<V5T(')E;E=I;B!;<FT@36%K95)E;F1E<E=I;F1O
M=UT["G-E="!R96XQ(%LD<F5N5VEN($UA:V5296YD97)E<ET["G-E="!I<F5N
M(%LD<F5N5VEN($UA:V5296YD97)7:6YD;W=);G1E<F%C=&]R73L*#0IV=&M1
M=6%D<FEC('%U860[#0H@('%U860@4V5T0V]E9F9I8VEE;G1S(#`N-2`Q("XR
M(#`@+C$@,"`P("XR(#`@,#L*=G1K4V%M<&QE1G5N8W1I;VX@<V%M<&QE.PT*
M("!S86UP;&4@4V5T4V%M<&QE1&EM96YS:6]N<R`U,"`U,"`U,#L*("!S86UP
M;&4@4V5T26UP;&EC:71&=6YC=&EO;B!Q=6%D.PIV=&M#;VYT;W5R1FEL=&5R
M(&-O;G1O=7)S.PH@(&-O;G1O=7)S(%-E=$EN<'5T(%MS86UP;&4@1V5T3W5T
M<'5T73L*("!C;VYT;W5R<R!'96YE<F%T959A;'5E<R`U(#`N,"`Q+C(["G9T
M:U!O;'E-87!P97(@8V]N=$UA<'!E<CL*("!C;VYT36%P<&5R(%-E=$EN<'5T
M(%MC;VYT;W5R<R!'971/=71P=71=.PH@(&-O;G1-87!P97(@4V5T4V-A;&%R
M4F%N9V4@,"XP(#$N,CL*=G1K06-T;W(@8V]N=$%C=&]R.PH@(&-O;G1!8W1O
M<B!3971-87!P97(@8V]N=$UA<'!E<CL*"B,@87-S:6=N(&]U<B!A8W1O<B!T
M;R!T:&4@<F5N9&5R97(*)')E;C$@4V5T0F%C:V=R;W5N9"`Q(#$@,3L*)')E
M;C$@061D06-T;W)S(&-O;G1!8W1O<CL*"@IF;W(@>W-E="!I(#!]('LD:2`\
M-2!]('MI;F-R(&E]('L*"0H@"7!U=',@(D-O;G1O=7(@3G5M8F5R("1I(CL*
M(`EC;VYT;W5R<R!'96YE<F%T959A;'5E<R`D:2`D;6EN("1M87@["@DD<F5N
M5VEN(%)E;F1E<CL*"7T*"B,@96YA8FQE('5S97(@:6YT97)F86-E(&EN=&5R
M86-T;W(*)&ER96X@4V5T57-E<DUE=&AO9"![=VT@9&5I8V]N:69Y("YV=&M)
M;G1E<F%C='T["B1I<F5N($EN:71I86QI>F4["@H*(R!P<F5V96YT('1H92!T
M:R!W:6YD;W<@9G)O;2!S:&]W:6YG('5P('1H96X@<W1A<G0@=&AE(&5V96YT
4(&QO;W`-"G=M('=I=&AD<F%W("YG
`
end
SHAR_EOF
  $shar_touch -am 0415235397 'hm3-1-1.tcl' &&
  chmod 0600 'hm3-1-1.tcl' ||
  $echo 'restore of' 'hm3-1-1.tcl' 'failed'
  if ( md5sum --help 2>&1 | grep 'sage: md5sum \[' ) >/dev/null 2>&1 \
  && ( md5sum --version 2>&1 | grep -v 'textutils 1.12' ) >/dev/null; then
    md5sum -c << SHAR_EOF >/dev/null 2>&1 \
    || $echo 'hm3-1-1.tcl:' 'MD5 check failed'
316230e4156c3eaa283ec7595f3ce8ec  hm3-1-1.tcl
SHAR_EOF
  else
    shar_count="`LC_ALL= LC_CTYPE= LANG= wc -c < 'hm3-1-1.tcl'`"
    test 1055 -eq "$shar_count" ||
    $echo 'hm3-1-1.tcl:' 'original size' '1055,' 'current size' "$shar_count!"
  fi
fi
# ============= hm3-1-2.tcl ==============
if test -f 'hm3-1-2.tcl' && test "$first_param" != -c; then
  $echo 'x -' SKIPPING 'hm3-1-2.tcl' '(file already exists)'
else
  $echo 'x -' extracting 'hm3-1-2.tcl' '(binary)'
  sed 's/^X//' << 'SHAR_EOF' | uudecode &&
begin 600 hm3-1-2.tcl
M<V]U<F-E(%942TE.5"Y40TP*<V5T(&UA>"`R,C4["G-E="!M:6X@,3`["@H*
M(R!&:7)S="!C<F5A=&4@=&AE(')E;F1E<B!M87-T97(-"G9T:U)E;F1E<DUA
M<W1E<B!R;3L-"@T*(R!.;W<@8W)E871E('1H92!296YD97)7:6YD;W<L(%)E
M;F1E<F5R#0HC#0IS970@<F5N5VEN(%MR;2!-86ME4F5N9&5R5VEN9&]W73L-
M"G-E="!R96XQ("`@6R1R96Y7:6X@36%K95)E;F1E<F5R73L-"G-E="!I<F5N
M("`@6R1R96Y7:6X@36%K95)E;F1E<E=I;F1O=TEN=&5R86-T;W)=.PT*#0HC
M#0HC($QO860@=7`@=&AE(&1A=&$-"G9T:U-T<G5C='5R9610;VEN='-296%D
M97(@=F]L.PT*("`@('9O;"!3971&:6QE;F%M92`B+VAO;64O-C(O8VET<FET
M+W!U8FQI8R]3<')I;F<Y-R]E>&%M<&QE<R]6=&LO35))9&%T82YV=&LB#0H@
M("`@=F]L($1E8G5G3VX[#0H-"G9T:TUA<F-H:6YG0W5B97,@8V]N=&]U<CL-
M"B`@8V]N=&]U<B!3971);G!U="!;=F]L($=E=$]U='!U=%T[#0H@(&-O;G1O
M=7(@4V5T5F%L=64@,3`@,C(U+C`["@T*=G1K4&]L>4UA<'!E<B!V;VQ-87!P
M97([#0H@('9O;$UA<'!E<B!3971);G!U="!;8V]N=&]U<B!'971/=71P=71=
M.PT*("!V;VQ-87!P97(@4V-A;&%R<U9I<VEB;&5/9F8[#0H-"G9T:T%C=&]R
M('9O;$%C=&]R.PT*("!V;VQ!8W1O<B!3971-87!P97(@=F]L36%P<&5R.PT*
M#0IV=&M/=71L:6YE1FEL=&5R(&]U=$QI;F4[#0H@(&]U=$QI;F4@4V5T26YP
M=70@6W9O;"!'971/=71P=71=.PT*#0IV=&M0;VQY36%P<&5R(&]U=$UA<'!E
M<CL-"B`@;W5T36%P<&5R(%-E=$EN<'5T(%MO=71,:6YE($=E=$]U='!U=%T[
M#0H-"G9T:T%C=&]R(&]U=$%C=&]R.PT*("!O=71!8W1O<B!3971-87!P97(@
M;W5T36%P<&5R.PT*#0HC($%D9"!T:&4@86-T;W)S('1O('1H92!R96YD97)E
M<BP@<V5T('1H92!B86-K9W)O=6YD(&%N9"!S:7IE#0HC#0HD<F5N,2!!9&1!
M8W1O<G,@;W5T06-T;W([#0HD<F5N,2!!9&1!8W1O<G,@=F]L06-T;W([#0HD
M<F5N,2!3971"86-K9W)O=6YD(#`@,"`P.PT*)')E;E=I;B!39713:7IE(#4P
M,"`T,#`[#0HD:7)E;B!);FET:6%L:7IE.PT*"F9O<B![<V5T(&D@,'T@>R1I
M(#PQ,"!]('MI;F-R(&E]('L*"7-E="!M87@@6V5X<'(@)&UA>"`K(#(P70H@
M("`@("`@('!U=',@(D-O;G1O=7(@3G5M8F5R("1I(CL*("`@("`@("!C;VYT
M;W5R(%-E=%9A;'5E("1M:6X@)&UA>#L*("`@("`@("`D<F5N5VEN(%)E;F1E
M<CL*("`@("`@("!]"@H*(R!R96YD97(@=&AE(&EM86=E#0HC#0HD:7)E;B!3
M9715<V5R365T:&]D('MW;2!D96EC;VYI9GD@+G9T:TEN=&5R86-T?3L-"@HC
M)')E;E=I;B!296YD97([#0H-"B,@<')E=F5N="!T:&4@=&L@=VEN9&]W(&9R
M;VT@<VAO=VEN9R!U<"!T:&5N('-T87)T('1H92!E=F5N="!L;V]P#0IW;2!W
*:71H9')A=R`N"B!U
`
end
SHAR_EOF
  $shar_touch -am 0415225897 'hm3-1-2.tcl' &&
  chmod 0600 'hm3-1-2.tcl' ||
  $echo 'restore of' 'hm3-1-2.tcl' 'failed'
  if ( md5sum --help 2>&1 | grep 'sage: md5sum \[' ) >/dev/null 2>&1 \
  && ( md5sum --version 2>&1 | grep -v 'textutils 1.12' ) >/dev/null; then
    md5sum -c << SHAR_EOF >/dev/null 2>&1 \
    || $echo 'hm3-1-2.tcl:' 'MD5 check failed'
65b70bf8a9d872effeedbd84eddcc59c  hm3-1-2.tcl
SHAR_EOF
  else
    shar_count="`LC_ALL= LC_CTYPE= LANG= wc -c < 'hm3-1-2.tcl'`"
    test 1405 -eq "$shar_count" ||
    $echo 'hm3-1-2.tcl:' 'original size' '1405,' 'current size' "$shar_count!"
  fi
fi
# ============= hm3-2-1.tcl ==============
if test -f 'hm3-2-1.tcl' && test "$first_param" != -c; then
  $echo 'x -' SKIPPING 'hm3-2-1.tcl' '(file already exists)'
else
  $echo 'x -' extracting 'hm3-2-1.tcl' '(text)'
  sed 's/^X//' << 'SHAR_EOF' > 'hm3-2-1.tcl' &&
source VTKINT.TCL
X
vtkRenderMaster rm;
set renWin [rm MakeRenderWindow];
set ren1   [$renWin MakeRenderer];
set iren [$renWin MakeRenderWindowInteractor];
X
# create pipeline
#
vtkPLOT3DReader pl3d;
X    pl3d SetXYZFilename "/home/62/citrit/public/Spring97/examples/Vtk/COMBXYZ.BIN"
X    pl3d SetQFilename "/home/62/citrit/public/Spring97/examples/Vtk/COMBQ.BIN"
X    pl3d SetScalarFunctionNumber 100;
X    pl3d SetVectorFunctionNumber 202;
X    pl3d Update;
X
vtkPlaneSource plane;
X    plane SetResolution 50 50;
vtkTransform transP1;
X    transP1 Translate 3.7 0.0 28.37;
X    transP1 Scale 5 5 5;
X    transP1 RotateY 90;
vtkTransformPolyFilter tpd1
X    tpd1 SetInput [plane GetOutput];
X    tpd1 SetTransform transP1;
vtkOutlineFilter outTpd1;
X    outTpd1 SetInput [tpd1 GetOutput];
vtkPolyMapper mapTpd1;
X    mapTpd1 SetInput [outTpd1 GetOutput];
vtkActor tpd1Actor;
X    tpd1Actor SetMapper mapTpd1;
X    [tpd1Actor GetProperty] SetColor 0 0 0;
X
vtkTransform transP2;
X    transP2 Translate 9.2 0.0 31.20;
X    transP2 Scale 5 5 5;
X    transP2 RotateY 90;
vtkTransformPolyFilter tpd2
X    tpd2 SetInput [plane GetOutput];
X    tpd2 SetTransform transP2;
vtkOutlineFilter outTpd2;
X    outTpd2 SetInput [tpd2 GetOutput];
vtkPolyMapper mapTpd2;
X    mapTpd2 SetInput [outTpd2 GetOutput];
vtkActor tpd2Actor;
X    tpd2Actor SetMapper mapTpd2;
X    [tpd2Actor GetProperty] SetColor 0 0 0;
X
vtkTransform transP3;
X    transP3 Translate 13.27 0.0 33.30;
X    transP3 Scale 5 5 5;
X    transP3 RotateY 90;
vtkTransformPolyFilter tpd3
X    tpd3 SetInput [plane GetOutput];
X    tpd3 SetTransform transP3;
vtkOutlineFilter outTpd3;
X    outTpd3 SetInput [tpd3 GetOutput];
vtkPolyMapper mapTpd3;
X    mapTpd3 SetInput [outTpd3 GetOutput];
vtkActor tpd3Actor;
X    tpd3Actor SetMapper mapTpd3;
X    [tpd3Actor GetProperty] SetColor 0 0 0;
X
vtkAppendPolyData appendF;
X    appendF AddInput [tpd1 GetOutput];
X    appendF AddInput [tpd2 GetOutput];
X    appendF AddInput [tpd3 GetOutput];
X    
vtkProbeFilter probe;
X    probe SetInput [appendF GetOutput];
X    probe SetSource [pl3d GetOutput];
X
vtkHedgeHog hedhog;
X    hedhog SetScaleFactor 0.01;
X    hedhog SetInput [probe GetOutput];
vtkPolyMapper hedhogMapper;
X    hedhogMapper SetInput [hedhog GetOutput];
X    eval hedhogMapper SetScalarRange [[pl3d GetOutput] GetScalarRange];
vtkActor hedhogActor;
X    hedhogActor SetMapper hedhogMapper;
X
vtkContourFilter contour;
X    contour SetInput [probe GetOutput];
X    eval contour GenerateValues 50 [[pl3d GetOutput] GetScalarRange];
X
vtkPolyMapper contourMapper;
X    contourMapper SetInput [contour GetOutput];
X    eval contourMapper SetScalarRange [[pl3d GetOutput] GetScalarRange];
vtkActor planeActor;
X    planeActor SetMapper contourMapper;
X
vtkStructuredGridOutlineFilter outline;
X    outline SetInput [pl3d GetOutput];
vtkPolyMapper outlineMapper;
X    outlineMapper SetInput [outline GetOutput];
vtkActor outlineActor;
X    outlineActor SetMapper outlineMapper;
X    [outlineActor GetProperty] SetColor 0 0 0;
$ren1 AddActors hedhogActor;
$ren1 AddActors outlineActor;
$ren1 AddActors tpd1Actor;
$ren1 AddActors tpd2Actor;
$ren1 AddActors tpd3Actor;
$ren1 SetBackground 1 1 1;
$renWin SetSize 500 500;
$iren Initialize;
X
set cam1 [$ren1 GetActiveCamera];
$cam1 SetClippingRange 3.95297 50;
$cam1 SetFocalPoint 8.88908 0.595038 29.3342;
$cam1 SetPosition -12.3332 31.7479 41.2387;
$cam1 CalcViewPlaneNormal;
$cam1 SetViewUp 0.060772 -0.319905 0.945498;
X
# render the image
#
$iren SetUserMethod {wm deiconify .vtkInteract};
$renWin Render;
X
# prevent the tk window from showing up then start the event loop
wm withdraw .
SHAR_EOF
  $shar_touch -am 0415230697 'hm3-2-1.tcl' &&
  chmod 0600 'hm3-2-1.tcl' ||
  $echo 'restore of' 'hm3-2-1.tcl' 'failed'
  if ( md5sum --help 2>&1 | grep 'sage: md5sum \[' ) >/dev/null 2>&1 \
  && ( md5sum --version 2>&1 | grep -v 'textutils 1.12' ) >/dev/null; then
    md5sum -c << SHAR_EOF >/dev/null 2>&1 \
    || $echo 'hm3-2-1.tcl:' 'MD5 check failed'
06cbd19359f0cd1b0d68a13663ea274c  hm3-2-1.tcl
SHAR_EOF
  else
    shar_count="`LC_ALL= LC_CTYPE= LANG= wc -c < 'hm3-2-1.tcl'`"
    test 3582 -eq "$shar_count" ||
    $echo 'hm3-2-1.tcl:' 'original size' '3582,' 'current size' "$shar_count!"
  fi
fi
# ============= hm3-2-2.tcl ==============
if test -f 'hm3-2-2.tcl' && test "$first_param" != -c; then
  $echo 'x -' SKIPPING 'hm3-2-2.tcl' '(file already exists)'
else
  $echo 'x -' extracting 'hm3-2-2.tcl' '(text)'
  sed 's/^X//' << 'SHAR_EOF' > 'hm3-2-2.tcl' &&
source  VTKINT.TCL
vtkRenderMaster rm;
X
# Now create the RenderWindow, Renderer and both Actors
#
set renWin [rm MakeRenderWindow];
set ren1   [$renWin MakeRenderer];
set iren [$renWin MakeRenderWindowInteractor];
X
# create pipeline
#
vtkPLOT3DReader pl3d;
X    pl3d SetXYZFilename "/home/62/citrit/public/Spring97/examples/Vtk/COMBXYZ.BIN"
X    pl3d SetQFilename "/home/62/citrit/public/Spring97/examples/Vtk/COMBQ.BIN"
X    pl3d SetScalarFunctionNumber 100;
X    pl3d SetVectorFunctionNumber 202;
X    pl3d Update;
X
vtkPlaneSource plane;
X    plane SetResolution 50 50;
vtkTransform transP1;
X    transP1 Translate 3.7 0.0 28.37;
X    transP1 Scale 5 5 5;
X    transP1 RotateY 90;
vtkTransformPolyFilter tpd1
X    tpd1 SetInput [plane GetOutput];
X    tpd1 SetTransform transP1;
vtkOutlineFilter outTpd1;
X    outTpd1 SetInput [tpd1 GetOutput];
vtkPolyMapper mapTpd1;
X    mapTpd1 SetInput [outTpd1 GetOutput];
vtkActor tpd1Actor;
X    tpd1Actor SetMapper mapTpd1;
X    [tpd1Actor GetProperty] SetColor 0 0 0;
X
vtkTransform transP2;
X    transP2 Translate 9.2 0.0 31.20;
X    transP2 Scale 5 5 5;
X    transP2 RotateY 90;
vtkTransformPolyFilter tpd2
X    tpd2 SetInput [plane GetOutput];
X    tpd2 SetTransform transP2;
vtkOutlineFilter outTpd2;
X    outTpd2 SetInput [tpd2 GetOutput];
vtkPolyMapper mapTpd2;
X    mapTpd2 SetInput [outTpd2 GetOutput];
vtkActor tpd2Actor;
X    tpd2Actor SetMapper mapTpd2;
X    [tpd2Actor GetProperty] SetColor 0 0 0;
vtkTransform transP3;
X    transP3 Translate 13.27 0.0 33.30;
X    transP3 Scale 5 5 5;
X    transP3 RotateY 90;
vtkTransformPolyFilter tpd3
X    tpd3 SetInput [plane GetOutput];
X    tpd3 SetTransform transP3;
vtkOutlineFilter outTpd3;
X    outTpd3 SetInput [tpd3 GetOutput];
vtkPolyMapper mapTpd3;
X    mapTpd3 SetInput [outTpd3 GetOutput];
vtkActor tpd3Actor;
X    tpd3Actor SetMapper mapTpd3;
X    [tpd3Actor GetProperty] SetColor 0 0 0;
vtkAppendPolyData appendF;
X    appendF AddInput [tpd1 GetOutput];
X    appendF AddInput [tpd2 GetOutput];
X    appendF AddInput [tpd3 GetOutput];
vtkProbeFilter probe;
X    probe SetInput [appendF GetOutput];
X    probe SetSource [pl3d GetOutput];
vtkConeSource cone;
X    cone SetResolution 3;
X    cone SetHeight 1;
X    cone SetRadius 0.25;
vtkStreamLine streamer;
X    streamer SetInput [probe GetOutput];
X    streamer SetSource [cone GetOutput];
X    streamer SetMaximumPropagationTime 100;
X    streamer SpeedScalarsOn;
X    streamer SetIntegrationStepLength 0.1;
X    streamer SetStepLength 0.1;
X    streamer Update;
vtkPolyMapper slMapper;
X    slMapper SetInput [streamer GetOutput];
X    eval slMapper SetScalarRange [[pl3d GetOutput] GetScalarRange];
vtkActor slActor;
X    slActor SetMapper slMapper;
vtkGlyph3D glyph;
X    glyph SetInput [probe GetOutput];
X    glyph SetSource [cone GetOutput];
X    glyph SetScaleFactor 0.001;
X    glyph ScaleByVector;
vtkPolyMapper gMapper;
X    gMapper SetInput [glyph GetOutput];
X    eval gMapper SetScalarRange [[pl3d GetOutput] GetScalarRange];
vtkActor gActor;
X    gActor SetMapper gMapper;
#	 
X
vtkStructuredGridOutlineFilter outline;
X    outline SetInput [pl3d GetOutput];
vtkPolyMapper outlineMapper;
X    outlineMapper SetInput [outline GetOutput];
vtkActor outlineActor;
X    outlineActor SetMapper outlineMapper;
X    [outlineActor GetProperty] SetColor 0 0 0;
X
$ren1 AddActors outlineActor;
$ren1 AddActors gActor;
$ren1 AddActors tpd1Actor;
$ren1 AddActors tpd2Actor;
$ren1 AddActors tpd3Actor;
$ren1 SetBackground 1 1 1;
$renWin SetSize 500 500;
$iren Initialize;
X
set cam1 [$ren1 GetActiveCamera];
$cam1 SetClippingRange 3.95297 50;
$cam1 SetFocalPoint 8.88908 0.595038 29.3342;
$cam1 SetPosition -12.3332 31.7479 41.2387;
$cam1 CalcViewPlaneNormal;
$cam1 SetViewUp 0.060772 -0.319905 0.945498;
X
# render the image
#
$iren SetUserMethod {wm deiconify .vtkInteract};
$renWin Render;
X
# prevent the tk window from showing up then start the event loop
wm withdraw .
SHAR_EOF
  $shar_touch -am 0415235097 'hm3-2-2.tcl' &&
  chmod 0600 'hm3-2-2.tcl' ||
  $echo 'restore of' 'hm3-2-2.tcl' 'failed'
  if ( md5sum --help 2>&1 | grep 'sage: md5sum \[' ) >/dev/null 2>&1 \
  && ( md5sum --version 2>&1 | grep -v 'textutils 1.12' ) >/dev/null; then
    md5sum -c << SHAR_EOF >/dev/null 2>&1 \
    || $echo 'hm3-2-2.tcl:' 'MD5 check failed'
703cd74d25a1ce5b5d8eb81a2cb34c26  hm3-2-2.tcl
SHAR_EOF
  else
    shar_count="`LC_ALL= LC_CTYPE= LANG= wc -c < 'hm3-2-2.tcl'`"
    test 3867 -eq "$shar_count" ||
    $echo 'hm3-2-2.tcl:' 'original size' '3867,' 'current size' "$shar_count!"
  fi
fi
# ============= hm3-2-3.tcl ==============
if test -f 'hm3-2-3.tcl' && test "$first_param" != -c; then
  $echo 'x -' SKIPPING 'hm3-2-3.tcl' '(file already exists)'
else
  $echo 'x -' extracting 'hm3-2-3.tcl' '(text)'
  sed 's/^X//' << 'SHAR_EOF' > 'hm3-2-3.tcl' &&
source VTKINT.TCL
vtkRenderMaster rm;
X
# Now create the RenderWindow, Renderer and both Actors
#
set renWin [rm MakeRenderWindow];
set ren1   [$renWin MakeRenderer];
set iren [$renWin MakeRenderWindowInteractor];
X
# create pipeline
#
vtkPLOT3DReader pl3d;
X    pl3d SetXYZFilename "/home/62/citrit/public/Spring97/examples/Vtk/COMBXYZ.BIN"
X    pl3d SetQFilename "/home/62/citrit/public/Spring97/examples/Vtk/COMBQ.BIN"
X    pl3d SetScalarFunctionNumber 100;
X    pl3d SetVectorFunctionNumber 202;
X    pl3d Update;
vtkPlaneSource plane;
X    plane SetResolution 50 50;
vtkTransform transP1;
X    transP1 Translate 3.7 0.0 28.37;
X    transP1 Scale 5 5 5;
X    transP1 RotateY 90;
vtkTransformPolyFilter tpd1
X    tpd1 SetInput [plane GetOutput];
X    tpd1 SetTransform transP1;
vtkOutlineFilter outTpd1;
X    outTpd1 SetInput [tpd1 GetOutput];
vtkPolyMapper mapTpd1;
X    mapTpd1 SetInput [outTpd1 GetOutput];
vtkActor tpd1Actor;
X    tpd1Actor SetMapper mapTpd1;
X    [tpd1Actor GetProperty] SetColor 0 0 0;
vtkTransform transP2;
X    transP2 Translate 9.2 0.0 31.20;
X    transP2 Scale 5 5 5;
X    transP2 RotateY 90;
vtkTransformPolyFilter tpd2
X    tpd2 SetInput [plane GetOutput];
X    tpd2 SetTransform transP2;
vtkOutlineFilter outTpd2;
X    outTpd2 SetInput [tpd2 GetOutput];
vtkPolyMapper mapTpd2;
X    mapTpd2 SetInput [outTpd2 GetOutput];
vtkActor tpd2Actor;
X    tpd2Actor SetMapper mapTpd2;
X    [tpd2Actor GetProperty] SetColor 0 0 0;
vtkTransform transP3;
X    transP3 Translate 13.27 0.0 33.30;
X    transP3 Scale 5 5 5;
X    transP3 RotateY 90;
vtkTransformPolyFilter tpd3
X    tpd3 SetInput [plane GetOutput];
X    tpd3 SetTransform transP3;
vtkOutlineFilter outTpd3;
X    outTpd3 SetInput [tpd3 GetOutput];
vtkPolyMapper mapTpd3;
X    mapTpd3 SetInput [outTpd3 GetOutput];
vtkActor tpd3Actor;
X    tpd3Actor SetMapper mapTpd3;
X    [tpd3Actor GetProperty] SetColor 0 0 0;
vtkAppendPolyData appendF;
X    appendF AddInput [tpd1 GetOutput];
X    appendF AddInput [tpd2 GetOutput];
X    appendF AddInput [tpd3 GetOutput];
vtkProbeFilter probe;
X    probe SetInput [appendF GetOutput];
X    probe SetSource [pl3d GetOutput];
vtkContourFilter contour;
X	contour SetInput [probe GetOutput];
X	eval contour GenerateValues 100 [[pl3d GetOutput] GetScalarRange];
vtkWarpVector warp;
X    warp SetInput [contour GetOutput];
X    warp SetScaleFactor .01;
vtkDataSetMapper warpMapper;
X    warpMapper SetInput [warp GetOutput];
X    eval warpMapper SetScalarRange [[pl3d GetOutput] GetScalarRange];
vtkActor warpActor;
X    warpActor SetMapper warpMapper;
vtkStructuredGridOutlineFilter outline;
X    outline SetInput [pl3d GetOutput];
vtkPolyMapper outlineMapper;
X    outlineMapper SetInput [outline GetOutput];
vtkActor outlineActor;
X    outlineActor SetMapper outlineMapper;
X    [outlineActor GetProperty] SetColor 0 0 0;
X
$ren1 AddActors outlineActor;
$ren1 AddActors warpActor;
$ren1 AddActors tpd1Actor;
$ren1 AddActors tpd2Actor;
$ren1 AddActors tpd3Actor;
$ren1 SetBackground 1 1 1;
$renWin SetSize 500 500;
$iren Initialize;
X
set cam1 [$ren1 GetActiveCamera];
$cam1 SetClippingRange 3.95297 50;
$cam1 SetFocalPoint 8.88908 0.595038 29.3342;
$cam1 SetPosition -12.3332 31.7479 41.2387;
$cam1 CalcViewPlaneNormal;
$cam1 SetViewUp 0.060772 -0.319905 0.945498;
X
# render the image
#
$iren SetUserMethod {wm deiconify .vtkInteract};
$renWin Render;
X
# prevent the tk window from showing up then start the event loop
wm withdraw .
SHAR_EOF
  $shar_touch -am 0415230697 'hm3-2-3.tcl' &&
  chmod 0600 'hm3-2-3.tcl' ||
  $echo 'restore of' 'hm3-2-3.tcl' 'failed'
  if ( md5sum --help 2>&1 | grep 'sage: md5sum \[' ) >/dev/null 2>&1 \
  && ( md5sum --version 2>&1 | grep -v 'textutils 1.12' ) >/dev/null; then
    md5sum -c << SHAR_EOF >/dev/null 2>&1 \
    || $echo 'hm3-2-3.tcl:' 'MD5 check failed'
591ce0660f215e99ce24308de0298357  hm3-2-3.tcl
SHAR_EOF
  else
    shar_count="`LC_ALL= LC_CTYPE= LANG= wc -c < 'hm3-2-3.tcl'`"
    test 3396 -eq "$shar_count" ||
    $echo 'hm3-2-3.tcl:' 'original size' '3396,' 'current size' "$shar_count!"
  fi
fi
# ============= hm3-2-4.tcl ==============
if test -f 'hm3-2-4.tcl' && test "$first_param" != -c; then
  $echo 'x -' SKIPPING 'hm3-2-4.tcl' '(file already exists)'
else
  $echo 'x -' extracting 'hm3-2-4.tcl' '(binary)'
  sed 's/^X//' << 'SHAR_EOF' | uudecode &&
begin 600 hm3-2-4.tcl
M<V]U<F-E(%942TE.5"Y40TP*=G1K4F5N9&5R36%S=&5R(')M.PH*(R!.;W<@
M8W)E871E('1H92!296YD97)7:6YD;W<L(%)E;F1E<F5R(&%N9"!B;W1H($%C
M=&]R<PHC"G-E="!R96Y7:6X@6W)M($UA:V5296YD97)7:6YD;W==.PIS970@
M<F5N,2`@(%LD<F5N5VEN($UA:V5296YD97)E<ET["G-E="!I<F5N(%LD<F5N
M5VEN($UA:V5296YD97)7:6YD;W=);G1E<F%C=&]R73L*"B,@8W)E871E('!I
M<&5L:6YE"B,*=G1K4$Q/5#-$4F5A9&5R('!L,V0["B`@("!P;#-D(%-E=%A9
M6D9I;&5N86UE("(O:&]M92\V,B]C:71R:70O<'5B;&EC+U-P<FEN9SDW+V5X
M86UP;&5S+U9T:R]#3TU"6%E:+D))3B(*("`@('!L,V0@4V5T449I;&5N86UE
M("(O:&]M92\V,B]C:71R:70O<'5B;&EC+U-P<FEN9SDW+V5X86UP;&5S+U9T
M:R]#3TU"42Y"24XB"B`@("!P;#-D(%-E=%-C86QA<D9U;F-T:6]N3G5M8F5R
M(#(P,#L*("`@('!L,V0@4V5T5F5C=&]R1G5N8W1I;VY.=6UB97(@,C`R.PH@
M("`@<&PS9"!5<&1A=&4["@IV=&M0;&%N95-O=7)C92!P;&%N93L*("`@('!L
M86YE(%-E=%)E<V]L=71I;VX@-3`@-3`["G9T:U1R86YS9F]R;2!T<F%N<U`Q
M.PH@("`@=')A;G-0,2!4<F%N<VQA=&4@,RXW(#`N,"`R."XS-SL*("`@('1R
M86YS4#$@4V-A;&4@-2`U(#4["B`@("!T<F%N<U`Q(%)O=&%T95D@.3`["G9T
M:U1R86YS9F]R;5!O;'E&:6QT97(@='!D,0H@("`@='!D,2!3971);G!U="!;
M<&QA;F4@1V5T3W5T<'5T73L*("`@('1P9#$@4V5T5')A;G-F;W)M('1R86YS
M4#$["G9T:T]U=&QI;F5&:6QT97(@;W5T5'!D,3L*("`@(&]U=%1P9#$@4V5T
M26YP=70@6W1P9#$@1V5T3W5T<'5T73L*=G1K4&]L>4UA<'!E<B!M87!4<&0Q
M.PH@("`@;6%P5'!D,2!3971);G!U="!;;W5T5'!D,2!'971/=71P=71=.PIV
M=&M!8W1O<B!T<&0Q06-T;W(["B`@("!T<&0Q06-T;W(@4V5T36%P<&5R(&UA
M<%1P9#$["B`@("!;='!D,4%C=&]R($=E=%!R;W!E<G1Y72!3971#;VQO<B`P
M(#`@,#L*=G1K5')A;G-F;W)M('1R86YS4#(["B`@("!T<F%N<U`R(%1R86YS
M;&%T92`Y+C(@,"XP(#,Q+C(P.PH@("`@=')A;G-0,B!38V%L92`U(#4@-3L*
M("`@('1R86YS4#(@4F]T871E62`Y,#L*=G1K5')A;G-F;W)M4&]L>49I;'1E
M<B!T<&0R"B`@("!T<&0R(%-E=$EN<'5T(%MP;&%N92!'971/=71P=71=.PH@
M("`@='!D,B!39714<F%N<V9O<FT@=')A;G-0,CL*=G1K3W5T;&EN949I;'1E
M<B!O=714<&0R.PH@("`@;W5T5'!D,B!3971);G!U="!;='!D,B!'971/=71P
M=71=.PIV=&M0;VQY36%P<&5R(&UA<%1P9#(["B`@("!M87!4<&0R(%-E=$EN
M<'5T(%MO=714<&0R($=E=$]U='!U=%T["G9T:T%C=&]R('1P9#)!8W1O<CL*
M("`@('1P9#)!8W1O<B!3971-87!P97(@;6%P5'!D,CL*("`@(%MT<&0R06-T
M;W(@1V5T4')O<&5R='E=(%-E=$-O;&]R(#`@,"`P.PH*=G1K5')A;G-F;W)M
M('1R86YS4#,["B`@("!T<F%N<U`S(%1R86YS;&%T92`Q,RXR-R`P+C`@,S,N
M,S`["B`@("!T<F%N<U`S(%-C86QE(#4@-2`U.PH@("`@=')A;G-0,R!2;W1A
M=&59(#DP.PIV=&M4<F%N<V9O<FU0;VQY1FEL=&5R('1P9#,*("`@('1P9#,@
M4V5T26YP=70@6W!L86YE($=E=$]U='!U=%T["B`@("!T<&0S(%-E=%1R86YS
M9F]R;2!T<F%N<U`S.PIV=&M/=71L:6YE1FEL=&5R(&]U=%1P9#,["B`@("!O
M=714<&0S(%-E=$EN<'5T(%MT<&0S($=E=$]U='!U=%T["G9T:U!O;'E-87!P
M97(@;6%P5'!D,SL*("`@(&UA<%1P9#,@4V5T26YP=70@6V]U=%1P9#,@1V5T
M3W5T<'5T73L*=G1K06-T;W(@='!D,T%C=&]R.PH@("`@='!D,T%C=&]R(%-E
M=$UA<'!E<B!M87!4<&0S.PH@("`@6W1P9#-!8W1O<B!'9710<F]P97)T>5T@
M4V5T0V]L;W(@,"`P(#`["G9T:T%P<&5N9%!O;'E$871A(&%P<&5N9$8["B`@
M("!A<'!E;F1&($%D9$EN<'5T(%MT<&0Q($=E=$]U='!U=%T["B`@("!A<'!E
M;F1&($%D9$EN<'5T(%MT<&0R($=E=$]U='!U=%T["B`@("!A<'!E;F1&($%D
M9$EN<'5T(%MT<&0S($=E=$]U='!U=%T["B`@("`*=G1K4')O8F5&:6QT97(@
M<')O8F4["B`@("!P<F]B92!3971);G!U="!;87!P96YD1B!'971/=71P=71=
M.PH@("`@<')O8F4@4V5T4V]U<F-E(%MP;#-D($=E=$]U='!U=%T["@IV=&M6
M96-T;W).;W)M('9N;W)M.PH@("`@=FYO<FT@4V5T26YP=70@6W!R;V)E($=E
M=$]U='!U=%T["B`@("!V;F]R;2!.;W)M86QI>F5/;CL*"G9T:T-O;G1O=7)&
M:6QT97(@8V]N=&]U<CL*("`@(&-O;G1O=7(@4V5T26YP=70@6W9N;W)M($=E
M=$]U='!U=%T["B`@("!E=F%L(&-O;G1O=7(@1V5N97)A=&5686QU97,@-3`@
M6UMP;#-D($=E=$]U='!U=%T@1V5T4V-A;&%R4F%N9V5=.PH*=G1K1&%T85-E
M=$UA<'!E<B!N;W)M36%P<&5R.PH@("`@;F]R;4UA<'!E<B!3971);G!U="!;
M8V]N=&]U<B!'971/=71P=71=.PH@("`@979A;"!N;W)M36%P<&5R(%-E=%-C
M86QA<E)A;F=E(%M;<&PS9"!'971/=71P=71=($=E=%-C86QA<E)A;F=E73L*
M"G9T:T%C=&]R(&YO<FU!8W1O<CL*("`@(&YO<FU!8W1O<B!3971-87!P97(@
M;F]R;4UA<'!E<CL*"2`*=G1K4W1R=6-T=7)E9$=R:61/=71L:6YE1FEL=&5R
M(&]U=&QI;F4["B`@("!O=71L:6YE(%-E=$EN<'5T(%MP;#-D($=E=$]U='!U
M=%T["G9T:U!O;'E-87!P97(@;W5T;&EN94UA<'!E<CL*("`@(&]U=&QI;F5-
M87!P97(@4V5T26YP=70@6V]U=&QI;F4@1V5T3W5T<'5T73L*=G1K06-T;W(@
M;W5T;&EN94%C=&]R.PH@("`@;W5T;&EN94%C=&]R(%-E=$UA<'!E<B!O=71L
M:6YE36%P<&5R.PH@("`@6V]U=&QI;F5!8W1O<B!'9710<F]P97)T>5T@4V5T
M0V]L;W(@,"`P(#`["@HD<F5N,2!!9&1!8W1O<G,@;W5T;&EN94%C=&]R.PHD
M<F5N,2!!9&1!8W1O<G,@;F]R;4%C=&]R.PHD<F5N,2!!9&1!8W1O<G,@='!D
M,4%C=&]R.PHD<F5N,2!!9&1!8W1O<G,@='!D,D%C=&]R.PHD<F5N,2!!9&1!
M8W1O<G,@='!D,T%C=&]R.PHD<F5N,2!3971"86-K9W)O=6YD(#$@,2`Q.PHD
M<F5N5VEN(%-E=%-I>F4@-3`P(#4P,#L*)&ER96X@26YI=&EA;&EZ93L*"G-E
M="!C86TQ(%LD<F5N,2!'971!8W1I=F5#86UE<F%=.PHD8V%M,2!3971#;&EP
M<&EN9U)A;F=E(#,N.34R.3<@-3`["B1C86TQ(%-E=$9O8V%L4&]I;G0@."XX
M.#DP."`P+C4Y-3`S."`R.2XS,S0R.PHD8V%M,2!39710;W-I=&EO;B`M,3(N
M,S,S,B`S,2XW-#<Y(#0Q+C(S.#<["B1C86TQ($-A;&-6:65W4&QA;F5.;W)M
M86P["B1C86TQ(%-E=%9I97=5<"`P+C`V,#<W,B`M,"XS,3DY,#4@,"XY-#4T
M.3@["@HC(')E;F1E<B!T:&4@:6UA9V4*(PHD:7)E;B!39715<V5R365T:&]D
M('MW;2!D96EC;VYI9GD@+G9T:TEN=&5R86-T?3L*)')E;E=I;B!296YD97([
M"@HC('!R979E;G0@=&AE('1K('=I;F1O=R!F<F]M('-H;W=I;F<@=7`@=&AE
D;B!S=&%R="!T:&4@979E;G0@;&]O<`IW;2!W:71H9')A=R`N
`
end
SHAR_EOF
  $shar_touch -am 0415230797 'hm3-2-4.tcl' &&
  chmod 0600 'hm3-2-4.tcl' ||
  $echo 'restore of' 'hm3-2-4.tcl' 'failed'
  if ( md5sum --help 2>&1 | grep 'sage: md5sum \[' ) >/dev/null 2>&1 \
  && ( md5sum --version 2>&1 | grep -v 'textutils 1.12' ) >/dev/null; then
    md5sum -c << SHAR_EOF >/dev/null 2>&1 \
    || $echo 'hm3-2-4.tcl:' 'MD5 check failed'
472692fdea19a4ff2c6e8e02e0de671b  hm3-2-4.tcl
SHAR_EOF
  else
    shar_count="`LC_ALL= LC_CTYPE= LANG= wc -c < 'hm3-2-4.tcl'`"
    test 3411 -eq "$shar_count" ||
    $echo 'hm3-2-4.tcl:' 'original size' '3411,' 'current size' "$shar_count!"
  fi
fi
rm -fr _sh01971
exit 0

From ???@??? Wed Apr 16 07:18:38 1997
Received: from londo.stu.rpi.edu (londo.stu.rpi.edu [128.113.167.26])
	by mail1.its.rpi.edu (8.8.5/8.8.5) with ESMTP id AAA101060
	for <citrit@rpi.edu>; Wed, 16 Apr 1997 00:29:19 -0400
Received: (from mjr@localhost)
	by londo.stu.rpi.edu (8.8.5/8.8.5) id XAA00296
	for citrit@rpi.edu; Tue, 15 Apr 1997 23:29:15 -0400
From: "Matthew J. Ryan" <mjr@londo.stu.rpi.edu>
Message-Id: <199704160329.XAA00296@londo.stu.rpi.edu>
Subject: Project #3
To: citrit@rpi.edu
Date: Tue, 15 Apr 1997 23:29:15 -0400 (EDT)
X-Mailer: ELM [version 2.4 PL25 PGP2]
MIME-Version: 1.0
Content-Type: text/plain; charset=US-ASCII
Content-Transfer-Encoding: 7bit
X-UIDL: b0652d3d59d6303142cf8fba93b3707b

Sorry this is late, but my hard drive started spinning down randomly.

#!/bin/sh
# This is a shell archive (produced by GNU sharut 4.2.1).
# To extract the files from this archive, save it to some FILE, remove
# everything before the `!/bin/sh' line above, then type `sh FILE'.
#
# Made on 1997-04-15 23:27 EDT by <mjr@londo>.
# Source directory was `/home/mjr/vtk/vtk/install/usr/local/X11/bin'.
#
# Existing files will *not* be overwritten unless `-c' is specified.
#
# This shar contains:
# length mode       name
# ------ ---------- ------------------------------------------
#   1241 -rw-r--r-- Sample.tcl
#   1749 -rwxr----- MRIHead.tcl
#   3344 -rw-r--r-- hedgecom.tcl
#   3564 -rw-r--r-- vectdotcom.tcl
#   3656 -rw-r--r-- warpcom.tcl
#
save_IFS="${IFS}"
IFS="${IFS}:"
gettext_dir=FAILED
locale_dir=FAILED
first_param="$1"
for dir in $PATH
do
  if test "$gettext_dir" = FAILED && test -f $dir/gettext \
     && ($dir/gettext --version >/dev/null 2>&1)
  then
    set `$dir/gettext --version 2>&1`
    if test "$3" = GNU
    then
      gettext_dir=$dir
    fi
  fi
  if test "$locale_dir" = FAILED && test -f $dir/shar \
     && ($dir/shar --print-text-domain-dir >/dev/null 2>&1)
  then
    locale_dir=`$dir/shar --print-text-domain-dir`
  fi
done
IFS="$save_IFS"
if test "$locale_dir" = FAILED || test "$gettext_dir" = FAILED
then
  echo=echo
else
  TEXTDOMAINDIR=$locale_dir
  export TEXTDOMAINDIR
  TEXTDOMAIN=sharutils
  export TEXTDOMAIN
  echo="$gettext_dir/gettext -s"
fi
if (echo "testing\c"; echo 1,2,3) | grep c >/dev/null; then
  if (echo -n testing; echo 1,2,3) | sed s/-n/xn/ | grep xn >/dev/null; then
    shar_n= shar_c='
'
  else
    shar_n=-n shar_c=
  fi
else
  shar_n= shar_c='\c'
fi
touch -am 1231235999 $$.touch >/dev/null 2>&1
if test ! -f 1231235999 && test -f $$.touch; then
  shar_touch=touch
else
  shar_touch=:
  echo
  $echo 'WARNING: not restoring timestamps.  Consider getting and'
  $echo "installing GNU \`touch', distributed in GNU File Utilities..."
  echo
fi
rm -f 1231235999 $$.touch
#
$echo $shar_n 'x -' 'lock directory' "\`_sh00279': "$shar_c
if mkdir _sh00279; then
  $echo 'created'
else
  $echo 'failed to create'
  exit 1
fi
# ============= Sample.tcl ==============
if test -f 'Sample.tcl' && test "$first_param" != -c; then
  $echo 'x -' SKIPPING 'Sample.tcl' '(file already exists)'
else
  $echo 'x -' extracting 'Sample.tcl' '(text)'
  sed 's/^X//' << 'SHAR_EOF' > 'Sample.tcl' &&
#load vtktcl;
# user interface command widget
source vtkInt.tcl
X
# create a rendering window and renderer
vtkRenderMaster rm;
set renWin [rm MakeRenderWindow];
set ren1 [$renWin MakeRenderer];
set iren [$renWin MakeRenderWindowInteractor];
X
vtkQuadric quad;
X  quad SetCoefficients 0.5 1 .2 0 .1 0 0 .2 0 0;
vtkSampleFunction sample;
X  sample SetSampleDimensions 20 20 20;
X  sample SetImplicitFunction quad;
vtkContourFilter contours;
X  contours SetInput [sample GetOutput];
X  contours SetValue 0 1.2;
vtkPolyMapper contMapper;
X  contMapper SetInput [contours GetOutput];
X  contMapper SetScalarRange 0.0 1.2;
vtkActor contActor;
X  contActor SetMapper contMapper;
X
# assign our actor to the renderer
$ren1 SetBackground 1 1 1;
$ren1 AddActors contActor;
X
# enable user interface interactor
$iren SetUserMethod {wm deiconify .vtkInteract};
$iren Initialize;
X
# Setup the Control Panel
button .start -text "Start Animation" -command {animate 0 1.2 0.05}
pack .start
button .quit -text "Quit" -command exit
pack .quit -fill x
X
proc animate {lowVal highVal stepVal} {
X  global renWin
X  for {set currVal $lowVal} {$currVal <= $highVal} {set currVal [expr $currVal + $stepVal]} {
X    contours SetValue 0 $currVal
X    $renWin Render
X    update
X  }
}
SHAR_EOF
  $shar_touch -am 0414133097 'Sample.tcl' &&
  chmod 0644 'Sample.tcl' ||
  $echo 'restore of' 'Sample.tcl' 'failed'
  if ( md5sum --help </dev/null 2>&1 | grep 'sage: md5sum \[' ) >/dev/null 2>&1 \
  && ( md5sum --version </dev/null 2>&1 | grep -v 'textutils 1.12' ) >/dev/null; then
    md5sum -c << SHAR_EOF >/dev/null 2>&1 \
    || $echo 'Sample.tcl:' 'MD5 check failed'
4a711194143ef8e2aa977683c3ffb5a6  Sample.tcl
SHAR_EOF
  else
    shar_count="`LC_ALL=C wc -c < 'Sample.tcl'`"
    test 1241 -eq "$shar_count" ||
    $echo 'Sample.tcl:' 'original size' '1241,' 'current size' "$shar_count!"
  fi
fi
# ============= MRIHead.tcl ==============
if test -f 'MRIHead.tcl' && test "$first_param" != -c; then
  $echo 'x -' SKIPPING 'MRIHead.tcl' '(file already exists)'
else
  $echo 'x -' extracting 'MRIHead.tcl' '(text)'
  sed 's/^X//' << 'SHAR_EOF' > 'MRIHead.tcl' &&
# If you are using Window95 and vtk 1.3 uncomment the line below
# load vtktcl;
X
# get the interactor ui
source vtkInt.tcl
X
# First create the render master
vtkRenderMaster rm;
X
# Now create the RenderWindow, Renderer
#
set renWin [rm MakeRenderWindow];
set ren1   [$renWin MakeRenderer];
set iren   [$renWin MakeRenderWindowInteractor];
X
#
# Load up the data
vtkStructuredPointsReader vol;
X    vol SetFilename "MRIdata.vtk"
X    vol DebugOn;
X
vtkMarchingCubes contour;
X  contour SetInput [vol GetOutput];
X  contour SetValue 0 225.0;
X
vtkPolyNormals normals;
X  normals SetInput [contour GetOutput];
X  normals SetFeatureAngle 60;
X
vtkDecimate decimator;
X  decimator SetInput [normals GetOutput];
X
vtkPolyMapper volMapper;
X  volMapper SetInput [decimator GetOutput];
X  volMapper ScalarsVisibleOff;
X
vtkActor volActor;
X  volActor SetMapper volMapper;
X
vtkOutlineFilter outLine;
X  outLine SetInput [vol GetOutput];
X
vtkPolyMapper outMapper;
X  outMapper SetInput [outLine GetOutput];
X
vtkActor outActor;
X  outActor SetMapper outMapper;
X
# Add the actors to the renderer, set the background and size
#
$ren1 AddActors outActor;
$ren1 AddActors volActor;
$ren1 SetBackground 0 0 0;
$renWin SetSize 500 400;
$iren Initialize;
X
# render the image
#
$iren SetUserMethod {wm deiconify .vtkInteract};
$renWin Render;
X
# prevent the tk window from showing up then start the event loop
#wm withdraw .
button .start -text "Start Animation" -command {animate 100 1800 100}
pack .start
button .quit -text "Quit" -command exit
pack .quit -fill x
X
X
proc animate {lowVal highVal stepVal} {
X  global renWin
X  for {set currVal $lowVal} {$currVal <= $highVal} {set currVal [expr $currVal + $stepVal]} {
X    contour SetValue 0 $currVal
X    $renWin Render
X    update
X  }
}
X
X
SHAR_EOF
  $shar_touch -am 0415125097 'MRIHead.tcl' &&
  chmod 0740 'MRIHead.tcl' ||
  $echo 'restore of' 'MRIHead.tcl' 'failed'
  if ( md5sum --help </dev/null 2>&1 | grep 'sage: md5sum \[' ) >/dev/null 2>&1 \
  && ( md5sum --version </dev/null 2>&1 | grep -v 'textutils 1.12' ) >/dev/null; then
    md5sum -c << SHAR_EOF >/dev/null 2>&1 \
    || $echo 'MRIHead.tcl:' 'MD5 check failed'
2ab8fe747e450c1e2f8ff17c1f47e7aa  MRIHead.tcl
SHAR_EOF
  else
    shar_count="`LC_ALL=C wc -c < 'MRIHead.tcl'`"
    test 1749 -eq "$shar_count" ||
    $echo 'MRIHead.tcl:' 'original size' '1749,' 'current size' "$shar_count!"
  fi
fi
# ============= hedgecom.tcl ==============
if test -f 'hedgecom.tcl' && test "$first_param" != -c; then
  $echo 'x -' SKIPPING 'hedgecom.tcl' '(file already exists)'
else
  $echo 'x -' extracting 'hedgecom.tcl' '(text)'
  sed 's/^X//' << 'SHAR_EOF' > 'hedgecom.tcl' &&
#unommet the line below if you are on Windows95
# load vtktcl;
# get the interactor ui
source vtkInt.tcl
X
# create planes
# First create the render master
vtkRenderMaster rm;
X
# Now create the RenderWindow, Renderer and both Actors
#
set renWin [rm MakeRenderWindow];
set ren1   [$renWin MakeRenderer];
set iren [$renWin MakeRenderWindowInteractor];
X
# create pipeline
#
vtkPLOT3DReader pl3d;
X    pl3d SetXYZFilename "combxyz.bin"
X    pl3d SetQFilename "combq.bin"
X    pl3d SetScalarFunctionNumber 100;
X    pl3d SetVectorFunctionNumber 202;
X    pl3d Update;
X
vtkPlaneSource plane;
X    plane SetResolution 50 50;
vtkTransform transP1;
X    transP1 Translate 3.7 0.0 28.37;
X    transP1 Scale 5 5 5;
X    transP1 RotateY 90;
vtkTransformPolyFilter tpd1
X    tpd1 SetInput [plane GetOutput];
X    tpd1 SetTransform transP1;
vtkOutlineFilter outTpd1;
X    outTpd1 SetInput [tpd1 GetOutput];
vtkPolyMapper mapTpd1;
X    mapTpd1 SetInput [outTpd1 GetOutput];
vtkActor tpd1Actor;
X    tpd1Actor SetMapper mapTpd1;
X    [tpd1Actor GetProperty] SetColor 0 0 0;
X
vtkTransform transP2;
X    transP2 Translate 9.2 0.0 31.20;
X    transP2 Scale 5 5 5;
X    transP2 RotateY 90;
vtkTransformPolyFilter tpd2
X    tpd2 SetInput [plane GetOutput];
X    tpd2 SetTransform transP2;
vtkOutlineFilter outTpd2;
X    outTpd2 SetInput [tpd2 GetOutput];
vtkPolyMapper mapTpd2;
X    mapTpd2 SetInput [outTpd2 GetOutput];
vtkActor tpd2Actor;
X    tpd2Actor SetMapper mapTpd2;
X    [tpd2Actor GetProperty] SetColor 0 0 0;
X
vtkTransform transP3;
X    transP3 Translate 13.27 0.0 33.30;
X    transP3 Scale 5 5 5;
X    transP3 RotateY 90;
vtkTransformPolyFilter tpd3
X    tpd3 SetInput [plane GetOutput];
X    tpd3 SetTransform transP3;
vtkOutlineFilter outTpd3;
X    outTpd3 SetInput [tpd3 GetOutput];
vtkPolyMapper mapTpd3;
X    mapTpd3 SetInput [outTpd3 GetOutput];
vtkActor tpd3Actor;
X    tpd3Actor SetMapper mapTpd3;
X    [tpd3Actor GetProperty] SetColor 0 0 0;
X
vtkAppendPolyData appendF;
X    appendF AddInput [tpd1 GetOutput];
X    appendF AddInput [tpd2 GetOutput];
X    appendF AddInput [tpd3 GetOutput];
X
vtkProbeFilter probe;
X    probe SetInput [appendF GetOutput];
X    probe SetSource [pl3d GetOutput];
X
vtkHedgeHog contour;
X    contour SetInput [probe GetOutput];
X    contour SetScaleFactor 0.01;
X
vtkPolyMapper contourMapper;
X    contourMapper SetInput [contour GetOutput];
X    eval contourMapper SetScalarRange [[pl3d GetOutput] GetScalarRange];
vtkActor planeActor;
X    planeActor SetMapper contourMapper;
X
vtkStructuredGridOutlineFilter outline;
X    outline SetInput [pl3d GetOutput];
vtkPolyMapper outlineMapper;
X    outlineMapper SetInput [outline GetOutput];
vtkActor outlineActor;
X    outlineActor SetMapper outlineMapper;
X    [outlineActor GetProperty] SetColor 0 0 0;
X
$ren1 AddActors outlineActor;
$ren1 AddActors planeActor;
$ren1 AddActors tpd1Actor;
$ren1 AddActors tpd2Actor;
$ren1 AddActors tpd3Actor;
$ren1 SetBackground 1 1 1;
$renWin SetSize 500 500;
$iren Initialize;
X
set cam1 [$ren1 GetActiveCamera];
$cam1 SetClippingRange 3.95297 50;
$cam1 SetFocalPoint 8.88908 0.595038 29.3342;
$cam1 SetPosition -12.3332 31.7479 41.2387;
$cam1 CalcViewPlaneNormal;
$cam1 SetViewUp 0.060772 -0.319905 0.945498;
X
# render the image
#
$iren SetUserMethod {wm deiconify .vtkInteract};
$renWin Render;
X
# prevent the tk window from showing up then start the event loop
wm withdraw .
X
X
X
SHAR_EOF
  $shar_touch -am 0414174697 'hedgecom.tcl' &&
  chmod 0644 'hedgecom.tcl' ||
  $echo 'restore of' 'hedgecom.tcl' 'failed'
  if ( md5sum --help </dev/null 2>&1 | grep 'sage: md5sum \[' ) >/dev/null 2>&1 \
  && ( md5sum --version </dev/null 2>&1 | grep -v 'textutils 1.12' ) >/dev/null; then
    md5sum -c << SHAR_EOF >/dev/null 2>&1 \
    || $echo 'hedgecom.tcl:' 'MD5 check failed'
3cbddf3689de64761b878cd4e7e47ce0  hedgecom.tcl
SHAR_EOF
  else
    shar_count="`LC_ALL=C wc -c < 'hedgecom.tcl'`"
    test 3344 -eq "$shar_count" ||
    $echo 'hedgecom.tcl:' 'original size' '3344,' 'current size' "$shar_count!"
  fi
fi
# ============= vectdotcom.tcl ==============
if test -f 'vectdotcom.tcl' && test "$first_param" != -c; then
  $echo 'x -' SKIPPING 'vectdotcom.tcl' '(file already exists)'
else
  $echo 'x -' extracting 'vectdotcom.tcl' '(text)'
  sed 's/^X//' << 'SHAR_EOF' > 'vectdotcom.tcl' &&
#unommet the line below if you are on Windows95
# load vtktcl;
# get the interactor ui
source vtkInt.tcl
X
# create planes
# First create the render master
vtkRenderMaster rm;
X
# Now create the RenderWindow, Renderer and both Actors
#
set renWin [rm MakeRenderWindow];
set ren1   [$renWin MakeRenderer];
set iren [$renWin MakeRenderWindowInteractor];
X
# create pipeline
#
vtkPLOT3DReader pl3d;
X    pl3d SetXYZFilename "combxyz.bin"
X    pl3d SetQFilename "combq.bin"
X    pl3d SetScalarFunctionNumber 100;
X    pl3d SetVectorFunctionNumber 202;
X    pl3d Update;
X
vtkPlaneSource plane;
X    plane SetResolution 50 50;
X
vtkTransform transP1;
X    transP1 Translate 3.7 0.0 28.37;
X    transP1 Scale 5 5 5;
X    transP1 RotateY 90;
vtkTransformPolyFilter tpd1
X    tpd1 SetInput [plane GetOutput];
X    tpd1 SetTransform transP1;
vtkOutlineFilter outTpd1;
X    outTpd1 SetInput [tpd1 GetOutput];
vtkPolyMapper mapTpd1;
X    mapTpd1 SetInput [outTpd1 GetOutput];
vtkActor tpd1Actor;
X    tpd1Actor SetMapper mapTpd1;
X    [tpd1Actor GetProperty] SetColor 0 0 0;
X
vtkTransform transP2;
X    transP2 Translate 9.2 0.0 31.20;
X    transP2 Scale 5 5 5;
X    transP2 RotateY 90;
vtkTransformPolyFilter tpd2
X    tpd2 SetInput [plane GetOutput];
X    tpd2 SetTransform transP2;
vtkOutlineFilter outTpd2;
X    outTpd2 SetInput [tpd2 GetOutput];
vtkPolyMapper mapTpd2;
X    mapTpd2 SetInput [outTpd2 GetOutput];
vtkActor tpd2Actor;
X    tpd2Actor SetMapper mapTpd2;
X    [tpd2Actor GetProperty] SetColor 0 0 0;
X
vtkTransform transP3;
X    transP3 Translate 13.27 0.0 33.30;
X    transP3 Scale 5 5 5;
X    transP3 RotateY 90;
vtkTransformPolyFilter tpd3
X    tpd3 SetInput [plane GetOutput];
X    tpd3 SetTransform transP3;
vtkOutlineFilter outTpd3;
X    outTpd3 SetInput [tpd3 GetOutput];
vtkPolyMapper mapTpd3;
X    mapTpd3 SetInput [outTpd3 GetOutput];
vtkActor tpd3Actor;
X    tpd3Actor SetMapper mapTpd3;
X    [tpd3Actor GetProperty] SetColor 0 0 0;
X
vtkAppendPolyData appendF;
X    appendF AddInput [tpd1 GetOutput];
X    appendF AddInput [tpd2 GetOutput];
X    appendF AddInput [tpd3 GetOutput];
X
vtkProbeFilter probe;
X    probe SetInput [appendF GetOutput];
X    probe SetSource [pl3d GetOutput];
X
vtkGeometryFilter ds2poly;
X    ds2poly SetInput [probe GetOutput];
X
vtkCleanPolyData clean;
X    clean SetInput [ds2poly GetOutput];
X
vtkPolyNormals normals;
X    normals SetInput [clean GetOutput];
X    normals SetFeatureAngle 60;
X
vtkVectorDot vectDot;
X    vectDot SetInput [normals GetOutput];
X
vtkDataSetMapper vectMapper;
X    vectMapper SetInput [vectDot GetOutput];
X    eval vectMapper SetScalarRange [[pl3d GetOutput] GetScalarRange];
X
vtkActor planeActor;
X    planeActor SetMapper vectMapper;
X
# Create Combustor Outline
vtkStructuredGridOutlineFilter outline;
X    outline SetInput [pl3d GetOutput];
vtkPolyMapper outlineMapper;
X    outlineMapper SetInput [outline GetOutput];
vtkActor outlineActor;
X    outlineActor SetMapper outlineMapper;
X    [outlineActor GetProperty] SetColor 0 0 0;
X
$ren1 AddActors outlineActor;
$ren1 AddActors planeActor;
$ren1 AddActors tpd1Actor;
$ren1 AddActors tpd2Actor;
$ren1 AddActors tpd3Actor;
$ren1 SetBackground 1 1 1;
$renWin SetSize 500 500;
$iren Initialize;
X
set cam1 [$ren1 GetActiveCamera];
$cam1 SetClippingRange 3.95297 50;
$cam1 SetFocalPoint 8.88908 0.595038 29.3342;
$cam1 SetPosition -12.3332 31.7479 41.2387;
$cam1 CalcViewPlaneNormal;
$cam1 SetViewUp 0.060772 -0.319905 0.945498;
X
# render the image
#
$iren SetUserMethod {wm deiconify .vtkInteract};
$renWin Render;
X
# prevent the tk window from showing up then start the event loop
wm withdraw .
X
X
X
SHAR_EOF
  $shar_touch -am 0415124397 'vectdotcom.tcl' &&
  chmod 0644 'vectdotcom.tcl' ||
  $echo 'restore of' 'vectdotcom.tcl' 'failed'
  if ( md5sum --help </dev/null 2>&1 | grep 'sage: md5sum \[' ) >/dev/null 2>&1 \
  && ( md5sum --version </dev/null 2>&1 | grep -v 'textutils 1.12' ) >/dev/null; then
    md5sum -c << SHAR_EOF >/dev/null 2>&1 \
    || $echo 'vectdotcom.tcl:' 'MD5 check failed'
4a419de4e141ddba23173c99d19ba57b  vectdotcom.tcl
SHAR_EOF
  else
    shar_count="`LC_ALL=C wc -c < 'vectdotcom.tcl'`"
    test 3564 -eq "$shar_count" ||
    $echo 'vectdotcom.tcl:' 'original size' '3564,' 'current size' "$shar_count!"
  fi
fi
# ============= warpcom.tcl ==============
if test -f 'warpcom.tcl' && test "$first_param" != -c; then
  $echo 'x -' SKIPPING 'warpcom.tcl' '(file already exists)'
else
  $echo 'x -' extracting 'warpcom.tcl' '(text)'
  sed 's/^X//' << 'SHAR_EOF' > 'warpcom.tcl' &&
#unommet the line below if you are on Windows95
# load vtktcl;
# get the interactor ui
source vtkInt.tcl
X
# create planes
# First create the render master
vtkRenderMaster rm;
X
# Now create the RenderWindow, Renderer and both Actors
#
set renWin [rm MakeRenderWindow];
set ren1   [$renWin MakeRenderer];
set iren [$renWin MakeRenderWindowInteractor];
X
# create pipeline
#
vtkPLOT3DReader pl3d;
X    pl3d SetXYZFilename "combxyz.bin"
X    pl3d SetQFilename "combq.bin"
X    pl3d SetScalarFunctionNumber 100;
X    pl3d SetVectorFunctionNumber 202;
X    pl3d Update;
X
vtkPlaneSource plane;
X    plane SetResolution 50 50;
X
vtkTransform transP1;
X    transP1 Translate 3.7 0.0 28.37;
X    transP1 Scale 5 5 5;
X    transP1 RotateY 90;
vtkTransformPolyFilter tpd1
X    tpd1 SetInput [plane GetOutput];
X    tpd1 SetTransform transP1;
vtkOutlineFilter outTpd1;
X    outTpd1 SetInput [tpd1 GetOutput];
vtkPolyMapper mapTpd1;
X    mapTpd1 SetInput [outTpd1 GetOutput];
vtkActor tpd1Actor;
X    tpd1Actor SetMapper mapTpd1;
X    [tpd1Actor GetProperty] SetColor 0 0 0;
X
vtkTransform transP2;
X    transP2 Translate 9.2 0.0 31.20;
X    transP2 Scale 5 5 5;
X    transP2 RotateY 90;
vtkTransformPolyFilter tpd2
X    tpd2 SetInput [plane GetOutput];
X    tpd2 SetTransform transP2;
vtkOutlineFilter outTpd2;
X    outTpd2 SetInput [tpd2 GetOutput];
vtkPolyMapper mapTpd2;
X    mapTpd2 SetInput [outTpd2 GetOutput];
vtkActor tpd2Actor;
X    tpd2Actor SetMapper mapTpd2;
X    [tpd2Actor GetProperty] SetColor 0 0 0;
X
vtkTransform transP3;
X    transP3 Translate 13.27 0.0 33.30;
X    transP3 Scale 5 5 5;
X    transP3 RotateY 90;
vtkTransformPolyFilter tpd3
X    tpd3 SetInput [plane GetOutput];
X    tpd3 SetTransform transP3;
vtkOutlineFilter outTpd3;
X    outTpd3 SetInput [tpd3 GetOutput];
vtkPolyMapper mapTpd3;
X    mapTpd3 SetInput [outTpd3 GetOutput];
vtkActor tpd3Actor;
X    tpd3Actor SetMapper mapTpd3;
X    [tpd3Actor GetProperty] SetColor 0 0 0;
X
vtkAppendPolyData appendF;
X    appendF AddInput [tpd1 GetOutput];
X    appendF AddInput [tpd2 GetOutput];
X    appendF AddInput [tpd3 GetOutput];
X
vtkProbeFilter probe;
X    probe SetInput [appendF GetOutput];
X    probe SetSource [pl3d GetOutput];
X
vtkGeometryFilter geomFilt;
X    geomFilt SetInput [probe GetOutput];
X
vtkWarpVector warp;
X    warp SetInput [geomFilt GetOutput];
X    warp SetScaleFactor 0.005
X
vtkGeometryFilter ds2poly;
X    ds2poly SetInput [warp GetOutput];
X
vtkCleanPolyData clean;
X    clean SetInput [ds2poly GetOutput];
X
vtkPolyNormals normals;
X    normals SetInput [clean GetOutput];
X    normals SetFeatureAngle 60;
X
vtkPolyMapper warpMapper;
X    warpMapper SetInput [normals GetOutput];
X    eval warpMapper SetScalarRange [[pl3d GetOutput] GetScalarRange];
X
vtkActor planeActor;
X    planeActor SetMapper warpMapper;
X
# Create Combustor Outline
vtkStructuredGridOutlineFilter outline;
X    outline SetInput [pl3d GetOutput];
vtkPolyMapper outlineMapper;
X    outlineMapper SetInput [outline GetOutput];
vtkActor outlineActor;
X    outlineActor SetMapper outlineMapper;
X    [outlineActor GetProperty] SetColor 0 0 0;
X
$ren1 AddActors outlineActor;
$ren1 AddActors planeActor;
$ren1 AddActors tpd1Actor;
$ren1 AddActors tpd2Actor;
$ren1 AddActors tpd3Actor;
$ren1 SetBackground 1 1 1;
$renWin SetSize 500 500;
$iren Initialize;
X
set cam1 [$ren1 GetActiveCamera];
$cam1 SetClippingRange 3.95297 50;
$cam1 SetFocalPoint 8.88908 0.595038 29.3342;
$cam1 SetPosition -12.3332 31.7479 41.2387;
$cam1 CalcViewPlaneNormal;
$cam1 SetViewUp 0.060772 -0.319905 0.945498;
X
# render the image
#
$iren SetUserMethod {wm deiconify .vtkInteract};
$renWin Render;
X
# prevent the tk window from showing up then start the event loop
wm withdraw .
X
X
X
SHAR_EOF
  $shar_touch -am 0415123097 'warpcom.tcl' &&
  chmod 0644 'warpcom.tcl' ||
  $echo 'restore of' 'warpcom.tcl' 'failed'
  if ( md5sum --help </dev/null 2>&1 | grep 'sage: md5sum \[' ) >/dev/null 2>&1 \
  && ( md5sum --version </dev/null 2>&1 | grep -v 'textutils 1.12' ) >/dev/null; then
    md5sum -c << SHAR_EOF >/dev/null 2>&1 \
    || $echo 'warpcom.tcl:' 'MD5 check failed'
a7c7994a83c5eec57080afcec47adae5  warpcom.tcl
SHAR_EOF
  else
    shar_count="`LC_ALL=C wc -c < 'warpcom.tcl'`"
    test 3656 -eq "$shar_count" ||
    $echo 'warpcom.tcl:' 'original size' '3656,' 'current size' "$shar_count!"
  fi
fi
$echo $shar_n 'x -' 'lock directory' '_sh00279:' $shar_c
if rm -fr _sh00279; then
  $echo 'removed'
else
  $echo 'failed to remove'
fi
exit 0

From ???@??? Wed Apr 16 07:18:38 1997
Received: from cortez.sss.rpi.edu (griglb@cortez.sss.rpi.edu [128.113.113.33])
	by mail1.its.rpi.edu (8.8.5/8.8.5) with ESMTP id BAA97148
	for <citrit@rpi.edu>; Wed, 16 Apr 1997 01:02:41 -0400
From: Brian J Griglak <griglb>
Received: (griglb@localhost) by cortez.sss.rpi.edu (8.6.9/8.6.4) id BAA119354 for citrit@rpi.edu; Wed, 16 Apr 1997 01:02:40 -0400
Date: Wed, 16 Apr 1997 01:02:40 -0400
Message-Id: <199704160502.BAA119354@cortez.sss.rpi.edu>
To: citrit@rpi.edu
Subject: Homework 3
X-UIDL: 761720ea420317cb41a6c0731c340cd7

#!/bin/sh
# This is a shell archive (produced by GNU sharutils 4.2).
# To extract the files from this archive, save it to some FILE, remove
# everything before the `!/bin/sh' line above, then type `sh FILE'.
#
# Made on 1997-04-16 01:02 EDT by <griglb@cortez>.
# Source directory was `/afs/rpi.edu/home/87/griglb/graphics/hw3'.
#
# Existing files will *not* be overwritten unless `-c' is specified.
#
# This shar contains:
# length mode       name
# ------ ---------- ------------------------------------------
#   1829 -rw------- MRIHead.tcl
#   3313 -rw------- probehedge.tcl
#   3738 -rw------- probestream.tcl
#   3697 -rw------- probewarp.tcl
#   1715 -rw------- quad.tcl
#   2373 -rw------- vtkInt.tcl
#
save_IFS="${IFS}"
IFS="${IFS}:"
gettext_dir=FAILED
locale_dir=FAILED
first_param="$1"
for dir in $PATH
do
  if test "$gettext_dir" = FAILED && test -f $dir/gettext \
     && ($dir/gettext --version >/dev/null 2>&1)
  then
    set `$dir/gettext --version 2>&1`
    if test "$3" = GNU
    then
      gettext_dir=$dir
    fi
  fi
  if test "$locale_dir" = FAILED && test -f $dir/shar \
     && ($dir/shar --print-text-domain-dir >/dev/null 2>&1)
  then
    locale_dir=`$dir/shar --print-text-domain-dir`
  fi
done
IFS="$save_IFS"
if test "$locale_dir" = FAILED || test "$gettext_dir" = FAILED
then
  echo=echo
else
  TEXTDOMAINDIR=$locale_dir
  export TEXTDOMAINDIR
  TEXTDOMAIN=sharutils
  export TEXTDOMAIN
  echo="$gettext_dir/gettext -s"
fi
touch -am 1231235999 $$.touch >/dev/null 2>&1
if test ! -f 1231235999 && test -f $$.touch; then
  shar_touch=touch
else
  shar_touch=:
  echo
  $echo 'WARNING: not restoring timestamps.  Consider getting and'
  $echo "installing GNU \`touch', distributed in GNU File Utilities..."
  echo
fi
rm -f 1231235999 $$.touch
#
if mkdir _sh147768; then
  $echo 'x -' 'creating lock directory'
else
  $echo 'failed to create lock directory'
  exit 1
fi
# ============= MRIHead.tcl ==============
if test -f 'MRIHead.tcl' && test "$first_param" != -c; then
  $echo 'x -' SKIPPING 'MRIHead.tcl' '(file already exists)'
else
  $echo 'x -' extracting 'MRIHead.tcl' '(text)'
  sed 's/^X//' << 'SHAR_EOF' > 'MRIHead.tcl' &&
# If you are using Window95 and vtk 1.3 uncomment the
# line below
# load vtktcl;
X
# get the interactor ui
source vtkInt.tcl
X
# First create the render master
vtkRenderMaster rm;
X
# Now create the RenderWindow, Renderer
#
set renWin [rm MakeRenderWindow];
set ren1   [$renWin MakeRenderer];
set iren   [$renWin MakeRenderWindowInteractor];
X
#
# Load up the data
vtkStructuredPointsReader vol;
X    vol SetFilename "MRIdata.vtk"
X    vol DebugOn;
X
vtkMarchingCubes contour;
X  contour SetInput [vol GetOutput];
X  contour SetValue 0 225.0;
X
vtkCleanPolyData clean;
X  clean SetInput [contour GetOutput];
X
vtkDecimate deci;
X  deci SetInput [clean GetOutput];
X  deci SetTargetReduction 0.25;
X  deci SetInitialFeatureAngle 30;
X
vtkPolyNormals norms;
X  norms SetInput [deci GetOutput];
X
vtkConnectivityFilter connect;
X  connect SetInput [norms GetOutput];
X  connect ExtractLargestRegion;
X
vtkDataSetMapper volMapper;
X  volMapper SetInput [connect GetOutput];
X  volMapper ScalarsVisibleOff;
X
vtkActor volActor;
X  volActor SetMapper volMapper;
X
vtkOutlineFilter outLine;
X  outLine SetInput [vol GetOutput];
X
vtkPolyMapper outMapper;
X  outMapper SetInput [outLine GetOutput];
X
vtkActor outActor;
X  outActor SetMapper outMapper;
X
vtkCamera cam1;
X  cam1 SetPosition 160 -31.5 -35;
X  cam1 SetFocalPoint 19.5 31.5 31.5;
X  cam1 CalcViewPlaneNormal;
X  cam1 SetViewUp 0 -1 0;
X
# Add the actors to the renderer, set the background and size
#
$ren1 AddActors outActor;
$ren1 AddActors volActor;
$ren1 SetActiveCamera cam1;
$ren1 SetBackground .5 .5 .7;
$renWin SetSize 400 400;
$iren Initialize;
X
# render the image
#
$iren SetUserMethod {wm deiconify .vtkInteract};
for {set i 0} {$i < 8} {incr i} {
X  contour SetValue 0 [expr 450.0 + 225.0 * $i];
X  $renWin Render; }
X
# prevent the tk window from showing up then start the event loop
wm withdraw .
X
SHAR_EOF
  $shar_touch -am 0416004397 'MRIHead.tcl' &&
  chmod 0600 'MRIHead.tcl' ||
  $echo 'restore of' 'MRIHead.tcl' 'failed'
  if ( md5sum --help 2>&1 | grep 'sage: md5sum \[' ) >/dev/null 2>&1 \
  && ( md5sum --version 2>&1 | grep -v 'textutils 1.12' ) >/dev/null; then
    md5sum -c << SHAR_EOF >/dev/null 2>&1 \
    || $echo 'MRIHead.tcl:' 'MD5 check failed'
b61f020354d491256b6f04a5418885fd  MRIHead.tcl
SHAR_EOF
  else
    shar_count="`LC_ALL= LC_CTYPE= LANG= wc -c < 'MRIHead.tcl'`"
    test 1829 -eq "$shar_count" ||
    $echo 'MRIHead.tcl:' 'original size' '1829,' 'current size' "$shar_count!"
  fi
fi
# ============= probehedge.tcl ==============
if test -f 'probehedge.tcl' && test "$first_param" != -c; then
  $echo 'x -' SKIPPING 'probehedge.tcl' '(file already exists)'
else
  $echo 'x -' extracting 'probehedge.tcl' '(text)'
  sed 's/^X//' << 'SHAR_EOF' > 'probehedge.tcl' &&
#unommet the line below if you are on Windows95
# load vtktcl;
# get the interactor ui
source vtkInt.tcl
X
# create planes
# First create the render master
vtkRenderMaster rm;
X
# Now create the RenderWindow, Renderer and both Actors
#
set renWin [rm MakeRenderWindow];
set ren1   [$renWin MakeRenderer];
set iren [$renWin MakeRenderWindowInteractor];
X
# create pipeline
#
vtkPLOT3DReader pl3d;
X    pl3d SetXYZFilename "/tmp/combxyz.bin"
X    pl3d SetQFilename "/tmp/combq.bin"
X    pl3d SetScalarFunctionNumber 100;
X    pl3d SetVectorFunctionNumber 202;
X    pl3d Update;
X
vtkPlaneSource plane;
X    plane SetResolution 50 50;
vtkTransform transP1;
X    transP1 Translate 3.7 0.0 28.37;
X    transP1 Scale 5 5 5;
X    transP1 RotateY 90;
vtkTransformPolyFilter tpd1
X    tpd1 SetInput [plane GetOutput];
X    tpd1 SetTransform transP1;
vtkOutlineFilter outTpd1;
X    outTpd1 SetInput [tpd1 GetOutput];
vtkPolyMapper mapTpd1;
X    mapTpd1 SetInput [outTpd1 GetOutput];
vtkActor tpd1Actor;
X    tpd1Actor SetMapper mapTpd1;
X    [tpd1Actor GetProperty] SetColor 0 0 0;
X
vtkTransform transP2;
X    transP2 Translate 9.2 0.0 31.20;
X    transP2 Scale 5 5 5;
X    transP2 RotateY 90;
vtkTransformPolyFilter tpd2
X    tpd2 SetInput [plane GetOutput];
X    tpd2 SetTransform transP2;
vtkOutlineFilter outTpd2;
X    outTpd2 SetInput [tpd2 GetOutput];
vtkPolyMapper mapTpd2;
X    mapTpd2 SetInput [outTpd2 GetOutput];
vtkActor tpd2Actor;
X    tpd2Actor SetMapper mapTpd2;
X    [tpd2Actor GetProperty] SetColor 0 0 0;
X
vtkTransform transP3;
X    transP3 Translate 13.27 0.0 33.30;
X    transP3 Scale 5 5 5;
X    transP3 RotateY 90;
vtkTransformPolyFilter tpd3
X    tpd3 SetInput [plane GetOutput];
X    tpd3 SetTransform transP3;
vtkOutlineFilter outTpd3;
X    outTpd3 SetInput [tpd3 GetOutput];
vtkPolyMapper mapTpd3;
X    mapTpd3 SetInput [outTpd3 GetOutput];
vtkActor tpd3Actor;
X    tpd3Actor SetMapper mapTpd3;
X    [tpd3Actor GetProperty] SetColor 0 0 0;
X
vtkAppendPolyData appendF;
X    appendF AddInput [tpd1 GetOutput];
X    appendF AddInput [tpd2 GetOutput];
X    appendF AddInput [tpd3 GetOutput];
X
vtkProbeFilter probe;
X    probe SetInput [appendF GetOutput];
X    probe SetSource [pl3d GetOutput];
X
vtkHedgeHog hedge;
X    hedge SetInput [probe GetOutput];
X    hedge SetScaleFactor 0.002;
X
vtkPolyMapper hedgeMapper;
X    hedgeMapper SetInput [hedge GetOutput];
X    eval hedgeMapper SetScalarRange 0.15 0.5;
vtkActor planeActor;
X    planeActor SetMapper hedgeMapper;
X
vtkStructuredGridOutlineFilter outline;
X    outline SetInput [pl3d GetOutput];
vtkPolyMapper outlineMapper;
X    outlineMapper SetInput [outline GetOutput];
vtkActor outlineActor;
X    outlineActor SetMapper outlineMapper;
X    [outlineActor GetProperty] SetColor 0 0 0;
X
$ren1 AddActors outlineActor;
$ren1 AddActors planeActor;
$ren1 AddActors tpd1Actor;
$ren1 AddActors tpd2Actor;
$ren1 AddActors tpd3Actor;
$ren1 SetBackground .7 .7 1;
$renWin SetSize 500 500;
$iren Initialize;
X
set cam1 [$ren1 GetActiveCamera];
$cam1 SetClippingRange 3.95297 50;
$cam1 SetFocalPoint 8.88908 0.595038 29.3342;
$cam1 SetPosition -12.3332 31.7479 41.2387;
$cam1 CalcViewPlaneNormal;
$cam1 SetViewUp 0.060772 -0.319905 0.945498;
X
# render the image
#
$iren SetUserMethod {wm deiconify .vtkInteract};
$renWin Render;
X
# prevent the tk window from showing up then start the event loop
wm withdraw .
SHAR_EOF
  $shar_touch -am 0414235097 'probehedge.tcl' &&
  chmod 0600 'probehedge.tcl' ||
  $echo 'restore of' 'probehedge.tcl' 'failed'
  if ( md5sum --help 2>&1 | grep 'sage: md5sum \[' ) >/dev/null 2>&1 \
  && ( md5sum --version 2>&1 | grep -v 'textutils 1.12' ) >/dev/null; then
    md5sum -c << SHAR_EOF >/dev/null 2>&1 \
    || $echo 'probehedge.tcl:' 'MD5 check failed'
0a9c3f3ea00dc95394ecebaca7cec7cd  probehedge.tcl
SHAR_EOF
  else
    shar_count="`LC_ALL= LC_CTYPE= LANG= wc -c < 'probehedge.tcl'`"
    test 3313 -eq "$shar_count" ||
    $echo 'probehedge.tcl:' 'original size' '3313,' 'current size' "$shar_count!"
  fi
fi
# ============= probestream.tcl ==============
if test -f 'probestream.tcl' && test "$first_param" != -c; then
  $echo 'x -' SKIPPING 'probestream.tcl' '(file already exists)'
else
  $echo 'x -' extracting 'probestream.tcl' '(text)'
  sed 's/^X//' << 'SHAR_EOF' > 'probestream.tcl' &&
#unommet the line below if you are on Windows95
# load vtktcl;
# get the interactor ui
source vtkInt.tcl
X
# create planes
# First create the render master
vtkRenderMaster rm;
X
# Now create the RenderWindow, Renderer and both Actors
#
set renWin [rm MakeRenderWindow];
set ren1   [$renWin MakeRenderer];
set iren [$renWin MakeRenderWindowInteractor];
X
# create pipeline
#
vtkPLOT3DReader pl3d;
X    pl3d SetXYZFilename "/tmp/combxyz.bin"
X    pl3d SetQFilename "/tmp/combq.bin"
X    pl3d SetScalarFunctionNumber 100;
X    pl3d SetVectorFunctionNumber 202;
X    pl3d Update;
X
vtkPlaneSource plane;
X    plane SetResolution 50 50;
vtkTransform transP1;
X    transP1 Translate 3.7 0.0 28.37;
X    transP1 Scale 5 5 5;
X    transP1 RotateY 90;
vtkTransformPolyFilter tpd1
X    tpd1 SetInput [plane GetOutput];
X    tpd1 SetTransform transP1;
vtkOutlineFilter outTpd1;
X    outTpd1 SetInput [tpd1 GetOutput];
vtkPolyMapper mapTpd1;
X    mapTpd1 SetInput [outTpd1 GetOutput];
vtkActor tpd1Actor;
X    tpd1Actor SetMapper mapTpd1;
X    [tpd1Actor GetProperty] SetColor 0 0 0;
X
vtkTransform transP2;
X    transP2 Translate 9.2 0.0 31.20;
X    transP2 Scale 5 5 5;
X    transP2 RotateY 90;
vtkTransformPolyFilter tpd2
X    tpd2 SetInput [plane GetOutput];
X    tpd2 SetTransform transP2;
vtkOutlineFilter outTpd2;
X    outTpd2 SetInput [tpd2 GetOutput];
vtkPolyMapper mapTpd2;
X    mapTpd2 SetInput [outTpd2 GetOutput];
vtkActor tpd2Actor;
X    tpd2Actor SetMapper mapTpd2;
X    [tpd2Actor GetProperty] SetColor 0 0 0;
X
vtkTransform transP3;
X    transP3 Translate 13.27 0.0 33.30;
X    transP3 Scale 5 5 5;
X    transP3 RotateY 90;
vtkTransformPolyFilter tpd3
X    tpd3 SetInput [plane GetOutput];
X    tpd3 SetTransform transP3;
vtkOutlineFilter outTpd3;
X    outTpd3 SetInput [tpd3 GetOutput];
vtkPolyMapper mapTpd3;
X    mapTpd3 SetInput [outTpd3 GetOutput];
vtkActor tpd3Actor;
X    tpd3Actor SetMapper mapTpd3;
X    [tpd3Actor GetProperty] SetColor 0 0 0;
X
vtkAppendPolyData appendF;
X    appendF AddInput [tpd1 GetOutput];
X    appendF AddInput [tpd2 GetOutput];
X    appendF AddInput [tpd3 GetOutput];
X
vtkProbeFilter probe;
X    probe SetInput [appendF GetOutput];
X    probe SetSource [pl3d GetOutput];
X
vtkPointSource seed1;
X    seed1 SetRadius 2.;
X    seed1 SetCenter 1.0 0.0 30.0;
X    seed1 SetNumberOfPoints 35;
X
vtkPointSource seed2;
X    seed2 SetRadius 1.;
X    seed2 SetCenter 2.5 -1.0 25.0;
X    seed2 SetNumberOfPoints 35;
X
vtkAppendPolyData seeds;
X    seeds AddInput [seed1 GetOutput];
X    seeds AddInput [seed2 GetOutput];
X
vtkStreamLine stream;
X    stream SetInput [pl3d GetOutput];
X    stream SetSource [seeds GetOutput];
X    stream SetStepLength 0.005;
X    stream SetMaximumPropagationTime 7.5;
X
vtkPolyMapper streamMapper;
X    streamMapper SetInput [stream GetOutput];
X    eval streamMapper SetScalarRange 0.15 0.5;
vtkActor streamActor;
X    streamActor SetMapper streamMapper;
X
vtkStructuredGridOutlineFilter outline;
X    outline SetInput [pl3d GetOutput];
vtkPolyMapper outlineMapper;
X    outlineMapper SetInput [outline GetOutput];
vtkActor outlineActor;
X    outlineActor SetMapper outlineMapper;
X    [outlineActor GetProperty] SetColor 0 0 0;
X
$ren1 AddActors outlineActor;
$ren1 AddActors streamActor;
#$ren1 AddActors tpd1Actor;
#$ren1 AddActors tpd2Actor;
#$ren1 AddActors tpd3Actor;
$ren1 SetBackground .7 .7 1;
$renWin SetSize 500 500;
$iren Initialize;
X
set cam1 [$ren1 GetActiveCamera];
$cam1 SetClippingRange 3.95297 50;
$cam1 SetFocalPoint 8.88908 0.595038 29.3342;
$cam1 SetPosition -12.3332 31.7479 41.2387;
$cam1 CalcViewPlaneNormal;
$cam1 SetViewUp 0.060772 -0.319905 0.945498;
X
# render the image
#
$iren SetUserMethod {wm deiconify .vtkInteract};
$renWin Render;
X
# prevent the tk window from showing up then start the event loop
wm withdraw .
SHAR_EOF
  $shar_touch -am 0416001997 'probestream.tcl' &&
  chmod 0600 'probestream.tcl' ||
  $echo 'restore of' 'probestream.tcl' 'failed'
  if ( md5sum --help 2>&1 | grep 'sage: md5sum \[' ) >/dev/null 2>&1 \
  && ( md5sum --version 2>&1 | grep -v 'textutils 1.12' ) >/dev/null; then
    md5sum -c << SHAR_EOF >/dev/null 2>&1 \
    || $echo 'probestream.tcl:' 'MD5 check failed'
fcd6f6cc1e3af6b5191f9640e7b7e439  probestream.tcl
SHAR_EOF
  else
    shar_count="`LC_ALL= LC_CTYPE= LANG= wc -c < 'probestream.tcl'`"
    test 3738 -eq "$shar_count" ||
    $echo 'probestream.tcl:' 'original size' '3738,' 'current size' "$shar_count!"
  fi
fi
# ============= probewarp.tcl ==============
if test -f 'probewarp.tcl' && test "$first_param" != -c; then
  $echo 'x -' SKIPPING 'probewarp.tcl' '(file already exists)'
else
  $echo 'x -' extracting 'probewarp.tcl' '(text)'
  sed 's/^X//' << 'SHAR_EOF' > 'probewarp.tcl' &&
#unommet the line below if you are on Windows95
# load vtktcl;
# get the interactor ui
source vtkInt.tcl
X
# create planes
# First create the render master
vtkRenderMaster rm;
X
# Now create the RenderWindow, Renderer and both Actors
#
set renWin [rm MakeRenderWindow];
set ren1   [$renWin MakeRenderer];
set iren [$renWin MakeRenderWindowInteractor];
X
# create pipeline
#
vtkPLOT3DReader pl3d;
X    pl3d SetXYZFilename "/tmp/combxyz.bin"
X    pl3d SetQFilename "/tmp/combq.bin"
X    pl3d SetScalarFunctionNumber 100;
X    pl3d SetVectorFunctionNumber 202;
X    pl3d Update;
X
vtkPlaneSource plane;
X    plane SetResolution 50 50;
vtkTransform transP1;
X    transP1 Translate 3.7 0.0 28.37;
X    transP1 Scale 9 9 9;
X    transP1 RotateY 90;
vtkTransformPolyFilter tpd1
X    tpd1 SetInput [plane GetOutput];
X    tpd1 SetTransform transP1;
vtkOutlineFilter outTpd1;
X    outTpd1 SetInput [tpd1 GetOutput];
vtkPolyMapper mapTpd1;
X    mapTpd1 SetInput [outTpd1 GetOutput];
vtkActor tpd1Actor;
X    tpd1Actor SetMapper mapTpd1;
X    [tpd1Actor GetProperty] SetColor 0 0 0;
X
vtkTransform transP2;
X    transP2 Translate 9.2 0.0 31.20;
X    transP2 Scale 7 10 7;
X    transP2 RotateY 90;
vtkTransformPolyFilter tpd2
X    tpd2 SetInput [plane GetOutput];
X    tpd2 SetTransform transP2;
vtkOutlineFilter outTpd2;
X    outTpd2 SetInput [tpd2 GetOutput];
vtkPolyMapper mapTpd2;
X    mapTpd2 SetInput [outTpd2 GetOutput];
vtkActor tpd2Actor;
X    tpd2Actor SetMapper mapTpd2;
X    [tpd2Actor GetProperty] SetColor 0 0 0;
X
vtkTransform transP3;
X    transP3 Translate 13.27 0.0 33.30;
X    transP3 Scale 5 10 6;
X    transP3 RotateY 90;
vtkTransformPolyFilter tpd3
X    tpd3 SetInput [plane GetOutput];
X    tpd3 SetTransform transP3;
vtkOutlineFilter outTpd3;
X    outTpd3 SetInput [tpd3 GetOutput];
vtkPolyMapper mapTpd3;
X    mapTpd3 SetInput [outTpd3 GetOutput];
vtkActor tpd3Actor;
X    tpd3Actor SetMapper mapTpd3;
X    [tpd3Actor GetProperty] SetColor 0 0 0;
X
vtkAppendPolyData appendF;
X    appendF AddInput [tpd1 GetOutput];
X    appendF AddInput [tpd2 GetOutput];
X    appendF AddInput [tpd3 GetOutput];
X
vtkProbeFilter probe;
X    probe SetInput [appendF GetOutput];
X    probe SetSource [pl3d GetOutput];
X
vtkGeometryFilter pointgeom;
X    pointgeom SetInput [probe GetOutput];
X
vtkWarpVector warp;
X    warp SetInput [pointgeom GetOutput];
X    warp SetScaleFactor 0.003;
X
vtkGeometryFilter warpgeom;
X    warpgeom SetInput [warp GetOutput];
X
vtkCleanPolyData clean;
X    clean SetInput [warpgeom GetOutput];
X
vtkPolyNormals normals;
X    normals SetInput [clean GetOutput];
X    normals SetFeatureAngle 60;
X
vtkDataSetMapper warpMapper;
X    warpMapper SetInput [normals GetOutput];
X    eval warpMapper SetScalarRange 0.15 0.75;
vtkActor planeActor;
X    planeActor SetMapper warpMapper;
X
vtkStructuredGridOutlineFilter outline;
X    outline SetInput [pl3d GetOutput];
vtkPolyMapper outlineMapper;
X    outlineMapper SetInput [outline GetOutput];
vtkActor outlineActor;
X    outlineActor SetMapper outlineMapper;
X    [outlineActor GetProperty] SetColor 0 0 0;
X
vtkLight lite1;
X    lite1 SetPosition -10 10 15;
X
$ren1 AddActors outlineActor;
$ren1 AddActors planeActor;
$ren1 AddActors tpd1Actor;
$ren1 AddActors tpd2Actor;
$ren1 AddActors tpd3Actor;
$ren1 AddLights lite1;
$ren1 SetBackground .7 .7 1;
$renWin SetSize 500 500;
$iren Initialize;
X
set cam1 [$ren1 GetActiveCamera];
$cam1 SetClippingRange 3.95297 50;
$cam1 SetFocalPoint 8.88908 0.595038 29.3342;
$cam1 SetPosition -12.3332 31.7479 41.2387;
$cam1 CalcViewPlaneNormal;
$cam1 SetViewUp 0.060772 -0.319905 0.945498;
X
# render the image
#
$iren SetUserMethod {wm deiconify .vtkInteract};
$renWin Render;
X
# prevent the tk window from showing up then start the event loop
wm withdraw .
SHAR_EOF
  $shar_touch -am 0415232997 'probewarp.tcl' &&
  chmod 0600 'probewarp.tcl' ||
  $echo 'restore of' 'probewarp.tcl' 'failed'
  if ( md5sum --help 2>&1 | grep 'sage: md5sum \[' ) >/dev/null 2>&1 \
  && ( md5sum --version 2>&1 | grep -v 'textutils 1.12' ) >/dev/null; then
    md5sum -c << SHAR_EOF >/dev/null 2>&1 \
    || $echo 'probewarp.tcl:' 'MD5 check failed'
f255f1b8689b5722bf482b0780e583ea  probewarp.tcl
SHAR_EOF
  else
    shar_count="`LC_ALL= LC_CTYPE= LANG= wc -c < 'probewarp.tcl'`"
    test 3697 -eq "$shar_count" ||
    $echo 'probewarp.tcl:' 'original size' '3697,' 'current size' "$shar_count!"
  fi
fi
# ============= quad.tcl ==============
if test -f 'quad.tcl' && test "$first_param" != -c; then
  $echo 'x -' SKIPPING 'quad.tcl' '(file already exists)'
else
  $echo 'x -' extracting 'quad.tcl' '(binary)'
  sed 's/^X//' << 'SHAR_EOF' | uudecode &&
begin 600 quad.tcl
M(R!L;V%D('9T:W1C;#L*(R!U<V5R(&EN=&5R9F%C92!C;VUM86YD('=I9&=E
M=`IS;W5R8V4@=G1K26YT+G1C;`H*(R!C<F5A=&4@82!R96YD97)I;F<@=VEN
M9&]W(&%N9"!R96YD97)E<@IV=&M296YD97)-87-T97(@<FT["G-E="!R96Y7
M:6X@6W)M($UA:V5296YD97)7:6YD;W==.PIS970@<F5N,2!;)')E;E=I;B!-
M86ME4F5N9&5R97)=.PIS970@:7)E;B!;)')E;E=I;B!-86ME4F5N9&5R5VEN
M9&]W26YT97)A8W1O<ET["@IV=&M1=6%D<FEC('%U860["B`@<75A9"!3971#
M;V5F9FEC:65N=',@,"XU(#$@+C(@,"`N,2`P(#`@+C(@,"`P.PIV=&M386UP
M;&5&=6YC=&EO;B!S86UP;&4["B`@<V%M<&QE(%-E=%-A;7!L941I;65N<VEO
M;G,@,S`@,S`@,S`["B`@<V%M<&QE(%-E=$EM<&QI8VET1G5N8W1I;VX@<75A
M9#L*=G1K0V]N=&]U<D9I;'1E<B!C;VYT;W5R<SL*("!C;VYT;W5R<R!3971)
M;G!U="!;<V%M<&QE($=E=$]U='!U=%T["G9T:T-L96%N4&]L>41A=&$@8VQE
M86X["B`@8VQE86X@4V5T26YP=70@6V-O;G1O=7)S($=E=$]U='!U=%T["G9T
M:T1E8VEM871E(&1E8VD["B`@9&5C:2!3971);G!U="!;8VQE86X@1V5T3W5T
M<'5T73L*("!D96-I(%-E=%1A<F=E=%)E9'5C=&EO;B`P+C4["G9T:U!O;'E.
M;W)M86QS(&YO<FUS.PH@(&YO<FUS(%-E=$EN<'5T(%MD96-I($=E=$]U='!U
M=%T["G9T:U!O;'E-87!P97(@8V]N=$UA<'!E<CL*("!C;VYT36%P<&5R(%-E
M=$EN<'5T(%MN;W)M<R!'971/=71P=71=.PH@(&-O;G1-87!P97(@4V5T4V-A
M;&%R4F%N9V4@,"XP(#$N,SL*=G1K06-T;W(@8V]N=$%C=&]R.PH@(&-O;G1!
M8W1O<B!3971-87!P97(@8V]N=$UA<'!E<CL@"@IV=&M/=71L:6YE1FEL=&5R
M(&]U=&QI;CL*("!O=71L:6X@4V5T26YP=70@6W-A;7!L92!'971/=71P=71=
M.PIV=&M0;VQY36%P<&5R(&UA<&]U=&QI;F4["B`@;6%P;W5T;&EN92!3971)
M;G!U="!;;W5T;&EN($=E=$]U='!U=%T["G9T:T%C=&]R(&]U=&QI;F4["B`@
M;W5T;&EN92!3971-87!P97(@;6%P;W5T;&EN93L*"B,@87-S:6=N(&]U<B!A
M8W1O<B!T;R!T:&4@<F5N9&5R97(*)')E;C$@4V5T0F%C:V=R;W5N9"`N-2`N
M-2`N-SL*)')E;C$@061D06-T;W)S(&-O;G1!8W1O<CL*)')E;C$@061D06-T
M;W)S(&]U=&QI;F4["B1R96Y7:6X@4V5T4VEZ92`S-3`@,S4P.PH*(R!E;F%B
M;&4@=7-E<B!I;G1E<F9A8V4@:6YT97)A8W1O<@HD:7)E;B!39715<V5R365T
M:&]D('MW;2!D96EC;VYI9GD@+G9T:TEN=&5R86-T?3L*)&ER96X@26YI=&EA
M;&EZ93L*"G-E="!C86TQ(%LD<F5N,2!'971!8W1I=F5#86UE<F%=.PH@("1C
M86TQ(%-E=$-L:7!P:6YG4F%N9V4@,"XV.3<@,S0N-38["B`@)&-A;3$@4V5T
M4&]S:71I;VX@-"XS-B`S+C4@-"XR,3L*("`D8V%M,2!#86QC5FEE=U!L86YE
M3F]R;6%L.PH@("1C86TQ(%-E=%9I97=5<"`P(#$@,#L*"G9T:TQI9VAT(&QI
M=&4Q.PH@(&QI=&4Q(%-E=%!O<VET:6]N(#0N,CD@-"XY-2`M,BXT-SL*)')E
M;C$@061D3&EG:'1S(&QI=&4Q.PH*9F]R('MS970@:2`P?2![)&D@/#T@,3`P
M?2![:6YC<B!I?2!["B`@8V]N=&]U<G,@1V5N97)A=&5686QU97,@,"!;97AP
M<B`Q+C0J)&DO,3`P+C!=(%ME>'!R(#$N-"HD:2\Q,#`N,%T["B`@)')E;E=I
M;B!296YD97([('T*"B,@<')E=F5N="!T:&4@=&L@=VEN9&]W(&9R;VT@<VAO
M=VEN9R!U<"!T:&5N('-T87)T('1H92!E=F5N="!L;V]P#0IW;2!W:71H9')A
%=R`N"@IU
`
end
SHAR_EOF
  $shar_touch -am 0416010097 'quad.tcl' &&
  chmod 0600 'quad.tcl' ||
  $echo 'restore of' 'quad.tcl' 'failed'
  if ( md5sum --help 2>&1 | grep 'sage: md5sum \[' ) >/dev/null 2>&1 \
  && ( md5sum --version 2>&1 | grep -v 'textutils 1.12' ) >/dev/null; then
    md5sum -c << SHAR_EOF >/dev/null 2>&1 \
    || $echo 'quad.tcl:' 'MD5 check failed'
9e0de58912b1e441b12c2347883ac936  quad.tcl
SHAR_EOF
  else
    shar_count="`LC_ALL= LC_CTYPE= LANG= wc -c < 'quad.tcl'`"
    test 1715 -eq "$shar_count" ||
    $echo 'quad.tcl:' 'original size' '1715,' 'current size' "$shar_count!"
  fi
fi
# ============= vtkInt.tcl ==============
if test -f 'vtkInt.tcl' && test "$first_param" != -c; then
  $echo 'x -' SKIPPING 'vtkInt.tcl' '(file already exists)'
else
  $echo 'x -' extracting 'vtkInt.tcl' '(binary)'
  sed 's/^X//' << 'SHAR_EOF' | uudecode &&
begin 600 vtkInt.tcl
M(R!A(&=E;F5R:6,@:6YT97)A8W1O<B!F;W(@=&-L(&%N9"!V=&L-"B,-"F-A
M=&-H('MU;G-E="!V=&M);G1E<F%C="YB;VQD?0T*8V%T8V@@>W5N<V5T('9T
M:TEN=&5R86-T+FYO<FUA;'T-"F-A=&-H('MU;G-E="!V=&M);G1E<F%C="YT
M86=C;W5N='T-"G-E="!V=&M);G1E<F%C=$)O;&0@(BUB86-K9W)O=6YD(",T
M,V-E.#`@+7)E;&EE9B!R86ES960@+6)O<F1E<G=I9'1H(#$B#0IS970@=G1K
M26YT97)A8W1.;W)M86P@(BUB86-K9W)O=6YD("-C,&,P8S`@+7)E;&EE9B!F
M;&%T(@T*<V5T('9T:TEN=&5R86-T5&%G8V]U;G0@,3L-"@T*<')O8R!V=&M)
M;G1E<F%C="![?2![#0H-"B`@("!P<F]C(&1O=G1K('MS('=]('L-"@EG;&]B
M86P@=G1K26YT97)A8W1";VQD('9T:TEN=&5R86-T3F]R;6%L('9T:TEN=&5R
M86-T5&%G8V]U;G0[#0H)<V5T('1A9R!;87!P96YD('1A9VYU;2`D=G1K26YT
M97)A8W1486=C;W5N=%T[#0H):6YC<B!V=&M);G1E<F%C=%1A9V-O=6YT(#$[
M#0H)+G9T:TEN=&5R86-T+G1E>'0@8V]N9FEG=7)E("US=&%T92!N;W)M86P-
M"@DN=G1K26YT97)A8W0N=&5X="!I;G-E<G0@96YD("1S("1T86<-"@EE=F%L
M("YV=&M);G1E<F%C="YT97AT('1A9R!C;VYF:6=U<F4@)'1A9R`D=G1K26YT
M97)A8W1.;W)M86P-"@DN=G1K26YT97)A8W0N=&5X="!T86<@8FEN9"`D=&%G
M(#Q!;GDM16YT97(^(%P-"@D@("`@(BYV=&M);G1E<F%C="YT97AT('1A9R!C
M;VYF:6=U<F4@)'1A9R`D=G1K26YT97)A8W1";VQD(@T*"2YV=&M);G1E<F%C
M="YT97AT('1A9R!B:6YD("1T86<@/$%N>2U,96%V93X@7`T*"2`@("`B+G9T
M:TEN=&5R86-T+G1E>'0@=&%G(&-O;F9I9W5R92`D=&%G("1V=&M);G1E<F%C
M=$YO<FUA;"(-"@DN=G1K26YT97)A8W0N=&5X="!T86<@8FEN9"`D=&%G(#PQ
M/B`B9&]V=&L@6VQI<W0@)'-=("YV=&M);G1E<F%C="([#0H)+G9T:TEN=&5R
M86-T+G1E>'0@:6YS97)T(&5N9"!<;CL@#0H)+G9T:TEN=&5R86-T+G1E>'0@
M:6YS97)T(&5N9"!;=7!L979E;"`Q("1S73L@#0H)+G9T:TEN=&5R86-T+G1E
M>'0@:6YS97)T(&5N9"!<;EQN.R`-"@DN=G1K26YT97)A8W0N=&5X="!C;VYF
M:6=U<F4@+7-T871E(&1I<V%B;&5D#0H)+G9T:TEN=&5R86-T+G1E>'0@>79I
M97<@96YD#0H@("`@?0T*#0H@("`@8V%T8V@@>V1E<W1R;WD@+G9T:TEN=&5R
M86-T?0T*("`@('1O<&QE=F5L("YV=&M);G1E<F%C=`T*("`@('=M('1I=&QE
M("YV=&M);G1E<F%C="`B=G1K($EN=&5R86-T;W(B#0H@("`@=VT@:6-O;FYA
M;64@+G9T:TEN=&5R86-T(")V=&LB#0H@("`@#0H@("`@9G)A;64@+G9T:TEN
M=&5R86-T+F)U='1O;G,-"B`@("!P86-K("`N=G1K26YT97)A8W0N8G5T=&]N
M<R`M<VED92!B;W1T;VT@+69I;&P@>"`M<&%D>2`R;0T*("`@(&)U='1O;B`N
M=G1K26YT97)A8W0N8G5T=&]N<RYD:7-M:7-S("UT97AT($1I<VUI<W,@7`T*
M"2UC;VUM86YD(")W;2!W:71H9')A=R`N=G1K26YT97)A8W0B#0H@("`@<&%C
M:R`N=G1K26YT97)A8W0N8G5T=&]N<RYD:7-M:7-S("US:61E(&QE9G0@+65X
M<&%N9"`Q#0H@("`@#0H@("`@9G)A;64@+G9T:TEN=&5R86-T+F9I;&4-"B`@
M("!L86)E;"`N=G1K26YT97)A8W0N9FEL92YL86)E;"`M=&5X="`B0V]M;6%N
M9#HB("UW:61T:"`Q,"`M86YC:&]R('<-"B`@("!E;G1R>2`N=G1K26YT97)A
M8W0N9FEL92YE;G1R>2`M=VED=&@@-#`@#0H@("`@8FEN9"`N=G1K26YT97)A
M8W0N9FEL92YE;G1R>2`\4F5T=7)N/B![#0H)9&]V=&L@6R57(&=E=%T@+G9T
M:TEN=&5R86-T.R`E5R!D96QE=&4@,"!E;F1]#0H@("`@<&%C:R`N=G1K26YT
M97)A8W0N9FEL92YL86)E;"`M<VED92!L969T#0H@("`@<&%C:R`N=G1K26YT
M97)A8W0N9FEL92YE;G1R>2`M<VED92!L969T("UE>'!A;F0@,2`M9FEL;"!X
M#0H@("`@#0H@("`@=&5X="`N=G1K26YT97)A8W0N=&5X="`M>7-C<F]L;&-O
M;6UA;F0@(BYV=&M);G1E<F%C="YS8W)O;&P@<V5T(B!<#0H)+7-E=&=R:60@
M=')U92`M=VED=&@@-C`@+6AE:6=H="`X("UW<F%P('=O<F0-"B`@("!S8W)O
M;&QB87(@+G9T:TEN=&5R86-T+G-C<F]L;"`M8V]M;6%N9"`B+G9T:TEN=&5R
M86-T+G1E>'0@>79I97<B#0H@("`@<&%C:R`N=G1K26YT97)A8W0N<V-R;VQL
M("US:61E(')I9VAT("UF:6QL('D-"B`@("!P86-K("YV=&M);G1E<F%C="YT
M97AT("US:61E(&)O='1O;2`M97AP86YD(#$@+69I;&P@8F]T:`T*("`@('!A
M8VL@+G9T:TEN=&5R86-T+F9I;&4@+7!A9'D@,VT@+7!A9'@@,FT@+7-I9&4@
M8F]T=&]M("UF:6QL('@@#0H@("`@#0H@("`@+G9T:TEN=&5R86-T+G1E>'0@
M8V]N9FEG=7)E("US=&%T92!D:7-A8FQE9`T*("`@('=M('=I=&AD<F%W("YV
A=&M);G1E<F%C=`T*?0T*#0IV=&M);G1E<F%C=#L-"@T*
`
end
SHAR_EOF
  $shar_touch -am 0404200797 'vtkInt.tcl' &&
  chmod 0600 'vtkInt.tcl' ||
  $echo 'restore of' 'vtkInt.tcl' 'failed'
  if ( md5sum --help 2>&1 | grep 'sage: md5sum \[' ) >/dev/null 2>&1 \
  && ( md5sum --version 2>&1 | grep -v 'textutils 1.12' ) >/dev/null; then
    md5sum -c << SHAR_EOF >/dev/null 2>&1 \
    || $echo 'vtkInt.tcl:' 'MD5 check failed'
fd7e9be88c5f924fd998f6d51177f729  vtkInt.tcl
SHAR_EOF
  else
    shar_count="`LC_ALL= LC_CTYPE= LANG= wc -c < 'vtkInt.tcl'`"
    test 2373 -eq "$shar_count" ||
    $echo 'vtkInt.tcl:' 'original size' '2373,' 'current size' "$shar_count!"
  fi
fi
rm -fr _sh147768
exit 0

From ???@??? Thu Apr 17 09:49:50 1997
Received: from dekalb.vf.mmc.com (dekalb.vf.mmc.com [192.35.35.21])
	by mail1.its.rpi.edu (8.8.5/8.8.5) with ESMTP id IAA26728
	for <citrit@rpi.edu>; Thu, 17 Apr 1997 08:23:03 -0400
From: kalisz@fc01.psf.lmco.com
Received: from franklin.vf.lmco.com ([166.17.5.51]) by dekalb.vf.mmc.com (8.7.6/8.7.3) with ESMTP id IAA20685 for <citrit@rpi.edu>; Thu, 17 Apr 1997 08:23:02 -0400 (EDT)
Received: from fc01.psf.lmco.com (fc01.psf.lmco.com [166.16.60.2]) by franklin.vf.lmco.com (8.7.6/8.7.3) with SMTP id IAA12823 for <citrit@rpi.edu>; Thu, 17 Apr 1997 08:22:59 -0400 (EDT)
Received: from eng626.psf.lmco.com by fc01.psf.lmco.com (4.1/LMCO SunOS Server Nondomain-1.1)
	id AA25049; Thu, 17 Apr 97 08:22:37 EDT
Received: by eng626.psf.lmco.com (4.1/LMCO Sun Client Nondomain-1.1)
	id AA02234; Thu, 17 Apr 97 08:22:35 EDT
Date: Thu, 17 Apr 97 08:22:35 EDT
Message-Id: <9704171222.AA02234@eng626.psf.lmco.com>
To: citrit@rpi.edu
Subject: HOMEWORK 3
Content-Type: X-sun-attachment
X-UIDL: 778eefef95b0a1528479a48e09fde897

----------
X-Sun-Data-Type: text
X-Sun-Data-Description: text
X-Sun-Data-Name: text
X-Sun-Content-Lines: 6

Tom,

Thanks for the erxtension.  I assure I finished before midnight
last night.  As usual I had problems send this from home.

John
----------
X-Sun-Data-Type: shell-script
X-Sun-Data-Description: shell-script
X-Sun-Data-Name: hw3.shar
X-Sun-Content-Lines: 649

#!/bin/sh
# This is a shell archive (produced by GNU sharutils 4.2).
# To extract the files from this archive, save it to some FILE, remove
# everything before the `!/bin/sh' line above, then type `sh FILE'.
#
# Made on 1997-04-17 08:18 EDT by <kalisj@rebecca.its.rpi.edu>.
# Source directory was `/afs/rpi.edu/home/27/kalisj'.
#
# Existing files will *not* be overwritten unless `-c' is specified.
#
# This shar contains:
# length mode       name
# ------ ---------- ------------------------------------------
#   3754 -rw-r----- hedge.tcl
#   1584 -rw-r----- mridec.tcl
#   1337 -rw-r----- mrihead.tcl
#   3599 -rw-r----- norm.tcl
#   1137 -rw-r----- sample.tcl
#   2597 -rw-r----- stream.tcl
#   3861 -rw-r----- warp.tcl
#
save_IFS="${IFS}"
IFS="${IFS}:"
gettext_dir=FAILED
locale_dir=FAILED
first_param="$1"
for dir in $PATH
do
  if test "$gettext_dir" = FAILED && test -f $dir/gettext \
     && ($dir/gettext --version >/dev/null 2>&1)
  then
    set `$dir/gettext --version 2>&1`
    if test "$3" = GNU
    then
      gettext_dir=$dir
    fi
  fi
  if test "$locale_dir" = FAILED && test -f $dir/shar \
     && ($dir/shar --print-text-domain-dir >/dev/null 2>&1)
  then
    locale_dir=`$dir/shar --print-text-domain-dir`
  fi
done
IFS="$save_IFS"
if test "$locale_dir" = FAILED || test "$gettext_dir" = FAILED
then
  echo=echo
else
  TEXTDOMAINDIR=$locale_dir
  export TEXTDOMAINDIR
  TEXTDOMAIN=sharutils
  export TEXTDOMAIN
  echo="$gettext_dir/gettext -s"
fi
touch -am 1231235999 $$.touch >/dev/null 2>&1
if test ! -f 1231235999 && test -f $$.touch; then
  shar_touch=touch
else
  shar_touch=:
  echo
  $echo 'WARNING: not restoring timestamps.  Consider getting and'
  $echo "installing GNU \`touch', distributed in GNU File Utilities..."
  echo
fi
rm -f 1231235999 $$.touch
#
if mkdir _sh16357; then
  $echo 'x -' 'creating lock directory'
else
  $echo 'failed to create lock directory'
  exit 1
fi
# ============= hedge.tcl ==============
if test -f 'hedge.tcl' && test "$first_param" != -c; then
  $echo 'x -' SKIPPING 'hedge.tcl' '(file already exists)'
else
  $echo 'x -' extracting 'hedge.tcl' '(binary)'
  sed 's/^X//' << 'SHAR_EOF' | uudecode &&
begin 600 hedge.tcl
M(W5N;VUM970@=&AE(&QI;F4@8F5L;W<@:68@>6]U(&%R92!O;B!7:6YD;W=S
M.34-"FQO860@=G1K=&-L.PT*(R!G970@=&AE(&EN=&5R86-T;W(@=6D-"G-O
M=7)C92!V=&M);G0N=&-L#0H-"B,@8W)E871E('!L86YE<PT*(R!&:7)S="!C
M<F5A=&4@=&AE(')E;F1E<B!M87-T97(-"G9T:U)E;F1E<DUA<W1E<B!R;3L-
M"@T*(R!.;W<@8W)E871E('1H92!296YD97)7:6YD;W<L(%)E;F1E<F5R(&%N
M9"!B;W1H($%C=&]R<PT*(PT*<V5T(')E;E=I;B!;<FT@36%K95)E;F1E<E=I
M;F1O=UT[#0IS970@<F5N,2`@(%LD<F5N5VEN($UA:V5296YD97)E<ET[#0IS
M970@:7)E;B!;)')E;E=I;B!-86ME4F5N9&5R5VEN9&]W26YT97)A8W1O<ET[
M#0H-"B,@8W)E871E('!I<&5L:6YE#0HC#0IV=&M03$]4,T1296%D97(@<&PS
M9#L-"B`@("!P;#-D(%-E=%A96D9I;&5N86UE(")C;VUB>'EZ+F)I;B(-"B`@
M("!P;#-D(%-E=%%&:6QE;F%M92`B8V]M8G$N8FEN(@T*("`@('!L,V0@4V5T
M4V-A;&%R1G5N8W1I;VY.=6UB97(@,3`P.PT*("`@('!L,V0@4V5T5F5C=&]R
M1G5N8W1I;VY.=6UB97(@,C`R.PT*("`@('!L,V0@57!D871E.PT*#0IV=&M0
M;&%N95-O=7)C92!P;&%N93L-"B`@("!P;&%N92!3971297-O;'5T:6]N(#4P
M(#4P.PT*=G1K5')A;G-F;W)M('1R86YS4#$[#0H@("`@=')A;G-0,2!4<F%N
M<VQA=&4@,RXW(#`N,"`R."XS-SL-"B`@("!T<F%N<U`Q(%-C86QE(#4@-2`U
M.PT*("`@('1R86YS4#$@4F]T871E62`Y,#L-"G9T:U1R86YS9F]R;5!O;'E&
M:6QT97(@='!D,0T*("`@('1P9#$@4V5T26YP=70@6W!L86YE($=E=$]U='!U
M=%T[#0H@("`@='!D,2!39714<F%N<V9O<FT@=')A;G-0,3L-"G9T:T]U=&QI
M;F5&:6QT97(@;W5T5'!D,3L-"B`@("!O=714<&0Q(%-E=$EN<'5T(%MT<&0Q
M($=E=$]U='!U=%T[#0IV=&M0;VQY36%P<&5R(&UA<%1P9#$[#0H@("`@;6%P
M5'!D,2!3971);G!U="!;;W5T5'!D,2!'971/=71P=71=.PT*=G1K06-T;W(@
M='!D,4%C=&]R.PT*("`@('1P9#%!8W1O<B!3971-87!P97(@;6%P5'!D,3L-
M"B`@("!;='!D,4%C=&]R($=E=%!R;W!E<G1Y72!3971#;VQO<B`P(#`@,#L-
M"@T*=G1K5')A;G-F;W)M('1R86YS4#([#0H@("`@=')A;G-0,B!4<F%N<VQA
M=&4@.2XR(#`N,"`S,2XR,#L-"B`@("!T<F%N<U`R(%-C86QE(#4@-2`U.PT*
M("`@('1R86YS4#(@4F]T871E62`Y,#L-"G9T:U1R86YS9F]R;5!O;'E&:6QT
M97(@='!D,@T*("`@('1P9#(@4V5T26YP=70@6W!L86YE($=E=$]U='!U=%T[
M#0H@("`@='!D,B!39714<F%N<V9O<FT@=')A;G-0,CL-"G9T:T]U=&QI;F5&
M:6QT97(@;W5T5'!D,CL-"B`@("!O=714<&0R(%-E=$EN<'5T(%MT<&0R($=E
M=$]U='!U=%T[#0IV=&M0;VQY36%P<&5R(&UA<%1P9#([#0H@("`@;6%P5'!D
M,B!3971);G!U="!;;W5T5'!D,B!'971/=71P=71=.PT*=G1K06-T;W(@='!D
M,D%C=&]R.PT*("`@('1P9#)!8W1O<B!3971-87!P97(@;6%P5'!D,CL-"B`@
M("!;='!D,D%C=&]R($=E=%!R;W!E<G1Y72!3971#;VQO<B`P(#`@,#L-"@T*
M=G1K5')A;G-F;W)M('1R86YS4#,[#0H@("`@=')A;G-0,R!4<F%N<VQA=&4@
M,3,N,C<@,"XP(#,S+C,P.PT*("`@('1R86YS4#,@4V-A;&4@-2`U(#4[#0H@
M("`@=')A;G-0,R!2;W1A=&59(#DP.PT*=G1K5')A;G-F;W)M4&]L>49I;'1E
M<B!T<&0S#0H@("`@='!D,R!3971);G!U="!;<&QA;F4@1V5T3W5T<'5T73L-
M"B`@("!T<&0S(%-E=%1R86YS9F]R;2!T<F%N<U`S.PT*=G1K3W5T;&EN949I
M;'1E<B!O=714<&0S.PT*("`@(&]U=%1P9#,@4V5T26YP=70@6W1P9#,@1V5T
M3W5T<'5T73L-"G9T:U!O;'E-87!P97(@;6%P5'!D,SL-"B`@("!M87!4<&0S
M(%-E=$EN<'5T(%MO=714<&0S($=E=$]U='!U=%T[#0IV=&M!8W1O<B!T<&0S
M06-T;W([#0H@("`@='!D,T%C=&]R(%-E=$UA<'!E<B!M87!4<&0S.PT*("`@
M(%MT<&0S06-T;W(@1V5T4')O<&5R='E=(%-E=$-O;&]R(#`@,"`P.PT*#0IV
M=&M!<'!E;F10;VQY1&%T82!A<'!E;F1&.PT*("`@(&%P<&5N9$8@061D26YP
M=70@6W1P9#$@1V5T3W5T<'5T73L-"B`@("!A<'!E;F1&($%D9$EN<'5T(%MT
M<&0R($=E=$]U='!U=%T[#0H@("`@87!P96YD1B!!9&1);G!U="!;='!D,R!'
M971/=71P=71=.PT*#0IV=&M0<F]B949I;'1E<B!P<F]B93L-"B`@("!P<F]B
M92!3971);G!U="!;87!P96YD1B!'971/=71P=71=.PT*("`@('!R;V)E(%-E
M=%-O=7)C92!;<&PS9"!'971/=71P=71=.PT*#0HC=G1K0V]N=&]U<D9I;'1E
M<B!C;VYT;W5R.PT*(R`@("!C;VYT;W5R(%-E=$EN<'5T(%MP<F]B92!'971/
M=71P=71=.PT*(R`@("!E=F%L(&-O;G1O=7(@1V5N97)A=&5686QU97,@-3`@
M6UMP;#-D($=E=$]U='!U=%T@1V5T4V-A;&%R4F%N9V5=.PT*(R`@("!E=F%L
M(&-O;G1O=7(@1V5N97)A=&5686QU97,@-3`@6UMP;#-D($=E=$]U='!U=%T@
M1V5T4V-A;&%R4F%N9V5=.PT*#0IV=&M(961G94AO9R!C;VYT;W5R.PT*("`@
M(&-O;G1O=7(@4V5T26YP=70@6W!R;V)E($=E=$]U='!U=%T[#0H@("`@8V]N
M=&]U<B!397138V%L949A8W1O<B`P+C`Q.PT*(R`@("!E=F%L(&-O;G1O=7(@
M1V5N97)A=&5686QU97,@-3`@6UMP;#-D($=E=$]U='!U=%T@1V5T4V-A;&%R
M4F%N9V5=.PT*#0IV=&M0;VQY36%P<&5R(&-O;G1O=7)-87!P97([#0H@("`@
M8V]N=&]U<DUA<'!E<B!3971);G!U="!;8V]N=&]U<B!'971/=71P=71=.PT*
M("`@(&5V86P@8V]N=&]U<DUA<'!E<B!397138V%L87)286YG92!;6W!L,V0@
M1V5T3W5T<'5T72!'97138V%L87)286YG95T[#0IV=&M!8W1O<B!P;&%N94%C
M=&]R.PT*("`@('!L86YE06-T;W(@4V5T36%P<&5R(&-O;G1O=7)-87!P97([
M#0H-"G9T:U-T<G5C='5R961'<FED3W5T;&EN949I;'1E<B!O=71L:6YE.PT*
M("`@(&]U=&QI;F4@4V5T26YP=70@6W!L,V0@1V5T3W5T<'5T73L-"G9T:U!O
M;'E-87!P97(@;W5T;&EN94UA<'!E<CL-"B`@("!O=71L:6YE36%P<&5R(%-E
M=$EN<'5T(%MO=71L:6YE($=E=$]U='!U=%T[#0IV=&M!8W1O<B!O=71L:6YE
M06-T;W([#0H@("`@;W5T;&EN94%C=&]R(%-E=$UA<'!E<B!O=71L:6YE36%P
M<&5R.PT*("`@(%MO=71L:6YE06-T;W(@1V5T4')O<&5R='E=(%-E=$-O;&]R
M(#`@,"`P.PT*#0HD<F5N,2!!9&1!8W1O<G,@;W5T;&EN94%C=&]R.PT*)')E
M;C$@061D06-T;W)S('!L86YE06-T;W([#0HD<F5N,2!!9&1!8W1O<G,@='!D
M,4%C=&]R.PT*)')E;C$@061D06-T;W)S('1P9#)!8W1O<CL-"B1R96XQ($%D
M9$%C=&]R<R!T<&0S06-T;W([#0HD<F5N,2!3971"86-K9W)O=6YD(#$@,2`Q
M.PT*)')E;E=I;B!39713:7IE(#4P,"`U,#`[#0HD:7)E;B!);FET:6%L:7IE
M.PT*#0IS970@8V%M,2!;)')E;C$@1V5T06-T:79E0V%M97)A73L-"B1C86TQ
M(%-E=$-L:7!P:6YG4F%N9V4@,RXY-3(Y-R`U,#L-"B1C86TQ(%-E=$9O8V%L
M4&]I;G0@."XX.#DP."`P+C4Y-3`S."`R.2XS,S0R.PT*)&-A;3$@4V5T4&]S
M:71I;VX@+3$R+C,S,S(@,S$N-S0W.2`T,2XR,S@W.PT*)&-A;3$@0V%L8U9I
M97=0;&%N94YO<FUA;#L-"B1C86TQ(%-E=%9I97=5<"`P+C`V,#<W,B`M,"XS
M,3DY,#4@,"XY-#4T.3@[#0H-"B,@<F5N9&5R('1H92!I;6%G90T*(PT*)&ER
M96X@4V5T57-E<DUE=&AO9"![=VT@9&5I8V]N:69Y("YV=&M);G1E<F%C='T[
M#0HD<F5N5VEN(%)E;F1E<CL-"@T*(R!P<F5V96YT('1H92!T:R!W:6YD;W<@
M9G)O;2!S:&]W:6YG('5P('1H96X@<W1A<G0@=&AE(&5V96YT(&QO;W`-"G=M
3('=I=&AD<F%W("X-"@T*#0H-"FX@
`
end
SHAR_EOF
  $shar_touch -am 0417081497 'hedge.tcl' &&
  chmod 0640 'hedge.tcl' ||
  $echo 'restore of' 'hedge.tcl' 'failed'
  if ( md5sum --help 2>&1 | grep 'sage: md5sum \[' ) >/dev/null 2>&1 \
  && ( md5sum --version 2>&1 | grep -v 'textutils 1.12' ) >/dev/null; then
    md5sum -c << SHAR_EOF >/dev/null 2>&1 \
    || $echo 'hedge.tcl:' 'MD5 check failed'
1c02533787013ea35d0b487341cf2c09  hedge.tcl
SHAR_EOF
  else
    shar_count="`LC_ALL= LC_CTYPE= LANG= wc -c < 'hedge.tcl'`"
    test 3754 -eq "$shar_count" ||
    $echo 'hedge.tcl:' 'original size' '3754,' 'current size' "$shar_count!"
  fi
fi
# ============= mridec.tcl ==============
if test -f 'mridec.tcl' && test "$first_param" != -c; then
  $echo 'x -' SKIPPING 'mridec.tcl' '(file already exists)'
else
  $echo 'x -' extracting 'mridec.tcl' '(binary)'
  sed 's/^X//' << 'SHAR_EOF' | uudecode &&
begin 600 mridec.tcl
M(R!)9B!Y;W4@87)E('5S:6YG(%=I;F1O=SDU(&%N9"!V=&L@,2XS('5N8V]M
M;65N="!T:&4@;&EN92!B96QO=PT*;&]A9"!V=&MT8VP[#0H-"B,@9V5T('1H
M92!I;G1E<F%C=&]R('5I#0IS;W5R8V4@=G1K26YT+G1C;`T*#0HC($9I<G-T
M(&-R96%T92!T:&4@<F5N9&5R(&UA<W1E<@T*=G1K4F5N9&5R36%S=&5R(')M
M.PT*#0HC($YO=R!C<F5A=&4@=&AE(%)E;F1E<E=I;F1O=RP@4F5N9&5R97(-
M"B,-"G-E="!R96Y7:6X@6W)M($UA:V5296YD97)7:6YD;W==.PT*<V5T(')E
M;C$@("!;)')E;E=I;B!-86ME4F5N9&5R97)=.PT*<V5T(&ER96X@("!;)')E
M;E=I;B!-86ME4F5N9&5R5VEN9&]W26YT97)A8W1O<ET[#0H-"B,-"B,@3&]A
M9"!U<"!T:&4@9&%T80T*=G1K4W1R=6-T=7)E9%!O:6YT<U)E861E<B!V;VP[
M#0H@("`@=F]L(%-E=$9I;&5N86UE(")-4DED871A+G9T:R(-"B`@("!V;VP@
M1&5B=6=/;CL-"@T*=G1K3W5T;&EN949I;'1E<B!O=71,:6YE.PT*("!O=71,
M:6YE(%-E=$EN<'5T(%MV;VP@1V5T3W5T<'5T73L-"@T*=G1K4&]L>4UA<'!E
M<B!O=71-87!P97([#0H@(&]U=$UA<'!E<B!3971);G!U="!;;W5T3&EN92!'
M971/=71P=71=.PT*#0IV=&M!8W1O<B!O=71!8W1O<CL-"B`@;W5T06-T;W(@
M4V5T36%P<&5R(&]U=$UA<'!E<CL-"@T*)')E;C$@061D06-T;W)S(&]U=$%C
M=&]R.PT*#0IV=&M-87)C:&EN9T-U8F5S(&-O;G1O=7([#0IV=&M$96-I;6%T
M92!D96-I.PT*=G1K4&]L>4UA<'!E<B!V;VQ-87!P97([#0IV=&M!8W1O<B!V
M;VQ!8W1O<CL-"B`@8V]N=&]U<B!3971);G!U="!;=F]L($=E=$]U='!U=%T[
M#0IF;W(@>W-E="!C;W5N="`Q,#!]('LD8V]U;G0@/"`U,#!]('MI;F-R(&-O
M=6YT(#$P,'T@>PT*("!C;VYT;W5R(%-E=%9A;'5E(#`@)&-O=6YT.PT*("!D
M96-I(%-E=$EN<'5T(%MC;VYT;W5R($=E=$]U='!U=%T[#0H@(&1E8VD@4V5T
M5&%R9V5T4F5D=6-T:6]N(#`N.#L-"B`@9&5C:2!3971!<W!E8W12871I;R`R
M,#L-"B`@9&5C:2!3971);FET:6%L17)R;W(@,"XP,#`U.PT*("!D96-I(%-E
M=$5R<F]R26YC<F5M96YT(#`N,#`Q.PT*("!D96-I(%-E=$UA>&EM=6U)=&5R
M871I;VYS(#8[#0H@(&1E8VD@4V5T26YI=&EA;$9E871U<F5!;F=L92`S,#L-
M"@T*("!V;VQ-87!P97(@4V5T26YP=70@6V1E8VD@1V5T3W5T<'5T73L-"B`@
M=F]L36%P<&5R(%-C86QA<G-6:7-I8FQE3V9F.PT*("!V;VQ!8W1O<B!3971-
M87!P97(@=F]L36%P<&5R.PT*#0H-"B,@061D('1H92!A8W1O<G,@=&\@=&AE
M(')E;F1E<F5R+"!S970@=&AE(&)A8VMG<F]U;F0@86YD('-I>F4-"B,-"@T*
M)')E;C$@061D06-T;W)S('9O;$%C=&]R.PT*)')E;C$@4V5T0F%C:V=R;W5N
M9"`P(#`@,#L-"B1R96Y7:6X@4V5T4VEZ92`U,#`@-#`P.PT*)&ER96X@26YI
M=&EA;&EZ93L-"@T*(R!R96YD97(@=&AE(&EM86=E#0HC#0HD:7)E;B!39715
M<V5R365T:&]D('MW;2!D96EC;VYI9GD@+G9T:TEN=&5R86-T?3L-"B1R96Y7
M:6X@4F5N9&5R.PT*?0T*(R!P<F5V96YT('1H92!T:R!W:6YD;W<@9G)O;2!S
M:&]W:6YG('5P('1H96X@<W1A<G0@=&AE(&5V96YT(&QO;W`-"G=M('=I=&AD
)<F%W("X-"@T*
`
end
SHAR_EOF
  $shar_touch -am 0417081497 'mridec.tcl' &&
  chmod 0640 'mridec.tcl' ||
  $echo 'restore of' 'mridec.tcl' 'failed'
  if ( md5sum --help 2>&1 | grep 'sage: md5sum \[' ) >/dev/null 2>&1 \
  && ( md5sum --version 2>&1 | grep -v 'textutils 1.12' ) >/dev/null; then
    md5sum -c << SHAR_EOF >/dev/null 2>&1 \
    || $echo 'mridec.tcl:' 'MD5 check failed'
66f654b128fc251d3343d9e8fa00859c  mridec.tcl
SHAR_EOF
  else
    shar_count="`LC_ALL= LC_CTYPE= LANG= wc -c < 'mridec.tcl'`"
    test 1584 -eq "$shar_count" ||
    $echo 'mridec.tcl:' 'original size' '1584,' 'current size' "$shar_count!"
  fi
fi
# ============= mrihead.tcl ==============
if test -f 'mrihead.tcl' && test "$first_param" != -c; then
  $echo 'x -' SKIPPING 'mrihead.tcl' '(file already exists)'
else
  $echo 'x -' extracting 'mrihead.tcl' '(binary)'
  sed 's/^X//' << 'SHAR_EOF' | uudecode &&
begin 600 mrihead.tcl
M(R!)9B!Y;W4@87)E('5S:6YG(%=I;F1O=SDU(&%N9"!V=&L@,2XS('5N8V]M
M;65N="!T:&4@;&EN92!B96QO=PT*;&]A9"!V=&MT8VP[#0H-"B,@9V5T('1H
M92!I;G1E<F%C=&]R('5I#0IS;W5R8V4@=G1K26YT+G1C;`T*#0HC($9I<G-T
M(&-R96%T92!T:&4@<F5N9&5R(&UA<W1E<@T*=G1K4F5N9&5R36%S=&5R(')M
M.PT*#0HC($YO=R!C<F5A=&4@=&AE(%)E;F1E<E=I;F1O=RP@4F5N9&5R97(-
M"B,-"G-E="!R96Y7:6X@6W)M($UA:V5296YD97)7:6YD;W==.PT*<V5T(')E
M;C$@("!;)')E;E=I;B!-86ME4F5N9&5R97)=.PT*<V5T(&ER96X@("!;)')E
M;E=I;B!-86ME4F5N9&5R5VEN9&]W26YT97)A8W1O<ET[#0H-"B,-"B,@3&]A
M9"!U<"!T:&4@9&%T80T*=G1K4W1R=6-T=7)E9%!O:6YT<U)E861E<B!V;VP[
M#0H@("`@=F]L(%-E=$9I;&5N86UE(")-4DED871A+G9T:R(-"B`@("!V;VP@
M1&5B=6=/;CL-"@T*=G1K3W5T;&EN949I;'1E<B!O=71,:6YE.PT*("!O=71,
M:6YE(%-E=$EN<'5T(%MV;VP@1V5T3W5T<'5T73L-"@T*=G1K4&]L>4UA<'!E
M<B!O=71-87!P97([#0H@(&]U=$UA<'!E<B!3971);G!U="!;;W5T3&EN92!'
M971/=71P=71=.PT*#0IV=&M!8W1O<B!O=71!8W1O<CL-"B`@;W5T06-T;W(@
M4V5T36%P<&5R(&]U=$UA<'!E<CL-"@T*)')E;C$@061D06-T;W)S(&]U=$%C
M=&]R.PT*#0IV=&M-87)C:&EN9T-U8F5S(&-O;G1O=7([#0IV=&M0;VQY36%P
M<&5R('9O;$UA<'!E<CL-"G9T:T%C=&]R('9O;$%C=&]R.PT*("!C;VYT;W5R
M(%-E=$EN<'5T(%MV;VP@1V5T3W5T<'5T73L-"F9O<B![<V5T(&-O=6YT(#$P
M,'T@>R1C;W5N="`\(#4P,'T@>VEN8W(@8V]U;G0@,3`P?2![#0H@(&-O;G1O
M=7(@4V5T5F%L=64@,"`D8V]U;G0[#0H@('9O;$UA<'!E<B!3971);G!U="!;
M8V]N=&]U<B!'971/=71P=71=.PT*("!V;VQ-87!P97(@4V-A;&%R<U9I<VEB
M;&5/9F8[#0H@('9O;$%C=&]R(%-E=$UA<'!E<B!V;VQ-87!P97([#0H-"@T*
M(R!!9&0@=&AE(&%C=&]R<R!T;R!T:&4@<F5N9&5R97(L('-E="!T:&4@8F%C
M:V=R;W5N9"!A;F0@<VEZ90T*(PT*#0HD<F5N,2!!9&1!8W1O<G,@=F]L06-T
M;W([#0HD<F5N,2!3971"86-K9W)O=6YD(#`@,"`P.PT*)')E;E=I;B!39713
M:7IE(#4P,"`T,#`[#0HD:7)E;B!);FET:6%L:7IE.PT*#0HC(')E;F1E<B!T
M:&4@:6UA9V4-"B,-"B1I<F5N(%-E=%5S97)-971H;V0@>W=M(&1E:6-O;FEF
M>2`N=G1K26YT97)A8W1].PT*)')E;E=I;B!296YD97([#0I]#0HC('!R979E
M;G0@=&AE('1K('=I;F1O=R!F<F]M('-H;W=I;F<@=7`@=&AE;B!S=&%R="!T
@:&4@979E;G0@;&]O<`T*=VT@=VET:&1R87<@+@T*#0H@
`
end
SHAR_EOF
  $shar_touch -am 0417081597 'mrihead.tcl' &&
  chmod 0640 'mrihead.tcl' ||
  $echo 'restore of' 'mrihead.tcl' 'failed'
  if ( md5sum --help 2>&1 | grep 'sage: md5sum \[' ) >/dev/null 2>&1 \
  && ( md5sum --version 2>&1 | grep -v 'textutils 1.12' ) >/dev/null; then
    md5sum -c << SHAR_EOF >/dev/null 2>&1 \
    || $echo 'mrihead.tcl:' 'MD5 check failed'
51323469cc2fd98d9b61427018353bee  mrihead.tcl
SHAR_EOF
  else
    shar_count="`LC_ALL= LC_CTYPE= LANG= wc -c < 'mrihead.tcl'`"
    test 1337 -eq "$shar_count" ||
    $echo 'mrihead.tcl:' 'original size' '1337,' 'current size' "$shar_count!"
  fi
fi
# ============= norm.tcl ==============
if test -f 'norm.tcl' && test "$first_param" != -c; then
  $echo 'x -' SKIPPING 'norm.tcl' '(file already exists)'
else
  $echo 'x -' extracting 'norm.tcl' '(binary)'
  sed 's/^X//' << 'SHAR_EOF' | uudecode &&
begin 600 norm.tcl
M(R!G970@=&AE(&EN=&5R86-T;W(@=6D-"FQO860@=G1K=&-L#0IS;W5R8V4@
M=G1K26YT+G1C;`T*#0HC(&-R96%T92!P;&%N97,-"B,@1FER<W0@8W)E871E
M('1H92!R96YD97(@;6%S=&5R#0IV=&M296YD97)-87-T97(@<FT[#0H-"B,@
M3F]W(&-R96%T92!T:&4@4F5N9&5R5VEN9&]W+"!296YD97)E<B!A;F0@8F]T
M:"!!8W1O<G,-"B,-"G-E="!R96Y7:6X@6W)M($UA:V5296YD97)7:6YD;W==
M.PT*<V5T(')E;C$@("!;)')E;E=I;B!-86ME4F5N9&5R97)=.PT*<V5T(&ER
M96X@6R1R96Y7:6X@36%K95)E;F1E<E=I;F1O=TEN=&5R86-T;W)=.PT*#0HC
M(&-R96%T92!P:7!E;&EN90T*(PT*=G1K4$Q/5#-$4F5A9&5R('!L,V0[#0H@
M("`@<&PS9"!3971865I&:6QE;F%M92`B8V]M8GAY>BYB:6XB#0H@("`@<&PS
M9"!397111FEL96YA;64@(F-O;6)Q+F)I;B(-"B`@("!P;#-D(%-E=%-C86QA
M<D9U;F-T:6]N3G5M8F5R(#$P,#L-"B`@("!P;#-D(%-E=%9E8W1O<D9U;F-T
M:6]N3G5M8F5R(#(P,CL-"B`@("!P;#-D(%5P9&%T93L-"@T*#0HC=G1K1&%T
M85-E=$UA<'!E<B!O=71L:6YE36%P<&5R.PT*(R`@("!O=71L:6YE36%P<&5R
M(%-E=$EN<'5T(%MW87)P($=E=$]U='!U=%T[#0HC#0HC=G1K06-T;W(@;W5T
M;&EN94%C=&]R.PT*(R`@("!O=71L:6YE06-T;W(@4V5T36%P<&5R(&]U=&QI
M;F5-87!P97([#0HC("`@(%MO=71L:6YE06-T;W(@1V5T4')O<&5R='E=(%-E
M=$-O;&]R(#`@,2`P.PT*#0HC#0HC#0IV=&M0;&%N95-O=7)C92!P;&%N93L-
M"B`@("!P;&%N92!3971297-O;'5T:6]N(#4P(#4P.PT*=G1K5')A;G-F;W)M
M('1R86YS4#$[#0H@("`@=')A;G-0,2!4<F%N<VQA=&4@,RXW(#`N,"`R."XS
M-SL-"B`@("!T<F%N<U`Q(%-C86QE(#4@-2`U.PT*("`@('1R86YS4#$@4F]T
M871E62`Y,#L-"G9T:U1R86YS9F]R;5!O;'E&:6QT97(@='!D,0T*("`@('1P
M9#$@4V5T26YP=70@6W!L86YE($=E=$]U='!U=%T[#0H@("`@='!D,2!39714
M<F%N<V9O<FT@=')A;G-0,3L-"G9T:T]U=&QI;F5&:6QT97(@;W5T5'!D,3L-
M"B`@("!O=714<&0Q(%-E=$EN<'5T(%MT<&0Q($=E=$]U='!U=%T[#0IV=&M0
M;VQY36%P<&5R(&UA<%1P9#$[#0H@("`@;6%P5'!D,2!3971);G!U="!;;W5T
M5'!D,2!'971/=71P=71=.PT*=G1K06-T;W(@='!D,4%C=&]R.PT*("`@('1P
M9#%!8W1O<B!3971-87!P97(@;6%P5'!D,3L-"B`@("!;='!D,4%C=&]R($=E
M=%!R;W!E<G1Y72!3971#;VQO<B`P(#`@,#L-"@T*=G1K5')A;G-F;W)M('1R
M86YS4#([#0H@("`@=')A;G-0,B!4<F%N<VQA=&4@.2XR(#`N,"`S,2XR,#L-
M"B`@("!T<F%N<U`R(%-C86QE(#4@-2`U.PT*("`@('1R86YS4#(@4F]T871E
M62`Y,#L-"G9T:U1R86YS9F]R;5!O;'E&:6QT97(@='!D,@T*("`@('1P9#(@
M4V5T26YP=70@6W!L86YE($=E=$]U='!U=%T[#0H@("`@='!D,B!39714<F%N
M<V9O<FT@=')A;G-0,CL-"G9T:T]U=&QI;F5&:6QT97(@;W5T5'!D,CL-"B`@
M("!O=714<&0R(%-E=$EN<'5T(%MT<&0R($=E=$]U='!U=%T[#0IV=&M0;VQY
M36%P<&5R(&UA<%1P9#([#0H@("`@;6%P5'!D,B!3971);G!U="!;;W5T5'!D
M,B!'971/=71P=71=.PT*=G1K06-T;W(@='!D,D%C=&]R.PT*("`@('1P9#)!
M8W1O<B!3971-87!P97(@;6%P5'!D,CL-"B`@("!;='!D,D%C=&]R($=E=%!R
M;W!E<G1Y72!3971#;VQO<B`P(#$@,#L-"@T*=G1K5')A;G-F;W)M('1R86YS
M4#,[#0H@("`@=')A;G-0,R!4<F%N<VQA=&4@,3,N,C<@,"XP(#,S+C,P.PT*
M("`@('1R86YS4#,@4V-A;&4@-2`U(#4[#0H@("`@=')A;G-0,R!2;W1A=&59
M(#DP.PT*=G1K5')A;G-F;W)M4&]L>49I;'1E<B!T<&0S#0H@("`@='!D,R!3
M971);G!U="!;<&QA;F4@1V5T3W5T<'5T73L-"B`@("!T<&0S(%-E=%1R86YS
M9F]R;2!T<F%N<U`S.PT*=G1K3W5T;&EN949I;'1E<B!O=714<&0S.PT*("`@
M(&]U=%1P9#,@4V5T26YP=70@6W1P9#,@1V5T3W5T<'5T73L-"G9T:U!O;'E-
M87!P97(@;6%P5'!D,SL-"B`@("!M87!4<&0S(%-E=$EN<'5T(%MO=714<&0S
M($=E=$]U='!U=%T[#0IV=&M!8W1O<B!T<&0S06-T;W([#0H@("`@='!D,T%C
M=&]R(%-E=$UA<'!E<B!M87!4<&0S.PT*("`@(%MT<&0S06-T;W(@1V5T4')O
M<&5R='E=(%-E=$-O;&]R(#`@,"`P.PT*#0IV=&M!<'!E;F1&:6QT97(@87!P
M96YD1CL-"B`@("!A<'!E;F1&($%D9$EN<'5T(%MT<&0Q($=E=$]U='!U=%T[
M#0H@("`@87!P96YD1B!!9&1);G!U="!;='!D,B!'971/=71P=71=.PT*("`@
M(&%P<&5N9$8@061D26YP=70@6W1P9#,@1V5T3W5T<'5T73L-"@T*#0IV=&M0
M<F]B949I;'1E<B!P<F]B93L-"B`@("!P<F]B92!3971);G!U="!;87!P96YD
M1B!'971/=71P=71=.PT*("`@('!R;V)E(%-E=%-O=7)C92!;<&PS9"!'971/
M=71P=71=.PT*#0IV=&M696-T;W).;W)M(&YO<FT[#0H@("!N;W)M(%-E=$EN
M<'5T(%MP<F]B92!'971/=71P=71=.PT*("`@;F]R;2!.;W)M86QI>F5/;CL-
M"B`@(`T*=G1K1&%T85-E=$UA<'!E<B!N;W)M36%P<&5R.PT*("`@(&YO<FU-
M87!P97(@4V5T26YP=70@6VYO<FT@1V5T3W5T<'5T73L-"B`@("!E=F%L(&YO
M<FU-87!P97(@4V5T4V-A;&%R4F%N9V4@6UMN;W)M($=E=$]U='!U=%T@1V5T
M4V-A;&%R4F%N9V5=.PT*=G1K06-T;W(@;F]R;4%C=&]R.PT*("`@(&YO<FU!
M8W1O<B!3971-87!P97(@;F]R;4UA<'!E<CL-"@T*=G1K4W1R=6-T=7)E9$=R
M:61/=71L:6YE1FEL=&5R(&]U=&QI;F4[#0H@("`@;W5T;&EN92!3971);G!U
M="!;<&PS9"!'971/=71P=71=.PT*=G1K4&]L>4UA<'!E<B!O=71L:6YE36%P
M<&5R.PT*("`@(&]U=&QI;F5-87!P97(@4V5T26YP=70@6V]U=&QI;F4@1V5T
M3W5T<'5T73L-"G9T:T%C=&]R(&]U=&QI;F5!8W1O<CL-"B`@("!O=71L:6YE
M06-T;W(@4V5T36%P<&5R(&]U=&QI;F5-87!P97([#0H@("`@6V]U=&QI;F5!
M8W1O<B!'9710<F]P97)T>5T@4V5T0V]L;W(@,"`P(#`[#0H-"B1R96XQ($%D
M9$%C=&]R<R!O=71L:6YE06-T;W([#0HD<F5N,2!!9&1!8W1O<G,@;F]R;4%C
M=&]R.PT*)')E;C$@061D06-T;W)S('1P9#%!8W1O<CL-"B1R96XQ($%D9$%C
M=&]R<R!T<&0R06-T;W([#0HD<F5N,2!!9&1!8W1O<G,@='!D,T%C=&]R.PT*
M)')E;C$@4V5T0F%C:V=R;W5N9"`Q(#$@,3L-"B1R96Y7:6X@4V5T4VEZ92`U
M,#`@-3`P.PT*)&ER96X@26YI=&EA;&EZ93L-"@T*<V5T(&-A;3$@6R1R96XQ
M($=E=$%C=&EV94-A;65R85T[#0HD8V%M,2!3971#;&EP<&EN9U)A;F=E(#,N
M.34R.3<@-3`[#0HD8V%M,2!3971&;V-A;%!O:6YT(#@N.#@Y,#@@,"XU.34P
M,S@@,CDN,S,T,CL-"B1C86TQ(%-E=%!O<VET:6]N("TQ,BXS,S,R(#,Q+C<T
M-SD@-#$N,C,X-SL-"B1C86TQ($-A;&-6:65W4&QA;F5.;W)M86P[#0HD8V%M
M,2!39716:65W57`@,"XP-C`W-S(@+3`N,S$Y.3`U(#`N.30U-#DX.PT*#0HC
M(')E;F1E<B!T:&4@:6UA9V4-"B,-"B1I<F5N(%-E=%5S97)-971H;V0@>W=M
M(&1E:6-O;FEF>2`N=G1K26YT97)A8W1].PT*)')E;E=I;B!296YD97([#0H-
M"B,@<')E=F5N="!T:&4@=&L@=VEN9&]W(&9R;VT@<VAO=VEN9R!U<"!T:&5N
L('-T87)T('1H92!E=F5N="!L;V]P#0IW;2!W:71H9')A=R`N#0H-"@T*#0IN
`
end
SHAR_EOF
  $shar_touch -am 0417081597 'norm.tcl' &&
  chmod 0640 'norm.tcl' ||
  $echo 'restore of' 'norm.tcl' 'failed'
  if ( md5sum --help 2>&1 | grep 'sage: md5sum \[' ) >/dev/null 2>&1 \
  && ( md5sum --version 2>&1 | grep -v 'textutils 1.12' ) >/dev/null; then
    md5sum -c << SHAR_EOF >/dev/null 2>&1 \
    || $echo 'norm.tcl:' 'MD5 check failed'
b4ea3b06fe51e5546120732aede1f4e7  norm.tcl
SHAR_EOF
  else
    shar_count="`LC_ALL= LC_CTYPE= LANG= wc -c < 'norm.tcl'`"
    test 3599 -eq "$shar_count" ||
    $echo 'norm.tcl:' 'original size' '3599,' 'current size' "$shar_count!"
  fi
fi
# ============= sample.tcl ==============
if test -f 'sample.tcl' && test "$first_param" != -c; then
  $echo 'x -' SKIPPING 'sample.tcl' '(file already exists)'
else
  $echo 'x -' extracting 'sample.tcl' '(binary)'
  sed 's/^X//' << 'SHAR_EOF' | uudecode &&
begin 600 sample.tcl
M;&]A9"!V=&MT8VP[#0HC('5S97(@:6YT97)F86-E(&-O;6UA;F0@=VED9V5T
M#0IS;W5R8V4@+W9T:R]E>&%M<&QE<R]V=&M);G0N=&-L#0H-"B,@8W)E871E
M(&$@<F5N9&5R:6YG('=I;F1O=R!A;F0@<F5N9&5R97(-"G9T:U)E;F1E<DUA
M<W1E<B!R;3L-"G-E="!R96Y7:6X@6W)M($UA:V5296YD97)7:6YD;W==.PT*
M<V5T(')E;C$@6R1R96Y7:6X@36%K95)E;F1E<F5R73L-"G-E="!I<F5N(%LD
M<F5N5VEN($UA:V5296YD97)7:6YD;W=);G1E<F%C=&]R73L-"@T*(W9T:T-O
M;G1O=7)&:6QT97(@8V]N=&]U<G,H,"D[#0HC=G1K0V]N=&]U<D9I;'1E<B!C
M;VYT;W5R<R@Q*3L-"G9T:U%U861R:6,@<75A9#L-"B`@<75A9"!3971#;V5F
M9FEC:65N=',@,"XU(#$@+C(@,"`N,2`P(#`@+C(@,"`P.PT*=G1K4V%M<&QE
M1G5N8W1I;VX@<V%M<&QE.PT*("!S86UP;&4@4V5T4V%M<&QE1&EM96YS:6]N
M<R`R,"`R,"`R,#L-"B`@<V%M<&QE(%-E=$EM<&QI8VET1G5N8W1I;VX@<75A
M9#L-"@T*=G1K0V]N=&]U<D9I;'1E<B!C;VYT;W5R.PT*("`@8V]N=&]U<B!3
M971);G!U="!;<V%M<&QE($=E=$]U='!U=%T[#0IV=&M0;VQY36%P<&5R(&-O
M;G1-87!P97([#0IV=&M!8W1O<B!C;VYT06-T;W([#0IF;W(@>W-E="!C;W5N
M="`R?2![)&-O=6YT(#P@,3)]('L@:6YC<B!C;W5N="`R?2![#0H@("!C;VYT
M;W5R(%-E=%9A;'5E(#`@6R!E>'!R('L@)&-O=6YT+S$P+C`@?5T-"B`@(&-O
M;G1-87!P97(@4V5T26YP=70@6V-O;G1O=7(@1V5T3W5T<'5T73L-"B`@(&-O
M;G1-87!P97(@4V5T4V-A;&%R4F%N9V4@,"XP(#$N-#L-"B`@(&-O;G1!8W1O
M<B!3971-87!P97(@8V]N=$UA<'!E<CL-"B,@87-S:6=N(&]U<B!A8W1O<B!T
M;R!T:&4@<F5N9&5R97(-"B`@("1R96XQ(%-E=$)A8VMG<F]U;F0@,2`Q(#$[
M#0H@("`D<F5N,2!!9&1!8W1O<G,@8V]N=$%C=&]R.PT*(R!E;F%B;&4@=7-E
M<B!I;G1E<F9A8V4@:6YT97)A8W1O<@T*("`@)&ER96X@4V5T57-E<DUE=&AO
M9"![=VT@9&5I8V]N:69Y("YV=&M);G1E<F%C='T[#0H@("`D:7)E;B!);FET
M:6%L:7IE.PT*(R!P<F5V96YT('1H92!T:R!W:6YD;W<@9G)O;2!S:&]W:6YG
M('5P('1H96X@<W1A<G0@=&AE(&5V96YT(&QO;W`-"B`@('=M('=I=&AD<F%W
,("X-"@T*('T-"@T*
`
end
SHAR_EOF
  $shar_touch -am 0417081597 'sample.tcl' &&
  chmod 0640 'sample.tcl' ||
  $echo 'restore of' 'sample.tcl' 'failed'
  if ( md5sum --help 2>&1 | grep 'sage: md5sum \[' ) >/dev/null 2>&1 \
  && ( md5sum --version 2>&1 | grep -v 'textutils 1.12' ) >/dev/null; then
    md5sum -c << SHAR_EOF >/dev/null 2>&1 \
    || $echo 'sample.tcl:' 'MD5 check failed'
298b48393cd84d1b2f63e3cfb104bd68  sample.tcl
SHAR_EOF
  else
    shar_count="`LC_ALL= LC_CTYPE= LANG= wc -c < 'sample.tcl'`"
    test 1137 -eq "$shar_count" ||
    $echo 'sample.tcl:' 'original size' '1137,' 'current size' "$shar_count!"
  fi
fi
# ============= stream.tcl ==============
if test -f 'stream.tcl' && test "$first_param" != -c; then
  $echo 'x -' SKIPPING 'stream.tcl' '(file already exists)'
else
  $echo 'x -' extracting 'stream.tcl' '(binary)'
  sed 's/^X//' << 'SHAR_EOF' | uudecode &&
begin 600 stream.tcl
M(R!G970@=&AE(&EN=&5R86-T;W(@=6D-"FQO860@=G1K=&-L#0IS;W5R8V4@
M=G1K26YT+G1C;`T*#0HC(&-R96%T92!P;&%N97,-"B,@1FER<W0@8W)E871E
M('1H92!R96YD97(@;6%S=&5R#0IV=&M296YD97)-87-T97(@<FT[#0H-"B,@
M3F]W(&-R96%T92!T:&4@4F5N9&5R5VEN9&]W+"!296YD97)E<B!A;F0@8F]T
M:"!!8W1O<G,-"B,-"G-E="!R96Y7:6X@6W)M($UA:V5296YD97)7:6YD;W==
M.PT*<V5T(')E;C$@("!;)')E;E=I;B!-86ME4F5N9&5R97)=.PT*<V5T(&ER
M96X@6R1R96Y7:6X@36%K95)E;F1E<E=I;F1O=TEN=&5R86-T;W)=.PT*#0HC
M(&-R96%T92!P:7!E;&EN90T*(PT*=G1K4$Q/5#-$4F5A9&5R('!L,V0[#0H@
M("`@<&PS9"!3971865I&:6QE;F%M92`B8V]M8GAY>BYB:6XB#0H@("`@<&PS
M9"!397111FEL96YA;64@(F-O;6)Q+F)I;B(-"B`@("!P;#-D(%-E=%-C86QA
M<D9U;F-T:6]N3G5M8F5R(#$P,#L-"B`@("!P;#-D(%-E=%9E8W1O<D9U;F-T
M:6]N3G5M8F5R(#(P,CL-"B`@("!P;#-D(%5P9&%T93L-"@T*=G1K0W5B95-O
M=7)C92!C=6)E.PT*("`@(&-U8F4@4V5T6$QE;F=T:"`P+C$[#0H@("`@8W5B
M92!397193&5N9W1H(#`N,3L-"B`@("!C=6)E(%-E=%I,96YG=&@@,"XQ.PT*
M=G1K5')A;G-F;W)M('1R86YS0S$[#0H@("`@=')A;G-#,2!4<F%N<VQA=&4@
M,RXW(#`N,"`R."XS-SL-"B`@("!T<F%N<T,Q(%-C86QE(#4@-2`U.PT*("`@
M('1R86YS0S$@4F]T871E62`Y,#L-"G9T:U1R86YS9F]R;5!O;'E&:6QT97(@
M=&-U8F4Q#0H@("`@=&-U8F4Q(%-E=$EN<'5T(%MC=6)E($=E=$]U='!U=%T[
M#0H@("`@=&-U8F4Q(%-E=%1R86YS9F]R;2!T<F%N<T,Q.PT*=G1K3W5T;&EN
M949I;'1E<B!O=7148W5B93$[#0H@("`@;W5T5&-U8F4Q(%-E=$EN<'5T(%MT
M8W5B93$@1V5T3W5T<'5T73L-"G9T:U!O;'E-87!P97(@;6%P5&-U8F4Q.PT*
M("`@(&UA<%1C=6)E,2!3971);G!U="!;;W5T5&-U8F4Q($=E=$]U='!U=%T[
M#0IV=&M!8W1O<B!T<&0Q06-T;W([#0H@("`@='!D,4%C=&]R(%-E=$UA<'!E
M<B!M87!48W5B93$[#0H@("`@6W1P9#%!8W1O<B!'9710<F]P97)T>5T@4V5T
M0V]L;W(@,"`P(#`[#0H-"G9T:U!R;V)E1FEL=&5R('!R;V)E.PT*("`@('!R
M;V)E(%-E=$EN<'5T(%MT8W5B93$@1V5T3W5T<'5T73L-"B`@("!P<F]B92!3
M9713;W5R8V4@6W!L,V0@1V5T3W5T<'5T73L-"@T*=G1K4W1R96%M3&EN92!S
M=')E86UE<CL-"B`@("!S=')E86UE<B!3971);G!U="!;<&PS9"!'971/=71P
M=71=.PT*("`@('-T<F5A;65R(%-E=%-O=7)C92!;=&-U8F4Q($=E=$]U='!U
M=%T[#0H@("`@<W1R96%M97(@4V5T36%X:6UU;5!R;W!A9V%T:6]N5&EM92`U
M,#`P,#`[#0H@("`@<W1R96%M97(@4V5T4W1E<$QE;F=T:"`P+C$[#0H@("`@
M<W1R96%M97(@57!D871E.PT*=G1K4&]L>4UA<'!E<B!M87!3=')E86T[#0H@
M("`@;6%P4W1R96%M(%-E=$EN<'5T(%MS=')E86UE<B!'971/=71P=71=.PT*
M("`@(&5V86P@;6%P4W1R96%M(%-E=%-C86QA<E)A;F=E(%P-"B`@("!;6UM;
M<&PS9"!'971/=71P=71=($=E=%!O:6YT1&%T85T@1V5T4V-A;&%R<UT@1V5T
M4F%N9V5=.PT*=G1K06-T;W(@<W1R96%M06-T;W([#0H@("`@<W1R96%M06-T
M;W(@4V5T36%P<&5R(&UA<%-T<F5A;3L-"@T*#0IV=&M3=')U8W1U<F5D1W)I
M9$]U=&QI;F5&:6QT97(@;W5T;&EN93L-"B`@("!O=71L:6YE(%-E=$EN<'5T
M(%MP;#-D($=E=$]U='!U=%T[#0IV=&M0;VQY36%P<&5R(&]U=&QI;F5-87!P
M97([#0H@("`@;W5T;&EN94UA<'!E<B!3971);G!U="!;;W5T;&EN92!'971/
M=71P=71=.PT*=G1K06-T;W(@;W5T;&EN94%C=&]R.PT*("`@(&]U=&QI;F5!
M8W1O<B!3971-87!P97(@;W5T;&EN94UA<'!E<CL-"B`@("!;;W5T;&EN94%C
M=&]R($=E=%!R;W!E<G1Y72!3971#;VQO<B`P(#`@,#L-"@T*)')E;C$@061D
M06-T;W)S('-T<F5A;4%C=&]R.PT*)')E;C$@061D06-T;W)S(&]U=&QI;F5!
M8W1O<CL-"B,D<F5N,2!!9&1!8W1O<G,@<&QA;F5!8W1O<CL-"B1R96XQ($%D
M9$%C=&]R<R!T<&0Q06-T;W([#0HC)')E;C$@061D06-T;W)S('1P9#)!8W1O
M<CL-"B,D<F5N,2!!9&1!8W1O<G,@='!D,T%C=&]R.PT*)')E;C$@4V5T0F%C
M:V=R;W5N9"`Q(#$@,3L-"B1R96Y7:6X@4V5T4VEZ92`U,#`@-3`P.PT*)&ER
M96X@26YI=&EA;&EZ93L-"@T*<V5T(&-A;3$@6R1R96XQ($=E=$%C=&EV94-A
M;65R85T[#0HD8V%M,2!3971#;&EP<&EN9U)A;F=E(#,N.34R.3<@-3`[#0HD
M8V%M,2!3971&;V-A;%!O:6YT(#@N.#@Y,#@@,"XU.34P,S@@,CDN,S,T,CL-
M"B1C86TQ(%-E=%!O<VET:6]N("TQ,BXS,S,R(#,Q+C<T-SD@-#$N,C,X-SL-
M"B1C86TQ($-A;&-6:65W4&QA;F5.;W)M86P[#0HD8V%M,2!39716:65W57`@
M,"XP-C`W-S(@+3`N,S$Y.3`U(#`N.30U-#DX.PT*#0HC(')E;F1E<B!T:&4@
M:6UA9V4-"B,-"B1I<F5N(%-E=%5S97)-971H;V0@>W=M(&1E:6-O;FEF>2`N
M=G1K26YT97)A8W1].PT*)')E;E=I;B!296YD97([#0H-"B,@<')E=F5N="!T
M:&4@=&L@=VEN9&]W(&9R;VT@<VAO=VEN9R!U<"!T:&5N('-T87)T('1H92!E
@=F5N="!L;V]P#0IW;2!W:71H9')A=R`N#0H-"@T*#0IN
`
end
SHAR_EOF
  $shar_touch -am 0417081597 'stream.tcl' &&
  chmod 0640 'stream.tcl' ||
  $echo 'restore of' 'stream.tcl' 'failed'
  if ( md5sum --help 2>&1 | grep 'sage: md5sum \[' ) >/dev/null 2>&1 \
  && ( md5sum --version 2>&1 | grep -v 'textutils 1.12' ) >/dev/null; then
    md5sum -c << SHAR_EOF >/dev/null 2>&1 \
    || $echo 'stream.tcl:' 'MD5 check failed'
87451c4f08199a461c37258ff2bd9c47  stream.tcl
SHAR_EOF
  else
    shar_count="`LC_ALL= LC_CTYPE= LANG= wc -c < 'stream.tcl'`"
    test 2597 -eq "$shar_count" ||
    $echo 'stream.tcl:' 'original size' '2597,' 'current size' "$shar_count!"
  fi
fi
# ============= warp.tcl ==============
if test -f 'warp.tcl' && test "$first_param" != -c; then
  $echo 'x -' SKIPPING 'warp.tcl' '(file already exists)'
else
  $echo 'x -' extracting 'warp.tcl' '(binary)'
  sed 's/^X//' << 'SHAR_EOF' | uudecode &&
begin 600 warp.tcl
M(R!G970@=&AE(&EN=&5R86-T;W(@=6D-"FQO860@=G1K=&-L#0IS;W5R8V4@
M=G1K26YT+G1C;`T*#0HC(&-R96%T92!P;&%N97,-"B,@1FER<W0@8W)E871E
M('1H92!R96YD97(@;6%S=&5R#0IV=&M296YD97)-87-T97(@<FT[#0H-"B,@
M3F]W(&-R96%T92!T:&4@4F5N9&5R5VEN9&]W+"!296YD97)E<B!A;F0@8F]T
M:"!!8W1O<G,-"B,-"G-E="!R96Y7:6X@6W)M($UA:V5296YD97)7:6YD;W==
M.PT*<V5T(')E;C$@("!;)')E;E=I;B!-86ME4F5N9&5R97)=.PT*<V5T(&ER
M96X@6R1R96Y7:6X@36%K95)E;F1E<E=I;F1O=TEN=&5R86-T;W)=.PT*#0HC
M(&-R96%T92!P:7!E;&EN90T*(PT*=G1K4$Q/5#-$4F5A9&5R('!L,V0[#0H@
M("`@<&PS9"!3971865I&:6QE;F%M92`B8V]M8GAY>BYB:6XB#0H@("`@<&PS
M9"!397111FEL96YA;64@(F-O;6)Q+F)I;B(-"B`@("!P;#-D(%-E=%-C86QA
M<D9U;F-T:6]N3G5M8F5R(#$P,#L-"B`@("!P;#-D(%-E=%9E8W1O<D9U;F-T
M:6]N3G5M8F5R(#(P,CL-"B`@("!P;#-D(%5P9&%T93L-"@T*=G1K5V%R<%9E
M8W1O<B!W87)P.PT*("`@('=A<G`@4V5T26YP=70@6W!L,V0@1V5T3W5T<'5T
M73L-"B`@("!W87)P(%-E=%-C86QE1F%C=&]R(#`N,#4[#0H-"B-V=&M$871A
M4V5T36%P<&5R(&]U=&QI;F5-87!P97([#0HC("`@(&]U=&QI;F5-87!P97(@
M4V5T26YP=70@6W=A<G`@1V5T3W5T<'5T73L-"B,-"B-V=&M!8W1O<B!O=71L
M:6YE06-T;W([#0HC("`@(&]U=&QI;F5!8W1O<B!3971-87!P97(@;W5T;&EN
M94UA<'!E<CL-"B,@("`@6V]U=&QI;F5!8W1O<B!'9710<F]P97)T>5T@4V5T
M0V]L;W(@,"`Q(#`[#0H-"B,-"B,-"G9T:U!L86YE4V]U<F-E('!L86YE.PT*
M("`@('!L86YE(%-E=%)E<V]L=71I;VX@-3`@-3`[#0IV=&M4<F%N<V9O<FT@
M=')A;G-0,3L-"B`@("!T<F%N<U`Q(%1R86YS;&%T92`S+C<@,"XP(#(X+C,W
M.PT*("`@('1R86YS4#$@4V-A;&4@-2`U(#4[#0H@("`@=')A;G-0,2!2;W1A
M=&59(#DP.PT*=G1K5')A;G-F;W)M4&]L>49I;'1E<B!T<&0Q#0H@("`@='!D
M,2!3971);G!U="!;<&QA;F4@1V5T3W5T<'5T73L-"B`@("!T<&0Q(%-E=%1R
M86YS9F]R;2!T<F%N<U`Q.PT*=G1K3W5T;&EN949I;'1E<B!O=714<&0Q.PT*
M("`@(&]U=%1P9#$@4V5T26YP=70@6W1P9#$@1V5T3W5T<'5T73L-"G9T:U!O
M;'E-87!P97(@;6%P5'!D,3L-"B`@("!M87!4<&0Q(%-E=$EN<'5T(%MO=714
M<&0Q($=E=$]U='!U=%T[#0IV=&M!8W1O<B!T<&0Q06-T;W([#0H@("`@='!D
M,4%C=&]R(%-E=$UA<'!E<B!M87!4<&0Q.PT*("`@(%MT<&0Q06-T;W(@1V5T
M4')O<&5R='E=(%-E=$-O;&]R(#`@,"`P.PT*#0IV=&M4<F%N<V9O<FT@=')A
M;G-0,CL-"B`@("!T<F%N<U`R(%1R86YS;&%T92`Y+C(@,"XP(#,Q+C(P.PT*
M("`@('1R86YS4#(@4V-A;&4@-2`U(#4[#0H@("`@=')A;G-0,B!2;W1A=&59
M(#DP.PT*=G1K5')A;G-F;W)M4&]L>49I;'1E<B!T<&0R#0H@("`@='!D,B!3
M971);G!U="!;<&QA;F4@1V5T3W5T<'5T73L-"B`@("!T<&0R(%-E=%1R86YS
M9F]R;2!T<F%N<U`R.PT*=G1K3W5T;&EN949I;'1E<B!O=714<&0R.PT*("`@
M(&]U=%1P9#(@4V5T26YP=70@6W1P9#(@1V5T3W5T<'5T73L-"G9T:U!O;'E-
M87!P97(@;6%P5'!D,CL-"B`@("!M87!4<&0R(%-E=$EN<'5T(%MO=714<&0R
M($=E=$]U='!U=%T[#0IV=&M!8W1O<B!T<&0R06-T;W([#0H@("`@='!D,D%C
M=&]R(%-E=$UA<'!E<B!M87!4<&0R.PT*("`@(%MT<&0R06-T;W(@1V5T4')O
M<&5R='E=(%-E=$-O;&]R(#`@,2`P.PT*#0IV=&M4<F%N<V9O<FT@=')A;G-0
M,SL-"B`@("!T<F%N<U`S(%1R86YS;&%T92`Q,RXR-R`P+C`@,S,N,S`[#0H@
M("`@=')A;G-0,R!38V%L92`U(#4@-3L-"B`@("!T<F%N<U`S(%)O=&%T95D@
M.3`[#0IV=&M4<F%N<V9O<FU0;VQY1FEL=&5R('1P9#,-"B`@("!T<&0S(%-E
M=$EN<'5T(%MP;&%N92!'971/=71P=71=.PT*("`@('1P9#,@4V5T5')A;G-F
M;W)M('1R86YS4#,[#0IV=&M/=71L:6YE1FEL=&5R(&]U=%1P9#,[#0H@("`@
M;W5T5'!D,R!3971);G!U="!;='!D,R!'971/=71P=71=.PT*=G1K4&]L>4UA
M<'!E<B!M87!4<&0S.PT*("`@(&UA<%1P9#,@4V5T26YP=70@6V]U=%1P9#,@
M1V5T3W5T<'5T73L-"G9T:T%C=&]R('1P9#-!8W1O<CL-"B`@("!T<&0S06-T
M;W(@4V5T36%P<&5R(&UA<%1P9#,[#0H@("`@6W1P9#-!8W1O<B!'9710<F]P
M97)T>5T@4V5T0V]L;W(@,"`P(#`[#0H-"G9T:T%P<&5N9$9I;'1E<B!A<'!E
M;F1&.PT*("`@(&%P<&5N9$8@061D26YP=70@6W1P9#$@1V5T3W5T<'5T73L-
M"B`@("!A<'!E;F1&($%D9$EN<'5T(%MT<&0R($=E=$]U='!U=%T[#0H@("`@
M87!P96YD1B!!9&1);G!U="!;='!D,R!'971/=71P=71=.PT*#0H-"G9T:U!R
M;V)E1FEL=&5R('!R;V)E.PT*("`@('!R;V)E(%-E=$EN<'5T(%MA<'!E;F1&
M($=E=$]U='!U=%T[#0H@("`@<')O8F4@4V5T4V]U<F-E(%MW87)P($=E=$]U
M='!U=%T[#0H-"B`@(`T*=G1K1V5O;65T<GE&:6QT97(@9',R<&]L>3L-"B`@
M("!D<S)P;VQY(%-E=$EN<'5T(%MP<F]B92!'971/=71P=71=.PT*=G1K0VQE
M86Y0;VQY1&%T82!C;&5A;CL-"B`@("!C;&5A;B!3971);G!U="!;9',R<&]L
M>2!'971/=71P=71=.PT*#0IV=&M0;VQY3F]R;6%L<R!N;W)M86QS.PT*("`@
M(&YO<FUA;',@4V5T26YP=70@6V-L96%N($=E=$]U='!U=%T[#0H@("`@;F]R
M;6%L<R!3971&96%T=7)E06YG;&4@-C`[#0IV=&M$871A4V5T36%P<&5R(&-O
M;G1O=7)-87!P97([#0H@("`@8V]N=&]U<DUA<'!E<B!3971);G!U="!;8VQE
M86X@1V5T3W5T<'5T73L-"B`@("!E=F%L(&-O;G1O=7)-87!P97(@4V5T4V-A
M;&%R4F%N9V4@6UMP<F]B92!'971/=71P=71=($=E=%-C86QA<E)A;F=E73L-
M"G9T:T%C=&]R('!L86YE06-T;W([#0H@("`@<&QA;F5!8W1O<B!3971-87!P
M97(@8V]N=&]U<DUA<'!E<CL-"@T*=G1K4W1R=6-T=7)E9$=R:61/=71L:6YE
M1FEL=&5R(&]U=&QI;F4[#0H@("`@;W5T;&EN92!3971);G!U="!;<&PS9"!'
M971/=71P=71=.PT*=G1K4&]L>4UA<'!E<B!O=71L:6YE36%P<&5R.PT*("`@
M(&]U=&QI;F5-87!P97(@4V5T26YP=70@6V]U=&QI;F4@1V5T3W5T<'5T73L-
M"G9T:T%C=&]R(&]U=&QI;F5!8W1O<CL-"B`@("!O=71L:6YE06-T;W(@4V5T
M36%P<&5R(&]U=&QI;F5-87!P97([#0H@("`@6V]U=&QI;F5!8W1O<B!'9710
M<F]P97)T>5T@4V5T0V]L;W(@,"`P(#`[#0H-"B1R96XQ($%D9$%C=&]R<R!O
M=71L:6YE06-T;W([#0HD<F5N,2!!9&1!8W1O<G,@<&QA;F5!8W1O<CL-"B1R
M96XQ($%D9$%C=&]R<R!T<&0Q06-T;W([#0HD<F5N,2!!9&1!8W1O<G,@='!D
M,D%C=&]R.PT*)')E;C$@061D06-T;W)S('1P9#-!8W1O<CL-"B1R96XQ(%-E
M=$)A8VMG<F]U;F0@,2`Q(#$[#0HD<F5N5VEN(%-E=%-I>F4@-3`P(#4P,#L-
M"B1I<F5N($EN:71I86QI>F4[#0H-"G-E="!C86TQ(%LD<F5N,2!'971!8W1I
M=F5#86UE<F%=.PT*)&-A;3$@4V5T0VQI<'!I;F=286YG92`S+CDU,CDW(#4P
M.PT*)&-A;3$@4V5T1F]C86Q0;VEN="`X+C@X.3`X(#`N-3DU,#,X(#(Y+C,S
M-#([#0HD8V%M,2!39710;W-I=&EO;B`M,3(N,S,S,B`S,2XW-#<Y(#0Q+C(S
M.#<[#0HD8V%M,2!#86QC5FEE=U!L86YE3F]R;6%L.PT*)&-A;3$@4V5T5FEE
M=U5P(#`N,#8P-S<R("TP+C,Q.3DP-2`P+CDT-30Y.#L-"@T*(R!R96YD97(@
M=&AE(&EM86=E#0HC#0HD:7)E;B!39715<V5R365T:&]D('MW;2!D96EC;VYI
M9GD@+G9T:TEN=&5R86-T?3L-"B1R96Y7:6X@4F5N9&5R.PT*#0HC('!R979E
M;G0@=&AE('1K('=I;F1O=R!F<F]M('-H;W=I;F<@=7`@=&AE;B!S=&%R="!T
D:&4@979E;G0@;&]O<`T*=VT@=VET:&1R87<@+@T*#0H-"@T*
`
end
SHAR_EOF
  $shar_touch -am 0417081597 'warp.tcl' &&
  chmod 0640 'warp.tcl' ||
  $echo 'restore of' 'warp.tcl' 'failed'
  if ( md5sum --help 2>&1 | grep 'sage: md5sum \[' ) >/dev/null 2>&1 \
  && ( md5sum --version 2>&1 | grep -v 'textutils 1.12' ) >/dev/null; then
    md5sum -c << SHAR_EOF >/dev/null 2>&1 \
    || $echo 'warp.tcl:' 'MD5 check failed'
6fa356602aa004909b82eac026e7385c  warp.tcl
SHAR_EOF
  else
    shar_count="`LC_ALL= LC_CTYPE= LANG= wc -c < 'warp.tcl'`"
    test 3861 -eq "$shar_count" ||
    $echo 'warp.tcl:' 'original size' '3861,' 'current size' "$shar_count!"
  fi
fi
rm -fr _sh16357
exit 0

From ???@??? Fri Apr 18 15:39:19 1997
Received: from cs.rpi.edu (root@barney.cs.rpi.edu [128.213.3.4])
	by mail1.its.rpi.edu (8.8.5/8.8.5) with ESMTP id OAA25406
	for <citrit@rpi.edu>; Fri, 18 Apr 1997 14:40:38 -0400
Received: from tulip.cs.rpi.edu (parkerc@tulip.cs.rpi.edu [128.213.3.44])
	by cs.rpi.edu (8.8.5/8.8.5) with ESMTP id OAA04597
	for <citrit@rpi.edu>; Fri, 18 Apr 1997 14:40:33 -0400 (EDT)
From: Christopher Parker <parkerc@cs.rpi.edu>
Received: (from parkerc@localhost)
	by tulip.cs.rpi.edu (8.8.5/8.8.5) id OAA25538
	for citrit@rpi.edu; Fri, 18 Apr 1997 14:40:33 -0400 (EDT)
Date: Fri, 18 Apr 1997 14:40:33 -0400 (EDT)
Message-Id: <199704181840.OAA25538@tulip.cs.rpi.edu>
To: citrit@rpi.edu
Subject: Homework 3
X-UIDL: 70dca0758a2f862081368d5eaf36c46f

#! /bin/sh
# This is a shell archive.  Remove anything before this line, then feed it
# into a shell via "sh file" or similar.  To overwrite existing files,
# type "sh file -c".
# The tool that generated this appeared in the comp.sources.unix newsgroup;
# send mail to comp-sources-unix@uunet.uu.net if you want that tool.
# Contents:  MRIHead.tcl probehedge.tcl sample.tcl streamline.tcl
# Wrapped by parkerc@tulip.cs.rpi.edu on Fri Apr 18 14:38:07 1997
PATH=/bin:/usr/bin:/usr/ucb ; export PATH
echo If this archive is complete, you will see the following message:
echo '          "shar: End of archive."'
if test -f 'MRIHead.tcl' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'MRIHead.tcl'\"
else
  echo shar: Extracting \"'MRIHead.tcl'\" \(1450 characters\)
  sed "s/^X//" >'MRIHead.tcl' <<'END_OF_FILE'
X# If you are using Window95 and vtk 1.3 uncomment the line below
X# load vtktcl;
X
X# get the interactor ui
Xsource vtkInt.tcl
X
X# First create the render master
XvtkRenderMaster rm;
X
X# Now create the RenderWindow, Renderer
X#
Xset renWin [rm MakeRenderWindow];
Xset ren1   [$renWin MakeRenderer];
Xset iren   [$renWin MakeRenderWindowInteractor];
X
X#
X# Load up the data
XvtkStructuredPointsReader vol;
X    vol SetFilename "MRIdata.vtk"
X    vol DebugOn;
X
XvtkMarchingCubes contour;
X  contour SetInput [vol GetOutput];
X  contour SetValue 0 225.0;
X
XvtkPolyMapper volMapper;
X  volMapper SetInput [contour GetOutput];
X  volMapper ScalarsVisibleOff;
X
XvtkActor volActor;
X  volActor SetMapper volMapper;
X
XvtkOutlineFilter outLine;
X  outLine SetInput [vol GetOutput];
X
XvtkPolyMapper outMapper;
X  outMapper SetInput [outLine GetOutput];
X
XvtkActor outActor;
X  outActor SetMapper outMapper;
X
X# Add the actors to the renderer, set the background and size
X#
X$ren1 AddActors outActor;
X$ren1 AddActors volActor;
X$ren1 SetBackground 0 0 0;
X$renWin SetSize 500 400;
X$iren Initialize;
X
X# render the image
X#
X$iren SetUserMethod {wm deiconify .vtkInteract};
X$renWin Render;
X
Xbutton .phred -text stepAnimate -command stepAnimate
Xpack .phred
X
Xproc stepAnimate {} {
X    global renWin;
X	
X    for { set i 10.0 } { $i <= 225.0 } { set i [expr $i + 10] } {
X	contour SetValue 20 $i;
X	$renWin Render
X    }
X}
X
X# prevent the tk window from showing up then start the event loop
X# wm withdraw .
X
END_OF_FILE
  if test 1450 -ne `wc -c <'MRIHead.tcl'`; then
    echo shar: \"'MRIHead.tcl'\" unpacked with wrong size!
  fi
  # end of 'MRIHead.tcl'
fi
if test -f 'probehedge.tcl' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'probehedge.tcl'\"
else
  echo shar: Extracting \"'probehedge.tcl'\" \(3367 characters\)
  sed "s/^X//" >'probehedge.tcl' <<'END_OF_FILE'
X# If you are using Window95 and vtk 1.3 uncomment the line below
X# load vtktcl;
X
X# get the interactor ui
Xsource vtkInt.tcl
X
X# create planes
X# First create the render master
XvtkRenderMaster rm;
X
X# Now create the RenderWindow, Renderer and both Actors
X#
Xset renWin [rm MakeRenderWindow];
Xset ren1   [$renWin MakeRenderer];
Xset iren [$renWin MakeRenderWindowInteractor];
X
X# create pipeline
X#
XvtkPLOT3DReader pl3d;
X    pl3d SetXYZFilename "combxyz.bin"
X    pl3d SetQFilename "combq.bin"
X    pl3d SetScalarFunctionNumber 100;
X    pl3d SetVectorFunctionNumber 202;
X    pl3d Update;
X
XvtkPlaneSource plane;
X    plane SetResolution 50 50;
XvtkTransform transP1;
X    transP1 Translate 3.7 0.0 28.37;
X    transP1 Scale 5 5 5;
X    transP1 RotateY 90;
XvtkTransformPolyFilter tpd1
X    tpd1 SetInput [plane GetOutput];
X    tpd1 SetTransform transP1;
XvtkOutlineFilter outTpd1;
X    outTpd1 SetInput [tpd1 GetOutput];
XvtkPolyMapper mapTpd1;
X    mapTpd1 SetInput [outTpd1 GetOutput];
XvtkActor tpd1Actor;
X    tpd1Actor SetMapper mapTpd1;
X    [tpd1Actor GetProperty] SetColor 0 0 0;
X
XvtkTransform transP2;
X    transP2 Translate 9.2 0.0 31.20;
X    transP2 Scale 5 5 5;
X    transP2 RotateY 90;
XvtkTransformPolyFilter tpd2
X    tpd2 SetInput [plane GetOutput];
X    tpd2 SetTransform transP2;
XvtkOutlineFilter outTpd2;
X    outTpd2 SetInput [tpd2 GetOutput];
XvtkPolyMapper mapTpd2;
X    mapTpd2 SetInput [outTpd2 GetOutput];
XvtkActor tpd2Actor;
X    tpd2Actor SetMapper mapTpd2;
X    [tpd2Actor GetProperty] SetColor 0 0 0;
X
XvtkTransform transP3;
X    transP3 Translate 13.27 0.0 33.30;
X    transP3 Scale 5 5 5;
X    transP3 RotateY 90;
XvtkTransformPolyFilter tpd3
X    tpd3 SetInput [plane GetOutput];
X    tpd3 SetTransform transP3;
XvtkOutlineFilter outTpd3;
X    outTpd3 SetInput [tpd3 GetOutput];
XvtkPolyMapper mapTpd3;
X    mapTpd3 SetInput [outTpd3 GetOutput];
XvtkActor tpd3Actor;
X    tpd3Actor SetMapper mapTpd3;
X    [tpd3Actor GetProperty] SetColor 0 0 0;
X
XvtkAppendPolyData appendF;
X    appendF AddInput [tpd1 GetOutput];
X    appendF AddInput [tpd2 GetOutput];
X    appendF AddInput [tpd3 GetOutput];
X
XvtkProbeFilter probe;
X    probe SetInput [appendF GetOutput];
X    probe SetSource [pl3d GetOutput];
X
XvtkHedgeHog hedgehog;
X    hedgehog SetInput [probe GetOutput];
X    hedgehog SetScaleFactor 0.009;
X
XvtkPolyMapper contourMapper;
X    contourMapper SetInput [hedgehog GetOutput];
X    eval contourMapper SetScalarRange [[pl3d GetOutput] GetScalarRange];
XvtkActor planeActor;
X    planeActor SetMapper contourMapper;
X
XvtkStructuredGridOutlineFilter outline;
X    outline SetInput [pl3d GetOutput];
XvtkPolyMapper outlineMapper;
X    outlineMapper SetInput [outline GetOutput];
XvtkActor outlineActor;
X    outlineActor SetMapper outlineMapper;
X    [outlineActor GetProperty] SetColor 0 0 0;
X
X$ren1 AddActors outlineActor;
X$ren1 AddActors planeActor;
X$ren1 AddActors tpd1Actor;
X$ren1 AddActors tpd2Actor;
X$ren1 AddActors tpd3Actor;
X$ren1 SetBackground 1 1 1;
X$renWin SetSize 500 500;
X$iren Initialize;
X
Xset cam1 [$ren1 GetActiveCamera];
X$cam1 SetClippingRange 3.95297 50;
X$cam1 SetFocalPoint 8.88908 0.595038 29.3342;
X$cam1 SetPosition -12.3332 31.7479 41.2387;
X$cam1 CalcViewPlaneNormal;
X$cam1 SetViewUp 0.060772 -0.319905 0.945498;
X
X# render the image
X#
X$iren SetUserMethod {wm deiconify .vtkInteract};
X$renWin Render;
X
X# prevent the tk window from showing up then start the event loop
Xwm withdraw .
X
X
X
END_OF_FILE
  if test 3367 -ne `wc -c <'probehedge.tcl'`; then
    echo shar: \"'probehedge.tcl'\" unpacked with wrong size!
  fi
  # end of 'probehedge.tcl'
fi
if test -f 'sample.tcl' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'sample.tcl'\"
else
  echo shar: Extracting \"'sample.tcl'\" \(1248 characters\)
  sed "s/^X//" >'sample.tcl' <<'END_OF_FILE'
X# uncomment this line if you are using Windows95/NT
X# load vtktcl;
X# user interface command widget
Xsource /vtk13/examples/vtkInt.tcl
X
X# create a rendering window and renderer
XvtkRenderMaster rm;
Xset renWin [rm MakeRenderWindow];
Xset ren1 [$renWin MakeRenderer];
Xset iren [$renWin MakeRenderWindowInteractor];
X
XvtkQuadric quad;
X  quad SetCoefficients 0.5 1 .2 0 .1 0 0 .2 0 0;
XvtkSampleFunction sample;
X  sample SetSampleDimensions 50 50 50;
X  sample SetImplicitFunction quad;
XvtkContourFilter contours;
X  contours SetInput [sample GetOutput];
X  contours GenerateValues 5 0.0 1.2;
XvtkPolyMapper contMapper;
X  contMapper SetInput [contours GetOutput];
X  contMapper SetScalarRange 0.0 1.2;
XvtkActor contActor;
X  contActor SetMapper contMapper;
X
X# assign our actor to the renderer
X$ren1 SetBackground 1 1 1;
X$ren1 AddActors contActor;
X
X# enable user interface interactor
X$iren SetUserMethod {wm deiconify .vtkInteract};
X$iren Initialize;
X
Xbutton .phred -text stepAnimate -command stepAnimate
Xpack .phred
X
Xproc stepAnimate {} {
X    global renWin;
X
X    for { set i 0.0 } { $i <= 1.2 } { set i [expr $i + 0.2] } {
X	contours GenerateValues 1 $i $i;
X	$renWin Render;
X    }
X}
X
X# prevent the tk window from showing up then start the event loop
X#wm withdraw .
END_OF_FILE
  if test 1248 -ne `wc -c <'sample.tcl'`; then
    echo shar: \"'sample.tcl'\" unpacked with wrong size!
  fi
  # end of 'sample.tcl'
fi
if test -f 'streamline.tcl' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'streamline.tcl'\"
else
  echo shar: Extracting \"'streamline.tcl'\" \(2288 characters\)
  sed "s/^X//" >'streamline.tcl' <<'END_OF_FILE'
X# if you're using windows95/NT, uncomment the next line
X# load vtktcl;
X# get the interactor ui
Xsource vtkInt.tcl
X
X# create planes
X# First create the render master
XvtkRenderMaster rm;
X
X# Now create the RenderWindow, Renderer and both Actors
X#
Xset renWin [rm MakeRenderWindow];
Xset ren1   [$renWin MakeRenderer];
Xset iren [$renWin MakeRenderWindowInteractor];
X
X# create pipeline
X#
XvtkPLOT3DReader pl3d;
X    pl3d SetXYZFilename "combxyz.bin"
X    pl3d SetQFilename "combq.bin"
X    pl3d SetScalarFunctionNumber 100;
X    pl3d SetVectorFunctionNumber 202;
X    pl3d Update;
X
X#note: changing this value in components of 1 resulted in the TCL interpreter
X#      dying a painful death.  Changing the value in the .1 range works,
X#      but sooner or later, you get over 1...
XvtkPointSource seedpts;
X    seedpts SetRadius 1;
X    eval seedpts SetCenter 3 0.5 28;
X    seedpts SetNumberOfPoints 25;
X
X#vtkProbeFilter theProbe;
X#    theProbe SetInput [pl3d GetOutput];
X#    theProbe SetSource [seedpts GetOutput];
X
XvtkStreamLine streamline;
X    streamline SetInput [pl3d GetOutput];
X    streamline SetSource [seedpts GetOutput];
X    streamline SetMaximumPropagationTime 100.0;
X#    streamline SpeedScalarsOn;
X    streamline SetStepLength 0.1;
X    streamline Update;
X
XvtkPolyMapper contourMapper;
X    contourMapper SetInput [streamline GetOutput];
X    eval contourMapper SetScalarRange [[[[pl3d GetOutput] GetPointData] GetScalars] GetRange];
X
XvtkActor planeActor;
X    planeActor SetMapper contourMapper;
X
XvtkStructuredGridOutlineFilter outline;
X    outline SetInput [pl3d GetOutput];
XvtkPolyMapper outlineMapper;
X    outlineMapper SetInput [outline GetOutput];
XvtkActor outlineActor;
X    outlineActor SetMapper outlineMapper;
X    [outlineActor GetProperty] SetColor 0 0 0;
X
X$ren1 AddActors outlineActor;
X$ren1 AddActors planeActor;
X$ren1 SetBackground 1 1 1;
X$renWin SetSize 500 500;
X$iren Initialize;
X
Xset cam1 [$ren1 GetActiveCamera];
X$cam1 SetClippingRange 3.95297 50;
X$cam1 SetFocalPoint 8.88908 0.595038 29.3342;
X$cam1 SetPosition -12.3332 31.7479 41.2387;
X$cam1 CalcViewPlaneNormal;
X$cam1 SetViewUp 0.060772 -0.319905 0.945498;
X
X# render the image
X#
X$iren SetUserMethod {wm deiconify .vtkInteract};
X$renWin Render;
X
X# prevent the tk window from showing up then start the event loop
Xwm withdraw .
X
X
X
END_OF_FILE
  if test 2288 -ne `wc -c <'streamline.tcl'`; then
    echo shar: \"'streamline.tcl'\" unpacked with wrong size!
  fi
  # end of 'streamline.tcl'
fi
echo shar: End of archive.
exit 0

From ???@??? Tue Apr 22 07:44:50 1997
Received: from magritte.its.rpi.edu (youngs3@magritte.its.rpi.edu [128.113.113.19])
	by mail1.its.rpi.edu (8.8.5/8.8.5) with ESMTP id XAA18208
	for <citrit@rpi.edu>; Fri, 18 Apr 1997 23:45:57 -0400
From: Stephen Young <youngs3>
Received: (youngs3@localhost) by magritte.its.rpi.edu (8.6.9/8.6.4) id XAA65898 for citrit@rpi.edu; Fri, 18 Apr 1997 23:45:54 -0400
Date: Fri, 18 Apr 1997 23:45:54 -0400
Message-Id: <199704190345.XAA65898@magritte.its.rpi.edu>
To: citrit@rpi.edu
Subject: Homework 3
X-UIDL: 34b2bf259d6fd96ecff7a0b826b02264

#!/bin/sh
# This is a shell archive (produced by GNU sharutils 4.2).
# To extract the files from this archive, save it to some FILE, remove
# everything before the `!/bin/sh' line above, then type `sh FILE'.
#
# Made on 1997-04-18 23:44 EDT by <youngs3@jec307>.
# Source directory was `/afs/rpi.edu/home/33/youngs3/private/GRAPH_VIS/homework3/backup'.
#
# Existing files will *not* be overwritten unless `-c' is specified.
#
# This shar contains:
# length mode       name
# ------ ---------- ------------------------------------------
#   3632 -rw------- Hedge_probe.tcl
#   1498 -rw------- MRIHead.tcl
#   1505 -rw------- Sample.tcl
#   3871 -rw------- vectorprobe.tcl
#   2212 -rw------- vtkInt.tcl
#   3679 -rw------- warp_probe.tcl
#
save_IFS="${IFS}"
IFS="${IFS}:"
gettext_dir=FAILED
locale_dir=FAILED
first_param="$1"
for dir in $PATH
do
  if test "$gettext_dir" = FAILED && test -f $dir/gettext \
     && ($dir/gettext --version >/dev/null 2>&1)
  then
    set `$dir/gettext --version 2>&1`
    if test "$3" = GNU
    then
      gettext_dir=$dir
    fi
  fi
  if test "$locale_dir" = FAILED && test -f $dir/shar \
     && ($dir/shar --print-text-domain-dir >/dev/null 2>&1)
  then
    locale_dir=`$dir/shar --print-text-domain-dir`
  fi
done
IFS="$save_IFS"
if test "$locale_dir" = FAILED || test "$gettext_dir" = FAILED
then
  echo=echo
else
  TEXTDOMAINDIR=$locale_dir
  export TEXTDOMAINDIR
  TEXTDOMAIN=sharutils
  export TEXTDOMAIN
  echo="$gettext_dir/gettext -s"
fi
touch -am 1231235999 $$.touch >/dev/null 2>&1
if test ! -f 1231235999 && test -f $$.touch; then
  shar_touch=touch
else
  shar_touch=:
  echo
  $echo 'WARNING: not restoring timestamps.  Consider getting and'
  $echo "installing GNU \`touch', distributed in GNU File Utilities..."
  echo
fi
rm -f 1231235999 $$.touch
#
if mkdir _sh28811; then
  $echo 'x -' 'creating lock directory'
else
  $echo 'failed to create lock directory'
  exit 1
fi
# ============= Hedge_probe.tcl ==============
if test -f 'Hedge_probe.tcl' && test "$first_param" != -c; then
  $echo 'x -' SKIPPING 'Hedge_probe.tcl' '(file already exists)'
else
  $echo 'x -' extracting 'Hedge_probe.tcl' '(binary)'
  sed 's/^X//' << 'SHAR_EOF' | uudecode &&
begin 600 Hedge_probe.tcl
M(U-T97!H96X@66]U;F<@($AO;65W;W)K(#,*(TUO9&EF:65D('!R;V)C;VTN
M=&-L(&-O9&4@=VAI8V@@;F]W(&AA<R!A(&AE9&=E:&]G(&9I;'1E<B!A9G1E
M<B!T:&4@"B-P<F]B92!F:6QT97(*"G-O=7)C92!V=&M);G0N=&-L#0H-"B,@
M8W)E871E('!L86YE<PT*(R!&:7)S="!C<F5A=&4@=&AE(')E;F1E<B!M87-T
M97(-"G9T:U)E;F1E<DUA<W1E<B!R;3L-"@T*(R!.;W<@8W)E871E('1H92!2
M96YD97)7:6YD;W<L(%)E;F1E<F5R(&%N9"!B;W1H($%C=&]R<PT*(PT*<V5T
M(')E;E=I;B!;<FT@36%K95)E;F1E<E=I;F1O=UT[#0IS970@<F5N,2`@(%LD
M<F5N5VEN($UA:V5296YD97)E<ET[#0IS970@:7)E;B!;)')E;E=I;B!-86ME
M4F5N9&5R5VEN9&]W26YT97)A8W1O<ET[#0H-"B,@8W)E871E('!I<&5L:6YE
M#0HC#0IV=&M03$]4,T1296%D97(@<&PS9#L-"B`@("!P;#-D(%-E=%A96D9I
M;&5N86UE("(O8V%M<'5S+W9I<W5A;&EZ871I;VXO=G1K+S$N,R]D871A+V-O
M;6)X>7HN8FEN(@T*("`@('!L,V0@4V5T449I;&5N86UE("(O8V%M<'5S+W9I
M<W5A;&EZ871I;VXO=G1K+S$N,R]D871A+V-O;6)Q+F)I;B(-"B`@("!P;#-D
M(%-E=%-C86QA<D9U;F-T:6]N3G5M8F5R(#$P,#L-"B`@("!P;#-D(%-E=%9E
M8W1O<D9U;F-T:6]N3G5M8F5R(#(P,CL-"B`@("!P;#-D(%5P9&%T93L-"@T*
M=G1K4&QA;F53;W5R8V4@<&QA;F4[#0H@("`@<&QA;F4@4V5T4F5S;VQU=&EO
M;B`U,"`U,#L-"G9T:U1R86YS9F]R;2!T<F%N<U`Q.PT*("`@('1R86YS4#$@
M5')A;G-L871E(#,N-R`P+C`@,C@N,S<[#0H@("`@=')A;G-0,2!38V%L92`U
M(#4@-3L-"B`@("!T<F%N<U`Q(%)O=&%T95D@.3`[#0IV=&M4<F%N<V9O<FU0
M;VQY1FEL=&5R('1P9#$-"B`@("!T<&0Q(%-E=$EN<'5T(%MP;&%N92!'971/
M=71P=71=.PT*("`@('1P9#$@4V5T5')A;G-F;W)M('1R86YS4#$[#0IV=&M/
M=71L:6YE1FEL=&5R(&]U=%1P9#$[#0H@("`@;W5T5'!D,2!3971);G!U="!;
M='!D,2!'971/=71P=71=.PT*=G1K4&]L>4UA<'!E<B!M87!4<&0Q.PT*("`@
M(&UA<%1P9#$@4V5T26YP=70@6V]U=%1P9#$@1V5T3W5T<'5T73L-"G9T:T%C
M=&]R('1P9#%!8W1O<CL-"B`@("!T<&0Q06-T;W(@4V5T36%P<&5R(&UA<%1P
M9#$[#0H@("`@6W1P9#%!8W1O<B!'9710<F]P97)T>5T@4V5T0V]L;W(@,"`P
M(#`[#0H-"G9T:U1R86YS9F]R;2!T<F%N<U`R.PT*("`@('1R86YS4#(@5')A
M;G-L871E(#DN,B`P+C`@,S$N,C`[#0H@("`@=')A;G-0,B!38V%L92`U(#4@
M-3L-"B`@("!T<F%N<U`R(%)O=&%T95D@.3`[#0IV=&M4<F%N<V9O<FU0;VQY
M1FEL=&5R('1P9#(-"B`@("!T<&0R(%-E=$EN<'5T(%MP;&%N92!'971/=71P
M=71=.PT*("`@('1P9#(@4V5T5')A;G-F;W)M('1R86YS4#([#0IV=&M/=71L
M:6YE1FEL=&5R(&]U=%1P9#([#0H@("`@;W5T5'!D,B!3971);G!U="!;='!D
M,B!'971/=71P=71=.PT*=G1K4&]L>4UA<'!E<B!M87!4<&0R.PT*("`@(&UA
M<%1P9#(@4V5T26YP=70@6V]U=%1P9#(@1V5T3W5T<'5T73L-"G9T:T%C=&]R
M('1P9#)!8W1O<CL-"B`@("!T<&0R06-T;W(@4V5T36%P<&5R(&UA<%1P9#([
M#0H@("`@6W1P9#)!8W1O<B!'9710<F]P97)T>5T@4V5T0V]L;W(@,"`P(#`[
M#0H-"G9T:U1R86YS9F]R;2!T<F%N<U`S.PT*("`@('1R86YS4#,@5')A;G-L
M871E(#$S+C(W(#`N,"`S,RXS,#L-"B`@("!T<F%N<U`S(%-C86QE(#4@-2`U
M.PT*("`@('1R86YS4#,@4F]T871E62`Y,#L-"G9T:U1R86YS9F]R;5!O;'E&
M:6QT97(@='!D,PT*("`@('1P9#,@4V5T26YP=70@6W!L86YE($=E=$]U='!U
M=%T[#0H@("`@='!D,R!39714<F%N<V9O<FT@=')A;G-0,SL-"G9T:T]U=&QI
M;F5&:6QT97(@;W5T5'!D,SL-"B`@("!O=714<&0S(%-E=$EN<'5T(%MT<&0S
M($=E=$]U='!U=%T[#0IV=&M0;VQY36%P<&5R(&UA<%1P9#,[#0H@("`@;6%P
M5'!D,R!3971);G!U="!;;W5T5'!D,R!'971/=71P=71=.PT*=G1K06-T;W(@
M='!D,T%C=&]R.PT*("`@('1P9#-!8W1O<B!3971-87!P97(@;6%P5'!D,SL-
M"B`@("!;='!D,T%C=&]R($=E=%!R;W!E<G1Y72!3971#;VQO<B`P(#`@,#L-
M"@T*=G1K07!P96YD4&]L>41A=&$@87!P96YD1CL-"B`@("!A<'!E;F1&($%D
M9$EN<'5T(%MT<&0Q($=E=$]U='!U=%T[#0H@("`@87!P96YD1B!!9&1);G!U
M="!;='!D,B!'971/=71P=71=.PT*("`@(&%P<&5N9$8@061D26YP=70@6W1P
M9#,@1V5T3W5T<'5T73L-"@T*=G1K4')O8F5&:6QT97(@<')O8F4[#0H@("`@
M<')O8F4@4V5T26YP=70@6V%P<&5N9$8@1V5T3W5T<'5T73L-"B`@("!P<F]B
M92!39713;W5R8V4@6W!L,V0@1V5T3W5T<'5T73L-"@T*"G9T:TAE9&=E2&]G
M(&AE9&=E7V9I;#L*("`@(&AE9&=E7V9I;"!3971);G!U="!;<')O8F4@1V5T
M3W5T<'5T73L-"B`@("!H961G95]F:6P@4V5T4V-A;&5&86-T;W(@,"XP,0HC
M("`@(&5V86P@:&5D9V5?9FEL($=E;F5R871E5F%L=65S(#4P(%M;<&PS9"!'
M971/=71P=71=($=E=%-C86QA<E)A;F=E73L-"@T*=G1K4&]L>4UA<'!E<B!H
M961G94UA<'!E<CL-"B`@("!H961G94UA<'!E<B!3971);G!U="!;:&5D9V5?
M9FEL($=E=$]U='!U=%T[#0H@("`@979A;"!H961G94UA<'!E<B!397138V%L
M87)286YG92!;6W!L,V0@1V5T3W5T<'5T72!'97138V%L87)286YG95T[#0IV
M=&M!8W1O<B!P;&%N94%C=&]R.PT*("`@('!L86YE06-T;W(@4V5T36%P<&5R
M(&AE9&=E36%P<&5R.PT*#0IV=&M3=')U8W1U<F5D1W)I9$]U=&QI;F5&:6QT
M97(@;W5T;&EN93L-"B`@("!O=71L:6YE(%-E=$EN<'5T(%MP;#-D($=E=$]U
M='!U=%T[#0IV=&M0;VQY36%P<&5R(&]U=&QI;F5-87!P97([#0H@("`@;W5T
M;&EN94UA<'!E<B!3971);G!U="!;;W5T;&EN92!'971/=71P=71=.PT*=G1K
M06-T;W(@;W5T;&EN94%C=&]R.PT*("`@(&]U=&QI;F5!8W1O<B!3971-87!P
M97(@;W5T;&EN94UA<'!E<CL-"B`@("!;;W5T;&EN94%C=&]R($=E=%!R;W!E
M<G1Y72!3971#;VQO<B`P(#`@,#L-"@T*)')E;C$@061D06-T;W)S(&]U=&QI
M;F5!8W1O<CL-"B1R96XQ($%D9$%C=&]R<R!P;&%N94%C=&]R.PT*)')E;C$@
M061D06-T;W)S('1P9#%!8W1O<CL-"B1R96XQ($%D9$%C=&]R<R!T<&0R06-T
M;W([#0HD<F5N,2!!9&1!8W1O<G,@='!D,T%C=&]R.PT*)')E;C$@4V5T0F%C
M:V=R;W5N9"`Q(#$@,3L-"B1R96Y7:6X@4V5T4VEZ92`U,#`@-3`P.PT*)&ER
M96X@26YI=&EA;&EZ93L-"@T*<V5T(&-A;3$@6R1R96XQ($=E=$%C=&EV94-A
M;65R85T[#0HD8V%M,2!3971#;&EP<&EN9U)A;F=E(#,N.34R.3<@-3`[#0HD
M8V%M,2!3971&;V-A;%!O:6YT(#@N.#@Y,#@@,"XU.34P,S@@,CDN,S,T,CL-
M"B1C86TQ(%-E=%!O<VET:6]N("TQ,BXS,S,R(#,Q+C<T-SD@-#$N,C,X-SL-
M"B1C86TQ($-A;&-6:65W4&QA;F5.;W)M86P[#0HD8V%M,2!39716:65W57`@
M,"XP-C`W-S(@+3`N,S$Y.3`U(#`N.30U-#DX.PT*#0HC(')E;F1E<B!T:&4@
M:6UA9V4-"B,-"B1I<F5N(%-E=%5S97)-971H;V0@>W=M(&1E:6-O;FEF>2`N
M=G1K26YT97)A8W1].PT*)')E;E=I;B!296YD97([#0H-"B,@<')E=F5N="!T
M:&4@=&L@=VEN9&]W(&9R;VT@<VAO=VEN9R!U<"!T:&5N('-T87)T('1H92!E
@=F5N="!L;V]P#0IW;2!W:71H9')A=R`N#0H-"@T*#0IN
`
end
SHAR_EOF
  $shar_touch -am 0418233797 'Hedge_probe.tcl' &&
  chmod 0600 'Hedge_probe.tcl' ||
  $echo 'restore of' 'Hedge_probe.tcl' 'failed'
  if ( md5sum --help 2>&1 | grep 'sage: md5sum \[' ) >/dev/null 2>&1 \
  && ( md5sum --version 2>&1 | grep -v 'textutils 1.12' ) >/dev/null; then
    md5sum -c << SHAR_EOF >/dev/null 2>&1 \
    || $echo 'Hedge_probe.tcl:' 'MD5 check failed'
59ea8934d666b4f8e48c3bf9a784129a  Hedge_probe.tcl
SHAR_EOF
  else
    shar_count="`LC_ALL= LC_CTYPE= LANG= wc -c < 'Hedge_probe.tcl'`"
    test 3632 -eq "$shar_count" ||
    $echo 'Hedge_probe.tcl:' 'original size' '3632,' 'current size' "$shar_count!"
  fi
fi
# ============= MRIHead.tcl ==============
if test -f 'MRIHead.tcl' && test "$first_param" != -c; then
  $echo 'x -' SKIPPING 'MRIHead.tcl' '(file already exists)'
else
  $echo 'x -' extracting 'MRIHead.tcl' '(binary)'
  sed 's/^X//' << 'SHAR_EOF' | uudecode &&
begin 600 MRIHead.tcl
M(U-T97!H96X@66]U;F<@+BXN($AO;65W;W)K(#,*(TUO9&EF:65D($U224AE
M860N=&-L($-O9&4@"@H*(R!)9B!Y;W4@87)E('5S:6YG(%=I;F1O=SDU(&%N
M9"!V=&L@,2XS('5N8V]M;65N="!T:&4@;&EN92!B96QO=PT*(R!L;V%D('9T
M:W1C;#L-"@T*(R!G970@=&AE(&EN=&5R86-T;W(@=6D-"G-O=7)C92!V=&M)
M;G0N=&-L#0H-"B,@1FER<W0@8W)E871E('1H92!R96YD97(@;6%S=&5R#0IV
M=&M296YD97)-87-T97(@<FT[#0H-"B,@3F]W(&-R96%T92!T:&4@4F5N9&5R
M5VEN9&]W+"!296YD97)E<@T*(PT*<V5T(')E;E=I;B!;<FT@36%K95)E;F1E
M<E=I;F1O=UT[#0IS970@<F5N,2`@(%LD<F5N5VEN($UA:V5296YD97)E<ET[
M#0IS970@:7)E;B`@(%LD<F5N5VEN($UA:V5296YD97)7:6YD;W=);G1E<F%C
M=&]R73L-"@T*(PT*(R!,;V%D('5P('1H92!D871A#0IV=&M3=')U8W1U<F5D
M4&]I;G1S4F5A9&5R('9O;#L-"B`@("!V;VP@4V5T1FEL96YA;64@(DU2261A
M=&$N=G1K(@T*("`@('9O;"!$96)U9T]N.PT*#0IV=&M-87)C:&EN9T-U8F5S
M(&-O;G1O=7([#0H@(&-O;G1O=7(@4V5T26YP=70@6W9O;"!'971/=71P=71=
M.PT*("!C;VYT;W5R(%-E=%9A;'5E(#`@,C(U+C`[#0H-"G9T:U!O;'E-87!P
M97(@=F]L36%P<&5R.PT*("!V;VQ-87!P97(@4V5T26YP=70@6V-O;G1O=7(@
M1V5T3W5T<'5T73L-"B`@=F]L36%P<&5R(%-C86QA<G-6:7-I8FQE3V9F.PT*
M#0IV=&M!8W1O<B!V;VQ!8W1O<CL-"B`@=F]L06-T;W(@4V5T36%P<&5R('9O
M;$UA<'!E<CL-"@T*=G1K3W5T;&EN949I;'1E<B!O=71,:6YE.PT*("!O=71,
M:6YE(%-E=$EN<'5T(%MV;VP@1V5T3W5T<'5T73L-"@T*=G1K4&]L>4UA<'!E
M<B!O=71-87!P97([#0H@(&]U=$UA<'!E<B!3971);G!U="!;;W5T3&EN92!'
M971/=71P=71=.PT*#0IV=&M!8W1O<B!O=71!8W1O<CL-"B`@;W5T06-T;W(@
M4V5T36%P<&5R(&]U=$UA<'!E<CL-"@T*(R!!9&0@=&AE(&%C=&]R<R!T;R!T
M:&4@<F5N9&5R97(L('-E="!T:&4@8F%C:V=R;W5N9"!A;F0@<VEZ90T*(PT*
M)')E;C$@061D06-T;W)S(&]U=$%C=&]R.PT*)')E;C$@061D06-T;W)S('9O
M;$%C=&]R.PT*)')E;C$@4V5T0F%C:V=R;W5N9"`P(#`@,#L-"CL*(R`@)')E
M;E=I;B!296YD97([)')E;E=I;B!39713:7IE(#4P,"`T,#`[#0HD:7)E;B!)
M;FET:6%L:7IE.PT*#0HC(')E;F1E<B!T:&4@:6UA9V4-"B,-"B1I<F5N(%-E
M=%5S97)-971H;V0@>W=M(&1E:6-O;FEF>2`N=G1K26YT97)A8W1].PT*)')E
M;E=I;B!296YD97([#0H-"@H*(U1H<F]W(&EN(&$@9F]R(&QO;W`@:&5R92`*
M9F]R('MS970@;G5M(#(U,'T@>R1N=6T@/#T@,C`P,'T@>W-E="!N=6T@6V5X
M<'(@)&YU;2LU,%U]('L*8V]N=&]U<B!3971686QU92`P("1N=6T["B1R96Y7
M:6X@4F5N9&5R.PI]"@H*"@HC('!R979E;G0@=&AE('1K('=I;F1O=R!F<F]M
M('-H;W=I;F<@=7`@=&AE;B!S=&%R="!T:&4@979E;G0@;&]O<`T*=VT@=VET
-:&1R87<@+@T*"@H-"FAE
`
end
SHAR_EOF
  $shar_touch -am 0418233897 'MRIHead.tcl' &&
  chmod 0600 'MRIHead.tcl' ||
  $echo 'restore of' 'MRIHead.tcl' 'failed'
  if ( md5sum --help 2>&1 | grep 'sage: md5sum \[' ) >/dev/null 2>&1 \
  && ( md5sum --version 2>&1 | grep -v 'textutils 1.12' ) >/dev/null; then
    md5sum -c << SHAR_EOF >/dev/null 2>&1 \
    || $echo 'MRIHead.tcl:' 'MD5 check failed'
1f230472267e94c2c70244b66c265d0a  MRIHead.tcl
SHAR_EOF
  else
    shar_count="`LC_ALL= LC_CTYPE= LANG= wc -c < 'MRIHead.tcl'`"
    test 1498 -eq "$shar_count" ||
    $echo 'MRIHead.tcl:' 'original size' '1498,' 'current size' "$shar_count!"
  fi
fi
# ============= Sample.tcl ==============
if test -f 'Sample.tcl' && test "$first_param" != -c; then
  $echo 'x -' SKIPPING 'Sample.tcl' '(file already exists)'
else
  $echo 'x -' extracting 'Sample.tcl' '(binary)'
  sed 's/^X//' << 'SHAR_EOF' | uudecode &&
begin 600 Sample.tcl
M(U-T97!H96X@66]U;F<@+BXN($AO;65W;W)K(#,*(TUO9&EF:65D(%-A;7!L
M92YT8VP@8V]D90H*(VQO860@=G1K=&-L.PT*(R!U<V5R(&EN=&5R9F%C92!C
M;VUM86YD('=I9&=E=`T*<V]U<F-E('9T:TEN="YT8VP-"@T*(R!C<F5A=&4@
M82!R96YD97)I;F<@=VEN9&]W(&%N9"!R96YD97)E<@T*=G1K4F5N9&5R36%S
M=&5R(')M.PT*<V5T(')E;E=I;B!;<FT@36%K95)E;F1E<E=I;F1O=UT[#0IS
M970@<F5N,2!;)')E;E=I;B!-86ME4F5N9&5R97)=.PT*<V5T(&ER96X@6R1R
M96Y7:6X@36%K95)E;F1E<E=I;F1O=TEN=&5R86-T;W)=.PT*#0IV=&M1=6%D
M<FEC('%U860[#0H@('%U860@4V5T0V]E9F9I8VEE;G1S(#`N-2`Q("XR(#`@
M+C$@,"`P("XR(#`@,#L-"@IV=&M386UP;&5&=6YC=&EO;B!S86UP;&4[#0H@
M('-A;7!L92!3971386UP;&5$:6UE;G-I;VYS(#4P(#4P(#4P.PT*("!S86UP
M;&4@4V5T26UP;&EC:71&=6YC=&EO;B!Q=6%D.PT*"G9T:T-O;G1O=7)&:6QT
M97(@8V]N=&]U<G,[#0H@(&-O;G1O=7)S(%-E=$EN<'5T(%MS86UP;&4@1V5T
M3W5T<'5T73L-"B`@8V]N=&]U<G,@1V5N97)A=&5686QU97,@-2`P+C`@,2XR
M.PH*=G1K4&]L>4UA<'!E<B!C;VYT36%P<&5R.PT*("!C;VYT36%P<&5R(%-E
M=$EN<'5T(%MC;VYT;W5R<R!'971/=71P=71=.PT*("!C;VYT36%P<&5R(%-E
M=%-C86QA<E)A;F=E(#`N,"`Q+C([#0H*"G9T:T%C=&]R(&-O;G1!8W1O<CL-
M"B`@8V]N=$%C=&]R(%-E=$UA<'!E<B!C;VYT36%P<&5R.PT*#0H*=G1K3W5T
M;&EN949I;'1E<B!O=71L:6YE.PH@(&]U=&QI;F4@4V5T26YP=70@6W-A;7!L
M92!'971/=71P=71=.PH*=G1K4&]L>4UA<'!E<B!O=71L:6YE36%P<&5R.PH@
M(&]U=&QI;F5-87!P97(@4V5T26YP=70@6V]U=&QI;F4@1V5T3W5T<'5T73L*
M"G9T:T%C=&]R(&]U=&QI;F5!8W1O<CL*("!O=71L:6YE06-T;W(@4V5T36%P
M<&5R(&]U=&QI;F5-87!P97(["B`@979A;"!;;W5T;&EN94%C=&]R($=E=%!R
M;W!E<G1Y72!3971#;VQO<B`P(#`@,#L*"@HC(&%S<VEG;B!O=7(@86-T;W(@
M=&\@=&AE(')E;F1E<F5R#0HD<F5N,2!3971"86-K9W)O=6YD(#$@,2`Q.PT*
M)')E;C$@061D06-T;W)S(&-O;G1!8W1O<CL-"B1R96XQ($%D9$%C=&]R<R!O
M=71L:6YE06-T;W(["@HD<F5N5VEN(%)E;F1E<@H-"@HC5&AR;W<@:6X@82!F
M;W(@;&]O<"!H97)E"F9O<B![<V5T(&YU;2`P+C)]('LD;G5M(#P](#8N,'T@
M>W-E="!N=6T@6V5X<'(@)&YU;2LP+C)=?2!["F-O;G1O=7)S($=E;F5R871E
M5F%L=65S(#4@,"XP("1N=6T["B1R96Y7:6X@4F5N9&5R.PI]"@HC(&5N86)L
M92!U<V5R(&EN=&5R9F%C92!I;G1E<F%C=&]R#0HC)&ER96X@4V5T57-E<DUE
M=&AO9"![=VT@9&5I8V]N:69Y("YV=&M);G1E<F%C='T[#0HC)&ER96X@26YI
M=&EA;&EZ93L-"B1I<F5N(%-T87)T.PH-"B,@<')E=F5N="!T:&4@=&L@=VEN
M9&]W(&9R;VT@<VAO=VEN9R!U<"!T:&5N('-T87)T('1H92!E=F5N="!L;V]P
4#0HC=VT@=VET:&1R87<@+@T*#0IT
`
end
SHAR_EOF
  $shar_touch -am 0418233897 'Sample.tcl' &&
  chmod 0600 'Sample.tcl' ||
  $echo 'restore of' 'Sample.tcl' 'failed'
  if ( md5sum --help 2>&1 | grep 'sage: md5sum \[' ) >/dev/null 2>&1 \
  && ( md5sum --version 2>&1 | grep -v 'textutils 1.12' ) >/dev/null; then
    md5sum -c << SHAR_EOF >/dev/null 2>&1 \
    || $echo 'Sample.tcl:' 'MD5 check failed'
30201d1559ad4073c0baa3f174c3116d  Sample.tcl
SHAR_EOF
  else
    shar_count="`LC_ALL= LC_CTYPE= LANG= wc -c < 'Sample.tcl'`"
    test 1505 -eq "$shar_count" ||
    $echo 'Sample.tcl:' 'original size' '1505,' 'current size' "$shar_count!"
  fi
fi
# ============= vectorprobe.tcl ==============
if test -f 'vectorprobe.tcl' && test "$first_param" != -c; then
  $echo 'x -' SKIPPING 'vectorprobe.tcl' '(file already exists)'
else
  $echo 'x -' extracting 'vectorprobe.tcl' '(binary)'
  sed 's/^X//' << 'SHAR_EOF' | uudecode &&
begin 600 vectorprobe.tcl
M(U-T97!H96X@66]U;F<@+BX@2&]M97=O<FL@,PHC36]D:69I960@<')O8F5C
M;VTN=&-L(&-O9&4@=VAI8V@@;F]W(&AA<R!A(%9E8W1O<DYO<FT@9FEL=&5R
M(&%F=&5R('1H92`*(W!R;V)E(&9I;'1E<@H*"G-O=7)C92!V=&M);G0N=&-L
M#0H-"B,@8W)E871E('!L86YE<PT*(R!&:7)S="!C<F5A=&4@=&AE(')E;F1E
M<B!M87-T97(-"G9T:U)E;F1E<DUA<W1E<B!R;3L-"@T*(R!.;W<@8W)E871E
M('1H92!296YD97)7:6YD;W<L(%)E;F1E<F5R(&%N9"!B;W1H($%C=&]R<PT*
M(PT*<V5T(')E;E=I;B!;<FT@36%K95)E;F1E<E=I;F1O=UT[#0IS970@<F5N
M,2`@(%LD<F5N5VEN($UA:V5296YD97)E<ET[#0IS970@:7)E;B!;)')E;E=I
M;B!-86ME4F5N9&5R5VEN9&]W26YT97)A8W1O<ET[#0H-"B,@8W)E871E('!I
M<&5L:6YE#0HC#0IV=&M03$]4,T1296%D97(@<&PS9#L-"B`@("!P;#-D(%-E
M=%A96D9I;&5N86UE("(O8V%M<'5S+W9I<W5A;&EZ871I;VXO=G1K+S$N,R]D
M871A+V-O;6)X>7HN8FEN(@T*("`@('!L,V0@4V5T449I;&5N86UE("(O8V%M
M<'5S+W9I<W5A;&EZ871I;VXO=G1K+S$N,R]D871A+V-O;6)Q+F)I;B(-"B`@
M("!P;#-D(%-E=%-C86QA<D9U;F-T:6]N3G5M8F5R(#$P,#L-"B`@("!P;#-D
M(%-E=%9E8W1O<D9U;F-T:6]N3G5M8F5R(#(P,CL-"B`@("!P;#-D(%5P9&%T
M93L-"@T*=G1K4&QA;F53;W5R8V4@<&QA;F4[#0H@("`@<&QA;F4@4V5T4F5S
M;VQU=&EO;B`U,"`U,#L-"G9T:U1R86YS9F]R;2!T<F%N<U`Q.PT*("`@('1R
M86YS4#$@5')A;G-L871E(#,N-R`P+C`@,C@N,S<[#0H@("`@=')A;G-0,2!3
M8V%L92`U(#4@-3L-"B`@("!T<F%N<U`Q(%)O=&%T95D@.3`[#0IV=&M4<F%N
M<V9O<FU0;VQY1FEL=&5R('1P9#$-"B`@("!T<&0Q(%-E=$EN<'5T(%MP;&%N
M92!'971/=71P=71=.PT*("`@('1P9#$@4V5T5')A;G-F;W)M('1R86YS4#$[
M#0IV=&M/=71L:6YE1FEL=&5R(&]U=%1P9#$[#0H@("`@;W5T5'!D,2!3971)
M;G!U="!;='!D,2!'971/=71P=71=.PT*=G1K4&]L>4UA<'!E<B!M87!4<&0Q
M.PT*("`@(&UA<%1P9#$@4V5T26YP=70@6V]U=%1P9#$@1V5T3W5T<'5T73L-
M"G9T:T%C=&]R('1P9#%!8W1O<CL-"B`@("!T<&0Q06-T;W(@4V5T36%P<&5R
M(&UA<%1P9#$[#0H@("`@6W1P9#%!8W1O<B!'9710<F]P97)T>5T@4V5T0V]L
M;W(@,"`P(#`[#0H-"G9T:U1R86YS9F]R;2!T<F%N<U`R.PT*("`@('1R86YS
M4#(@5')A;G-L871E(#DN,B`P+C`@,S$N,C`[#0H@("`@=')A;G-0,B!38V%L
M92`U(#4@-3L-"B`@("!T<F%N<U`R(%)O=&%T95D@.3`[#0IV=&M4<F%N<V9O
M<FU0;VQY1FEL=&5R('1P9#(-"B`@("!T<&0R(%-E=$EN<'5T(%MP;&%N92!'
M971/=71P=71=.PT*("`@('1P9#(@4V5T5')A;G-F;W)M('1R86YS4#([#0IV
M=&M/=71L:6YE1FEL=&5R(&]U=%1P9#([#0H@("`@;W5T5'!D,B!3971);G!U
M="!;='!D,B!'971/=71P=71=.PT*=G1K4&]L>4UA<'!E<B!M87!4<&0R.PT*
M("`@(&UA<%1P9#(@4V5T26YP=70@6V]U=%1P9#(@1V5T3W5T<'5T73L-"G9T
M:T%C=&]R('1P9#)!8W1O<CL-"B`@("!T<&0R06-T;W(@4V5T36%P<&5R(&UA
M<%1P9#([#0H@("`@6W1P9#)!8W1O<B!'9710<F]P97)T>5T@4V5T0V]L;W(@
M,"`P(#`[#0H-"G9T:U1R86YS9F]R;2!T<F%N<U`S.PT*("`@('1R86YS4#,@
M5')A;G-L871E(#$S+C(W(#`N,"`S,RXS,#L-"B`@("!T<F%N<U`S(%-C86QE
M(#4@-2`U.PT*("`@('1R86YS4#,@4F]T871E62`Y,#L-"G9T:U1R86YS9F]R
M;5!O;'E&:6QT97(@='!D,PT*("`@('1P9#,@4V5T26YP=70@6W!L86YE($=E
M=$]U='!U=%T[#0H@("`@='!D,R!39714<F%N<V9O<FT@=')A;G-0,SL-"G9T
M:T]U=&QI;F5&:6QT97(@;W5T5'!D,SL-"B`@("!O=714<&0S(%-E=$EN<'5T
M(%MT<&0S($=E=$]U='!U=%T[#0IV=&M0;VQY36%P<&5R(&UA<%1P9#,[#0H@
M("`@;6%P5'!D,R!3971);G!U="!;;W5T5'!D,R!'971/=71P=71=.PT*=G1K
M06-T;W(@='!D,T%C=&]R.PT*("`@('1P9#-!8W1O<B!3971-87!P97(@;6%P
M5'!D,SL-"B`@("!;='!D,T%C=&]R($=E=%!R;W!E<G1Y72!3971#;VQO<B`P
M(#`@,#L-"@T*=G1K07!P96YD4&]L>41A=&$@87!P96YD1CL-"B`@("!A<'!E
M;F1&($%D9$EN<'5T(%MT<&0Q($=E=$]U='!U=%T[#0H@("`@87!P96YD1B!!
M9&1);G!U="!;='!D,B!'971/=71P=71=.PT*("`@(&%P<&5N9$8@061D26YP
M=70@6W1P9#,@1V5T3W5T<'5T73L-"@T*=G1K4')O8F5&:6QT97(@<')O8F4[
M#0H@("`@<')O8F4@4V5T26YP=70@6V%P<&5N9$8@1V5T3W5T<'5T73L-"B`@
M("!P<F]B92!39713;W5R8V4@6W!L,V0@1V5T3W5T<'5T73L-"@T*(W9T:T-O
M;G1O=7)&:6QT97(@8V]N=&]U<CL-"B,@("`@8V]N=&]U<B!3971);G!U="!;
M<')O8F4@1V5T3W5T<'5T73L-"B,@("`@979A;"!C;VYT;W5R($=E;F5R871E
M5F%L=65S(#4P(%M;<&PS9"!'971/=71P=71=($=E=%-C86QA<E)A;F=E73L-
M"@T*"G9T:T%P<&5N9$9I;'1E<B!A<F=H.PIA<F=H($%D9$EN<'5T(%MP<F]B
M92!'971/=71P=71=.PH*=G1K5F5C=&]R3F]R;2!B;&5H.PIB;&5H(%-E=$EN
M<'5T(%MA<F=H($=E=$]U='!U=%T["F)L96@@3F]R;6%L:7IE3VX["@HC=G1K
M1&%T85-E=%1O4&]L>49I;'1E<B!C;VYT;W5R.PHC8V]N=&]U<B!3971);G!U
M="!;8FQE:"!'971/=71P=71=.PT*(V5V86P@8V]N=&]U<B!'96YE<F%T959A
M;'5E<R`U,"!;6W!L,V0@1V5T3W5T<'5T72!'97138V%L87)286YG95T[#0H*
M"G9T:T1A=&%3971-87!P97(@8V]N=&]U<DUA<'!E<CL-"F-O;G1O=7)-87!P
M97(@4V5T26YP=70@6V)L96@@1V5T3W5T<'5T73L-"F5V86P@8V]N=&]U<DUA
M<'!E<B!397138V%L87)286YG92!;6W!L,V0@1V5T3W5T<'5T72!'97138V%L
M87)286YG95T[#0IV=&M!8W1O<B!P;&%N94%C=&]R.PT*("`@('!L86YE06-T
M;W(@4V5T36%P<&5R(&-O;G1O=7)-87!P97([#0H-"G9T:U-T<G5C='5R961'
M<FED3W5T;&EN949I;'1E<B!O=71L:6YE.PT*("`@(&]U=&QI;F4@4V5T26YP
M=70@6W!L,V0@1V5T3W5T<'5T73L-"G9T:U!O;'E-87!P97(@;W5T;&EN94UA
M<'!E<CL-"B`@("!O=71L:6YE36%P<&5R(%-E=$EN<'5T(%MO=71L:6YE($=E
M=$]U='!U=%T[#0IV=&M!8W1O<B!O=71L:6YE06-T;W([#0H@("`@;W5T;&EN
M94%C=&]R(%-E=$UA<'!E<B!O=71L:6YE36%P<&5R.PT*("`@(%MO=71L:6YE
M06-T;W(@1V5T4')O<&5R='E=(%-E=$-O;&]R(#`@,"`P.PT*#0HD<F5N,2!!
M9&1!8W1O<G,@;W5T;&EN94%C=&]R.PT*)')E;C$@061D06-T;W)S('!L86YE
M06-T;W([#0HD<F5N,2!!9&1!8W1O<G,@='!D,4%C=&]R.PT*)')E;C$@061D
M06-T;W)S('1P9#)!8W1O<CL-"B1R96XQ($%D9$%C=&]R<R!T<&0S06-T;W([
M#0HD<F5N,2!3971"86-K9W)O=6YD(#$@,2`Q.PT*)')E;E=I;B!39713:7IE
M(#4P,"`U,#`[#0HD:7)E;B!);FET:6%L:7IE.PT*#0IS970@8V%M,2!;)')E
M;C$@1V5T06-T:79E0V%M97)A73L-"B1C86TQ(%-E=$-L:7!P:6YG4F%N9V4@
M,RXY-3(Y-R`U,#L-"B1C86TQ(%-E=$9O8V%L4&]I;G0@."XX.#DP."`P+C4Y
M-3`S."`R.2XS,S0R.PT*)&-A;3$@4V5T4&]S:71I;VX@+3$R+C,S,S(@,S$N
M-S0W.2`T,2XR,S@W.PT*)&-A;3$@0V%L8U9I97=0;&%N94YO<FUA;#L-"B1C
M86TQ(%-E=%9I97=5<"`P+C`V,#<W,B`M,"XS,3DY,#4@,"XY-#4T.3@[#0H-
M"B,@<F5N9&5R('1H92!I;6%G90T*(PT*)&ER96X@4V5T57-E<DUE=&AO9"![
M=VT@9&5I8V]N:69Y("YV=&M);G1E<F%C='T[#0HD<F5N5VEN(%)E;F1E<CL-
M"@T*(R!P<F5V96YT('1H92!T:R!W:6YD;W<@9G)O;2!S:&]W:6YG('5P('1H
M96X@<W1A<G0@=&AE(&5V96YT(&QO;W`-"G=M('=I=&AD<F%W("X-"@T*#0H-
!"FX@
`
end
SHAR_EOF
  $shar_touch -am 0418233897 'vectorprobe.tcl' &&
  chmod 0600 'vectorprobe.tcl' ||
  $echo 'restore of' 'vectorprobe.tcl' 'failed'
  if ( md5sum --help 2>&1 | grep 'sage: md5sum \[' ) >/dev/null 2>&1 \
  && ( md5sum --version 2>&1 | grep -v 'textutils 1.12' ) >/dev/null; then
    md5sum -c << SHAR_EOF >/dev/null 2>&1 \
    || $echo 'vectorprobe.tcl:' 'MD5 check failed'
3e99affb989398fb0e1def68b60e7774  vectorprobe.tcl
SHAR_EOF
  else
    shar_count="`LC_ALL= LC_CTYPE= LANG= wc -c < 'vectorprobe.tcl'`"
    test 3871 -eq "$shar_count" ||
    $echo 'vectorprobe.tcl:' 'original size' '3871,' 'current size' "$shar_count!"
  fi
fi
# ============= vtkInt.tcl ==============
if test -f 'vtkInt.tcl' && test "$first_param" != -c; then
  $echo 'x -' SKIPPING 'vtkInt.tcl' '(file already exists)'
else
  $echo 'x -' extracting 'vtkInt.tcl' '(text)'
  sed 's/^X//' << 'SHAR_EOF' > 'vtkInt.tcl' &&
# a generic interactor for tcl and vtk
#
set vtkInteractBold "-background #43ce80 -relief raised -borderwidth 1"
set vtkInteractNormal "-background #c0c0c0 -relief flat"
set vtkInteractTagcount 1;
X
proc vtkInteract {} {
X
X    proc dovtk {s w} {
X	global vtkInteractBold vtkInteractNormal vtkInteractTagcount;
X	set tag [append tagnum $vtkInteractTagcount];
X	incr vtkInteractTagcount 1;
X	.vtkInteract.text configure -state normal
X	.vtkInteract.text insert end $s $tag
X	eval .vtkInteract.text tag configure $tag $vtkInteractNormal
X	.vtkInteract.text tag bind $tag <Any-Enter> \
X	    ".vtkInteract.text tag configure $tag $vtkInteractBold"
X	.vtkInteract.text tag bind $tag <Any-Leave> \
X	    ".vtkInteract.text tag configure $tag $vtkInteractNormal"
X	.vtkInteract.text tag bind $tag <1> "dovtk [list $s] .vtkInteract";
X	.vtkInteract.text insert end \n; 
X	.vtkInteract.text insert end [uplevel 1 $s]; 
X	.vtkInteract.text insert end \n\n; 
X	.vtkInteract.text configure -state disabled
X	.vtkInteract.text yview end
X    }
X
X    catch {destroy .vtkInteract}
X    toplevel .vtkInteract
X    wm title .vtkInteract "vtk Interactor"
X    wm iconname .vtkInteract "vtk"
X    
X    frame .vtkInteract.buttons
X    pack  .vtkInteract.buttons -side bottom -fill x -pady 2m
X    button .vtkInteract.buttons.dismiss -text Dismiss \
X	-command "wm withdraw .vtkInteract"
X    pack .vtkInteract.buttons.dismiss -side left -expand 1
X    
X    frame .vtkInteract.file
X    label .vtkInteract.file.label -text "Command:" -width 10 -anchor w
X    entry .vtkInteract.file.entry -width 40 
X    bind .vtkInteract.file.entry <Return> {
X	dovtk [%W get] .vtkInteract; %W delete 0 end}
X    pack .vtkInteract.file.label -side left
X    pack .vtkInteract.file.entry -side left -expand 1 -fill x
X    
X    text .vtkInteract.text -yscrollcommand ".vtkInteract.scroll set" \
X	-setgrid true -width 60 -height 8 -wrap word
X    scrollbar .vtkInteract.scroll -command ".vtkInteract.text yview"
X    pack .vtkInteract.scroll -side right -fill y
X    pack .vtkInteract.text -side bottom -expand 1 -fill both
X    pack .vtkInteract.file -pady 3m -padx 2m -side bottom -fill x 
X    
X    .vtkInteract.text configure -state disabled
X    wm withdraw .vtkInteract
}
X
vtkInteract;
X
SHAR_EOF
  $shar_touch -am 0418234097 'vtkInt.tcl' &&
  chmod 0600 'vtkInt.tcl' ||
  $echo 'restore of' 'vtkInt.tcl' 'failed'
  if ( md5sum --help 2>&1 | grep 'sage: md5sum \[' ) >/dev/null 2>&1 \
  && ( md5sum --version 2>&1 | grep -v 'textutils 1.12' ) >/dev/null; then
    md5sum -c << SHAR_EOF >/dev/null 2>&1 \
    || $echo 'vtkInt.tcl:' 'MD5 check failed'
5fbf780b9551e0061c3ab2ae73ab2181  vtkInt.tcl
SHAR_EOF
  else
    shar_count="`LC_ALL= LC_CTYPE= LANG= wc -c < 'vtkInt.tcl'`"
    test 2212 -eq "$shar_count" ||
    $echo 'vtkInt.tcl:' 'original size' '2212,' 'current size' "$shar_count!"
  fi
fi
# ============= warp_probe.tcl ==============
if test -f 'warp_probe.tcl' && test "$first_param" != -c; then
  $echo 'x -' SKIPPING 'warp_probe.tcl' '(file already exists)'
else
  $echo 'x -' extracting 'warp_probe.tcl' '(binary)'
  sed 's/^X//' << 'SHAR_EOF' | uudecode &&
begin 600 warp_probe.tcl
M(U-T97!H96X@66]U;F<*(TAO;65W;W)K(#,*(TUO9&EF:65D('!R;V)E8V]M
M+G1C;"!C;V1E('=H:6-H(&YO=R!H87,@82!W87)P5F5C=&]R(&9I;'1E<B!A
M9G1E<B!T:&4@"B-P<F]B92!F:6QT97(*"@IS;W5R8V4@=G1K26YT+G1C;`T*
M#0HC(&-R96%T92!P;&%N97,-"B,@1FER<W0@8W)E871E('1H92!R96YD97(@
M;6%S=&5R#0IV=&M296YD97)-87-T97(@<FT[#0H-"B,@3F]W(&-R96%T92!T
M:&4@4F5N9&5R5VEN9&]W+"!296YD97)E<B!A;F0@8F]T:"!!8W1O<G,-"B,-
M"G-E="!R96Y7:6X@6W)M($UA:V5296YD97)7:6YD;W==.PT*<V5T(')E;C$@
M("!;)')E;E=I;B!-86ME4F5N9&5R97)=.PT*<V5T(&ER96X@6R1R96Y7:6X@
M36%K95)E;F1E<E=I;F1O=TEN=&5R86-T;W)=.PT*#0HC(&-R96%T92!P:7!E
M;&EN90T*(PT*=G1K4$Q/5#-$4F5A9&5R('!L,V0[#0H@("`@<&PS9"!39718
M65I&:6QE;F%M92`B+V-A;7!U<R]V:7-U86QI>F%T:6]N+W9T:R\Q+C,O9&%T
M82]C;VUB>'EZ+F)I;B(-"B`@("!P;#-D(%-E=%%&:6QE;F%M92`B+V-A;7!U
M<R]V:7-U86QI>F%T:6]N+W9T:R\Q+C,O9&%T82]C;VUB<2YB:6XB#0H@("`@
M<&PS9"!397138V%L87)&=6YC=&EO;DYU;6)E<B`Q,#`[#0H@("`@<&PS9"!3
M971696-T;W)&=6YC=&EO;DYU;6)E<B`R,#([#0H@("`@<&PS9"!5<&1A=&4[
M#0H-"G9T:U!L86YE4V]U<F-E('!L86YE.PT*("`@('!L86YE(%-E=%)E<V]L
M=71I;VX@-3`@-3`[#0IV=&M4<F%N<V9O<FT@=')A;G-0,3L-"B`@("!T<F%N
M<U`Q(%1R86YS;&%T92`S+C<@,"XP(#(X+C,W.PT*("`@('1R86YS4#$@4V-A
M;&4@-2`U(#4[#0H@("`@=')A;G-0,2!2;W1A=&59(#DP.PT*=G1K5')A;G-F
M;W)M4&]L>49I;'1E<B!T<&0Q#0H@("`@='!D,2!3971);G!U="!;<&QA;F4@
M1V5T3W5T<'5T73L-"B`@("!T<&0Q(%-E=%1R86YS9F]R;2!T<F%N<U`Q.PT*
M=G1K3W5T;&EN949I;'1E<B!O=714<&0Q.PT*("`@(&]U=%1P9#$@4V5T26YP
M=70@6W1P9#$@1V5T3W5T<'5T73L-"G9T:U!O;'E-87!P97(@;6%P5'!D,3L-
M"B`@("!M87!4<&0Q(%-E=$EN<'5T(%MO=714<&0Q($=E=$]U='!U=%T[#0IV
M=&M!8W1O<B!T<&0Q06-T;W([#0H@("`@='!D,4%C=&]R(%-E=$UA<'!E<B!M
M87!4<&0Q.PT*("`@(%MT<&0Q06-T;W(@1V5T4')O<&5R='E=(%-E=$-O;&]R
M(#`@,"`P.PT*#0IV=&M4<F%N<V9O<FT@=')A;G-0,CL-"B`@("!T<F%N<U`R
M(%1R86YS;&%T92`Y+C(@,"XP(#,Q+C(P.PT*("`@('1R86YS4#(@4V-A;&4@
M-2`U(#4[#0H@("`@=')A;G-0,B!2;W1A=&59(#DP.PT*=G1K5')A;G-F;W)M
M4&]L>49I;'1E<B!T<&0R#0H@("`@='!D,B!3971);G!U="!;<&QA;F4@1V5T
M3W5T<'5T73L-"B`@("!T<&0R(%-E=%1R86YS9F]R;2!T<F%N<U`R.PT*=G1K
M3W5T;&EN949I;'1E<B!O=714<&0R.PT*("`@(&]U=%1P9#(@4V5T26YP=70@
M6W1P9#(@1V5T3W5T<'5T73L-"G9T:U!O;'E-87!P97(@;6%P5'!D,CL-"B`@
M("!M87!4<&0R(%-E=$EN<'5T(%MO=714<&0R($=E=$]U='!U=%T[#0IV=&M!
M8W1O<B!T<&0R06-T;W([#0H@("`@='!D,D%C=&]R(%-E=$UA<'!E<B!M87!4
M<&0R.PT*("`@(%MT<&0R06-T;W(@1V5T4')O<&5R='E=(%-E=$-O;&]R(#`@
M,"`P.PT*#0IV=&M4<F%N<V9O<FT@=')A;G-0,SL-"B`@("!T<F%N<U`S(%1R
M86YS;&%T92`Q,RXR-R`P+C`@,S,N,S`[#0H@("`@=')A;G-0,R!38V%L92`U
M(#4@-3L-"B`@("!T<F%N<U`S(%)O=&%T95D@.3`[#0IV=&M4<F%N<V9O<FU0
M;VQY1FEL=&5R('1P9#,-"B`@("!T<&0S(%-E=$EN<'5T(%MP;&%N92!'971/
M=71P=71=.PT*("`@('1P9#,@4V5T5')A;G-F;W)M('1R86YS4#,[#0IV=&M/
M=71L:6YE1FEL=&5R(&]U=%1P9#,[#0H@("`@;W5T5'!D,R!3971);G!U="!;
M='!D,R!'971/=71P=71=.PT*=G1K4&]L>4UA<'!E<B!M87!4<&0S.PT*("`@
M(&UA<%1P9#,@4V5T26YP=70@6V]U=%1P9#,@1V5T3W5T<'5T73L-"G9T:T%C
M=&]R('1P9#-!8W1O<CL-"B`@("!T<&0S06-T;W(@4V5T36%P<&5R(&UA<%1P
M9#,[#0H@("`@6W1P9#-!8W1O<B!'9710<F]P97)T>5T@4V5T0V]L;W(@,"`P
M(#`[#0H-"G9T:T%P<&5N9%!O;'E$871A(&%P<&5N9$8[#0H@("`@87!P96YD
M1B!!9&1);G!U="!;='!D,2!'971/=71P=71=.PT*("`@(&%P<&5N9$8@061D
M26YP=70@6W1P9#(@1V5T3W5T<'5T73L-"B`@("!A<'!E;F1&($%D9$EN<'5T
M(%MT<&0S($=E=$]U='!U=%T[#0H-"G9T:U!R;V)E1FEL=&5R('!R;V)E.PT*
M("`@('!R;V)E(%-E=$EN<'5T(%MA<'!E;F1&($=E=$]U='!U=%T[#0H@("`@
M<')O8F4@4V5T4V]U<F-E(%MP;#-D($=E=$]U='!U=%T["@H-"@HC5&AR;W<@
M:6X@86X@87!P96YD($9I;'1E<@IV=&M!<'!E;F1&:6QT97(@9W)O=V8["F=R
M;W=F($%D9$EN<'5T(%MP<F]B92!'971/=71P=71=.PH*(T9E960@=&AE(&]U
M='!U="!O9B!T:&4@87!P96YD($9I;'1E<B!I;G1O('1H92!W87)P5F5C=&]R
M"G9T:U=A<G!696-T;W(@('=A<G`["G=A<G`@4V5T26YP=70@6V=R;W=F($=E
M=$]U='!U=%T["G=A<G`@4V5T4V-A;&5&86-T;W(@,"XP,#<U.PH*#0IV=&M$
M871A4V5T36%P<&5R('=A<G!-87!P97(["B`@("!W87)P36%P<&5R(%-E=$EN
M<'5T(%MW87)P($=E=$]U='!U=%T["B`@("!E=F%L('=A<G!-87!P97(@4V5T
M4V-A;&%R4F%N9V4@6UMP;#-D($=E=$]U='!U=%T@1V5T4V-A;&%R4F%N9V5=
M.R`*"G9T:T%C=&]R('=A<G!!8W1O<CL*("`@('=A<G!!8W1O<B!3971-87!P
M97(@=V%R<$UA<'!E<CL*"@T*=G1K4W1R=6-T=7)E9$=R:61/=71L:6YE1FEL
M=&5R(&]U=&QI;F4[#0H@("`@;W5T;&EN92!3971);G!U="!;<&PS9"!'971/
M=71P=71=.PT*=G1K4&]L>4UA<'!E<B!O=71L:6YE36%P<&5R.PT*("`@(&]U
M=&QI;F5-87!P97(@4V5T26YP=70@6V]U=&QI;F4@1V5T3W5T<'5T73L-"G9T
M:T%C=&]R(&]U=&QI;F5!8W1O<CL-"B`@("!O=71L:6YE06-T;W(@4V5T36%P
M<&5R(&]U=&QI;F5-87!P97([#0H@("`@6V]U=&QI;F5!8W1O<B!'9710<F]P
M97)T>5T@4V5T0V]L;W(@,"`P(#`[#0H-"@H*)')E;C$@061D06-T;W)S(&]U
M=&QI;F5!8W1O<CL-"B1R96XQ($%D9$%C=&]R<R!W87)P06-T;W([#0HD<F5N
M,2!!9&1!8W1O<G,@='!D,4%C=&]R.PT*)')E;C$@061D06-T;W)S('1P9#)!
M8W1O<CL-"B1R96XQ($%D9$%C=&]R<R!T<&0S06-T;W([#0HD<F5N,2!3971"
M86-K9W)O=6YD(#$@,2`Q.PT*)')E;E=I;B!39713:7IE(#4P,"`U,#`[#0HD
M:7)E;B!);FET:6%L:7IE.PT*#0IS970@8V%M,2!;)')E;C$@1V5T06-T:79E
M0V%M97)A73L-"B1C86TQ(%-E=$-L:7!P:6YG4F%N9V4@,RXY-3(Y-R`U,#L-
M"B1C86TQ(%-E=$9O8V%L4&]I;G0@."XX.#DP."`P+C4Y-3`S."`R.2XS,S0R
M.PT*)&-A;3$@4V5T4&]S:71I;VX@+3$R+C,S,S(@,S$N-S0W.2`T,2XR,S@W
M.PT*)&-A;3$@0V%L8U9I97=0;&%N94YO<FUA;#L-"B1C86TQ(%-E=%9I97=5
M<"`P+C`V,#<W,B`M,"XS,3DY,#4@,"XY-#4T.3@[#0H-"B,@<F5N9&5R('1H
M92!I;6%G90T*(PT*)&ER96X@4V5T57-E<DUE=&AO9"![=VT@9&5I8V]N:69Y
M("YV=&M);G1E<F%C='T[#0HD<F5N5VEN(%)E;F1E<CL-"@T*(R!P<F5V96YT
M('1H92!T:R!W:6YD;W<@9G)O;2!S:&]W:6YG('5P('1H96X@<W1A<G0@=&AE
B(&5V96YT(&QO;W`-"G=M('=I=&AD<F%W("X-"@T*#0H-"FX@
`
end
SHAR_EOF
  $shar_touch -am 0418233897 'warp_probe.tcl' &&
  chmod 0600 'warp_probe.tcl' ||
  $echo 'restore of' 'warp_probe.tcl' 'failed'
  if ( md5sum --help 2>&1 | grep 'sage: md5sum \[' ) >/dev/null 2>&1 \
  && ( md5sum --version 2>&1 | grep -v 'textutils 1.12' ) >/dev/null; then
    md5sum -c << SHAR_EOF >/dev/null 2>&1 \
    || $echo 'warp_probe.tcl:' 'MD5 check failed'
367f46a26fab57373ba11c68a1dd725b  warp_probe.tcl
SHAR_EOF
  else
    shar_count="`LC_ALL= LC_CTYPE= LANG= wc -c < 'warp_probe.tcl'`"
    test 3679 -eq "$shar_count" ||
    $echo 'warp_probe.tcl:' 'original size' '3679,' 'current size' "$shar_count!"
  fi
fi
rm -fr _sh28811
exit 0

From ???@??? Tue Apr 22 07:44:51 1997
Received: from magritte.its.rpi.edu (youngs3@magritte.its.rpi.edu [128.113.113.19])
	by mail1.its.rpi.edu (8.8.5/8.8.5) with ESMTP id AAA13850
	for <citrit@rpi.edu>; Sat, 19 Apr 1997 00:25:40 -0400
From: Stephen Young <youngs3>
Received: (youngs3@localhost) by magritte.its.rpi.edu (8.6.9/8.6.4) id AAA145600 for citrit@rpi.edu; Sat, 19 Apr 1997 00:25:37 -0400
Date: Sat, 19 Apr 1997 00:25:37 -0400
Message-Id: <199704190425.AAA145600@magritte.its.rpi.edu>
To: citrit@rpi.edu
Subject: Homework 3 -- resubmission... Xtra Credit Done 15min later
X-UIDL: 47262f7d5a91ecef514bfbe6feb796f8

#!/bin/sh
# This is a shell archive (produced by GNU sharutils 4.2).
# To extract the files from this archive, save it to some FILE, remove
# everything before the `!/bin/sh' line above, then type `sh FILE'.
#
# Made on 1997-04-19 00:23 EDT by <youngs3@jec307>.
# Source directory was `/afs/rpi.edu/home/33/youngs3/private/GRAPH_VIS/homework3/backup/backup2'.
#
# Existing files will *not* be overwritten unless `-c' is specified.
#
# This shar contains:
# length mode       name
# ------ ---------- ------------------------------------------
#   3632 -rw------- Hedge_probe.tcl
#   1498 -rw------- MRIHead.tcl
#   1676 -rw------- MRIdec.tcl
#    824 -rw------- README
#   1505 -rw------- Sample.tcl
#   1624 -rw------- Sample_dec.tcl
#   3871 -rw------- vectorprobe.tcl
#   2212 -rw------- vtkInt.tcl
#   3679 -rw------- warp_probe.tcl
#
save_IFS="${IFS}"
IFS="${IFS}:"
gettext_dir=FAILED
locale_dir=FAILED
first_param="$1"
for dir in $PATH
do
  if test "$gettext_dir" = FAILED && test -f $dir/gettext \
     && ($dir/gettext --version >/dev/null 2>&1)
  then
    set `$dir/gettext --version 2>&1`
    if test "$3" = GNU
    then
      gettext_dir=$dir
    fi
  fi
  if test "$locale_dir" = FAILED && test -f $dir/shar \
     && ($dir/shar --print-text-domain-dir >/dev/null 2>&1)
  then
    locale_dir=`$dir/shar --print-text-domain-dir`
  fi
done
IFS="$save_IFS"
if test "$locale_dir" = FAILED || test "$gettext_dir" = FAILED
then
  echo=echo
else
  TEXTDOMAINDIR=$locale_dir
  export TEXTDOMAINDIR
  TEXTDOMAIN=sharutils
  export TEXTDOMAIN
  echo="$gettext_dir/gettext -s"
fi
touch -am 1231235999 $$.touch >/dev/null 2>&1
if test ! -f 1231235999 && test -f $$.touch; then
  shar_touch=touch
else
  shar_touch=:
  echo
  $echo 'WARNING: not restoring timestamps.  Consider getting and'
  $echo "installing GNU \`touch', distributed in GNU File Utilities..."
  echo
fi
rm -f 1231235999 $$.touch
#
if mkdir _sh29049; then
  $echo 'x -' 'creating lock directory'
else
  $echo 'failed to create lock directory'
  exit 1
fi
# ============= Hedge_probe.tcl ==============
if test -f 'Hedge_probe.tcl' && test "$first_param" != -c; then
  $echo 'x -' SKIPPING 'Hedge_probe.tcl' '(file already exists)'
else
  $echo 'x -' extracting 'Hedge_probe.tcl' '(binary)'
  sed 's/^X//' << 'SHAR_EOF' | uudecode &&
begin 600 Hedge_probe.tcl
M(U-T97!H96X@66]U;F<@($AO;65W;W)K(#,*(TUO9&EF:65D('!R;V)C;VTN
M=&-L(&-O9&4@=VAI8V@@;F]W(&AA<R!A(&AE9&=E:&]G(&9I;'1E<B!A9G1E
M<B!T:&4@"B-P<F]B92!F:6QT97(*"G-O=7)C92!V=&M);G0N=&-L#0H-"B,@
M8W)E871E('!L86YE<PT*(R!&:7)S="!C<F5A=&4@=&AE(')E;F1E<B!M87-T
M97(-"G9T:U)E;F1E<DUA<W1E<B!R;3L-"@T*(R!.;W<@8W)E871E('1H92!2
M96YD97)7:6YD;W<L(%)E;F1E<F5R(&%N9"!B;W1H($%C=&]R<PT*(PT*<V5T
M(')E;E=I;B!;<FT@36%K95)E;F1E<E=I;F1O=UT[#0IS970@<F5N,2`@(%LD
M<F5N5VEN($UA:V5296YD97)E<ET[#0IS970@:7)E;B!;)')E;E=I;B!-86ME
M4F5N9&5R5VEN9&]W26YT97)A8W1O<ET[#0H-"B,@8W)E871E('!I<&5L:6YE
M#0HC#0IV=&M03$]4,T1296%D97(@<&PS9#L-"B`@("!P;#-D(%-E=%A96D9I
M;&5N86UE("(O8V%M<'5S+W9I<W5A;&EZ871I;VXO=G1K+S$N,R]D871A+V-O
M;6)X>7HN8FEN(@T*("`@('!L,V0@4V5T449I;&5N86UE("(O8V%M<'5S+W9I
M<W5A;&EZ871I;VXO=G1K+S$N,R]D871A+V-O;6)Q+F)I;B(-"B`@("!P;#-D
M(%-E=%-C86QA<D9U;F-T:6]N3G5M8F5R(#$P,#L-"B`@("!P;#-D(%-E=%9E
M8W1O<D9U;F-T:6]N3G5M8F5R(#(P,CL-"B`@("!P;#-D(%5P9&%T93L-"@T*
M=G1K4&QA;F53;W5R8V4@<&QA;F4[#0H@("`@<&QA;F4@4V5T4F5S;VQU=&EO
M;B`U,"`U,#L-"G9T:U1R86YS9F]R;2!T<F%N<U`Q.PT*("`@('1R86YS4#$@
M5')A;G-L871E(#,N-R`P+C`@,C@N,S<[#0H@("`@=')A;G-0,2!38V%L92`U
M(#4@-3L-"B`@("!T<F%N<U`Q(%)O=&%T95D@.3`[#0IV=&M4<F%N<V9O<FU0
M;VQY1FEL=&5R('1P9#$-"B`@("!T<&0Q(%-E=$EN<'5T(%MP;&%N92!'971/
M=71P=71=.PT*("`@('1P9#$@4V5T5')A;G-F;W)M('1R86YS4#$[#0IV=&M/
M=71L:6YE1FEL=&5R(&]U=%1P9#$[#0H@("`@;W5T5'!D,2!3971);G!U="!;
M='!D,2!'971/=71P=71=.PT*=G1K4&]L>4UA<'!E<B!M87!4<&0Q.PT*("`@
M(&UA<%1P9#$@4V5T26YP=70@6V]U=%1P9#$@1V5T3W5T<'5T73L-"G9T:T%C
M=&]R('1P9#%!8W1O<CL-"B`@("!T<&0Q06-T;W(@4V5T36%P<&5R(&UA<%1P
M9#$[#0H@("`@6W1P9#%!8W1O<B!'9710<F]P97)T>5T@4V5T0V]L;W(@,"`P
M(#`[#0H-"G9T:U1R86YS9F]R;2!T<F%N<U`R.PT*("`@('1R86YS4#(@5')A
M;G-L871E(#DN,B`P+C`@,S$N,C`[#0H@("`@=')A;G-0,B!38V%L92`U(#4@
M-3L-"B`@("!T<F%N<U`R(%)O=&%T95D@.3`[#0IV=&M4<F%N<V9O<FU0;VQY
M1FEL=&5R('1P9#(-"B`@("!T<&0R(%-E=$EN<'5T(%MP;&%N92!'971/=71P
M=71=.PT*("`@('1P9#(@4V5T5')A;G-F;W)M('1R86YS4#([#0IV=&M/=71L
M:6YE1FEL=&5R(&]U=%1P9#([#0H@("`@;W5T5'!D,B!3971);G!U="!;='!D
M,B!'971/=71P=71=.PT*=G1K4&]L>4UA<'!E<B!M87!4<&0R.PT*("`@(&UA
M<%1P9#(@4V5T26YP=70@6V]U=%1P9#(@1V5T3W5T<'5T73L-"G9T:T%C=&]R
M('1P9#)!8W1O<CL-"B`@("!T<&0R06-T;W(@4V5T36%P<&5R(&UA<%1P9#([
M#0H@("`@6W1P9#)!8W1O<B!'9710<F]P97)T>5T@4V5T0V]L;W(@,"`P(#`[
M#0H-"G9T:U1R86YS9F]R;2!T<F%N<U`S.PT*("`@('1R86YS4#,@5')A;G-L
M871E(#$S+C(W(#`N,"`S,RXS,#L-"B`@("!T<F%N<U`S(%-C86QE(#4@-2`U
M.PT*("`@('1R86YS4#,@4F]T871E62`Y,#L-"G9T:U1R86YS9F]R;5!O;'E&
M:6QT97(@='!D,PT*("`@('1P9#,@4V5T26YP=70@6W!L86YE($=E=$]U='!U
M=%T[#0H@("`@='!D,R!39714<F%N<V9O<FT@=')A;G-0,SL-"G9T:T]U=&QI
M;F5&:6QT97(@;W5T5'!D,SL-"B`@("!O=714<&0S(%-E=$EN<'5T(%MT<&0S
M($=E=$]U='!U=%T[#0IV=&M0;VQY36%P<&5R(&UA<%1P9#,[#0H@("`@;6%P
M5'!D,R!3971);G!U="!;;W5T5'!D,R!'971/=71P=71=.PT*=G1K06-T;W(@
M='!D,T%C=&]R.PT*("`@('1P9#-!8W1O<B!3971-87!P97(@;6%P5'!D,SL-
M"B`@("!;='!D,T%C=&]R($=E=%!R;W!E<G1Y72!3971#;VQO<B`P(#`@,#L-
M"@T*=G1K07!P96YD4&]L>41A=&$@87!P96YD1CL-"B`@("!A<'!E;F1&($%D
M9$EN<'5T(%MT<&0Q($=E=$]U='!U=%T[#0H@("`@87!P96YD1B!!9&1);G!U
M="!;='!D,B!'971/=71P=71=.PT*("`@(&%P<&5N9$8@061D26YP=70@6W1P
M9#,@1V5T3W5T<'5T73L-"@T*=G1K4')O8F5&:6QT97(@<')O8F4[#0H@("`@
M<')O8F4@4V5T26YP=70@6V%P<&5N9$8@1V5T3W5T<'5T73L-"B`@("!P<F]B
M92!39713;W5R8V4@6W!L,V0@1V5T3W5T<'5T73L-"@T*"G9T:TAE9&=E2&]G
M(&AE9&=E7V9I;#L*("`@(&AE9&=E7V9I;"!3971);G!U="!;<')O8F4@1V5T
M3W5T<'5T73L-"B`@("!H961G95]F:6P@4V5T4V-A;&5&86-T;W(@,"XP,0HC
M("`@(&5V86P@:&5D9V5?9FEL($=E;F5R871E5F%L=65S(#4P(%M;<&PS9"!'
M971/=71P=71=($=E=%-C86QA<E)A;F=E73L-"@T*=G1K4&]L>4UA<'!E<B!H
M961G94UA<'!E<CL-"B`@("!H961G94UA<'!E<B!3971);G!U="!;:&5D9V5?
M9FEL($=E=$]U='!U=%T[#0H@("`@979A;"!H961G94UA<'!E<B!397138V%L
M87)286YG92!;6W!L,V0@1V5T3W5T<'5T72!'97138V%L87)286YG95T[#0IV
M=&M!8W1O<B!P;&%N94%C=&]R.PT*("`@('!L86YE06-T;W(@4V5T36%P<&5R
M(&AE9&=E36%P<&5R.PT*#0IV=&M3=')U8W1U<F5D1W)I9$]U=&QI;F5&:6QT
M97(@;W5T;&EN93L-"B`@("!O=71L:6YE(%-E=$EN<'5T(%MP;#-D($=E=$]U
M='!U=%T[#0IV=&M0;VQY36%P<&5R(&]U=&QI;F5-87!P97([#0H@("`@;W5T
M;&EN94UA<'!E<B!3971);G!U="!;;W5T;&EN92!'971/=71P=71=.PT*=G1K
M06-T;W(@;W5T;&EN94%C=&]R.PT*("`@(&]U=&QI;F5!8W1O<B!3971-87!P
M97(@;W5T;&EN94UA<'!E<CL-"B`@("!;;W5T;&EN94%C=&]R($=E=%!R;W!E
M<G1Y72!3971#;VQO<B`P(#`@,#L-"@T*)')E;C$@061D06-T;W)S(&]U=&QI
M;F5!8W1O<CL-"B1R96XQ($%D9$%C=&]R<R!P;&%N94%C=&]R.PT*)')E;C$@
M061D06-T;W)S('1P9#%!8W1O<CL-"B1R96XQ($%D9$%C=&]R<R!T<&0R06-T
M;W([#0HD<F5N,2!!9&1!8W1O<G,@='!D,T%C=&]R.PT*)')E;C$@4V5T0F%C
M:V=R;W5N9"`Q(#$@,3L-"B1R96Y7:6X@4V5T4VEZ92`U,#`@-3`P.PT*)&ER
M96X@26YI=&EA;&EZ93L-"@T*<V5T(&-A;3$@6R1R96XQ($=E=$%C=&EV94-A
M;65R85T[#0HD8V%M,2!3971#;&EP<&EN9U)A;F=E(#,N.34R.3<@-3`[#0HD
M8V%M,2!3971&;V-A;%!O:6YT(#@N.#@Y,#@@,"XU.34P,S@@,CDN,S,T,CL-
M"B1C86TQ(%-E=%!O<VET:6]N("TQ,BXS,S,R(#,Q+C<T-SD@-#$N,C,X-SL-
M"B1C86TQ($-A;&-6:65W4&QA;F5.;W)M86P[#0HD8V%M,2!39716:65W57`@
M,"XP-C`W-S(@+3`N,S$Y.3`U(#`N.30U-#DX.PT*#0HC(')E;F1E<B!T:&4@
M:6UA9V4-"B,-"B1I<F5N(%-E=%5S97)-971H;V0@>W=M(&1E:6-O;FEF>2`N
M=G1K26YT97)A8W1].PT*)')E;E=I;B!296YD97([#0H-"B,@<')E=F5N="!T
M:&4@=&L@=VEN9&]W(&9R;VT@<VAO=VEN9R!U<"!T:&5N('-T87)T('1H92!E
@=F5N="!L;V]P#0IW;2!W:71H9')A=R`N#0H-"@T*#0IN
`
end
SHAR_EOF
  $shar_touch -am 0419001697 'Hedge_probe.tcl' &&
  chmod 0600 'Hedge_probe.tcl' ||
  $echo 'restore of' 'Hedge_probe.tcl' 'failed'
  if ( md5sum --help 2>&1 | grep 'sage: md5sum \[' ) >/dev/null 2>&1 \
  && ( md5sum --version 2>&1 | grep -v 'textutils 1.12' ) >/dev/null; then
    md5sum -c << SHAR_EOF >/dev/null 2>&1 \
    || $echo 'Hedge_probe.tcl:' 'MD5 check failed'
59ea8934d666b4f8e48c3bf9a784129a  Hedge_probe.tcl
SHAR_EOF
  else
    shar_count="`LC_ALL= LC_CTYPE= LANG= wc -c < 'Hedge_probe.tcl'`"
    test 3632 -eq "$shar_count" ||
    $echo 'Hedge_probe.tcl:' 'original size' '3632,' 'current size' "$shar_count!"
  fi
fi
# ============= MRIHead.tcl ==============
if test -f 'MRIHead.tcl' && test "$first_param" != -c; then
  $echo 'x -' SKIPPING 'MRIHead.tcl' '(file already exists)'
else
  $echo 'x -' extracting 'MRIHead.tcl' '(binary)'
  sed 's/^X//' << 'SHAR_EOF' | uudecode &&
begin 600 MRIHead.tcl
M(U-T97!H96X@66]U;F<@+BXN($AO;65W;W)K(#,*(TUO9&EF:65D($U224AE
M860N=&-L($-O9&4@"@H*(R!)9B!Y;W4@87)E('5S:6YG(%=I;F1O=SDU(&%N
M9"!V=&L@,2XS('5N8V]M;65N="!T:&4@;&EN92!B96QO=PT*(R!L;V%D('9T
M:W1C;#L-"@T*(R!G970@=&AE(&EN=&5R86-T;W(@=6D-"G-O=7)C92!V=&M)
M;G0N=&-L#0H-"B,@1FER<W0@8W)E871E('1H92!R96YD97(@;6%S=&5R#0IV
M=&M296YD97)-87-T97(@<FT[#0H-"B,@3F]W(&-R96%T92!T:&4@4F5N9&5R
M5VEN9&]W+"!296YD97)E<@T*(PT*<V5T(')E;E=I;B!;<FT@36%K95)E;F1E
M<E=I;F1O=UT[#0IS970@<F5N,2`@(%LD<F5N5VEN($UA:V5296YD97)E<ET[
M#0IS970@:7)E;B`@(%LD<F5N5VEN($UA:V5296YD97)7:6YD;W=);G1E<F%C
M=&]R73L-"@T*(PT*(R!,;V%D('5P('1H92!D871A#0IV=&M3=')U8W1U<F5D
M4&]I;G1S4F5A9&5R('9O;#L-"B`@("!V;VP@4V5T1FEL96YA;64@(DU2261A
M=&$N=G1K(@T*("`@('9O;"!$96)U9T]N.PT*#0IV=&M-87)C:&EN9T-U8F5S
M(&-O;G1O=7([#0H@(&-O;G1O=7(@4V5T26YP=70@6W9O;"!'971/=71P=71=
M.PT*("!C;VYT;W5R(%-E=%9A;'5E(#`@,C(U+C`[#0H-"G9T:U!O;'E-87!P
M97(@=F]L36%P<&5R.PT*("!V;VQ-87!P97(@4V5T26YP=70@6V-O;G1O=7(@
M1V5T3W5T<'5T73L-"B`@=F]L36%P<&5R(%-C86QA<G-6:7-I8FQE3V9F.PT*
M#0IV=&M!8W1O<B!V;VQ!8W1O<CL-"B`@=F]L06-T;W(@4V5T36%P<&5R('9O
M;$UA<'!E<CL-"@T*=G1K3W5T;&EN949I;'1E<B!O=71,:6YE.PT*("!O=71,
M:6YE(%-E=$EN<'5T(%MV;VP@1V5T3W5T<'5T73L-"@T*=G1K4&]L>4UA<'!E
M<B!O=71-87!P97([#0H@(&]U=$UA<'!E<B!3971);G!U="!;;W5T3&EN92!'
M971/=71P=71=.PT*#0IV=&M!8W1O<B!O=71!8W1O<CL-"B`@;W5T06-T;W(@
M4V5T36%P<&5R(&]U=$UA<'!E<CL-"@T*(R!!9&0@=&AE(&%C=&]R<R!T;R!T
M:&4@<F5N9&5R97(L('-E="!T:&4@8F%C:V=R;W5N9"!A;F0@<VEZ90T*(PT*
M)')E;C$@061D06-T;W)S(&]U=$%C=&]R.PT*)')E;C$@061D06-T;W)S('9O
M;$%C=&]R.PT*)')E;C$@4V5T0F%C:V=R;W5N9"`P(#`@,#L-"CL*(R`@)')E
M;E=I;B!296YD97([)')E;E=I;B!39713:7IE(#4P,"`T,#`[#0HD:7)E;B!)
M;FET:6%L:7IE.PT*#0HC(')E;F1E<B!T:&4@:6UA9V4-"B,-"B1I<F5N(%-E
M=%5S97)-971H;V0@>W=M(&1E:6-O;FEF>2`N=G1K26YT97)A8W1].PT*)')E
M;E=I;B!296YD97([#0H-"@H*(U1H<F]W(&EN(&$@9F]R(&QO;W`@:&5R92`*
M9F]R('MS970@;G5M(#(U,'T@>R1N=6T@/#T@,C`P,'T@>W-E="!N=6T@6V5X
M<'(@)&YU;2LU,%U]('L*8V]N=&]U<B!3971686QU92`P("1N=6T["B1R96Y7
M:6X@4F5N9&5R.PI]"@H*"@HC('!R979E;G0@=&AE('1K('=I;F1O=R!F<F]M
M('-H;W=I;F<@=7`@=&AE;B!S=&%R="!T:&4@979E;G0@;&]O<`T*=VT@=VET
-:&1R87<@+@T*"@H-"FAE
`
end
SHAR_EOF
  $shar_touch -am 0419001697 'MRIHead.tcl' &&
  chmod 0600 'MRIHead.tcl' ||
  $echo 'restore of' 'MRIHead.tcl' 'failed'
  if ( md5sum --help 2>&1 | grep 'sage: md5sum \[' ) >/dev/null 2>&1 \
  && ( md5sum --version 2>&1 | grep -v 'textutils 1.12' ) >/dev/null; then
    md5sum -c << SHAR_EOF >/dev/null 2>&1 \
    || $echo 'MRIHead.tcl:' 'MD5 check failed'
1f230472267e94c2c70244b66c265d0a  MRIHead.tcl
SHAR_EOF
  else
    shar_count="`LC_ALL= LC_CTYPE= LANG= wc -c < 'MRIHead.tcl'`"
    test 1498 -eq "$shar_count" ||
    $echo 'MRIHead.tcl:' 'original size' '1498,' 'current size' "$shar_count!"
  fi
fi
# ============= MRIdec.tcl ==============
if test -f 'MRIdec.tcl' && test "$first_param" != -c; then
  $echo 'x -' SKIPPING 'MRIdec.tcl' '(file already exists)'
else
  $echo 'x -' extracting 'MRIdec.tcl' '(binary)'
  sed 's/^X//' << 'SHAR_EOF' | uudecode &&
begin 600 MRIdec.tcl
M(U-T97!H96X@66]U;F<@+BXN($AO;65W;W)K(#,*(TUO9&EF:65D($U224AE
M860N=&-L($-O9&4@"B-4:&ES(&AA<R!T:&4@9&5C:6UA=&EO;B!C;V1E(&EN
M(&ET('1O;R$*"B,@268@>6]U(&%R92!U<VEN9R!7:6YD;W<Y-2!A;F0@=G1K
M(#$N,R!U;F-O;6UE;G0@=&AE(&QI;F4@8F5L;W<-"B,@;&]A9"!V=&MT8VP[
M#0H-"B,@9V5T('1H92!I;G1E<F%C=&]R('5I#0IS;W5R8V4@=G1K26YT+G1C
M;`T*#0HC($9I<G-T(&-R96%T92!T:&4@<F5N9&5R(&UA<W1E<@T*=G1K4F5N
M9&5R36%S=&5R(')M.PT*#0HC($YO=R!C<F5A=&4@=&AE(%)E;F1E<E=I;F1O
M=RP@4F5N9&5R97(-"B,-"G-E="!R96Y7:6X@6W)M($UA:V5296YD97)7:6YD
M;W==.PT*<V5T(')E;C$@("!;)')E;E=I;B!-86ME4F5N9&5R97)=.PT*<V5T
M(&ER96X@("!;)')E;E=I;B!-86ME4F5N9&5R5VEN9&]W26YT97)A8W1O<ET[
M#0H-"B,-"B,@3&]A9"!U<"!T:&4@9&%T80T*=G1K4W1R=6-T=7)E9%!O:6YT
M<U)E861E<B!V;VP[#0H@("`@=F]L(%-E=$9I;&5N86UE(")-4DED871A+G9T
M:R(-"B`@("!V;VP@1&5B=6=/;CL-"@T*=G1K36%R8VAI;F=#=6)E<R!C;VYT
M;W5R.PT*("!C;VYT;W5R(%-E=$EN<'5T(%MV;VP@1V5T3W5T<'5T73L-"B`@
M8V]N=&]U<B!3971686QU92`P(#(R-2XP.PT*#0H*=G1K5')I86YG;&5&:6QT
M97(@=')A;G-F;W)M.PH@('1R86YS9F]R;2!3971);G!U="!;8V]N=&]U<B!'
M971/=71P=71=.PH*=G1K1&5C:6UA=&4@:VEL;&5R.PH@(&MI;&QE<B!3971)
M;G!U="!;=')A;G-F;W)M($=E=$]U='!U=%T["@IV=&M0;VQY36%P<&5R('9O
M;$UA<'!E<CL-"B`@=F]L36%P<&5R(%-E=$EN<'5T(%MK:6QL97(@1V5T3W5T
M<'5T73L-"B`@=F]L36%P<&5R(%-C86QA<G-6:7-I8FQE3V9F.PT*#0IV=&M!
M8W1O<B!V;VQ!8W1O<CL-"B`@=F]L06-T;W(@4V5T36%P<&5R('9O;$UA<'!E
M<CL-"@T*=G1K3W5T;&EN949I;'1E<B!O=71,:6YE.PT*("!O=71,:6YE(%-E
M=$EN<'5T(%MV;VP@1V5T3W5T<'5T73L-"@T*=G1K4&]L>4UA<'!E<B!O=71-
M87!P97([#0H@(&]U=$UA<'!E<B!3971);G!U="!;;W5T3&EN92!'971/=71P
M=71=.PT*#0IV=&M!8W1O<B!O=71!8W1O<CL-"B`@;W5T06-T;W(@4V5T36%P
M<&5R(&]U=$UA<'!E<CL-"@T*(R!!9&0@=&AE(&%C=&]R<R!T;R!T:&4@<F5N
M9&5R97(L('-E="!T:&4@8F%C:V=R;W5N9"!A;F0@<VEZ90T*(PT*)')E;C$@
M061D06-T;W)S(&]U=$%C=&]R.PT*)')E;C$@061D06-T;W)S('9O;$%C=&]R
M.PT*)')E;C$@4V5T0F%C:V=R;W5N9"`P(#`@,#L-"CL*(R`@)')E;E=I;B!2
M96YD97([)')E;E=I;B!39713:7IE(#4P,"`T,#`[#0HD:7)E;B!);FET:6%L
M:7IE.PT*#0HC(')E;F1E<B!T:&4@:6UA9V4-"B,-"B1I<F5N(%-E=%5S97)-
M971H;V0@>W=M(&1E:6-O;FEF>2`N=G1K26YT97)A8W1].PT*)')E;E=I;B!2
M96YD97([#0H-"@H*(U1H<F]W(&EN(&$@9F]R(&QO;W`@:&5R92`*(V9O<B![
M<V5T(&YU;2`R-3!]('LD;G5M(#P](#(P,#!]('MS970@;G5M(%ME>'!R("1N
M=6TK-3!=?2!["B-C;VYT;W5R(%-E=%9A;'5E(#`@)&YU;3L*(R1R96Y7:6X@
M4F5N9&5R.PHC?0H*"@H*(R!P<F5V96YT('1H92!T:R!W:6YD;W<@9G)O;2!S
M:&]W:6YG('5P('1H96X@<W1A<G0@=&AE(&5V96YT(&QO;W`-"G=M('=I=&AD
+<F%W("X-"@H*#0IH
`
end
SHAR_EOF
  $shar_touch -am 0419001697 'MRIdec.tcl' &&
  chmod 0600 'MRIdec.tcl' ||
  $echo 'restore of' 'MRIdec.tcl' 'failed'
  if ( md5sum --help 2>&1 | grep 'sage: md5sum \[' ) >/dev/null 2>&1 \
  && ( md5sum --version 2>&1 | grep -v 'textutils 1.12' ) >/dev/null; then
    md5sum -c << SHAR_EOF >/dev/null 2>&1 \
    || $echo 'MRIdec.tcl:' 'MD5 check failed'
179aa5ae8b3ffad41ec5c429ee267f20  MRIdec.tcl
SHAR_EOF
  else
    shar_count="`LC_ALL= LC_CTYPE= LANG= wc -c < 'MRIdec.tcl'`"
    test 1676 -eq "$shar_count" ||
    $echo 'MRIdec.tcl:' 'original size' '1676,' 'current size' "$shar_count!"
  fi
fi
# ============= README ==============
if test -f 'README' && test "$first_param" != -c; then
  $echo 'x -' SKIPPING 'README' '(file already exists)'
else
  $echo 'x -' extracting 'README' '(binary)'
  sed 's/^X//' << 'SHAR_EOF' | uudecode &&
begin 600 README
M"@I/:V%Y+BXN('1H92!-4DD@9FEL97,@<W1I;&P@;F5E9"!T:&4@35))9&%T
M82YV=&L@9FEL97,@;V8@8V]U<G-E(&)U="`*:70G<R!A<W-U;65D('1H870@
M=&AO<V4@=VEL;"!B92!S=7!P;&EE9"XN+@H*5&AE(%-A;7!L92!A;F0@35))
M2&5A9"!D96-I;6%T:6]N(&9I;&5S(&%R92!R97-P96-T:79E;'D@;&%B96QE
M9"!-4DED96,N=&-L"F%N9"!386UP;&5?9&5C+G1C;"X@5&AE(&1O(&AA=F4@
M=&AE('-A;64@86YI;6%T:6]N('!O=&5N=&EA;"!A<R!T:&4@"E-A;7!L92YT
M8VP@86YD($U224AE860N=&-L(&)U="!I="!W87,@9&5T97)M:6YE("AB>2!M
M>7-E;&8I('1H870@:70@=V]U;&0*8F4@8F5T=&5R('1O(&AA=F4@=&AE(&%N
M:6UA=&EO;B!I;B!T:&4@9&5C:6UA=&5D(&]N92!T=7)N960@;V9F('-O(&]N
M92`*8V%N('-E92!T:&4@2%5'12!I;7!R;W9E;65N="!I;B!T=7)N:6YG(&%N
M9"!R96YD97)I;F<@971C+@H*5&AA="=S(&%B;W5T(&ET+BXN(%1H92!C;V1E
M(&AE<F4@:7,@<')E='1Y(&UU8V@@8F%S960@;V9F(&]F('1H92!P<F4M97AI
M<W1I;F<*8V]D92!G:79E;B!W:71H(&9E=R!M;V1I9FEC871I;VYS+@H*4W1E
M<&AE;B!9;W5N9PIY;W5N9W,S0')P:2YE9'4*"D9I;FES:&5D(&ES("XN+@H*
M,2!(961G94AO9R!&:6QT97(*,2!696-T;W).;W)M86P@1FEL=&5R"C$@5V%R
M<%9E8W1O<B!&:6QT97(*,2!386UP;&4@+2T@475A9')A=&EC($51($%N:6UA
M=&EO;@HQ($U224AE860@+2T@35))2&5A9"!!;FEM871I;VX*,2!-4DED96,@
M+2T@35))2&5A9"!$96-I;6%T960*,2!386UP;&5?9&5C("TM(%%U861R871I
X.8R!%42!$96-I;6%T961I
`
end
SHAR_EOF
  $shar_touch -am 0419002397 'README' &&
  chmod 0600 'README' ||
  $echo 'restore of' 'README' 'failed'
  if ( md5sum --help 2>&1 | grep 'sage: md5sum \[' ) >/dev/null 2>&1 \
  && ( md5sum --version 2>&1 | grep -v 'textutils 1.12' ) >/dev/null; then
    md5sum -c << SHAR_EOF >/dev/null 2>&1 \
    || $echo 'README:' 'MD5 check failed'
3d0226b3b6b4ba5e40e5ed3855684ad1  README
SHAR_EOF
  else
    shar_count="`LC_ALL= LC_CTYPE= LANG= wc -c < 'README'`"
    test 824 -eq "$shar_count" ||
    $echo 'README:' 'original size' '824,' 'current size' "$shar_count!"
  fi
fi
# ============= Sample.tcl ==============
if test -f 'Sample.tcl' && test "$first_param" != -c; then
  $echo 'x -' SKIPPING 'Sample.tcl' '(file already exists)'
else
  $echo 'x -' extracting 'Sample.tcl' '(binary)'
  sed 's/^X//' << 'SHAR_EOF' | uudecode &&
begin 600 Sample.tcl
M(U-T97!H96X@66]U;F<@+BXN($AO;65W;W)K(#,*(TUO9&EF:65D(%-A;7!L
M92YT8VP@8V]D90H*(VQO860@=G1K=&-L.PT*(R!U<V5R(&EN=&5R9F%C92!C
M;VUM86YD('=I9&=E=`T*<V]U<F-E('9T:TEN="YT8VP-"@T*(R!C<F5A=&4@
M82!R96YD97)I;F<@=VEN9&]W(&%N9"!R96YD97)E<@T*=G1K4F5N9&5R36%S
M=&5R(')M.PT*<V5T(')E;E=I;B!;<FT@36%K95)E;F1E<E=I;F1O=UT[#0IS
M970@<F5N,2!;)')E;E=I;B!-86ME4F5N9&5R97)=.PT*<V5T(&ER96X@6R1R
M96Y7:6X@36%K95)E;F1E<E=I;F1O=TEN=&5R86-T;W)=.PT*#0IV=&M1=6%D
M<FEC('%U860[#0H@('%U860@4V5T0V]E9F9I8VEE;G1S(#`N-2`Q("XR(#`@
M+C$@,"`P("XR(#`@,#L-"@IV=&M386UP;&5&=6YC=&EO;B!S86UP;&4[#0H@
M('-A;7!L92!3971386UP;&5$:6UE;G-I;VYS(#4P(#4P(#4P.PT*("!S86UP
M;&4@4V5T26UP;&EC:71&=6YC=&EO;B!Q=6%D.PT*"G9T:T-O;G1O=7)&:6QT
M97(@8V]N=&]U<G,[#0H@(&-O;G1O=7)S(%-E=$EN<'5T(%MS86UP;&4@1V5T
M3W5T<'5T73L-"B`@8V]N=&]U<G,@1V5N97)A=&5686QU97,@-2`P+C`@,2XR
M.PH*=G1K4&]L>4UA<'!E<B!C;VYT36%P<&5R.PT*("!C;VYT36%P<&5R(%-E
M=$EN<'5T(%MC;VYT;W5R<R!'971/=71P=71=.PT*("!C;VYT36%P<&5R(%-E
M=%-C86QA<E)A;F=E(#`N,"`Q+C([#0H*"G9T:T%C=&]R(&-O;G1!8W1O<CL-
M"B`@8V]N=$%C=&]R(%-E=$UA<'!E<B!C;VYT36%P<&5R.PT*#0H*=G1K3W5T
M;&EN949I;'1E<B!O=71L:6YE.PH@(&]U=&QI;F4@4V5T26YP=70@6W-A;7!L
M92!'971/=71P=71=.PH*=G1K4&]L>4UA<'!E<B!O=71L:6YE36%P<&5R.PH@
M(&]U=&QI;F5-87!P97(@4V5T26YP=70@6V]U=&QI;F4@1V5T3W5T<'5T73L*
M"G9T:T%C=&]R(&]U=&QI;F5!8W1O<CL*("!O=71L:6YE06-T;W(@4V5T36%P
M<&5R(&]U=&QI;F5-87!P97(["B`@979A;"!;;W5T;&EN94%C=&]R($=E=%!R
M;W!E<G1Y72!3971#;VQO<B`P(#`@,#L*"@HC(&%S<VEG;B!O=7(@86-T;W(@
M=&\@=&AE(')E;F1E<F5R#0HD<F5N,2!3971"86-K9W)O=6YD(#$@,2`Q.PT*
M)')E;C$@061D06-T;W)S(&-O;G1!8W1O<CL-"B1R96XQ($%D9$%C=&]R<R!O
M=71L:6YE06-T;W(["@HD<F5N5VEN(%)E;F1E<@H-"@HC5&AR;W<@:6X@82!F
M;W(@;&]O<"!H97)E"F9O<B![<V5T(&YU;2`P+C)]('LD;G5M(#P](#8N,'T@
M>W-E="!N=6T@6V5X<'(@)&YU;2LP+C)=?2!["F-O;G1O=7)S($=E;F5R871E
M5F%L=65S(#4@,"XP("1N=6T["B1R96Y7:6X@4F5N9&5R.PI]"@HC(&5N86)L
M92!U<V5R(&EN=&5R9F%C92!I;G1E<F%C=&]R#0HC)&ER96X@4V5T57-E<DUE
M=&AO9"![=VT@9&5I8V]N:69Y("YV=&M);G1E<F%C='T[#0HC)&ER96X@26YI
M=&EA;&EZ93L-"B1I<F5N(%-T87)T.PH-"B,@<')E=F5N="!T:&4@=&L@=VEN
M9&]W(&9R;VT@<VAO=VEN9R!U<"!T:&5N('-T87)T('1H92!E=F5N="!L;V]P
4#0HC=VT@=VET:&1R87<@+@T*#0IT
`
end
SHAR_EOF
  $shar_touch -am 0419001697 'Sample.tcl' &&
  chmod 0600 'Sample.tcl' ||
  $echo 'restore of' 'Sample.tcl' 'failed'
  if ( md5sum --help 2>&1 | grep 'sage: md5sum \[' ) >/dev/null 2>&1 \
  && ( md5sum --version 2>&1 | grep -v 'textutils 1.12' ) >/dev/null; then
    md5sum -c << SHAR_EOF >/dev/null 2>&1 \
    || $echo 'Sample.tcl:' 'MD5 check failed'
30201d1559ad4073c0baa3f174c3116d  Sample.tcl
SHAR_EOF
  else
    shar_count="`LC_ALL= LC_CTYPE= LANG= wc -c < 'Sample.tcl'`"
    test 1505 -eq "$shar_count" ||
    $echo 'Sample.tcl:' 'original size' '1505,' 'current size' "$shar_count!"
  fi
fi
# ============= Sample_dec.tcl ==============
if test -f 'Sample_dec.tcl' && test "$first_param" != -c; then
  $echo 'x -' SKIPPING 'Sample_dec.tcl' '(file already exists)'
else
  $echo 'x -' extracting 'Sample_dec.tcl' '(binary)'
  sed 's/^X//' << 'SHAR_EOF' | uudecode &&
begin 600 Sample_dec.tcl
M(U-T97!H96X@66]U;F<@+BXN($AO;65W;W)K(#,*(TUO9&EF:65D(%-A;7!L
M92YT8VP@8V]D90H*(VQO860@=G1K=&-L.PT*(R!U<V5R(&EN=&5R9F%C92!C
M;VUM86YD('=I9&=E=`T*<V]U<F-E('9T:TEN="YT8VP-"@T*(R!C<F5A=&4@
M82!R96YD97)I;F<@=VEN9&]W(&%N9"!R96YD97)E<@T*=G1K4F5N9&5R36%S
M=&5R(')M.PT*<V5T(')E;E=I;B!;<FT@36%K95)E;F1E<E=I;F1O=UT[#0IS
M970@<F5N,2!;)')E;E=I;B!-86ME4F5N9&5R97)=.PT*<V5T(&ER96X@6R1R
M96Y7:6X@36%K95)E;F1E<E=I;F1O=TEN=&5R86-T;W)=.PT*#0IV=&M1=6%D
M<FEC('%U860[#0H@('%U860@4V5T0V]E9F9I8VEE;G1S(#`N-2`Q("XR(#`@
M+C$@,"`P("XR(#`@,#L-"@IV=&M386UP;&5&=6YC=&EO;B!S86UP;&4[#0H@
M('-A;7!L92!3971386UP;&5$:6UE;G-I;VYS(#4P(#4P(#4P.PT*("!S86UP
M;&4@4V5T26UP;&EC:71&=6YC=&EO;B!Q=6%D.PT*"G9T:T-O;G1O=7)&:6QT
M97(@8V]N=&]U<G,[#0IC;VYT;W5R<R!3971);G!U="!;<V%M<&QE($=E=$]U
M='!U=%T[#0IC;VYT;W5R<R!'96YE<F%T959A;'5E<R`U(#`N,"`Q+C(["@IV
M=&M4<FEA;F=L949I;'1E<B!A7V9I;#L*85]F:6P@4V5T26YP=70@6V-O;G1O
M=7)S($=E=$]U='!U=%T["B`@"G9T:T1E8VEM871E(&MI;&QE<CL*:VEL;&5R
M(%-E=$EN<'5T(%MA7V9I;"!'971/=71P=71=.PH*=G1K4&]L>4UA<'!E<B!C
M;VYT36%P<&5R.PT*("!C;VYT36%P<&5R(%-E=$EN<'5T(%MK:6QL97(@1V5T
M3W5T<'5T73L-"B`@8V]N=$UA<'!E<B!397138V%L87)286YG92`P+C`@,2XR
M.PT*"@IV=&M!8W1O<B!C;VYT06-T;W([#0H@(&-O;G1!8W1O<B!3971-87!P
M97(@8V]N=$UA<'!E<CL-"@T*"G9T:T]U=&QI;F5&:6QT97(@;W5T;&EN93L*
M("!O=71L:6YE(%-E=$EN<'5T(%MS86UP;&4@1V5T3W5T<'5T73L*"G9T:U!O
M;'E-87!P97(@;W5T;&EN94UA<'!E<CL*("!O=71L:6YE36%P<&5R(%-E=$EN
M<'5T(%MO=71L:6YE($=E=$]U='!U=%T["@IV=&M!8W1O<B!O=71L:6YE06-T
M;W(["B`@;W5T;&EN94%C=&]R(%-E=$UA<'!E<B!O=71L:6YE36%P<&5R.PH@
M(&5V86P@6V]U=&QI;F5!8W1O<B!'9710<F]P97)T>5T@4V5T0V]L;W(@,"`P
M(#`["@H*(R!A<W-I9VX@;W5R(&%C=&]R('1O('1H92!R96YD97)E<@T*)')E
M;C$@4V5T0F%C:V=R;W5N9"`Q(#$@,3L-"B1R96XQ($%D9$%C=&]R<R!C;VYT
M06-T;W([#0HD<F5N,2!!9&1!8W1O<G,@;W5T;&EN94%C=&]R.PH*)')E;E=I
M;B!296YD97(*#0H*(U1H<F]W(&EN(&$@9F]R(&QO;W`@:&5R90HC9F]R('MS
M970@;G5M(#`N,GT@>R1N=6T@/#T@-BXP?2![<V5T(&YU;2!;97AP<B`D;G5M
M*S`N,EU]('L*(V-O;G1O=7)S($=E;F5R871E5F%L=65S(#4@,"XP("1N=6T[
M"B,D<F5N5VEN(%)E;F1E<CL*(WT*"B,@96YA8FQE('5S97(@:6YT97)F86-E
M(&EN=&5R86-T;W(-"B,D:7)E;B!39715<V5R365T:&]D('MW;2!D96EC;VYI
M9GD@+G9T:TEN=&5R86-T?3L-"B,D:7)E;B!);FET:6%L:7IE.PT*)&ER96X@
M4W1A<G0["@T*(R!P<F5V96YT('1H92!T:R!W:6YD;W<@9G)O;2!S:&]W:6YG
M('5P('1H96X@<W1A<G0@=&AE(&5V96YT(&QO;W`-"B-W;2!W:71H9')A=R`N
$#0H-"G1H
`
end
SHAR_EOF
  $shar_touch -am 0419001697 'Sample_dec.tcl' &&
  chmod 0600 'Sample_dec.tcl' ||
  $echo 'restore of' 'Sample_dec.tcl' 'failed'
  if ( md5sum --help 2>&1 | grep 'sage: md5sum \[' ) >/dev/null 2>&1 \
  && ( md5sum --version 2>&1 | grep -v 'textutils 1.12' ) >/dev/null; then
    md5sum -c << SHAR_EOF >/dev/null 2>&1 \
    || $echo 'Sample_dec.tcl:' 'MD5 check failed'
b8da9a9a65d14345c396b98fea9abf06  Sample_dec.tcl
SHAR_EOF
  else
    shar_count="`LC_ALL= LC_CTYPE= LANG= wc -c < 'Sample_dec.tcl'`"
    test 1624 -eq "$shar_count" ||
    $echo 'Sample_dec.tcl:' 'original size' '1624,' 'current size' "$shar_count!"
  fi
fi
# ============= vectorprobe.tcl ==============
if test -f 'vectorprobe.tcl' && test "$first_param" != -c; then
  $echo 'x -' SKIPPING 'vectorprobe.tcl' '(file already exists)'
else
  $echo 'x -' extracting 'vectorprobe.tcl' '(binary)'
  sed 's/^X//' << 'SHAR_EOF' | uudecode &&
begin 600 vectorprobe.tcl
M(U-T97!H96X@66]U;F<@+BX@2&]M97=O<FL@,PHC36]D:69I960@<')O8F5C
M;VTN=&-L(&-O9&4@=VAI8V@@;F]W(&AA<R!A(%9E8W1O<DYO<FT@9FEL=&5R
M(&%F=&5R('1H92`*(W!R;V)E(&9I;'1E<@H*"G-O=7)C92!V=&M);G0N=&-L
M#0H-"B,@8W)E871E('!L86YE<PT*(R!&:7)S="!C<F5A=&4@=&AE(')E;F1E
M<B!M87-T97(-"G9T:U)E;F1E<DUA<W1E<B!R;3L-"@T*(R!.;W<@8W)E871E
M('1H92!296YD97)7:6YD;W<L(%)E;F1E<F5R(&%N9"!B;W1H($%C=&]R<PT*
M(PT*<V5T(')E;E=I;B!;<FT@36%K95)E;F1E<E=I;F1O=UT[#0IS970@<F5N
M,2`@(%LD<F5N5VEN($UA:V5296YD97)E<ET[#0IS970@:7)E;B!;)')E;E=I
M;B!-86ME4F5N9&5R5VEN9&]W26YT97)A8W1O<ET[#0H-"B,@8W)E871E('!I
M<&5L:6YE#0HC#0IV=&M03$]4,T1296%D97(@<&PS9#L-"B`@("!P;#-D(%-E
M=%A96D9I;&5N86UE("(O8V%M<'5S+W9I<W5A;&EZ871I;VXO=G1K+S$N,R]D
M871A+V-O;6)X>7HN8FEN(@T*("`@('!L,V0@4V5T449I;&5N86UE("(O8V%M
M<'5S+W9I<W5A;&EZ871I;VXO=G1K+S$N,R]D871A+V-O;6)Q+F)I;B(-"B`@
M("!P;#-D(%-E=%-C86QA<D9U;F-T:6]N3G5M8F5R(#$P,#L-"B`@("!P;#-D
M(%-E=%9E8W1O<D9U;F-T:6]N3G5M8F5R(#(P,CL-"B`@("!P;#-D(%5P9&%T
M93L-"@T*=G1K4&QA;F53;W5R8V4@<&QA;F4[#0H@("`@<&QA;F4@4V5T4F5S
M;VQU=&EO;B`U,"`U,#L-"G9T:U1R86YS9F]R;2!T<F%N<U`Q.PT*("`@('1R
M86YS4#$@5')A;G-L871E(#,N-R`P+C`@,C@N,S<[#0H@("`@=')A;G-0,2!3
M8V%L92`U(#4@-3L-"B`@("!T<F%N<U`Q(%)O=&%T95D@.3`[#0IV=&M4<F%N
M<V9O<FU0;VQY1FEL=&5R('1P9#$-"B`@("!T<&0Q(%-E=$EN<'5T(%MP;&%N
M92!'971/=71P=71=.PT*("`@('1P9#$@4V5T5')A;G-F;W)M('1R86YS4#$[
M#0IV=&M/=71L:6YE1FEL=&5R(&]U=%1P9#$[#0H@("`@;W5T5'!D,2!3971)
M;G!U="!;='!D,2!'971/=71P=71=.PT*=G1K4&]L>4UA<'!E<B!M87!4<&0Q
M.PT*("`@(&UA<%1P9#$@4V5T26YP=70@6V]U=%1P9#$@1V5T3W5T<'5T73L-
M"G9T:T%C=&]R('1P9#%!8W1O<CL-"B`@("!T<&0Q06-T;W(@4V5T36%P<&5R
M(&UA<%1P9#$[#0H@("`@6W1P9#%!8W1O<B!'9710<F]P97)T>5T@4V5T0V]L
M;W(@,"`P(#`[#0H-"G9T:U1R86YS9F]R;2!T<F%N<U`R.PT*("`@('1R86YS
M4#(@5')A;G-L871E(#DN,B`P+C`@,S$N,C`[#0H@("`@=')A;G-0,B!38V%L
M92`U(#4@-3L-"B`@("!T<F%N<U`R(%)O=&%T95D@.3`[#0IV=&M4<F%N<V9O
M<FU0;VQY1FEL=&5R('1P9#(-"B`@("!T<&0R(%-E=$EN<'5T(%MP;&%N92!'
M971/=71P=71=.PT*("`@('1P9#(@4V5T5')A;G-F;W)M('1R86YS4#([#0IV
M=&M/=71L:6YE1FEL=&5R(&]U=%1P9#([#0H@("`@;W5T5'!D,B!3971);G!U
M="!;='!D,B!'971/=71P=71=.PT*=G1K4&]L>4UA<'!E<B!M87!4<&0R.PT*
M("`@(&UA<%1P9#(@4V5T26YP=70@6V]U=%1P9#(@1V5T3W5T<'5T73L-"G9T
M:T%C=&]R('1P9#)!8W1O<CL-"B`@("!T<&0R06-T;W(@4V5T36%P<&5R(&UA
M<%1P9#([#0H@("`@6W1P9#)!8W1O<B!'9710<F]P97)T>5T@4V5T0V]L;W(@
M,"`P(#`[#0H-"G9T:U1R86YS9F]R;2!T<F%N<U`S.PT*("`@('1R86YS4#,@
M5')A;G-L871E(#$S+C(W(#`N,"`S,RXS,#L-"B`@("!T<F%N<U`S(%-C86QE
M(#4@-2`U.PT*("`@('1R86YS4#,@4F]T871E62`Y,#L-"G9T:U1R86YS9F]R
M;5!O;'E&:6QT97(@='!D,PT*("`@('1P9#,@4V5T26YP=70@6W!L86YE($=E
M=$]U='!U=%T[#0H@("`@='!D,R!39714<F%N<V9O<FT@=')A;G-0,SL-"G9T
M:T]U=&QI;F5&:6QT97(@;W5T5'!D,SL-"B`@("!O=714<&0S(%-E=$EN<'5T
M(%MT<&0S($=E=$]U='!U=%T[#0IV=&M0;VQY36%P<&5R(&UA<%1P9#,[#0H@
M("`@;6%P5'!D,R!3971);G!U="!;;W5T5'!D,R!'971/=71P=71=.PT*=G1K
M06-T;W(@='!D,T%C=&]R.PT*("`@('1P9#-!8W1O<B!3971-87!P97(@;6%P
M5'!D,SL-"B`@("!;='!D,T%C=&]R($=E=%!R;W!E<G1Y72!3971#;VQO<B`P
M(#`@,#L-"@T*=G1K07!P96YD4&]L>41A=&$@87!P96YD1CL-"B`@("!A<'!E
M;F1&($%D9$EN<'5T(%MT<&0Q($=E=$]U='!U=%T[#0H@("`@87!P96YD1B!!
M9&1);G!U="!;='!D,B!'971/=71P=71=.PT*("`@(&%P<&5N9$8@061D26YP
M=70@6W1P9#,@1V5T3W5T<'5T73L-"@T*=G1K4')O8F5&:6QT97(@<')O8F4[
M#0H@("`@<')O8F4@4V5T26YP=70@6V%P<&5N9$8@1V5T3W5T<'5T73L-"B`@
M("!P<F]B92!39713;W5R8V4@6W!L,V0@1V5T3W5T<'5T73L-"@T*(W9T:T-O
M;G1O=7)&:6QT97(@8V]N=&]U<CL-"B,@("`@8V]N=&]U<B!3971);G!U="!;
M<')O8F4@1V5T3W5T<'5T73L-"B,@("`@979A;"!C;VYT;W5R($=E;F5R871E
M5F%L=65S(#4P(%M;<&PS9"!'971/=71P=71=($=E=%-C86QA<E)A;F=E73L-
M"@T*"G9T:T%P<&5N9$9I;'1E<B!A<F=H.PIA<F=H($%D9$EN<'5T(%MP<F]B
M92!'971/=71P=71=.PH*=G1K5F5C=&]R3F]R;2!B;&5H.PIB;&5H(%-E=$EN
M<'5T(%MA<F=H($=E=$]U='!U=%T["F)L96@@3F]R;6%L:7IE3VX["@HC=G1K
M1&%T85-E=%1O4&]L>49I;'1E<B!C;VYT;W5R.PHC8V]N=&]U<B!3971);G!U
M="!;8FQE:"!'971/=71P=71=.PT*(V5V86P@8V]N=&]U<B!'96YE<F%T959A
M;'5E<R`U,"!;6W!L,V0@1V5T3W5T<'5T72!'97138V%L87)286YG95T[#0H*
M"G9T:T1A=&%3971-87!P97(@8V]N=&]U<DUA<'!E<CL-"F-O;G1O=7)-87!P
M97(@4V5T26YP=70@6V)L96@@1V5T3W5T<'5T73L-"F5V86P@8V]N=&]U<DUA
M<'!E<B!397138V%L87)286YG92!;6W!L,V0@1V5T3W5T<'5T72!'97138V%L
M87)286YG95T[#0IV=&M!8W1O<B!P;&%N94%C=&]R.PT*("`@('!L86YE06-T
M;W(@4V5T36%P<&5R(&-O;G1O=7)-87!P97([#0H-"G9T:U-T<G5C='5R961'
M<FED3W5T;&EN949I;'1E<B!O=71L:6YE.PT*("`@(&]U=&QI;F4@4V5T26YP
M=70@6W!L,V0@1V5T3W5T<'5T73L-"G9T:U!O;'E-87!P97(@;W5T;&EN94UA
M<'!E<CL-"B`@("!O=71L:6YE36%P<&5R(%-E=$EN<'5T(%MO=71L:6YE($=E
M=$]U='!U=%T[#0IV=&M!8W1O<B!O=71L:6YE06-T;W([#0H@("`@;W5T;&EN
M94%C=&]R(%-E=$UA<'!E<B!O=71L:6YE36%P<&5R.PT*("`@(%MO=71L:6YE
M06-T;W(@1V5T4')O<&5R='E=(%-E=$-O;&]R(#`@,"`P.PT*#0HD<F5N,2!!
M9&1!8W1O<G,@;W5T;&EN94%C=&]R.PT*)')E;C$@061D06-T;W)S('!L86YE
M06-T;W([#0HD<F5N,2!!9&1!8W1O<G,@='!D,4%C=&]R.PT*)')E;C$@061D
M06-T;W)S('1P9#)!8W1O<CL-"B1R96XQ($%D9$%C=&]R<R!T<&0S06-T;W([
M#0HD<F5N,2!3971"86-K9W)O=6YD(#$@,2`Q.PT*)')E;E=I;B!39713:7IE
M(#4P,"`U,#`[#0HD:7)E;B!);FET:6%L:7IE.PT*#0IS970@8V%M,2!;)')E
M;C$@1V5T06-T:79E0V%M97)A73L-"B1C86TQ(%-E=$-L:7!P:6YG4F%N9V4@
M,RXY-3(Y-R`U,#L-"B1C86TQ(%-E=$9O8V%L4&]I;G0@."XX.#DP."`P+C4Y
M-3`S."`R.2XS,S0R.PT*)&-A;3$@4V5T4&]S:71I;VX@+3$R+C,S,S(@,S$N
M-S0W.2`T,2XR,S@W.PT*)&-A;3$@0V%L8U9I97=0;&%N94YO<FUA;#L-"B1C
M86TQ(%-E=%9I97=5<"`P+C`V,#<W,B`M,"XS,3DY,#4@,"XY-#4T.3@[#0H-
M"B,@<F5N9&5R('1H92!I;6%G90T*(PT*)&ER96X@4V5T57-E<DUE=&AO9"![
M=VT@9&5I8V]N:69Y("YV=&M);G1E<F%C='T[#0HD<F5N5VEN(%)E;F1E<CL-
M"@T*(R!P<F5V96YT('1H92!T:R!W:6YD;W<@9G)O;2!S:&]W:6YG('5P('1H
M96X@<W1A<G0@=&AE(&5V96YT(&QO;W`-"G=M('=I=&AD<F%W("X-"@T*#0H-
!"FX@
`
end
SHAR_EOF
  $shar_touch -am 0419001697 'vectorprobe.tcl' &&
  chmod 0600 'vectorprobe.tcl' ||
  $echo 'restore of' 'vectorprobe.tcl' 'failed'
  if ( md5sum --help 2>&1 | grep 'sage: md5sum \[' ) >/dev/null 2>&1 \
  && ( md5sum --version 2>&1 | grep -v 'textutils 1.12' ) >/dev/null; then
    md5sum -c << SHAR_EOF >/dev/null 2>&1 \
    || $echo 'vectorprobe.tcl:' 'MD5 check failed'
3e99affb989398fb0e1def68b60e7774  vectorprobe.tcl
SHAR_EOF
  else
    shar_count="`LC_ALL= LC_CTYPE= LANG= wc -c < 'vectorprobe.tcl'`"
    test 3871 -eq "$shar_count" ||
    $echo 'vectorprobe.tcl:' 'original size' '3871,' 'current size' "$shar_count!"
  fi
fi
# ============= vtkInt.tcl ==============
if test -f 'vtkInt.tcl' && test "$first_param" != -c; then
  $echo 'x -' SKIPPING 'vtkInt.tcl' '(file already exists)'
else
  $echo 'x -' extracting 'vtkInt.tcl' '(text)'
  sed 's/^X//' << 'SHAR_EOF' > 'vtkInt.tcl' &&
# a generic interactor for tcl and vtk
#
set vtkInteractBold "-background #43ce80 -relief raised -borderwidth 1"
set vtkInteractNormal "-background #c0c0c0 -relief flat"
set vtkInteractTagcount 1;
X
proc vtkInteract {} {
X
X    proc dovtk {s w} {
X	global vtkInteractBold vtkInteractNormal vtkInteractTagcount;
X	set tag [append tagnum $vtkInteractTagcount];
X	incr vtkInteractTagcount 1;
X	.vtkInteract.text configure -state normal
X	.vtkInteract.text insert end $s $tag
X	eval .vtkInteract.text tag configure $tag $vtkInteractNormal
X	.vtkInteract.text tag bind $tag <Any-Enter> \
X	    ".vtkInteract.text tag configure $tag $vtkInteractBold"
X	.vtkInteract.text tag bind $tag <Any-Leave> \
X	    ".vtkInteract.text tag configure $tag $vtkInteractNormal"
X	.vtkInteract.text tag bind $tag <1> "dovtk [list $s] .vtkInteract";
X	.vtkInteract.text insert end \n; 
X	.vtkInteract.text insert end [uplevel 1 $s]; 
X	.vtkInteract.text insert end \n\n; 
X	.vtkInteract.text configure -state disabled
X	.vtkInteract.text yview end
X    }
X
X    catch {destroy .vtkInteract}
X    toplevel .vtkInteract
X    wm title .vtkInteract "vtk Interactor"
X    wm iconname .vtkInteract "vtk"
X    
X    frame .vtkInteract.buttons
X    pack  .vtkInteract.buttons -side bottom -fill x -pady 2m
X    button .vtkInteract.buttons.dismiss -text Dismiss \
X	-command "wm withdraw .vtkInteract"
X    pack .vtkInteract.buttons.dismiss -side left -expand 1
X    
X    frame .vtkInteract.file
X    label .vtkInteract.file.label -text "Command:" -width 10 -anchor w
X    entry .vtkInteract.file.entry -width 40 
X    bind .vtkInteract.file.entry <Return> {
X	dovtk [%W get] .vtkInteract; %W delete 0 end}
X    pack .vtkInteract.file.label -side left
X    pack .vtkInteract.file.entry -side left -expand 1 -fill x
X    
X    text .vtkInteract.text -yscrollcommand ".vtkInteract.scroll set" \
X	-setgrid true -width 60 -height 8 -wrap word
X    scrollbar .vtkInteract.scroll -command ".vtkInteract.text yview"
X    pack .vtkInteract.scroll -side right -fill y
X    pack .vtkInteract.text -side bottom -expand 1 -fill both
X    pack .vtkInteract.file -pady 3m -padx 2m -side bottom -fill x 
X    
X    .vtkInteract.text configure -state disabled
X    wm withdraw .vtkInteract
}
X
vtkInteract;
X
SHAR_EOF
  $shar_touch -am 0419001697 'vtkInt.tcl' &&
  chmod 0600 'vtkInt.tcl' ||
  $echo 'restore of' 'vtkInt.tcl' 'failed'
  if ( md5sum --help 2>&1 | grep 'sage: md5sum \[' ) >/dev/null 2>&1 \
  && ( md5sum --version 2>&1 | grep -v 'textutils 1.12' ) >/dev/null; then
    md5sum -c << SHAR_EOF >/dev/null 2>&1 \
    || $echo 'vtkInt.tcl:' 'MD5 check failed'
5fbf780b9551e0061c3ab2ae73ab2181  vtkInt.tcl
SHAR_EOF
  else
    shar_count="`LC_ALL= LC_CTYPE= LANG= wc -c < 'vtkInt.tcl'`"
    test 2212 -eq "$shar_count" ||
    $echo 'vtkInt.tcl:' 'original size' '2212,' 'current size' "$shar_count!"
  fi
fi
# ============= warp_probe.tcl ==============
if test -f 'warp_probe.tcl' && test "$first_param" != -c; then
  $echo 'x -' SKIPPING 'warp_probe.tcl' '(file already exists)'
else
  $echo 'x -' extracting 'warp_probe.tcl' '(binary)'
  sed 's/^X//' << 'SHAR_EOF' | uudecode &&
begin 600 warp_probe.tcl
M(U-T97!H96X@66]U;F<*(TAO;65W;W)K(#,*(TUO9&EF:65D('!R;V)E8V]M
M+G1C;"!C;V1E('=H:6-H(&YO=R!H87,@82!W87)P5F5C=&]R(&9I;'1E<B!A
M9G1E<B!T:&4@"B-P<F]B92!F:6QT97(*"@IS;W5R8V4@=G1K26YT+G1C;`T*
M#0HC(&-R96%T92!P;&%N97,-"B,@1FER<W0@8W)E871E('1H92!R96YD97(@
M;6%S=&5R#0IV=&M296YD97)-87-T97(@<FT[#0H-"B,@3F]W(&-R96%T92!T
M:&4@4F5N9&5R5VEN9&]W+"!296YD97)E<B!A;F0@8F]T:"!!8W1O<G,-"B,-
M"G-E="!R96Y7:6X@6W)M($UA:V5296YD97)7:6YD;W==.PT*<V5T(')E;C$@
M("!;)')E;E=I;B!-86ME4F5N9&5R97)=.PT*<V5T(&ER96X@6R1R96Y7:6X@
M36%K95)E;F1E<E=I;F1O=TEN=&5R86-T;W)=.PT*#0HC(&-R96%T92!P:7!E
M;&EN90T*(PT*=G1K4$Q/5#-$4F5A9&5R('!L,V0[#0H@("`@<&PS9"!39718
M65I&:6QE;F%M92`B+V-A;7!U<R]V:7-U86QI>F%T:6]N+W9T:R\Q+C,O9&%T
M82]C;VUB>'EZ+F)I;B(-"B`@("!P;#-D(%-E=%%&:6QE;F%M92`B+V-A;7!U
M<R]V:7-U86QI>F%T:6]N+W9T:R\Q+C,O9&%T82]C;VUB<2YB:6XB#0H@("`@
M<&PS9"!397138V%L87)&=6YC=&EO;DYU;6)E<B`Q,#`[#0H@("`@<&PS9"!3
M971696-T;W)&=6YC=&EO;DYU;6)E<B`R,#([#0H@("`@<&PS9"!5<&1A=&4[
M#0H-"G9T:U!L86YE4V]U<F-E('!L86YE.PT*("`@('!L86YE(%-E=%)E<V]L
M=71I;VX@-3`@-3`[#0IV=&M4<F%N<V9O<FT@=')A;G-0,3L-"B`@("!T<F%N
M<U`Q(%1R86YS;&%T92`S+C<@,"XP(#(X+C,W.PT*("`@('1R86YS4#$@4V-A
M;&4@-2`U(#4[#0H@("`@=')A;G-0,2!2;W1A=&59(#DP.PT*=G1K5')A;G-F
M;W)M4&]L>49I;'1E<B!T<&0Q#0H@("`@='!D,2!3971);G!U="!;<&QA;F4@
M1V5T3W5T<'5T73L-"B`@("!T<&0Q(%-E=%1R86YS9F]R;2!T<F%N<U`Q.PT*
M=G1K3W5T;&EN949I;'1E<B!O=714<&0Q.PT*("`@(&]U=%1P9#$@4V5T26YP
M=70@6W1P9#$@1V5T3W5T<'5T73L-"G9T:U!O;'E-87!P97(@;6%P5'!D,3L-
M"B`@("!M87!4<&0Q(%-E=$EN<'5T(%MO=714<&0Q($=E=$]U='!U=%T[#0IV
M=&M!8W1O<B!T<&0Q06-T;W([#0H@("`@='!D,4%C=&]R(%-E=$UA<'!E<B!M
M87!4<&0Q.PT*("`@(%MT<&0Q06-T;W(@1V5T4')O<&5R='E=(%-E=$-O;&]R
M(#`@,"`P.PT*#0IV=&M4<F%N<V9O<FT@=')A;G-0,CL-"B`@("!T<F%N<U`R
M(%1R86YS;&%T92`Y+C(@,"XP(#,Q+C(P.PT*("`@('1R86YS4#(@4V-A;&4@
M-2`U(#4[#0H@("`@=')A;G-0,B!2;W1A=&59(#DP.PT*=G1K5')A;G-F;W)M
M4&]L>49I;'1E<B!T<&0R#0H@("`@='!D,B!3971);G!U="!;<&QA;F4@1V5T
M3W5T<'5T73L-"B`@("!T<&0R(%-E=%1R86YS9F]R;2!T<F%N<U`R.PT*=G1K
M3W5T;&EN949I;'1E<B!O=714<&0R.PT*("`@(&]U=%1P9#(@4V5T26YP=70@
M6W1P9#(@1V5T3W5T<'5T73L-"G9T:U!O;'E-87!P97(@;6%P5'!D,CL-"B`@
M("!M87!4<&0R(%-E=$EN<'5T(%MO=714<&0R($=E=$]U='!U=%T[#0IV=&M!
M8W1O<B!T<&0R06-T;W([#0H@("`@='!D,D%C=&]R(%-E=$UA<'!E<B!M87!4
M<&0R.PT*("`@(%MT<&0R06-T;W(@1V5T4')O<&5R='E=(%-E=$-O;&]R(#`@
M,"`P.PT*#0IV=&M4<F%N<V9O<FT@=')A;G-0,SL-"B`@("!T<F%N<U`S(%1R
M86YS;&%T92`Q,RXR-R`P+C`@,S,N,S`[#0H@("`@=')A;G-0,R!38V%L92`U
M(#4@-3L-"B`@("!T<F%N<U`S(%)O=&%T95D@.3`[#0IV=&M4<F%N<V9O<FU0
M;VQY1FEL=&5R('1P9#,-"B`@("!T<&0S(%-E=$EN<'5T(%MP;&%N92!'971/
M=71P=71=.PT*("`@('1P9#,@4V5T5')A;G-F;W)M('1R86YS4#,[#0IV=&M/
M=71L:6YE1FEL=&5R(&]U=%1P9#,[#0H@("`@;W5T5'!D,R!3971);G!U="!;
M='!D,R!'971/=71P=71=.PT*=G1K4&]L>4UA<'!E<B!M87!4<&0S.PT*("`@
M(&UA<%1P9#,@4V5T26YP=70@6V]U=%1P9#,@1V5T3W5T<'5T73L-"G9T:T%C
M=&]R('1P9#-!8W1O<CL-"B`@("!T<&0S06-T;W(@4V5T36%P<&5R(&UA<%1P
M9#,[#0H@("`@6W1P9#-!8W1O<B!'9710<F]P97)T>5T@4V5T0V]L;W(@,"`P
M(#`[#0H-"G9T:T%P<&5N9%!O;'E$871A(&%P<&5N9$8[#0H@("`@87!P96YD
M1B!!9&1);G!U="!;='!D,2!'971/=71P=71=.PT*("`@(&%P<&5N9$8@061D
M26YP=70@6W1P9#(@1V5T3W5T<'5T73L-"B`@("!A<'!E;F1&($%D9$EN<'5T
M(%MT<&0S($=E=$]U='!U=%T[#0H-"G9T:U!R;V)E1FEL=&5R('!R;V)E.PT*
M("`@('!R;V)E(%-E=$EN<'5T(%MA<'!E;F1&($=E=$]U='!U=%T[#0H@("`@
M<')O8F4@4V5T4V]U<F-E(%MP;#-D($=E=$]U='!U=%T["@H-"@HC5&AR;W<@
M:6X@86X@87!P96YD($9I;'1E<@IV=&M!<'!E;F1&:6QT97(@9W)O=V8["F=R
M;W=F($%D9$EN<'5T(%MP<F]B92!'971/=71P=71=.PH*(T9E960@=&AE(&]U
M='!U="!O9B!T:&4@87!P96YD($9I;'1E<B!I;G1O('1H92!W87)P5F5C=&]R
M"G9T:U=A<G!696-T;W(@('=A<G`["G=A<G`@4V5T26YP=70@6V=R;W=F($=E
M=$]U='!U=%T["G=A<G`@4V5T4V-A;&5&86-T;W(@,"XP,#<U.PH*#0IV=&M$
M871A4V5T36%P<&5R('=A<G!-87!P97(["B`@("!W87)P36%P<&5R(%-E=$EN
M<'5T(%MW87)P($=E=$]U='!U=%T["B`@("!E=F%L('=A<G!-87!P97(@4V5T
M4V-A;&%R4F%N9V4@6UMP;#-D($=E=$]U='!U=%T@1V5T4V-A;&%R4F%N9V5=
M.R`*"G9T:T%C=&]R('=A<G!!8W1O<CL*("`@('=A<G!!8W1O<B!3971-87!P
M97(@=V%R<$UA<'!E<CL*"@T*=G1K4W1R=6-T=7)E9$=R:61/=71L:6YE1FEL
M=&5R(&]U=&QI;F4[#0H@("`@;W5T;&EN92!3971);G!U="!;<&PS9"!'971/
M=71P=71=.PT*=G1K4&]L>4UA<'!E<B!O=71L:6YE36%P<&5R.PT*("`@(&]U
M=&QI;F5-87!P97(@4V5T26YP=70@6V]U=&QI;F4@1V5T3W5T<'5T73L-"G9T
M:T%C=&]R(&]U=&QI;F5!8W1O<CL-"B`@("!O=71L:6YE06-T;W(@4V5T36%P
M<&5R(&]U=&QI;F5-87!P97([#0H@("`@6V]U=&QI;F5!8W1O<B!'9710<F]P
M97)T>5T@4V5T0V]L;W(@,"`P(#`[#0H-"@H*)')E;C$@061D06-T;W)S(&]U
M=&QI;F5!8W1O<CL-"B1R96XQ($%D9$%C=&]R<R!W87)P06-T;W([#0HD<F5N
M,2!!9&1!8W1O<G,@='!D,4%C=&]R.PT*)')E;C$@061D06-T;W)S('1P9#)!
M8W1O<CL-"B1R96XQ($%D9$%C=&]R<R!T<&0S06-T;W([#0HD<F5N,2!3971"
M86-K9W)O=6YD(#$@,2`Q.PT*)')E;E=I;B!39713:7IE(#4P,"`U,#`[#0HD
M:7)E;B!);FET:6%L:7IE.PT*#0IS970@8V%M,2!;)')E;C$@1V5T06-T:79E
M0V%M97)A73L-"B1C86TQ(%-E=$-L:7!P:6YG4F%N9V4@,RXY-3(Y-R`U,#L-
M"B1C86TQ(%-E=$9O8V%L4&]I;G0@."XX.#DP."`P+C4Y-3`S."`R.2XS,S0R
M.PT*)&-A;3$@4V5T4&]S:71I;VX@+3$R+C,S,S(@,S$N-S0W.2`T,2XR,S@W
M.PT*)&-A;3$@0V%L8U9I97=0;&%N94YO<FUA;#L-"B1C86TQ(%-E=%9I97=5
M<"`P+C`V,#<W,B`M,"XS,3DY,#4@,"XY-#4T.3@[#0H-"B,@<F5N9&5R('1H
M92!I;6%G90T*(PT*)&ER96X@4V5T57-E<DUE=&AO9"![=VT@9&5I8V]N:69Y
M("YV=&M);G1E<F%C='T[#0HD<F5N5VEN(%)E;F1E<CL-"@T*(R!P<F5V96YT
M('1H92!T:R!W:6YD;W<@9G)O;2!S:&]W:6YG('5P('1H96X@<W1A<G0@=&AE
B(&5V96YT(&QO;W`-"G=M('=I=&AD<F%W("X-"@T*#0H-"FX@
`
end
SHAR_EOF
  $shar_touch -am 0419001697 'warp_probe.tcl' &&
  chmod 0600 'warp_probe.tcl' ||
  $echo 'restore of' 'warp_probe.tcl' 'failed'
  if ( md5sum --help 2>&1 | grep 'sage: md5sum \[' ) >/dev/null 2>&1 \
  && ( md5sum --version 2>&1 | grep -v 'textutils 1.12' ) >/dev/null; then
    md5sum -c << SHAR_EOF >/dev/null 2>&1 \
    || $echo 'warp_probe.tcl:' 'MD5 check failed'
367f46a26fab57373ba11c68a1dd725b  warp_probe.tcl
SHAR_EOF
  else
    shar_count="`LC_ALL= LC_CTYPE= LANG= wc -c < 'warp_probe.tcl'`"
    test 3679 -eq "$shar_count" ||
    $echo 'warp_probe.tcl:' 'original size' '3679,' 'current size' "$shar_count!"
  fi
fi
rm -fr _sh29049
exit 0

From ???@??? Tue Apr 29 07:39:21 1997
Received: from magritte.its.rpi.edu (platom@magritte.its.rpi.edu [128.113.113.19])
	by mail1.its.rpi.edu (8.8.5/8.8.5) with ESMTP id SAA201784
	for <citrit>; Mon, 28 Apr 1997 18:58:53 -0400
From: Mark Steven Platosh <platom>
Received: (platom@localhost) by magritte.its.rpi.edu (8.6.9/8.6.4) id SAA77990 for citrit; Mon, 28 Apr 1997 18:58:49 -0400
Date: Mon, 28 Apr 1997 18:58:49 -0400
Message-Id: <199704282258.SAA77990@magritte.its.rpi.edu>
To: citrit
X-UIDL: 498ada51f156463f648d4426e2ba4954

#!/bin/sh
# This is a shell archive (produced by GNU sharutils 4.2).
# To extract the files from this archive, save it to some FILE, remove
# everything before the `!/bin/sh' line above, then type `sh FILE'.
#
# Made on 1997-04-15 22:48 EDT by <platom@vccnw07.its.rpi.edu>.
# Source directory was `/afs/rpi.edu/home/08/platom/vis/3-homework/done'.
#
# Existing files will *not* be overwritten unless `-c' is specified.
#
# This shar contains:
# length mode       name
# ------ ---------- ------------------------------------------
#   1381 -rw------- MRIHead.tcl
#   1402 -rw------- Sample.tcl
#   3431 -rw------- hedgehog.tcl
#   3373 -rw------- streamline.tcl
#   3769 -rw------- vectordot.tcl
#   3343 -rw------- vectornorm.tcl
#   3668 -rw------- warpvector.tcl
#
save_IFS="${IFS}"
IFS="${IFS}:"
gettext_dir=FAILED
locale_dir=FAILED
first_param="$1"
for dir in $PATH
do
  if test "$gettext_dir" = FAILED && test -f $dir/gettext \
     && ($dir/gettext --version >/dev/null 2>&1)
  then
    set `$dir/gettext --version 2>&1`
    if test "$3" = GNU
    then
      gettext_dir=$dir
    fi
  fi
  if test "$locale_dir" = FAILED && test -f $dir/shar \
     && ($dir/shar --print-text-domain-dir >/dev/null 2>&1)
  then
    locale_dir=`$dir/shar --print-text-domain-dir`
  fi
done
IFS="$save_IFS"
if test "$locale_dir" = FAILED || test "$gettext_dir" = FAILED
then
  echo=echo
else
  TEXTDOMAINDIR=$locale_dir
  export TEXTDOMAINDIR
  TEXTDOMAIN=sharutils
  export TEXTDOMAIN
  echo="$gettext_dir/gettext -s"
fi
touch -am 1231235999 $$.touch >/dev/null 2>&1
if test ! -f 1231235999 && test -f $$.touch; then
  shar_touch=touch
else
  shar_touch=:
  echo
  $echo 'WARNING: not restoring timestamps.  Consider getting and'
  $echo "installing GNU \`touch', distributed in GNU File Utilities..."
  echo
fi
rm -f 1231235999 $$.touch
#
if mkdir _sh09072; then
  $echo 'x -' 'creating lock directory'
else
  $echo 'failed to create lock directory'
  exit 1
fi
# ============= MRIHead.tcl ==============
if test -f 'MRIHead.tcl' && test "$first_param" != -c; then
  $echo 'x -' SKIPPING 'MRIHead.tcl' '(file already exists)'
else
  $echo 'x -' extracting 'MRIHead.tcl' '(text)'
  sed 's/^X//' << 'SHAR_EOF' > 'MRIHead.tcl' &&
# If you are using Window95 and vtk 1.3 uncomment the line below
# load vtktcl;
X
# get the interactor u
source VTKINT.TCL
X
# First create the render master
vtkRenderMaster rm;
X
# Now create the RenderWindow, Renderer
#
set renWin [rm MakeRenderWindow];
set ren1   [$renWin MakeRenderer];
set iren   [$renWin MakeRenderWindowInteractor];
X
#
# Load up the data
vtkStructuredPointsReader vol;
X    vol SetFilename "MRIdata.vtk"
#    vol DebugOn;
X
X
X
vtkMarchingCubes contour;
X  contour SetInput [vol GetOutput];
X  contour SetValue 0 225.0;
X
vtkDecimate deci;
X  deci SetInput [contour GetOutput];
X
vtkPolyMapper volMapper;
X  volMapper SetInput [deci GetOutput];
X  volMapper ScalarsVisibleOff;
X
vtkActor volActor;
X  volActor SetMapper volMapper;
X
vtkOutlineFilter outLine;
X  outLine SetInput [vol GetOutput];
X
vtkPolyMapper outMapper;
X  outMapper SetInput [outLine GetOutput];
X
vtkActor outActor;
X  outActor SetMapper outMapper;
X
# Add the actors to the renderer, set the background and size
#
$ren1 AddActors outActor;
$ren1 AddActors volActor;
$ren1 SetBackground 0 0 0;
$renWin SetSize 500 400;
$iren Initialize;
X
# render the image
#
$iren SetUserMethod {wm deiconify .vtkInteract};
$renWin Render;
X
for {set i 225} {$i > 0} {set i [expr $i - 1]} {
X    contour SetValue 0 $i;
X    $renWin Render;
X    }
X
# prevent the tk window from showing up then start the event loop
wm withdraw .
X
SHAR_EOF
  $shar_touch -am 0415222297 'MRIHead.tcl' &&
  chmod 0600 'MRIHead.tcl' ||
  $echo 'restore of' 'MRIHead.tcl' 'failed'
  if ( md5sum --help 2>&1 | grep 'sage: md5sum \[' ) >/dev/null 2>&1 \
  && ( md5sum --version 2>&1 | grep -v 'textutils 1.12' ) >/dev/null; then
    md5sum -c << SHAR_EOF >/dev/null 2>&1 \
    || $echo 'MRIHead.tcl:' 'MD5 check failed'
c2ba0ab73047b9b3ff0799b41a4b8570  MRIHead.tcl
SHAR_EOF
  else
    shar_count="`LC_ALL= LC_CTYPE= LANG= wc -c < 'MRIHead.tcl'`"
    test 1381 -eq "$shar_count" ||
    $echo 'MRIHead.tcl:' 'original size' '1381,' 'current size' "$shar_count!"
  fi
fi
# ============= Sample.tcl ==============
if test -f 'Sample.tcl' && test "$first_param" != -c; then
  $echo 'x -' SKIPPING 'Sample.tcl' '(file already exists)'
else
  $echo 'x -' extracting 'Sample.tcl' '(text)'
  sed 's/^X//' << 'SHAR_EOF' > 'Sample.tcl' &&
source VTKINT.TCL
set x 5;
set y 0.0;
set z 1.2;
X
# create a rendering window and renderer
vtkRenderMaster rm;
set renWin [rm MakeRenderWindow];
set ren1 [$renWin MakeRenderer];
set iren [$renWin MakeRenderWindowInteractor];
X
vtkQuadric quad;
X quad SetCoefficients 0.5 1 .2 0 .1 0 0 .2 0 0;
vtkSampleFunction sample;
X  sample SetSampleDimensions 15 15 15;
X  sample SetImplicitFunction quad;
X
vtkContourFilter contours;
X  contours SetInput [sample GetOutput];
X  contours GenerateValues $x $y $z;
X
vtkTriangleFilter tri;
X  tri SetInput [contours GetOutput];
X
vtkDecimate deci;
X  deci SetInput [tri GetOutput];
X
vtkPolyMapper contMapper;
X  contMapper SetInput [deci GetOutput];
X  contMapper SetScalarRange 0.0 1.2;
vtkActor contActor;
X  contActor SetMapper contMapper;
X
# assign our actor to the renderer
$ren1 SetBackground 1 1 1;
$ren1 AddActors contActor;
X
# enable user interface interactor
$iren SetUserMethod {wm deiconify .vtkInteract};
$iren Initialize;
X
#set x 5;
#set y 0.0;
#set z 9.2;
#contours GenerateValues $x $y $z;
#$renWin Render;
X
#proc anim {$renWin $x $y $z} {
X    for {set i 0} {$i < 50} {incr i; incr i} {
X	#$renWin Render;
X	#set $x [expr [llength $x] + $i];
X	set y [expr $y + .1];
X	set z [expr $z + .1];
X	contours GenerateValues $x $y $z;
X	#$contMapper SetScalarRange $y $z;
X	$renWin Render;
X    }
#}
# prevent the tk window from showing up then start the event loop
wm withdraw .
SHAR_EOF
  $shar_touch -am 0415223097 'Sample.tcl' &&
  chmod 0600 'Sample.tcl' ||
  $echo 'restore of' 'Sample.tcl' 'failed'
  if ( md5sum --help 2>&1 | grep 'sage: md5sum \[' ) >/dev/null 2>&1 \
  && ( md5sum --version 2>&1 | grep -v 'textutils 1.12' ) >/dev/null; then
    md5sum -c << SHAR_EOF >/dev/null 2>&1 \
    || $echo 'Sample.tcl:' 'MD5 check failed'
78567d042232717f53931493b4d6d967  Sample.tcl
SHAR_EOF
  else
    shar_count="`LC_ALL= LC_CTYPE= LANG= wc -c < 'Sample.tcl'`"
    test 1402 -eq "$shar_count" ||
    $echo 'Sample.tcl:' 'original size' '1402,' 'current size' "$shar_count!"
  fi
fi
# ============= hedgehog.tcl ==============
if test -f 'hedgehog.tcl' && test "$first_param" != -c; then
  $echo 'x -' SKIPPING 'hedgehog.tcl' '(file already exists)'
else
  $echo 'x -' extracting 'hedgehog.tcl' '(text)'
  sed 's/^X//' << 'SHAR_EOF' > 'hedgehog.tcl' &&
#unommet the line below if you are on Windows95
# load vtktcl;
# get the interactor ui
source VTKINT.TCL
X
# create planes
# First create the render master
vtkRenderMaster rm;
X
# Now create the RenderWindow, Renderer and both Actors
#
set renWin [rm MakeRenderWindow];
set ren1   [$renWin MakeRenderer];
set iren [$renWin MakeRenderWindowInteractor];
X
# create pipeline
#
vtkPLOT3DReader pl3d;
X    pl3d SetXYZFilename "combxyz.bin"
X    pl3d SetQFilename "combq.bin"
X    pl3d SetScalarFunctionNumber 100;
X    pl3d SetVectorFunctionNumber 202;
X    pl3d Update;
X
vtkPlaneSource plane;
X    plane SetResolution 25 25;
vtkTransform transP1;
X    transP1 Translate 3.7 0.0 28.37;
X    transP1 Scale 5 5 5;
X    transP1 RotateY 90;
vtkTransformPolyFilter tpd1
X    tpd1 SetInput [plane GetOutput];
X    tpd1 SetTransform transP1;
vtkOutlineFilter outTpd1;
X    outTpd1 SetInput [tpd1 GetOutput];
vtkPolyMapper mapTpd1;
X    mapTpd1 SetInput [outTpd1 GetOutput];
vtkActor tpd1Actor;
X    tpd1Actor SetMapper mapTpd1;
X    [tpd1Actor GetProperty] SetColor 0 0 0;
X
vtkTransform transP2;
X    transP2 Translate 9.2 0.0 31.20;
X    transP2 Scale 5 5 5;
X    transP2 RotateY 90;
vtkTransformPolyFilter tpd2
X    tpd2 SetInput [plane GetOutput];
X    tpd2 SetTransform transP2;
vtkOutlineFilter outTpd2;
X    outTpd2 SetInput [tpd2 GetOutput];
vtkPolyMapper mapTpd2;
X    mapTpd2 SetInput [outTpd2 GetOutput];
vtkActor tpd2Actor;
X    tpd2Actor SetMapper mapTpd2;
X    [tpd2Actor GetProperty] SetColor 0 0 0;
X
vtkTransform transP3;
X    transP3 Translate 13.27 0.0 33.30;
X    transP3 Scale 5 5 5;
X    transP3 RotateY 90;
vtkTransformPolyFilter tpd3
X    tpd3 SetInput [plane GetOutput];
X    tpd3 SetTransform transP3;
vtkOutlineFilter outTpd3;
X    outTpd3 SetInput [tpd3 GetOutput];
vtkPolyMapper mapTpd3;
X    mapTpd3 SetInput [outTpd3 GetOutput];
vtkActor tpd3Actor;
X    tpd3Actor SetMapper mapTpd3;
X    [tpd3Actor GetProperty] SetColor 0 0 0;
X
vtkAppendPolyData appendF;
X    appendF AddInput [tpd1 GetOutput];
X    appendF AddInput [tpd2 GetOutput];
X    appendF AddInput [tpd3 GetOutput];
X
vtkProbeFilter probe;
X    probe SetInput [appendF GetOutput];
X    probe SetSource [pl3d GetOutput];
X
#vtkVectorNorm contour1;
#	contour1 SetInput [probe GetOutput];
#	contour1 NormalizeOn;
vtkHedgeHog contour;
X    contour SetInput [probe GetOutput];
X    contour SetScaleFactor 0.01;
X
X
vtkPolyMapper contourMapper;
X    contourMapper SetInput [contour GetOutput];
X    eval contourMapper SetScalarRange [[pl3d GetOutput] GetScalarRange];
vtkActor planeActor;
X    planeActor SetMapper contourMapper;
X
vtkStructuredGridOutlineFilter outline;
X    outline SetInput [pl3d GetOutput];
vtkPolyMapper outlineMapper;
X    outlineMapper SetInput [outline GetOutput];
vtkActor outlineActor;
X    outlineActor SetMapper outlineMapper;
X    [outlineActor GetProperty] SetColor 0 0 0;
X
$ren1 AddActors outlineActor;
$ren1 AddActors planeActor;
$ren1 AddActors tpd1Actor;
$ren1 AddActors tpd2Actor;
$ren1 AddActors tpd3Actor;
$ren1 SetBackground 1 1 1;
$renWin SetSize 500 500;
$iren Initialize;
X
set cam1 [$ren1 GetActiveCamera];
$cam1 SetClippingRange 3.95297 50;
$cam1 SetFocalPoint 8.88908 0.595038 29.3342;
$cam1 SetPosition -12.3332 31.7479 41.2387;
$cam1 CalcViewPlaneNormal;
$cam1 SetViewUp 0.060772 -0.319905 0.945498;
X
# render the image
#
$iren SetUserMethod {wm deiconify .vtkInteract};
$renWin Render;
X
# prevent the tk window from showing up then start the event loop
wm withdraw .
X
SHAR_EOF
  $shar_touch -am 0415224497 'hedgehog.tcl' &&
  chmod 0600 'hedgehog.tcl' ||
  $echo 'restore of' 'hedgehog.tcl' 'failed'
  if ( md5sum --help 2>&1 | grep 'sage: md5sum \[' ) >/dev/null 2>&1 \
  && ( md5sum --version 2>&1 | grep -v 'textutils 1.12' ) >/dev/null; then
    md5sum -c << SHAR_EOF >/dev/null 2>&1 \
    || $echo 'hedgehog.tcl:' 'MD5 check failed'
bfa0eb0614ade109b4a3dfe292e45e97  hedgehog.tcl
SHAR_EOF
  else
    shar_count="`LC_ALL= LC_CTYPE= LANG= wc -c < 'hedgehog.tcl'`"
    test 3431 -eq "$shar_count" ||
    $echo 'hedgehog.tcl:' 'original size' '3431,' 'current size' "$shar_count!"
  fi
fi
# ============= streamline.tcl ==============
if test -f 'streamline.tcl' && test "$first_param" != -c; then
  $echo 'x -' SKIPPING 'streamline.tcl' '(file already exists)'
else
  $echo 'x -' extracting 'streamline.tcl' '(text)'
  sed 's/^X//' << 'SHAR_EOF' > 'streamline.tcl' &&
#unommet the line below if you are on Windows95
# load vtktcl;
# get the interactor ui
source VTKINT.TCL
X
# create planes
# First create the render master
vtkRenderMaster rm;
X
# Now create the RenderWindow, Renderer and both Actors
#
set renWin [rm MakeRenderWindow];
set ren1   [$renWin MakeRenderer];
set iren [$renWin MakeRenderWindowInteractor];
X
# create pipeline
#
vtkPLOT3DReader pl3d;
X    pl3d SetXYZFilename "combxyz.bin"
X    pl3d SetQFilename "combq.bin"
X    pl3d SetScalarFunctionNumber 100;
X    pl3d SetVectorFunctionNumber 202;
X    pl3d Update;
X
vtkPlaneSource plane;
X    plane SetResolution 50 50;
vtkTransform transP1;
X    transP1 Translate 3.7 0.0 28.37;
X    transP1 Scale 5 5 5;
X    transP1 RotateY 90;
vtkTransformPolyFilter tpd1
X    tpd1 SetInput [plane GetOutput];
X    tpd1 SetTransform transP1;
vtkOutlineFilter outTpd1;
X    outTpd1 SetInput [tpd1 GetOutput];
vtkPolyMapper mapTpd1;
X    mapTpd1 SetInput [outTpd1 GetOutput];
vtkActor tpd1Actor;
X    tpd1Actor SetMapper mapTpd1;
X    [tpd1Actor GetProperty] SetColor 0 0 0;
X
vtkTransform transP2;
X    transP2 Translate 9.2 0.0 31.20;
X    transP2 Scale 5 5 5;
X    transP2 RotateY 90;
vtkTransformPolyFilter tpd2
X    tpd2 SetInput [plane GetOutput];
X    tpd2 SetTransform transP2;
vtkOutlineFilter outTpd2;
X    outTpd2 SetInput [tpd2 GetOutput];
vtkPolyMapper mapTpd2;
X    mapTpd2 SetInput [outTpd2 GetOutput];
vtkActor tpd2Actor;
X    tpd2Actor SetMapper mapTpd2;
X    [tpd2Actor GetProperty] SetColor 0 0 0;
X
vtkTransform transP3;
X    transP3 Translate 13.27 0.0 33.30;
X    transP3 Scale 5 5 5;
X    transP3 RotateY 90;
vtkTransformPolyFilter tpd3
X    tpd3 SetInput [plane GetOutput];
X    tpd3 SetTransform transP3;
vtkOutlineFilter outTpd3;
X    outTpd3 SetInput [tpd3 GetOutput];
vtkPolyMapper mapTpd3;
X    mapTpd3 SetInput [outTpd3 GetOutput];
vtkActor tpd3Actor;
X    tpd3Actor SetMapper mapTpd3;
X    [tpd3Actor GetProperty] SetColor 0 0 0;
X
vtkAppendPolyData appendF;
X    appendF AddInput [tpd1 GetOutput];
X    appendF AddInput [tpd2 GetOutput];
X    appendF AddInput [tpd3 GetOutput];
X
vtkPointSource probe;
X    probe SetNumberOfPoints 100;
X    probe SetCenter 13.27 0.0 33.30;
X    probe SetRadius 1.0;
X    
X
vtkStreamLine contour;
X    contour SetSource [probe GetOutput];
X    contour SetInput [pl3d GetOutput];
X
vtkPolyMapper contourMapper;
X    contourMapper SetInput [contour GetOutput];
X    eval contourMapper SetScalarRange [[pl3d GetOutput] GetScalarRange];
vtkActor planeActor;
X    planeActor SetMapper contourMapper;
X
vtkStructuredGridOutlineFilter outline;
X    outline SetInput [pl3d GetOutput];
vtkPolyMapper outlineMapper;
X    outlineMapper SetInput [outline GetOutput];
vtkActor outlineActor;
X    outlineActor SetMapper outlineMapper;
X    [outlineActor GetProperty] SetColor 0 0 0;
X
$ren1 AddActors outlineActor;
$ren1 AddActors planeActor;
$ren1 AddActors tpd1Actor;
$ren1 AddActors tpd2Actor;
$ren1 AddActors tpd3Actor;
$ren1 SetBackground 1 1 1;
$renWin SetSize 500 500;
$iren Initialize;
X
set cam1 [$ren1 GetActiveCamera];
$cam1 SetClippingRange 3.95297 50;
$cam1 SetFocalPoint 8.88908 0.595038 29.3342;
$cam1 SetPosition -12.3332 31.7479 41.2387;
$cam1 CalcViewPlaneNormal;
$cam1 SetViewUp 0.060772 -0.319905 0.945498;
X
# render the image
#
$iren SetUserMethod {wm deiconify .vtkInteract};
$renWin Render;
X
# prevent the tk window from showing up then start the event loop
wm withdraw .
X
SHAR_EOF
  $shar_touch -am 0415212997 'streamline.tcl' &&
  chmod 0600 'streamline.tcl' ||
  $echo 'restore of' 'streamline.tcl' 'failed'
  if ( md5sum --help 2>&1 | grep 'sage: md5sum \[' ) >/dev/null 2>&1 \
  && ( md5sum --version 2>&1 | grep -v 'textutils 1.12' ) >/dev/null; then
    md5sum -c << SHAR_EOF >/dev/null 2>&1 \
    || $echo 'streamline.tcl:' 'MD5 check failed'
049836cadf43b6abcc29b93b4630f746  streamline.tcl
SHAR_EOF
  else
    shar_count="`LC_ALL= LC_CTYPE= LANG= wc -c < 'streamline.tcl'`"
    test 3373 -eq "$shar_count" ||
    $echo 'streamline.tcl:' 'original size' '3373,' 'current size' "$shar_count!"
  fi
fi
# ============= vectordot.tcl ==============
if test -f 'vectordot.tcl' && test "$first_param" != -c; then
  $echo 'x -' SKIPPING 'vectordot.tcl' '(file already exists)'
else
  $echo 'x -' extracting 'vectordot.tcl' '(text)'
  sed 's/^X//' << 'SHAR_EOF' > 'vectordot.tcl' &&
#unommet the line below if you are on Windows95
# load vtktcl;
# get the interactor ui
source VTKINT.TCL
X
# create planes
# First create the render master
vtkRenderMaster rm;
X
# Now create the RenderWindow, Renderer and both Actors
#
set renWin [rm MakeRenderWindow];
set ren1   [$renWin MakeRenderer];
set iren [$renWin MakeRenderWindowInteractor];
X
# create pipeline
#
vtkPLOT3DReader pl3d;
X    pl3d SetXYZFilename "combxyz.bin"
X    pl3d SetQFilename "combq.bin"
X    pl3d SetScalarFunctionNumber 100;
X    pl3d SetVectorFunctionNumber 202;
X    pl3d Update;
X
vtkPlaneSource plane;
X    plane SetResolution 50 50;
vtkTransform transP1;
X    transP1 Translate 3.7 0.0 28.37;
X    transP1 Scale 5 5 5;
X    transP1 RotateY 90;
vtkTransformPolyFilter tpd1
X    tpd1 SetInput [plane GetOutput];
X    tpd1 SetTransform transP1;
vtkOutlineFilter outTpd1;
X    outTpd1 SetInput [tpd1 GetOutput];
vtkPolyMapper mapTpd1;
X    mapTpd1 SetInput [outTpd1 GetOutput];
vtkActor tpd1Actor;
X    tpd1Actor SetMapper mapTpd1;
X    [tpd1Actor GetProperty] SetColor 0 0 0;
X
vtkTransform transP2;
X    transP2 Translate 9.2 0.0 31.20;
X    transP2 Scale 5 5 5;
X    transP2 RotateY 90;
vtkTransformPolyFilter tpd2
X    tpd2 SetInput [plane GetOutput];
X    tpd2 SetTransform transP2;
vtkOutlineFilter outTpd2;
X    outTpd2 SetInput [tpd2 GetOutput];
vtkPolyMapper mapTpd2;
X    mapTpd2 SetInput [outTpd2 GetOutput];
vtkActor tpd2Actor;
X    tpd2Actor SetMapper mapTpd2;
X    [tpd2Actor GetProperty] SetColor 0 0 0;
X
vtkTransform transP3;
X    transP3 Translate 13.27 0.0 33.30;
X    transP3 Scale 5 5 5;
X    transP3 RotateY 90;
vtkTransformPolyFilter tpd3
X    tpd3 SetInput [plane GetOutput];
X    tpd3 SetTransform transP3;
vtkOutlineFilter outTpd3;
X    outTpd3 SetInput [tpd3 GetOutput];
vtkPolyMapper mapTpd3;
X    mapTpd3 SetInput [outTpd3 GetOutput];
vtkActor tpd3Actor;
X    tpd3Actor SetMapper mapTpd3;
X    [tpd3Actor GetProperty] SetColor 0 0 0;
X
vtkAppendPolyData appendF;
X    appendF AddInput [tpd1 GetOutput];
X    appendF AddInput [tpd2 GetOutput];
X    appendF AddInput [tpd3 GetOutput];
X
vtkProbeFilter probe;
X    probe SetInput [appendF GetOutput];
X    probe SetSource [pl3d GetOutput];
X
vtkGeometryFilter contour2;
X    contour2 SetInput [probe GetOutput];
#    contour2 SetExtent 0.0 10.0 0.0 20.0 0.0 20.0;
X
#    eval contour2 GenerateValues 50 [[pl3d GetOutput] GetScalarRange];
X
vtkPolyNormals normals;
X    normals SetInput [contour2 GetOutput];
X
#vtkPointSource probe;
#    probe SetNumberOfPoints 100;
#    probe SetCenter 13.27 0.0 33.30;
#    probe SetRadius 2.0;
X
vtkVectorDot contour;
X    contour SetInput [normals GetOutput];
X    eval contour SetScalarRange  [[pl3d GetOutput] GetScalarRange];
X
vtkDataSetMapper contourMapper;
X    contourMapper SetInput [contour GetOutput];
X    eval contourMapper SetScalarRange [[pl3d GetOutput] GetScalarRange];
X
vtkActor planeActor;
X    planeActor SetMapper contourMapper;
X
vtkStructuredGridOutlineFilter outline;
X    outline SetInput [pl3d GetOutput];
vtkPolyMapper outlineMapper;
X    outlineMapper SetInput [outline GetOutput];
vtkActor outlineActor;
X    outlineActor SetMapper outlineMapper;
X    [outlineActor GetProperty] SetColor 0 0 0;
X
$ren1 AddActors outlineActor;
$ren1 AddActors planeActor;
$ren1 AddActors tpd1Actor;
$ren1 AddActors tpd2Actor;
$ren1 AddActors tpd3Actor;
$ren1 SetBackground 1 1 1;
$renWin SetSize 500 500;
$iren Initialize;
X
set cam1 [$ren1 GetActiveCamera];
$cam1 SetClippingRange 3.95297 50;
$cam1 SetFocalPoint 8.88908 0.595038 29.3342;
$cam1 SetPosition -12.3332 31.7479 41.2387;
$cam1 CalcViewPlaneNormal;
$cam1 SetViewUp 0.060772 -0.319905 0.945498;
X
# render the image
#
$iren SetUserMethod {wm deiconify .vtkInteract};
$renWin Render;
X
# prevent the tk window from showing up then start the event loop
wm withdraw .
X
SHAR_EOF
  $shar_touch -am 0415212997 'vectordot.tcl' &&
  chmod 0600 'vectordot.tcl' ||
  $echo 'restore of' 'vectordot.tcl' 'failed'
  if ( md5sum --help 2>&1 | grep 'sage: md5sum \[' ) >/dev/null 2>&1 \
  && ( md5sum --version 2>&1 | grep -v 'textutils 1.12' ) >/dev/null; then
    md5sum -c << SHAR_EOF >/dev/null 2>&1 \
    || $echo 'vectordot.tcl:' 'MD5 check failed'
6626f4a7fbc99e7adb04c61beec22182  vectordot.tcl
SHAR_EOF
  else
    shar_count="`LC_ALL= LC_CTYPE= LANG= wc -c < 'vectordot.tcl'`"
    test 3769 -eq "$shar_count" ||
    $echo 'vectordot.tcl:' 'original size' '3769,' 'current size' "$shar_count!"
  fi
fi
# ============= vectornorm.tcl ==============
if test -f 'vectornorm.tcl' && test "$first_param" != -c; then
  $echo 'x -' SKIPPING 'vectornorm.tcl' '(file already exists)'
else
  $echo 'x -' extracting 'vectornorm.tcl' '(text)'
  sed 's/^X//' << 'SHAR_EOF' > 'vectornorm.tcl' &&
#unommet the line below if you are on Windows95
# load vtktcl;
# get the interactor ui
source VTKINT.TCL
X
# create planes
# First create the render master
vtkRenderMaster rm;
X
# Now create the RenderWindow, Renderer and both Actors
#
set renWin [rm MakeRenderWindow];
set ren1   [$renWin MakeRenderer];
set iren [$renWin MakeRenderWindowInteractor];
X
# create pipeline
#
vtkPLOT3DReader pl3d;
X    pl3d SetXYZFilename "combxyz.bin"
X    pl3d SetQFilename "combq.bin"
X    pl3d SetScalarFunctionNumber 100;
X    pl3d SetVectorFunctionNumber 202;
X    pl3d Update;
X
vtkPlaneSource plane;
X    plane SetResolution 50 50;
vtkTransform transP1;
X    transP1 Translate 3.7 0.0 28.37;
X    transP1 Scale 5 5 5;
X    transP1 RotateY 90;
vtkTransformPolyFilter tpd1
X    tpd1 SetInput [plane GetOutput];
X    tpd1 SetTransform transP1;
vtkOutlineFilter outTpd1;
X    outTpd1 SetInput [tpd1 GetOutput];
vtkPolyMapper mapTpd1;
X    mapTpd1 SetInput [outTpd1 GetOutput];
vtkActor tpd1Actor;
X    tpd1Actor SetMapper mapTpd1;
X    [tpd1Actor GetProperty] SetColor 0 0 0;
X
vtkTransform transP2;
X    transP2 Translate 9.2 0.0 31.20;
X    transP2 Scale 5 5 5;
X    transP2 RotateY 90;
vtkTransformPolyFilter tpd2
X    tpd2 SetInput [plane GetOutput];
X    tpd2 SetTransform transP2;
vtkOutlineFilter outTpd2;
X    outTpd2 SetInput [tpd2 GetOutput];
vtkPolyMapper mapTpd2;
X    mapTpd2 SetInput [outTpd2 GetOutput];
vtkActor tpd2Actor;
X    tpd2Actor SetMapper mapTpd2;
X    [tpd2Actor GetProperty] SetColor 0 0 0;
X
vtkTransform transP3;
X    transP3 Translate 13.27 0.0 33.30;
X    transP3 Scale 5 5 5;
X    transP3 RotateY 90;
vtkTransformPolyFilter tpd3
X    tpd3 SetInput [plane GetOutput];
X    tpd3 SetTransform transP3;
vtkOutlineFilter outTpd3;
X    outTpd3 SetInput [tpd3 GetOutput];
vtkPolyMapper mapTpd3;
X    mapTpd3 SetInput [outTpd3 GetOutput];
vtkActor tpd3Actor;
X    tpd3Actor SetMapper mapTpd3;
X    [tpd3Actor GetProperty] SetColor 0 0 0;
X
vtkAppendPolyData appendF;
X    appendF AddInput [tpd1 GetOutput];
X    appendF AddInput [tpd2 GetOutput];
X    appendF AddInput [tpd3 GetOutput];
X
vtkProbeFilter probe;
X    probe SetInput [appendF GetOutput];
X    probe SetSource [pl3d GetOutput];
X
vtkVectorNorm contour;
X    contour SetInput [probe GetOutput];
X    contour SetNormalize 1;
X
vtkDataSetMapper contourMapper;
X    contourMapper SetInput [contour GetOutput];
X    eval contourMapper SetScalarRange [[pl3d GetOutput] GetScalarRange];
X
vtkActor planeActor;
X    planeActor SetMapper contourMapper;
X
vtkStructuredGridOutlineFilter outline;
X    outline SetInput [pl3d GetOutput];
vtkPolyMapper outlineMapper;
X    outlineMapper SetInput [outline GetOutput];
vtkActor outlineActor;
X    outlineActor SetMapper outlineMapper;
X    [outlineActor GetProperty] SetColor 0 0 0;
X
$ren1 AddActors outlineActor;
$ren1 AddActors planeActor;
$ren1 AddActors tpd1Actor;
$ren1 AddActors tpd2Actor;
$ren1 AddActors tpd3Actor;
$ren1 SetBackground 1 1 1;
$renWin SetSize 500 500;
$iren Initialize;
X
set cam1 [$ren1 GetActiveCamera];
$cam1 SetClippingRange 3.95297 50;
$cam1 SetFocalPoint 8.88908 0.595038 29.3342;
$cam1 SetPosition -12.3332 31.7479 41.2387;
$cam1 CalcViewPlaneNormal;
$cam1 SetViewUp 0.060772 -0.319905 0.945498;
X
# render the image
#
$iren SetUserMethod {wm deiconify .vtkInteract};
$renWin Render;
X
# prevent the tk window from showing up then start the event loop
wm withdraw .
X
SHAR_EOF
  $shar_touch -am 0415212997 'vectornorm.tcl' &&
  chmod 0600 'vectornorm.tcl' ||
  $echo 'restore of' 'vectornorm.tcl' 'failed'
  if ( md5sum --help 2>&1 | grep 'sage: md5sum \[' ) >/dev/null 2>&1 \
  && ( md5sum --version 2>&1 | grep -v 'textutils 1.12' ) >/dev/null; then
    md5sum -c << SHAR_EOF >/dev/null 2>&1 \
    || $echo 'vectornorm.tcl:' 'MD5 check failed'
4dd5d4a9a0518ebc0dc0c9689aca8aa6  vectornorm.tcl
SHAR_EOF
  else
    shar_count="`LC_ALL= LC_CTYPE= LANG= wc -c < 'vectornorm.tcl'`"
    test 3343 -eq "$shar_count" ||
    $echo 'vectornorm.tcl:' 'original size' '3343,' 'current size' "$shar_count!"
  fi
fi
# ============= warpvector.tcl ==============
if test -f 'warpvector.tcl' && test "$first_param" != -c; then
  $echo 'x -' SKIPPING 'warpvector.tcl' '(file already exists)'
else
  $echo 'x -' extracting 'warpvector.tcl' '(text)'
  sed 's/^X//' << 'SHAR_EOF' > 'warpvector.tcl' &&
#unommet the line below if you are on Windows95
# load vtktcl;
# get the interactor ui
source VTKINT.TCL
X
# create planes
# First create the render master
vtkRenderMaster rm;
X
# Now create the RenderWindow, Renderer and both Actors
#
set renWin [rm MakeRenderWindow];
set ren1   [$renWin MakeRenderer];
set iren [$renWin MakeRenderWindowInteractor];
X
# create pipeline
#
vtkPLOT3DReader pl3d;
X    pl3d SetXYZFilename "combxyz.bin"
X    pl3d SetQFilename "combq.bin"
X    pl3d SetScalarFunctionNumber 100;
X    pl3d SetVectorFunctionNumber 202;
X    pl3d Update;
X
vtkPlaneSource plane;
X    plane SetResolution 50 50;
vtkTransform transP1;
X    transP1 Translate 3.7 0.0 28.37;
X    transP1 Scale 5 5 5;
X    transP1 RotateY 90;
vtkTransformPolyFilter tpd1
X    tpd1 SetInput [plane GetOutput];
X    tpd1 SetTransform transP1;
vtkOutlineFilter outTpd1;
X    outTpd1 SetInput [tpd1 GetOutput];
vtkPolyMapper mapTpd1;
X    mapTpd1 SetInput [outTpd1 GetOutput];
vtkActor tpd1Actor;
X    tpd1Actor SetMapper mapTpd1;
X    [tpd1Actor GetProperty] SetColor 0 0 0;
X
vtkTransform transP2;
X    transP2 Translate 9.2 0.0 31.20;
X    transP2 Scale 5 5 5;
X    transP2 RotateY 90;
vtkTransformPolyFilter tpd2
X    tpd2 SetInput [plane GetOutput];
X    tpd2 SetTransform transP2;
vtkOutlineFilter outTpd2;
X    outTpd2 SetInput [tpd2 GetOutput];
vtkPolyMapper mapTpd2;
X    mapTpd2 SetInput [outTpd2 GetOutput];
vtkActor tpd2Actor;
X    tpd2Actor SetMapper mapTpd2;
X    [tpd2Actor GetProperty] SetColor 0 0 0;
X
vtkTransform transP3;
X    transP3 Translate 13.27 0.0 33.30;
X    transP3 Scale 5 5 5;
X    transP3 RotateY 90;
vtkTransformPolyFilter tpd3
X    tpd3 SetInput [plane GetOutput];
X    tpd3 SetTransform transP3;
vtkOutlineFilter outTpd3;
X    outTpd3 SetInput [tpd3 GetOutput];
vtkPolyMapper mapTpd3;
X    mapTpd3 SetInput [outTpd3 GetOutput];
vtkActor tpd3Actor;
X    tpd3Actor SetMapper mapTpd3;
X    [tpd3Actor GetProperty] SetColor 0 0 0;
X
vtkAppendPolyData appendF;
X    appendF AddInput [tpd1 GetOutput];
X    appendF AddInput [tpd2 GetOutput];
X    appendF AddInput [tpd3 GetOutput];
X
vtkProbeFilter probe;
X    probe SetInput [appendF GetOutput];
X    probe SetSource [pl3d GetOutput];
X
vtkGeometryFilter contour2;
X    contour2 SetInput [probe GetOutput];
#    contour2 SetExtent 0.0 10.0 0.0 20.0 0.0 20.0;
X
#    eval contour2 GenerateValues 50 [[pl3d GetOutput] GetScalarRange];
X
#vtkPointSource probe;
#    probe SetNumberOfPoints 100;
#    probe SetCenter 13.27 0.0 33.30;
#    probe SetRadius 2.0;
X
vtkWarpVector contour;
X    contour SetInput [contour2 GetOutput];
X    contour SetScaleFactor .005;
X
vtkDataSetMapper contourMapper;
X    contourMapper SetInput [contour GetOutput];
X    eval contourMapper SetScalarRange [[pl3d GetOutput] GetScalarRange];
X
vtkActor planeActor;
X    planeActor SetMapper contourMapper;
X
vtkStructuredGridOutlineFilter outline;
X    outline SetInput [pl3d GetOutput];
vtkPolyMapper outlineMapper;
X    outlineMapper SetInput [outline GetOutput];
vtkActor outlineActor;
X    outlineActor SetMapper outlineMapper;
X    [outlineActor GetProperty] SetColor 0 0 0;
X
$ren1 AddActors outlineActor;
$ren1 AddActors planeActor;
$ren1 AddActors tpd1Actor;
$ren1 AddActors tpd2Actor;
$ren1 AddActors tpd3Actor;
$ren1 SetBackground 1 1 1;
$renWin SetSize 500 500;
$iren Initialize;
X
set cam1 [$ren1 GetActiveCamera];
$cam1 SetClippingRange 3.95297 50;
$cam1 SetFocalPoint 8.88908 0.595038 29.3342;
$cam1 SetPosition -12.3332 31.7479 41.2387;
$cam1 CalcViewPlaneNormal;
$cam1 SetViewUp 0.060772 -0.319905 0.945498;
X
# render the image
#
$iren SetUserMethod {wm deiconify .vtkInteract};
$renWin Render;
X
# prevent the tk window from showing up then start the event loop
wm withdraw .
X
SHAR_EOF
  $shar_touch -am 0415212997 'warpvector.tcl' &&
  chmod 0600 'warpvector.tcl' ||
  $echo 'restore of' 'warpvector.tcl' 'failed'
  if ( md5sum --help 2>&1 | grep 'sage: md5sum \[' ) >/dev/null 2>&1 \
  && ( md5sum --version 2>&1 | grep -v 'textutils 1.12' ) >/dev/null; then
    md5sum -c << SHAR_EOF >/dev/null 2>&1 \
    || $echo 'warpvector.tcl:' 'MD5 check failed'
4b3bac990cfd9d7d6a49f462725b03a0  warpvector.tcl
SHAR_EOF
  else
    shar_count="`LC_ALL= LC_CTYPE= LANG= wc -c < 'warpvector.tcl'`"
    test 3668 -eq "$shar_count" ||
    $echo 'warpvector.tcl:' 'original size' '3668,' 'current size' "$shar_count!"
  fi
fi
rm -fr _sh09072
exit 0

From ???@??? Thu May 01 07:57:42 1997
Received: from magritte.its.rpi.edu (kozurj@magritte.its.rpi.edu [128.113.113.19])
	by mail1.its.rpi.edu (8.8.5/8.8.5) with ESMTP id PAA60318
	for <citrit@rpi.edu>; Wed, 30 Apr 1997 15:33:39 -0400
From: Johan <kozurj>
Received: (kozurj@localhost) by magritte.its.rpi.edu (8.6.9/8.6.4) id PAA51878 for citrit@rpi.edu; Wed, 30 Apr 1997 15:33:34 -0400
Date: Wed, 30 Apr 1997 15:33:34 -0400
Message-Id: <199704301933.PAA51878@magritte.its.rpi.edu>
To: citrit@rpi.edu
Subject: HomeWork 3
X-UIDL: e1ebddc80eada84f29e82413a38d46b2

#!/bin/sh
# This is a shell archive (produced by GNU sharutils 4.2).
# To extract the files from this archive, save it to some FILE, remove
# everything before the `!/bin/sh' line above, then type `sh FILE'.
#
# Made on 1997-04-30 15:31 EDT by <kozurj@magritte>.
# Source directory was `/afs/rpi.edu/home/96/kozurj/private/visual/proj3'.
#
# Existing files will *not* be overwritten unless `-c' is specified.
#
# This shar contains:
# length mode       name
# ------ ---------- ------------------------------------------
#    361 -rw------- README
#   2760 -rw------- p1a.tcl
#   2789 -rw------- p1b.tcl
#   3376 -rw------- p2a.tcl
#   2868 -rw------- p2b.tcl
#   3482 -rw------- p2c.tcl
#
save_IFS="${IFS}"
IFS="${IFS}:"
gettext_dir=FAILED
locale_dir=FAILED
first_param="$1"
for dir in $PATH
do
  if test "$gettext_dir" = FAILED && test -f $dir/gettext \
     && ($dir/gettext --version >/dev/null 2>&1)
  then
    set `$dir/gettext --version 2>&1`
    if test "$3" = GNU
    then
      gettext_dir=$dir
    fi
  fi
  if test "$locale_dir" = FAILED && test -f $dir/shar \
     && ($dir/shar --print-text-domain-dir >/dev/null 2>&1)
  then
    locale_dir=`$dir/shar --print-text-domain-dir`
  fi
done
IFS="$save_IFS"
if test "$locale_dir" = FAILED || test "$gettext_dir" = FAILED
then
  echo=echo
else
  TEXTDOMAINDIR=$locale_dir
  export TEXTDOMAINDIR
  TEXTDOMAIN=sharutils
  export TEXTDOMAIN
  echo="$gettext_dir/gettext -s"
fi
touch -am 1231235999 $$.touch >/dev/null 2>&1
if test ! -f 1231235999 && test -f $$.touch; then
  shar_touch=touch
else
  shar_touch=:
  echo
  $echo 'WARNING: not restoring timestamps.  Consider getting and'
  $echo "installing GNU \`touch', distributed in GNU File Utilities..."
  echo
fi
rm -f 1231235999 $$.touch
#
if mkdir _sh121044; then
  $echo 'x -' 'creating lock directory'
else
  $echo 'failed to create lock directory'
  exit 1
fi
# ============= README ==============
if test -f 'README' && test "$first_param" != -c; then
  $echo 'x -' SKIPPING 'README' '(file already exists)'
else
  $echo 'x -' extracting 'README' '(text)'
  sed 's/^X//' << 'SHAR_EOF' > 'README' &&
Here is project 3, these were all done on an IBM AIX workstation.  There aren't
any probles as far as I can tell, although the animation is pretty slow so I
only have 5 shots for each sequence.  I don't have the time or patience to
figure out the requirements of the last 2 filters, so theres no bonus stuff.
p2a = hedgehog
p2b = stream
p2c = warp
X
John Kozura
SHAR_EOF
  $shar_touch -am 0415233197 'README' &&
  chmod 0600 'README' ||
  $echo 'restore of' 'README' 'failed'
  if ( md5sum --help 2>&1 | grep 'sage: md5sum \[' ) >/dev/null 2>&1 \
  && ( md5sum --version 2>&1 | grep -v 'textutils 1.12' ) >/dev/null; then
    md5sum -c << SHAR_EOF >/dev/null 2>&1 \
    || $echo 'README:' 'MD5 check failed'
f450e95aef0eeed681801a7d1864cc67  README
SHAR_EOF
  else
    shar_count="`LC_ALL= LC_CTYPE= LANG= wc -c < 'README'`"
    test 361 -eq "$shar_count" ||
    $echo 'README:' 'original size' '361,' 'current size' "$shar_count!"
  fi
fi
# ============= p1a.tcl ==============
if test -f 'p1a.tcl' && test "$first_param" != -c; then
  $echo 'x -' SKIPPING 'p1a.tcl' '(file already exists)'
else
  $echo 'x -' extracting 'p1a.tcl' '(text)'
  sed 's/^X//' << 'SHAR_EOF' > 'p1a.tcl' &&
# tcl file for Graphics Project 3, problem 6.3a
# John P Kozura
X
# user interface command widget
source vtkInt.tcl
X
# create a rendering window and renderer
vtkRenderMaster rm;
set renWin [rm MakeRenderWindow];
set ren1 [$renWin MakeRenderer];
set iren [$renWin MakeRenderWindowInteractor];
X
vtkQuadric quad;
X  quad SetCoefficients 0.5 1 .2 0 .1 0 0 .2 0 0;
vtkSampleFunction sample;
X  sample SetSampleDimensions 50 50 50;
X  sample SetImplicitFunction quad;
X
X
# here is my code, eventually generates 5 actors
# I think this would be better done in a loop
X
vtkContourFilter cont1;
X  cont1 SetInput [sample GetOutput];
X  cont1 GenerateValues 1 0.0 0.2;
vtkPolyMapper contMapper1;
X  contMapper1 SetInput [cont1 GetOutput];
X  contMapper1 SetScalarRange 0.0 2.0;
vtkActor contActor1;
X  contActor1 SetMapper contMapper1;
$ren1 AddActors contActor1;
X  contActor1 VisibilityOn;
X
vtkContourFilter cont2;
X  cont2 SetInput [sample GetOutput];
X  cont2 GenerateValues 1 0.0 0.4;
vtkPolyMapper contMapper2;
X  contMapper2 SetInput [cont2 GetOutput];
X  contMapper2 SetScalarRange 0.0 2.0;
vtkActor contActor2;
X  contActor2 SetMapper contMapper2;
$ren1 AddActors contActor2;
X  contActor2 VisibilityOff;
X
vtkContourFilter cont3;
X  cont3 SetInput [sample GetOutput];
X  cont3 GenerateValues 1 0.0 0.6;
vtkPolyMapper contMapper3;
X  contMapper3 SetInput [cont3 GetOutput];
X  contMapper3 SetScalarRange 0.0 2.0;
vtkActor contActor3;
X  contActor3 SetMapper contMapper3;
$ren1 AddActors contActor3;
X  contActor3 VisibilityOff;
X
vtkContourFilter cont4;
X  cont4 SetInput [sample GetOutput];
X  cont4 GenerateValues 1 0.0 0.8;
vtkPolyMapper contMapper4;
X  contMapper4 SetInput [cont4 GetOutput];
X  contMapper4 SetScalarRange 0.0 2.0;
vtkActor contActor4;
X  contActor4 SetMapper contMapper4;
$ren1 AddActors contActor4;
X  contActor4 VisibilityOff;
X
vtkContourFilter cont5;
X  cont5 SetInput [sample GetOutput];
X  cont5 GenerateValues 1 0.0 1.0;
vtkPolyMapper contMapper5;
X  contMapper5 SetInput [cont5 GetOutput];
X  contMapper5 SetScalarRange 0.0 2.0;
vtkActor contActor5;
X  contActor5 SetMapper contMapper5;
$ren1 AddActors contActor5;
X  contActor5 VisibilityOff;
X
X
# now for some more code pirated shamelessly from sample
$ren1 SetBackground 1 1 1;
X
# enable user interface interactor
$iren SetUserMethod {wm deiconify .vtkInteract};
$iren Initialize;
X
# prevent the tk window from showing up then start the event loop
wm withdraw .
X
# initial render to turn everything off
$renWin Render;
X
# now cycle through all 5
X
contActor1 VisibilityOff;
contActor2 VisibilityOn;
$renWin Render;
X
contActor2 VisibilityOff;
contActor3 VisibilityOn;
$renWin Render;
X
contActor3 VisibilityOff;
contActor4 VisibilityOn;
$renWin Render;
X
contActor4 VisibilityOff;
contActor5 VisibilityOn;
$renWin Render;
SHAR_EOF
  $shar_touch -am 0415211397 'p1a.tcl' &&
  chmod 0600 'p1a.tcl' ||
  $echo 'restore of' 'p1a.tcl' 'failed'
  if ( md5sum --help 2>&1 | grep 'sage: md5sum \[' ) >/dev/null 2>&1 \
  && ( md5sum --version 2>&1 | grep -v 'textutils 1.12' ) >/dev/null; then
    md5sum -c << SHAR_EOF >/dev/null 2>&1 \
    || $echo 'p1a.tcl:' 'MD5 check failed'
add026087e48fc4928821d2ab747ba53  p1a.tcl
SHAR_EOF
  else
    shar_count="`LC_ALL= LC_CTYPE= LANG= wc -c < 'p1a.tcl'`"
    test 2760 -eq "$shar_count" ||
    $echo 'p1a.tcl:' 'original size' '2760,' 'current size' "$shar_count!"
  fi
fi
# ============= p1b.tcl ==============
if test -f 'p1b.tcl' && test "$first_param" != -c; then
  $echo 'x -' SKIPPING 'p1b.tcl' '(file already exists)'
else
  $echo 'x -' extracting 'p1b.tcl' '(text)'
  sed 's/^X//' << 'SHAR_EOF' > 'p1b.tcl' &&
# tcl file for Graphics Project 3, problem 6.3b
# John P Kozura
X
# get the interactor ui
source vtkInt.tcl
X
# First create the render master
vtkRenderMaster rm;
X
# Now create the RenderWindow, Renderer
#
set renWin [rm MakeRenderWindow];
set ren1   [$renWin MakeRenderer];
set iren   [$renWin MakeRenderWindowInteractor];
X
#
# Load up the data
vtkStructuredPointsReader vol;
X    vol SetFilename "MRIdata.vtk"
#    vol DebugOn;
X
# here is my code, same as the first one, eventually generates 5 actors
# I'd use a loop, but cut and paste is just so much fun
X
X
vtkMarchingCubes cont1;
X  cont1 SetInput [vol GetOutput];
X  cont1 SetValue 0 25.0;
vtkPolyMapper volMapper1;
X  volMapper1 SetInput [cont1 GetOutput];
X  volMapper1 ScalarsVisibleOff;
vtkActor volActor1;
X  volActor1 SetMapper volMapper1;
X  volActor1 VisibilityOn;
$ren1 AddActors volActor1;
X
X
vtkMarchingCubes cont2;
X  cont2 SetInput [vol GetOutput];
X  cont2 SetValue 0 50.0;
vtkPolyMapper volMapper2;
X  volMapper2 SetInput [cont2 GetOutput];
X  volMapper2 ScalarsVisibleOff;
vtkActor volActor2;
X  volActor2 SetMapper volMapper2;
X  volActor2 VisibilityOff;
$ren1 AddActors volActor2;
X
vtkMarchingCubes cont3;
X  cont3 SetInput [vol GetOutput];
X  cont3 SetValue 0 75.0;
vtkPolyMapper volMapper3;
X  volMapper3 SetInput [cont3 GetOutput];
X  volMapper3 ScalarsVisibleOff;
vtkActor volActor3;
X  volActor3 SetMapper volMapper3;
X  volActor3 VisibilityOff;
$ren1 AddActors volActor3;
X
X
vtkMarchingCubes cont4;
X  cont4 SetInput [vol GetOutput];
X  cont4 SetValue 0 100.0;
vtkPolyMapper volMapper4;
X  volMapper4 SetInput [cont4 GetOutput];
X  volMapper4 ScalarsVisibleOff;
vtkActor volActor4;
X  volActor4 SetMapper volMapper4;
X  volActor4 VisibilityOff;
$ren1 AddActors volActor4;
X
X
vtkMarchingCubes cont5;
X  cont5 SetInput [vol GetOutput];
X  cont5 SetValue 0 125.0;
vtkPolyMapper volMapper5;
X  volMapper5 SetInput [cont5 GetOutput];
X  volMapper5 ScalarsVisibleOff;
vtkActor volActor5;
X  volActor5 SetMapper volMapper5;
X  volActor5 VisibilityOff;
$ren1 AddActors volActor5;
X
X
# heres some of your code to generate a gridline
vtkOutlineFilter outLine;
X  outLine SetInput [vol GetOutput];
vtkPolyMapper outMapper;
X  outMapper SetInput [outLine GetOutput];
vtkActor outActor;
X  outActor SetMapper outMapper;
$ren1 AddActors outActor;
X
$ren1 SetBackground 0 0 0;
$renWin SetSize 500 400;
$iren Initialize;
X
# render the image
#
$iren SetUserMethod {wm deiconify .vtkInteract};
$renWin Render;
X
# prevent the tk window from showing up then start the event loop
wm withdraw .
X
# now cycle through all 5
X
volActor1 VisibilityOff;
volActor2 VisibilityOn;
$renWin Render;
X
volActor2 VisibilityOff;
volActor3 VisibilityOn;
$renWin Render;
X
volActor3 VisibilityOff;
volActor4 VisibilityOn;
$renWin Render;
X
volActor4 VisibilityOff;
volActor5 VisibilityOn;
X
X
SHAR_EOF
  $shar_touch -am 0415212397 'p1b.tcl' &&
  chmod 0600 'p1b.tcl' ||
  $echo 'restore of' 'p1b.tcl' 'failed'
  if ( md5sum --help 2>&1 | grep 'sage: md5sum \[' ) >/dev/null 2>&1 \
  && ( md5sum --version 2>&1 | grep -v 'textutils 1.12' ) >/dev/null; then
    md5sum -c << SHAR_EOF >/dev/null 2>&1 \
    || $echo 'p1b.tcl:' 'MD5 check failed'
f453336a8c9ee8d8f6f61c050f6acd8f  p1b.tcl
SHAR_EOF
  else
    shar_count="`LC_ALL= LC_CTYPE= LANG= wc -c < 'p1b.tcl'`"
    test 2789 -eq "$shar_count" ||
    $echo 'p1b.tcl:' 'original size' '2789,' 'current size' "$shar_count!"
  fi
fi
# ============= p2a.tcl ==============
if test -f 'p2a.tcl' && test "$first_param" != -c; then
  $echo 'x -' SKIPPING 'p2a.tcl' '(file already exists)'
else
  $echo 'x -' extracting 'p2a.tcl' '(text)'
  sed 's/^X//' << 'SHAR_EOF' > 'p2a.tcl' &&
# tcl file for Graphics Project 3, problem 9.4a
# John P Kozura
X
# get the interactor ui
source vtkInt.tcl
X
# create planes
# First create the render master
vtkRenderMaster rm;
X
# Now create the RenderWindow, Renderer and both Actors
#
set renWin [rm MakeRenderWindow];
set ren1   [$renWin MakeRenderer];
set iren [$renWin MakeRenderWindowInteractor];
X
# create pipeline
#
vtkPLOT3DReader pl3d;
X    pl3d SetXYZFilename "combxyz.bin"
X    pl3d SetQFilename "combq.bin"
X    pl3d SetScalarFunctionNumber 100;
X    pl3d SetVectorFunctionNumber 202;
X    pl3d Update;
X
vtkPlaneSource plane;
X    plane SetResolution 50 50;
vtkTransform transP1;
X    transP1 Translate 3.7 0.0 28.37;
X    transP1 Scale 5 5 5;
X    transP1 RotateY 90;
vtkTransformPolyFilter tpd1
X    tpd1 SetInput [plane GetOutput];
X    tpd1 SetTransform transP1;
vtkOutlineFilter outTpd1;
X    outTpd1 SetInput [tpd1 GetOutput];
vtkPolyMapper mapTpd1;
X    mapTpd1 SetInput [outTpd1 GetOutput];
vtkActor tpd1Actor;
X    tpd1Actor SetMapper mapTpd1;
X    [tpd1Actor GetProperty] SetColor 0 0 0;
X
vtkTransform transP2;
X    transP2 Translate 9.2 0.0 31.20;
X    transP2 Scale 5 5 5;
X    transP2 RotateY 90;
vtkTransformPolyFilter tpd2
X    tpd2 SetInput [plane GetOutput];
X    tpd2 SetTransform transP2;
vtkOutlineFilter outTpd2;
X    outTpd2 SetInput [tpd2 GetOutput];
vtkPolyMapper mapTpd2;
X    mapTpd2 SetInput [outTpd2 GetOutput];
vtkActor tpd2Actor;
X    tpd2Actor SetMapper mapTpd2;
X    [tpd2Actor GetProperty] SetColor 0 0 0;
X
vtkTransform transP3;
X    transP3 Translate 13.27 0.0 33.30;
X    transP3 Scale 5 5 5;
X    transP3 RotateY 90;
vtkTransformPolyFilter tpd3
X    tpd3 SetInput [plane GetOutput];
X    tpd3 SetTransform transP3;
vtkOutlineFilter outTpd3;
X    outTpd3 SetInput [tpd3 GetOutput];
vtkPolyMapper mapTpd3;
X    mapTpd3 SetInput [outTpd3 GetOutput];
vtkActor tpd3Actor;
X    tpd3Actor SetMapper mapTpd3;
X    [tpd3Actor GetProperty] SetColor 0 0 0;
X
vtkAppendPolyData appendF;
X    appendF AddInput [tpd1 GetOutput];
X    appendF AddInput [tpd2 GetOutput];
X    appendF AddInput [tpd3 GetOutput];
X
vtkProbeFilter probe;
X    probe SetInput [appendF GetOutput];
X    probe SetSource [pl3d GetOutput];
X
# My huge contribution to this problem!
vtkHedgeHog hedger;
X	hedger SetInput [probe GetOutput];
X	hedger SetScaleFactor 0.01;
X
vtkPolyMapper contourMapper;
X    contourMapper SetInput [hedger GetOutput];
X    eval contourMapper SetScalarRange [[pl3d GetOutput] GetScalarRange];
vtkActor planeActor;
X    planeActor SetMapper contourMapper;
X
vtkStructuredGridOutlineFilter outline;
X    outline SetInput [pl3d GetOutput];
vtkPolyMapper outlineMapper;
X    outlineMapper SetInput [outline GetOutput];
vtkActor outlineActor;
X    outlineActor SetMapper outlineMapper;
X    [outlineActor GetProperty] SetColor 0 0 0;
X
$ren1 AddActors outlineActor;
$ren1 AddActors planeActor;
$ren1 AddActors tpd1Actor;
$ren1 AddActors tpd2Actor;
$ren1 AddActors tpd3Actor;
$ren1 SetBackground 1 1 1;
$renWin SetSize 500 500;
$iren Initialize;
X
set cam1 [$ren1 GetActiveCamera];
$cam1 SetClippingRange 3.95297 50;
$cam1 SetFocalPoint 8.88908 0.595038 29.3342;
$cam1 SetPosition -12.3332 31.7479 41.2387;
$cam1 CalcViewPlaneNormal;
$cam1 SetViewUp 0.060772 -0.319905 0.945498;
X
# render the image
#
$iren SetUserMethod {wm deiconify .vtkInteract};
$renWin Render;
X
# prevent the tk window from showing up then start the event loop
wm withdraw .
X
X
X
SHAR_EOF
  $shar_touch -am 0415220597 'p2a.tcl' &&
  chmod 0600 'p2a.tcl' ||
  $echo 'restore of' 'p2a.tcl' 'failed'
  if ( md5sum --help 2>&1 | grep 'sage: md5sum \[' ) >/dev/null 2>&1 \
  && ( md5sum --version 2>&1 | grep -v 'textutils 1.12' ) >/dev/null; then
    md5sum -c << SHAR_EOF >/dev/null 2>&1 \
    || $echo 'p2a.tcl:' 'MD5 check failed'
e05df75962a54a54cb0e33426a8a4049  p2a.tcl
SHAR_EOF
  else
    shar_count="`LC_ALL= LC_CTYPE= LANG= wc -c < 'p2a.tcl'`"
    test 3376 -eq "$shar_count" ||
    $echo 'p2a.tcl:' 'original size' '3376,' 'current size' "$shar_count!"
  fi
fi
# ============= p2b.tcl ==============
if test -f 'p2b.tcl' && test "$first_param" != -c; then
  $echo 'x -' SKIPPING 'p2b.tcl' '(file already exists)'
else
  $echo 'x -' extracting 'p2b.tcl' '(text)'
  sed 's/^X//' << 'SHAR_EOF' > 'p2b.tcl' &&
# tcl file for Graphics Project 3, problem 9.4b
# John P Kozura
X
# get the interactor ui
source vtkInt.tcl
X
# create planes
# First create the render master
vtkRenderMaster rm;
X
# Now create the RenderWindow, Renderer and both Actors
#
set renWin [rm MakeRenderWindow];
set ren1   [$renWin MakeRenderer];
set iren [$renWin MakeRenderWindowInteractor];
X
# create pipeline
#
vtkPLOT3DReader pl3d;
X    pl3d SetXYZFilename "combxyz.bin"
X    pl3d SetQFilename "combq.bin"
X    pl3d SetScalarFunctionNumber 100;
X    pl3d SetVectorFunctionNumber 202;
X    pl3d Update;
X
#vtkPlaneSource plane;
#    plane SetResolution 50 50;
# Here we generate the point source representation
X
vtkPointSource ps1;
X	ps1 SetNumberOfPoints 50;
X	ps1 SetRadius 0.5;
X	eval ps1 SetCenter 3.7 0.0 28.37;
vtkStreamLine sline1; 
X	sline1 SetInput [pl3d GetOutput];
X	sline1 SetSource [ps1 GetOutput];
X	sline1 SetStepLength 0.1;
X	sline1 Update;
vtkPolyMapper pmapper1;
X    pmapper1 SetInput [sline1 GetOutput];
X    eval pmapper1 SetScalarRange [[pl3d GetOutput] GetScalarRange];    
vtkActor stream1;
X    stream1 SetMapper pmapper1;
$ren1 AddActors stream1;
X
X
vtkPointSource ps2;
X	ps2 SetNumberOfPoints 50;
X	ps2 SetRadius 0.5;
X	eval ps2 SetCenter 9.2 0.0 31.20;
vtkStreamLine sline2; # DataSetToPoly
X	sline2 SetInput [pl3d GetOutput];
X	sline2 SetSource [ps2 GetOutput];
X	sline2 SetStepLength 0.1;
X	sline2 Update;
vtkPolyMapper pmapper2;
X    pmapper2 SetInput [sline2 GetOutput];
X    eval pmapper2 SetScalarRange [[pl3d GetOutput] GetScalarRange];    
vtkActor stream2;
X    stream2 SetMapper pmapper2;
$ren1 AddActors stream2;
X
vtkPointSource ps3;
X	ps3 SetNumberOfPoints 50;
X	ps3 SetRadius 0.5;
X	eval ps3 SetCenter 13.27 0.0 33.30;
vtkStreamLine sline3;
X	sline3 SetInput [pl3d GetOutput];
X	sline3 SetSource [ps3 GetOutput];
X	sline3 SetStepLength 0.1;
X	sline3 Update;
vtkPolyMapper pmapper3;
X    pmapper3 SetInput [sline3 GetOutput];
X    eval pmapper3 SetScalarRange [[pl3d GetOutput] GetScalarRange];    
vtkActor stream3;
X    stream3 SetMapper pmapper3;
$ren1 AddActors stream3;
X
# no more of this plane old contour filter garbage :)
X
vtkStructuredGridOutlineFilter outline;
X    outline SetInput [pl3d GetOutput];
vtkPolyMapper outlineMapper;
X    outlineMapper SetInput [outline GetOutput];
vtkActor outlineActor;
X    outlineActor SetMapper outlineMapper;
X    [outlineActor GetProperty] SetColor 0 0 0;
X
$ren1 AddActors outlineActor;
$ren1 SetBackground 1 1 1;
$renWin SetSize 500 500;
$iren Initialize;
X
set cam1 [$ren1 GetActiveCamera];
$cam1 SetClippingRange 3.95297 50;
$cam1 SetFocalPoint 8.88908 0.595038 29.3342;
$cam1 SetPosition -12.3332 31.7479 41.2387;
$cam1 CalcViewPlaneNormal;
$cam1 SetViewUp 0.060772 -0.319905 0.945498;
X
# render the image
#
$iren SetUserMethod {wm deiconify .vtkInteract};
$renWin Render;
X
# prevent the tk window from showing up then start the event loop
wm withdraw .
X
X
X
SHAR_EOF
  $shar_touch -am 0415225097 'p2b.tcl' &&
  chmod 0600 'p2b.tcl' ||
  $echo 'restore of' 'p2b.tcl' 'failed'
  if ( md5sum --help 2>&1 | grep 'sage: md5sum \[' ) >/dev/null 2>&1 \
  && ( md5sum --version 2>&1 | grep -v 'textutils 1.12' ) >/dev/null; then
    md5sum -c << SHAR_EOF >/dev/null 2>&1 \
    || $echo 'p2b.tcl:' 'MD5 check failed'
25b5d028170866473feccc0905d5072e  p2b.tcl
SHAR_EOF
  else
    shar_count="`LC_ALL= LC_CTYPE= LANG= wc -c < 'p2b.tcl'`"
    test 2868 -eq "$shar_count" ||
    $echo 'p2b.tcl:' 'original size' '2868,' 'current size' "$shar_count!"
  fi
fi
# ============= p2c.tcl ==============
if test -f 'p2c.tcl' && test "$first_param" != -c; then
  $echo 'x -' SKIPPING 'p2c.tcl' '(file already exists)'
else
  $echo 'x -' extracting 'p2c.tcl' '(binary)'
  sed 's/^X//' << 'SHAR_EOF' | uudecode &&
begin 600 p2c.tcl
M(R!T8VP@9FEL92!F;W(@1W)A<&AI8W,@4')O:F5C="`S+"!P<F]B;&5M(#DN
M-&,*(R!*;VAN(%`@2V]Z=7)A"@HC(&=E="!T:&4@:6YT97)A8W1O<B!U:0IS
M;W5R8V4@=G1K26YT+G1C;`H*(R!C<F5A=&4@<&QA;F5S"B,@1FER<W0@8W)E
M871E('1H92!R96YD97(@;6%S=&5R"G9T:U)E;F1E<DUA<W1E<B!R;3L*"B,@
M3F]W(&-R96%T92!T:&4@4F5N9&5R5VEN9&]W+"!296YD97)E<B!A;F0@8F]T
M:"!!8W1O<G,*(PIS970@<F5N5VEN(%MR;2!-86ME4F5N9&5R5VEN9&]W73L*
M<V5T(')E;C$@("!;)')E;E=I;B!-86ME4F5N9&5R97)=.PIS970@:7)E;B!;
M)')E;E=I;B!-86ME4F5N9&5R5VEN9&]W26YT97)A8W1O<ET["@HC(&-R96%T
M92!P:7!E;&EN90HC"G9T:U!,3U0S1%)E861E<B!P;#-D.PH@("`@<&PS9"!3
M971865I&:6QE;F%M92`B8V]M8GAY>BYB:6XB"B`@("!P;#-D(%-E=%%&:6QE
M;F%M92`B8V]M8G$N8FEN(@H@("`@<&PS9"!397138V%L87)&=6YC=&DN("`@
M("`@("`@(!``-O)UGB*>(@``\G6>(@(``````"XN("`@("`@("`@$``V\G6>
M(IXB``#R=9XB````````4D5!1$U%("`@("`@``G]=9XBGB(``."[CR(D`'(!
M``!0,4$@("`@(%1#3"``L?IUGB*>(@``H*F/(@,`-`L``%`Q0B`@("`@5$-,
M(`!C^W6>(IXB``#@JH\B"0!@"P``4#)!("`@("!40TP@`+C[=9XBGB(``*"P
MCR(/`*X*``!0,D(@("`@(%1#3"``2/QUGB*>(@``0+:/(A8`H@L``%`R0R`@
M("`@5$-,(`"Y_'6>(IXB````NX\B'``+#@``````````````````````````
M````````````````````````````````````````````````````````````
M````````````````````````````````````````````````````````````
M````````````````````````````````````````````````````````````
M````````````````````````````````````````````````````````````
M````````````````````````````````````````````````````````````
M`````````````````$UA<'!E<B!M87!4<&0Q.PH@("`@6W1P9#%!8W1O<B!'
M9710<F]P97)T>5T@4V5T0V]L;W(@,"`P(#`["@IV=&M4<F%N<V9O<FT@=')A
M;G-0,CL*("`@('1R86YS4#(@5')A;G-L871E(#DN,B`P+C`@,S$N,C`["B`@
M("!T<F%N<U`R(%-C86QE(#4@-2`U.PH@("`@=')A;G-0,B!2;W1A=&59(#DP
M.PIV=&M4<F%N<V9O<FU0;VQY1FEL=&5R('1P9#(*("`@('1P9#(@4V5T26YP
M=70@6W!L86YE($=E=$]U='!U=%T["B`@("!T<&0R(%-E=%1R86YS9F]R;2!T
M<F%N<U`R.PIV=&M/=71L:6YE1FEL=&5R(&]U=%1P9#(["B`@("!O=714<&0R
M(%-E=$EN<'5T(%MT<&0R($=E=$]U='!U=%T["G9T:U!O;'E-87!P97(@;6%P
M5'!D,CL*("`@(&UA<%1P9#(@4V5T26YP=70@6V]U=%1P9#(@1V5T3W5T<'5T
M73L*=G1K06-T;W(@='!D,D%C=&]R.PH@("`@='!D,D%C=&]R(%-E=$UA<'!E
M<B!M87!4<&0R.PH@("`@6W1P9#)!8W1O<B!'9710<F]P97)T>5T@4V5T0V]L
M;W(@,"`P(#`["@IV=&M4<F%N<V9O<FT@=')A;G-0,SL*("`@('1R86YS4#,@
M5')A;G-L871E(#$S+C(W(#`N,"`S,RXS,#L*("`@('1R86YS4#,@4V-A;&4@
M-2`U(#4["B`@("!T<F%N<U`S(%)O=&%T95D@.3`["G9T:U1R86YS9F]R;5!O
M;'E&:6QT97(@='!D,PH@("`@='!D,R!3971);G!U="!;<&QA;F4@1V5T3W5T
M<'5T73L*("`@('1P9#,@4V5T5')A;G-F;W)M('1R86YS4#,["G9T:T]U=&QI
M;F5&:6QT97(@;W5T5'!D,SL*("`@(&]U=%1P9#,@4V5T26YP=70@6W1P9#,@
M1V5T3W5T<'5T73L*=G1K4&]L>4UA<'!E<B!M87!4<&0S.PH@("`@;6%P5'!D
M,R!3971);G!U="!;;W5T5'!D,R!'971/=71P=71=.PIV=&M!8W1O<B!T<&0S
M06-T;W(["B`@("!T<&0S06-T;W(@4V5T36%P<&5R(&UA<%1P9#,["B`@("!;
M='!D,T%C=&]R($=E=%!R;W!E<G1Y72!3971#;VQO<B`P(#`@,#L*"G9T:T%P
M<&5N9%!O;'E$871A(&%P<&5N9$8["B`@("!A<'!E;F1&($%D9$EN<'5T(%MT
M<&0Q($=E=$]U='!U=%T["B`@("!A<'!E;F1&($%D9$EN<'5T(%MT<&0R($=E
M=$]U='!U=%T["B`@("!A<'!E;F1&($%D9$EN<'5T(%MT<&0S($=E=$]U='!U
M=%T["@IV=&M0<F]B949I;'1E<B!P<F]B93L*("`@('!R;V)E(%-E=$EN<'5T
M(%MA<'!E;F1&($=E=$]U='!U=%T["B`@("!P<F]B92!39713;W5R8V4@6W!L
M,V0@1V5T3W5T<'5T73L*"B,@:&5R92!W92!W86YT('1O(&%F9F5C="!T:&4@
M9V5O;65T<GD@=VET:"!W87)P"@IV=&M'96]M971R>49I;'1E<B!G96]M971R
M>3L*("`@(&=E;VUE=')Y(%-E=$EN<'5T(%MP<F]B92!'971/=71P=71=.PIV
M=&M787)P5F5C=&]R('=A<G`["B`@("!W87)P(%-E=$EN<'5T(%MG96]M971R
M>2!'971/=71P=71=.PH@("`@=V%R<"!397138V%L949A8W1O<B`P+C`P-3L*
M"G9T:T1A=&%3971-87!P97(@=VUA<'!E<CL*("`@('=M87!P97(@4V5T26YP
M=70@6W=A<G`@1V5T3W5T<'5T73L*("`@(&5V86P@=VUA<'!E<B!397138V%L
M87)286YG92!;6W!L,V0@1V5T3W5T<'5T72!'97138V%L87)286YG95T["G9T
M:T%C=&]R('=A<G!!8W1O<CL*("`@('=A<G!!8W1O<B!3971-87!P97(@=VUA
M<'!E<CL*)')E;C$@061D06-T;W)S('=A<G!!8W1O<CL*"B,@86YD(&YO=R!B
M86-K('1O('EO=7(@<W1U9F8*"G9T:U-T<G5C='5R961'<FED3W5T;&EN949I
M;'1E<B!O=71L:6YE.PH@("`@;W5T;&EN92!3971);G!U="!;<&PS9"!'971/
M=71P=71=.PIV=&M0;VQY36%P<&5R(&]U=&QI;F5-87!P97(["B`@("!O=71L
M:6YE36%P<&5R(%-E=$EN<'5T(%MO=71L:6YE($=E=$]U='!U=%T["G9T:T%C
M=&]R(&]U=&QI;F5!8W1O<CL*("`@(&]U=&QI;F5!8W1O<B!3971-87!P97(@
M;W5T;&EN94UA<'!E<CL*("`@(%MO=71L:6YE06-T;W(@1V5T4')O<&5R='E=
M(%-E=$-O;&]R(#`@,"`P.PH*)')E;C$@061D06-T;W)S(&]U=&QI;F5!8W1O
M<CL*)')E;C$@061D06-T;W)S('1P9#%!8W1O<CL*)')E;C$@061D06-T;W)S
M('1P9#)!8W1O<CL*)')E;C$@061D06-T;W)S('1P9#-!8W1O<CL*)')E;C$@
M4V5T0F%C:V=R;W5N9"`Q(#$@,3L*)')E;E=I;B!39713:7IE(#4P,"`U,#`[
M"B1I<F5N($EN:71I86QI>F4["@IS970@8V%M,2!;)')E;C$@1V5T06-T:79E
M0V%M97)A73L*)&-A;3$@4V5T0VQI<'!I;F=286YG92`S+CDU,CDW(#4P.PHD
M8V%M,2!3971&;V-A;%!O:6YT(#@N.#@Y,#@@,"XU.34P,S@@,CDN,S,T,CL*
M)&-A;3$@4V5T4&]S:71I;VX@+3$R+C,S,S(@,S$N-S0W.2`T,2XR,S@W.PHD
M8V%M,2!#86QC5FEE=U!L86YE3F]R;6%L.PHD8V%M,2!39716:65W57`@,"XP
M-C`W-S(@+3`N,S$Y.3`U(#`N.30U-#DX.PH*(R!R96YD97(@=&AE(&EM86=E
M"B,*)&ER96X@4V5T57-E<DUE=&AO9"![=VT@9&5I8V]N:69Y("YV=&M);G1E
M<F%C='T["B1R96Y7:6X@4F5N9&5R.PH*(R!P<F5V96YT('1H92!T:R!W:6YD
M;W<@9G)O;2!S:&]W:6YG('5P('1H96X@<W1A<G0@=&AE(&5V96YT(&QO;W`*
1=VT@=VET:&1R87<@+@H*"@IP
`
end
SHAR_EOF
  $shar_touch -am 0415232497 'p2c.tcl' &&
  chmod 0600 'p2c.tcl' ||
  $echo 'restore of' 'p2c.tcl' 'failed'
  if ( md5sum --help 2>&1 | grep 'sage: md5sum \[' ) >/dev/null 2>&1 \
  && ( md5sum --version 2>&1 | grep -v 'textutils 1.12' ) >/dev/null; then
    md5sum -c << SHAR_EOF >/dev/null 2>&1 \
    || $echo 'p2c.tcl:' 'MD5 check failed'
50a33276dc49e47a9a5298efaf63cd18  p2c.tcl
SHAR_EOF
  else
    shar_count="`LC_ALL= LC_CTYPE= LANG= wc -c < 'p2c.tcl'`"
    test 3482 -eq "$shar_count" ||
    $echo 'p2c.tcl:' 'original size' '3482,' 'current size' "$shar_count!"
  fi
fi
rm -fr _sh121044
exit 0


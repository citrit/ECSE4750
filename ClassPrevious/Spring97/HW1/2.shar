#!/bin/sh
# This is a shell archive (produced by GNU sharutils 4.2).
# To extract the files from this archive, save it to some FILE, remove
# everything before the `!/bin/sh' line above, then type `sh FILE'.
#
# Made on 1997-02-06 21:31 EST by <griglb@cii3112-07>.
# Source directory was `/afs/rpi.edu/home/87/griglb/graphics'.
#
# Existing files will *not* be overwritten unless `-c' is specified.
#
# This shar contains:
# length mode       name
# ------ ---------- ------------------------------------------
#   4242 -rwx------ hw1.c
#
save_IFS="${IFS}"
IFS="${IFS}:"
gettext_dir=FAILED
locale_dir=FAILED
first_param="$1"
for dir in $PATH
do
  if test "$gettext_dir" = FAILED && test -f $dir/gettext \
     && ($dir/gettext --version >/dev/null 2>&1)
  then
    set `$dir/gettext --version 2>&1`
    if test "$3" = GNU
    then
      gettext_dir=$dir
    fi
  fi
  if test "$locale_dir" = FAILED && test -f $dir/shar \
     && ($dir/shar --print-text-domain-dir >/dev/null 2>&1)
  then
    locale_dir=`$dir/shar --print-text-domain-dir`
  fi
done
IFS="$save_IFS"
if test "$locale_dir" = FAILED || test "$gettext_dir" = FAILED
then
  echo=echo
else
  TEXTDOMAINDIR=$locale_dir
  export TEXTDOMAINDIR
  TEXTDOMAIN=sharutils
  export TEXTDOMAIN
  echo="$gettext_dir/gettext -s"
fi
touch -am 1231235999 $$.touch >/dev/null 2>&1
if test ! -f 1231235999 && test -f $$.touch; then
  shar_touch=touch
else
  shar_touch=:
  echo
  $echo 'WARNING: not restoring timestamps.  Consider getting and'
  $echo "installing GNU \`touch', distributed in GNU File Utilities..."
  echo
fi
rm -f 1231235999 $$.touch
#
if mkdir _sh19126; then
  $echo 'x -' 'creating lock directory'
else
  $echo 'failed to create lock directory'
  exit 1
fi
# ============= hw1.c ==============
if test -f 'hw1.c' && test "$first_param" != -c; then
  $echo 'x -' SKIPPING 'hw1.c' '(file already exists)'
else
  $echo 'x -' extracting 'hw1.c' '(text)'
  sed 's/^X//' << 'SHAR_EOF' > 'hw1.c' &&
/*
X *
X *  hw1.c 
X *
X *  Advanced Computer Graphics and Data Visualization
X *
X *  Brian J Griglak
X *
X *  6 February, 1997
X *
X */
X
/* Includes required */
#include <GL/gl.h>
#include <GL/glut.h>
X
float eye[2], sphere[2], cube[2], teapot[2];
X
/*
X *  Clear the screen.  Set the current color to white.
X *  Draw the cube.
X */
void
display(void)
{
X    
X
X    glClear(GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT);
X    glColorMaterial(GL_FRONT, GL_SPECULAR);
X    glEnable(GL_COLOR_MATERIAL);
X
X    glPushMatrix();
X    glRotatef(eye[1], 1.0, 0.0, 0.0);
X    glRotatef(eye[0], 0.0, 1.0, 0.0);
X
X    glPushMatrix();
X    glTranslatef(2.0, 0.0, 0.0);
X    glRotatef(sphere[1], 1.0, 0.0, 0.0);
X    glRotatef(sphere[0], 0.0, 1.0, 0.0);
X    glColor3f(0.0, 0.0, 0.9);
X    glutSolidSphere(0.75, 20, 20);
X    glPopMatrix();
X
X    glPushMatrix();
X    glTranslatef(-2.0, 0.0, 0.0);
X    glRotatef(teapot[1], 1.0, 0.0, 0.0);
X    glRotatef(teapot[0], 0.0, 1.0, 0.0);
X    glColor3f(0.9, 0.9, 0.0);
X    glutSolidTeapot(0.75);
X    glPopMatrix();
X
X    glPushMatrix();
X    glRotatef(cube[1], 1.0, 0.0, 0.0);
X    glRotatef(cube[0], 0.0, 1.0, 0.0);
X    glColor3f(1.0, 0.0, 0.0);
X    glutSolidCube(1.0);
X    glPopMatrix();
X
/*    glDisable(GL_COLOR_MATERIAL);*/
X    glPopMatrix();
X    glutSwapBuffers(); 
}
X
/* Initialize shading model */
void myInit(void)
{
X      static float lightPos[4] = {2.0, 4.0, 2.0, 1.0};
X      static float lightDir[4] = {-2.0, -4.0, -2.0, 1.0};
X      static float lightAmb[4] = {0.7, 0.7, 0.7, 1.0};
X      static float lightDiff[4] = {0.8, 0.8, 0.8, 1.0};
X      static float lightSpec[4] = {0.4, 0.4, 0.4, 1.0};
X
X      glColor3f(1.0, 0.0, 0.0);
X      glEnable(GL_LIGHTING);
X      glEnable(GL_LIGHT0);
X      glLightfv(GL_LIGHT0, GL_POSITION, lightPos);
X      glLightfv(GL_LIGHT0, GL_AMBIENT, lightAmb);
X      glLightfv(GL_LIGHT0, GL_DIFFUSE, lightDiff);
X      glLightfv(GL_LIGHT0, GL_SPECULAR, lightSpec);
X      glEnable(GL_DEPTH_TEST);
X      glShadeModel (GL_FLAT);
X /*     glClearColor (0.0, 0.0, 0.0, 0.0);
X */
}
X
/*
X *  Called when the window is first opened and whenever 
X *  the window is reconfigured (moved or resized).
X */
void myReshape(int w, int h)
{
X      glViewport (0, 0, w, h);            /*  define the viewport */
X      glMatrixMode(GL_PROJECTION);
X      glLoadIdentity();
X      gluPerspective(45.0, 1.0*(GLfloat)w/(GLfloat)h, 1.0, 10.0);
X      glTranslatef (0.0, 0.0, -5.0);     /*  viewing transformation      */
X      glMatrixMode (GL_MODELVIEW);        /* back to modelview matrix  */
}
X
/*
X * Keyboard handler
X */
void
Key(unsigned char key, int x, int y)
{
X    switch (key) {
X    case 'i': eye[1] += 15.0;
X              break;
X    case 'j': eye[0] += 15.0;
X              break;
X    case 'l': eye[0] -= 15.0;
X              break;
X    case 'k': eye[1] -= 15.0;
X              break;
X    case 'h': sphere[1] += 15.0;
X              break;
X    case 'b': sphere[0] += 15.0;
X              break;
X    case 'm': sphere[0] -= 15.0;
X              break;
X    case 'n': sphere[1] -= 15.0;
X              break;
X    case 'r': cube[1] += 15.0;
X              break;
X    case 'd': cube[0] += 15.0;
X              break;
X    case 'g': cube[0] -= 15.0;
X              break;
X    case 'f': cube[1] -= 15.0;
X              break;
X    case 's': teapot[1] += 15.0;
X              break;
X    case 'z': teapot[0] += 15.0;
X              break;
X    case 'c': teapot[0] -= 15.0;
X              break;
X    case 'x': teapot[1] -= 15.0;
X              break;
X    case 27:           /* Esc will quit */
X        exit(1);
X        break;
X    default:
X      break;
X    }
X    glutPostRedisplay();
}
X
/*
X *  Handle Menus
X */
void
Select(int value)
{
X    switch (value) {
X    case 1:
X        exit(0);
X        break;
X    }
}
X
/*
X *  Main Loop
X *  Open window with initial window size, title bar, 
X *  RGBA display mode, and handle input events.
X */
int main(int argc, char** argv) 
{
X      glutInitWindowSize(500, 200);
X      glutInit(&argc, argv);
X      glutInitDisplayMode (GLUT_DOUBLE | GLUT_RGBA);
X      glutCreateWindow (argv[0]);
X      myInit ();
X      glutKeyboardFunc(Key);
X      glutReshapeFunc (myReshape);
X      glutDisplayFunc(display);
X      glutCreateMenu(Select);
X      glutAddMenuEntry("Quit", 1);
X      glutAttachMenu(GLUT_RIGHT_BUTTON);
X      glutMainLoop();
}
X
SHAR_EOF
  $shar_touch -am 0206212897 'hw1.c' &&
  chmod 0700 'hw1.c' ||
  $echo 'restore of' 'hw1.c' 'failed'
  if ( md5sum --help 2>&1 | grep 'sage: md5sum \[' ) >/dev/null 2>&1 \
  && ( md5sum --version 2>&1 | grep -v 'textutils 1.12' ) >/dev/null; then
    md5sum -c << SHAR_EOF >/dev/null 2>&1 \
    || $echo 'hw1.c:' 'MD5 check failed'
820da136bf1b016ca0c2e0d0e0036453  hw1.c
SHAR_EOF
  else
    shar_count="`LC_ALL= LC_CTYPE= LANG= wc -c < 'hw1.c'`"
    test 4242 -eq "$shar_count" ||
    $echo 'hw1.c:' 'original size' '4242,' 'current size' "$shar_count!"
  fi
fi
rm -fr _sh19126
exit 0
# From: Brian J Griglak <griglb>

%!PS-Adobe-3.0
%%Creator: Windows PSCRIPT
%%Title: Microsoft Word - HW1.DOC
%%BoundingBox: 18 23 577 819
%%DocumentNeededResources: (atend)
%%DocumentSuppliedResources: (atend)
%%Pages: (atend)
%%BeginResource: procset Win35Dict 3 1
/Win35Dict 290 dict def Win35Dict begin/bd{bind def}bind def/in{72
mul}bd/ed{exch def}bd/ld{load def}bd/tr/translate ld/gs/gsave ld/gr
/grestore ld/M/moveto ld/L/lineto ld/rmt/rmoveto ld/rlt/rlineto ld
/rct/rcurveto ld/st/stroke ld/n/newpath ld/sm/setmatrix ld/cm/currentmatrix
ld/cp/closepath ld/ARC/arcn ld/TR{65536 div}bd/lj/setlinejoin ld/lc
/setlinecap ld/ml/setmiterlimit ld/sl/setlinewidth ld/scignore false
def/sc{scignore{pop pop pop}{0 index 2 index eq 2 index 4 index eq
and{pop pop 255 div setgray}{3{255 div 3 1 roll}repeat setrgbcolor}ifelse}ifelse}bd
/FC{bR bG bB sc}bd/fC{/bB ed/bG ed/bR ed}bd/HC{hR hG hB sc}bd/hC{
/hB ed/hG ed/hR ed}bd/PC{pR pG pB sc}bd/pC{/pB ed/pG ed/pR ed}bd/sM
matrix def/PenW 1 def/iPen 5 def/mxF matrix def/mxE matrix def/mxUE
matrix def/mxUF matrix def/fBE false def/iDevRes 72 0 matrix defaultmatrix
dtransform dup mul exch dup mul add sqrt def/fPP false def/SS{fPP{
/SV save def}{gs}ifelse}bd/RS{fPP{SV restore}{gr}ifelse}bd/EJ{gsave
showpage grestore}bd/#C{userdict begin/#copies ed end}bd/FEbuf 2 string
def/FEglyph(G  )def/FE{1 exch{dup 16 FEbuf cvrs FEglyph exch 1 exch
putinterval 1 index exch FEglyph cvn put}for}bd/SM{/iRes ed/cyP ed
/cxPg ed/cyM ed/cxM ed 72 100 div dup scale dup 0 ne{90 eq{cyM exch
0 eq{cxM exch tr -90 rotate -1 1 scale}{cxM cxPg add exch tr +90 rotate}ifelse}{cyP
cyM sub exch 0 ne{cxM exch tr -90 rotate}{cxM cxPg add exch tr -90
rotate 1 -1 scale}ifelse}ifelse}{pop cyP cyM sub exch 0 ne{cxM cxPg
add exch tr 180 rotate}{cxM exch tr 1 -1 scale}ifelse}ifelse 100 iRes
div dup scale 0 0 transform .25 add round .25 sub exch .25 add round
.25 sub exch itransform translate}bd/SJ{1 index 0 eq{pop pop/fBE false
def}{1 index/Break ed div/dxBreak ed/fBE true def}ifelse}bd/ANSIVec[
16#0/grave 16#1/acute 16#2/circumflex 16#3/tilde 16#4/macron 16#5/breve
16#6/dotaccent 16#7/dieresis 16#8/ring 16#9/cedilla 16#A/hungarumlaut
16#B/ogonek 16#C/caron 16#D/dotlessi 16#27/quotesingle 16#60/grave
16#7C/bar 16#82/quotesinglbase 16#83/florin 16#84/quotedblbase 16#85
/ellipsis 16#86/dagger 16#87/daggerdbl 16#88/circumflex 16#89/perthousand
16#8A/Scaron 16#8B/guilsinglleft 16#8C/OE 16#91/quoteleft 16#92/quoteright
16#93/quotedblleft 16#94/quotedblright 16#95/bullet 16#96/endash 16#97
/emdash 16#98/tilde 16#99/trademark 16#9A/scaron 16#9B/guilsinglright
16#9C/oe 16#9F/Ydieresis 16#A0/space 16#A1/exclamdown 16#A4/currency
16#A5/yen 16#A6/brokenbar 16#A7/section 16#A8/dieresis 16#A9/copyright
16#AA/ordfeminine 16#AB/guillemotleft 16#AC/logicalnot 16#AD/hyphen
16#AE/registered 16#AF/macron 16#B0/degree 16#B1/plusminus 16#B2/twosuperior
16#B3/threesuperior 16#B4/acute 16#B5/mu 16#B6/paragraph 16#B7/periodcentered
16#B8/cedilla 16#B9/onesuperior 16#BA/ordmasculine 16#BB/guillemotright
16#BC/onequarter 16#BD/onehalf 16#BE/threequarters 16#BF/questiondown
16#C0/Agrave 16#C1/Aacute 16#C2/Acircumflex 16#C3/Atilde 16#C4/Adieresis
16#C5/Aring 16#C6/AE 16#C7/Ccedilla 16#C8/Egrave 16#C9/Eacute 16#CA
/Ecircumflex 16#CB/Edieresis 16#CC/Igrave 16#CD/Iacute 16#CE/Icircumflex
16#CF/Idieresis 16#D0/Eth 16#D1/Ntilde 16#D2/Ograve 16#D3/Oacute 16#D4
/Ocircumflex 16#D5/Otilde 16#D6/Odieresis 16#D7/multiply 16#D8/Oslash
16#D9/Ugrave 16#DA/Uacute 16#DB/Ucircumflex 16#DC/Udieresis 16#DD/Yacute
16#DE/Thorn 16#DF/germandbls 16#E0/agrave 16#E1/aacute 16#E2/acircumflex
16#E3/atilde 16#E4/adieresis 16#E5/aring 16#E6/ae 16#E7/ccedilla 16#E8
/egrave 16#E9/eacute 16#EA/ecircumflex 16#EB/edieresis 16#EC/igrave
16#ED/iacute 16#EE/icircumflex 16#EF/idieresis 16#F0/eth 16#F1/ntilde
16#F2/ograve 16#F3/oacute 16#F4/ocircumflex 16#F5/otilde 16#F6/odieresis
16#F7/divide 16#F8/oslash 16#F9/ugrave 16#FA/uacute 16#FB/ucircumflex
16#FC/udieresis 16#FD/yacute 16#FE/thorn 16#FF/ydieresis ] def/reencdict
12 dict def/IsChar{basefontdict/CharStrings get exch known}bd/MapCh{dup
IsChar not{pop/bullet}if newfont/Encoding get 3 1 roll put}bd/MapDegree{16#b0
/degree IsChar{/degree}{/ring}ifelse MapCh}bd/MapBB{16#a6/brokenbar
IsChar{/brokenbar}{/bar}ifelse MapCh}bd/ANSIFont{reencdict begin/newfontname
ed/basefontname ed FontDirectory newfontname known not{/basefontdict
basefontname findfont def/newfont basefontdict maxlength dict def basefontdict{exch
dup/FID ne{dup/Encoding eq{exch dup length array copy newfont 3 1 roll
put}{exch newfont 3 1 roll put}ifelse}{pop pop}ifelse}forall newfont
/FontName newfontname put 127 1 159{newfont/Encoding get exch/bullet
put}for ANSIVec aload pop ANSIVec length 2 idiv{MapCh}repeat MapDegree
MapBB newfontname newfont definefont pop}if newfontname end}bd/SB{FC
/ULlen ed/str ed str length fBE not{dup 1 gt{1 sub}if}if/cbStr ed
/dxGdi ed/y0 ed/x0 ed str stringwidth dup 0 ne{/y1 ed/x1 ed y1 y1
mul x1 x1 mul add sqrt dxGdi exch div 1 sub dup x1 mul cbStr div exch
y1 mul cbStr div}{exch abs neg dxGdi add cbStr div exch}ifelse/dyExtra
ed/dxExtra ed x0 y0 M fBE{dxBreak 0 BCh dxExtra dyExtra str awidthshow}{dxExtra
dyExtra str ashow}ifelse fUL{x0 y0 M dxUL dyUL rmt ULlen fBE{Break
add}if 0 mxUE transform gs rlt cyUL sl [] 0 setdash st gr}if fSO{x0
y0 M dxSO dySO rmt ULlen fBE{Break add}if 0 mxUE transform gs rlt cyUL
sl [] 0 setdash st gr}if n/fBE false def}bd/font{/name ed/Ascent ed
0 ne/fT3 ed 0 ne/fSO ed 0 ne/fUL ed/Sy ed/Sx ed 10.0 div/ori ed -10.0
div/esc ed/BCh ed name findfont/xAscent 0 def/yAscent Ascent def/ULesc
esc def ULesc mxUE rotate pop fT3{/esc 0 def xAscent yAscent mxUE transform
/yAscent ed/xAscent ed}if [Sx 0 0 Sy neg xAscent yAscent] esc mxE
rotate mxF concatmatrix makefont setfont [Sx 0 0 Sy neg 0 Ascent] mxUE
mxUF concatmatrix pop fUL{currentfont dup/FontInfo get/UnderlinePosition
known not{pop/Courier findfont}if/FontInfo get/UnderlinePosition get
1000 div 0 exch mxUF transform/dyUL ed/dxUL ed}if fSO{0 .3 mxUF transform
/dySO ed/dxSO ed}if fUL fSO or{currentfont dup/FontInfo get/UnderlineThickness
known not{pop/Courier findfont}if/FontInfo get/UnderlineThickness get
1000 div Sy mul/cyUL ed}if}bd/min{2 copy gt{exch}if pop}bd/max{2 copy
lt{exch}if pop}bd/CP{/ft ed{{ft 0 eq{clip}{eoclip}ifelse}stopped{currentflat
1 add setflat}{exit}ifelse}loop}bd/patfont 10 dict def patfont begin
/FontType 3 def/FontMatrix [1 0 0 -1 0 0] def/FontBBox [0 0 16 16]
def/Encoding StandardEncoding def/BuildChar{pop pop 16 0 0 0 16 16
setcachedevice 16 16 false [1 0 0 1 .25 .25]{pat}imagemask}bd end/p{
/pat 32 string def{}forall 0 1 7{dup 2 mul pat exch 3 index put dup
2 mul 1 add pat exch 3 index put dup 2 mul 16 add pat exch 3 index
put 2 mul 17 add pat exch 2 index put pop}for}bd/pfill{/PatFont patfont
definefont setfont/ch(AAAA)def X0 64 X1{Y1 -16 Y0{1 index exch M ch
show}for pop}for}bd/vert{X0 w X1{dup Y0 M Y1 L st}for}bd/horz{Y0 w
Y1{dup X0 exch M X1 exch L st}for}bd/fdiag{X0 w X1{Y0 M X1 X0 sub dup
rlt st}for Y0 w Y1{X0 exch M Y1 Y0 sub dup rlt st}for}bd/bdiag{X0 w
X1{Y1 M X1 X0 sub dup neg rlt st}for Y0 w Y1{X0 exch M Y1 Y0 sub dup
neg rlt st}for}bd/AU{1 add cvi 15 or}bd/AD{1 sub cvi -16 and}bd/SHR{pathbbox
AU/Y1 ed AU/X1 ed AD/Y0 ed AD/X0 ed}bd/hfill{/w iRes 37.5 div round
def 0.1 sl [] 0 setdash n dup 0 eq{horz}if dup 1 eq{vert}if dup 2 eq{fdiag}if
dup 3 eq{bdiag}if dup 4 eq{horz vert}if 5 eq{fdiag bdiag}if}bd/F{/ft
ed fm 256 and 0 ne{gs FC ft 0 eq{fill}{eofill}ifelse gr}if fm 1536
and 0 ne{SHR gs HC ft CP fm 1024 and 0 ne{/Tmp save def pfill Tmp restore}{fm
15 and hfill}ifelse gr}if}bd/S{PenW sl PC st}bd/m matrix def/GW{iRes
12 div PenW add cvi}bd/DoW{iRes 50 div PenW add cvi}bd/DW{iRes 8 div
PenW add cvi}bd/SP{/PenW ed/iPen ed iPen 0 eq iPen 6 eq or{[] 0 setdash}if
iPen 1 eq{[DW GW] 0 setdash}if iPen 2 eq{[DoW GW] 0 setdash}if iPen
3 eq{[DW GW DoW GW] 0 setdash}if iPen 4 eq{[DW GW DoW GW DoW GW] 0
setdash}if}bd/E{m cm pop tr scale 1 0 moveto 0 0 1 0 360 arc cp m sm}bd
/AG{/sy ed/sx ed sx div 4 1 roll sy div 4 1 roll sx div 4 1 roll sy
div 4 1 roll atan/a2 ed atan/a1 ed sx sy scale a1 a2 ARC}def/A{m cm
pop tr AG m sm}def/P{m cm pop tr 0 0 M AG cp m sm}def/RRect{n 4 copy
M 3 1 roll exch L 4 2 roll L L cp}bd/RRCC{/r ed/y1 ed/x1 ed/y0 ed/x0
ed x0 x1 add 2 div y0 M x1 y0 x1 y1 r arcto 4{pop}repeat x1 y1 x0 y1
r arcto 4{pop}repeat x0 y1 x0 y0 r arcto 4{pop}repeat x0 y0 x1 y0 r
arcto 4{pop}repeat cp}bd/RR{2 copy 0 eq exch 0 eq or{pop pop RRect}{2
copy eq{pop RRCC}{m cm pop/y2 ed/x2 ed/ys y2 x2 div 1 max def/xs x2
y2 div 1 max def/y1 exch ys div def/x1 exch xs div def/y0 exch ys div
def/x0 exch xs div def/r2 x2 y2 min def xs ys scale x0 x1 add 2 div
y0 M x1 y0 x1 y1 r2 arcto 4{pop}repeat x1 y1 x0 y1 r2 arcto 4{pop}repeat
x0 y1 x0 y0 r2 arcto 4{pop}repeat x0 y0 x1 y0 r2 arcto 4{pop}repeat
m sm cp}ifelse}ifelse}bd/PP{{rlt}repeat}bd/OB{gs 0 ne{7 3 roll/y ed
/x ed x y translate ULesc rotate x neg y neg translate x y 7 -3 roll}if
sc B fill gr}bd/B{M/dy ed/dx ed dx 0 rlt 0 dy rlt dx neg 0 rlt cp}bd
/CB{B clip n}bd/ErrHandler{errordict dup maxlength exch length gt
dup{errordict begin}if/errhelpdict 12 dict def errhelpdict begin/stackunderflow(operand stack underflow)def
/undefined(this name is not defined in a dictionary)def/VMerror(you have used up all the printer's memory)def
/typecheck(operator was expecting a different type of operand)def
/ioerror(input/output error occured)def end{end}if errordict begin
/handleerror{$error begin newerror{/newerror false def showpage 72
72 scale/x .25 def/y 9.6 def/Helvetica findfont .2 scalefont setfont
x y moveto(Offending Command = )show/command load{dup type/stringtype
ne{(max err string)cvs}if show}exec/y y .2 sub def x y moveto(Error = )show
errorname{dup type dup( max err string )cvs show( : )show/stringtype
ne{( max err string )cvs}if show}exec errordict begin errhelpdict errorname
known{x 1 add y .2 sub moveto errhelpdict errorname get show}if end
/y y .4 sub def x y moveto(Stack =)show ostack{/y y .2 sub def x 1
add y moveto dup type/stringtype ne{( max err string )cvs}if show}forall
showpage}if end}def end}bd end
%%EndResource
/SVDoc save def
%%EndProlog
%%BeginSetup
Win35Dict begin
ErrHandler
statusdict begin 0 setjobtimeout end
statusdict begin statusdict /jobname (Microsoft Word - HW1.DOC) put end
/oldDictCnt countdictstack def {}stopped 
{ countdictstack oldDictCnt lt { Win35Dict begin } 
{1 1 countdictstack oldDictCnt sub {pop end } for } ifelse } if 
/oldDictCnt countdictstack def {a4
}stopped 
{ countdictstack oldDictCnt lt { Win35Dict begin } 
{1 1 countdictstack oldDictCnt sub {pop end } for } ifelse } if 
[
{mark 1.0 1.0 .98 .9 .82 .68 .56 .48 .28 .1 .06 .0 counttomark dup 3 add -1 roll exch 2 sub mul dup floor cvi dup 3 1 roll sub exch dup  3 add index exch 2 add index dup 4 1 roll sub mul add counttomark 1 add 1 roll  cleartomark } bind
/exec load currenttransfer /exec load] cvx settransfer
%%EndSetup
%%Page: 1 1
%%PageResources: (atend)
SS
0 0 25 31 776 1169 300 SM
32 0 0 50 50 0 0 0 45 /Times-Italic /font31 ANSIFont font
0 0 0 fC
255 15 1084 (Advanced Computer Graphics and Data Visualization) 1084 SB
1892 15 163 (35.6961) 163 SB
32 0 0 42 42 0 0 0 38 /Times-Italic /font31 ANSIFont font
1118 3089 97 (Page ) 97 SB
1215 3089 21 (1) 21 SB
0 lc
0 lj
0 0 0 pC
6 3 SP
206 206 206 fC
/fm 256 def
gs 1384 40 473 202 CB
1382 7 474 218 B
1 F
S
n
gr
32 0 0 58 58 0 0 0 54 /Times-Bold /font29 ANSIFont font
0 0 0 fC
473 307 1333 (Advanced Computer Graphics and Data Visualization) 1333 SB
206 206 206 fC
/fm 256 def
gs 1384 40 473 419 CB
1382 7 474 435 B
1 F
S
n
gr
32 0 0 75 75 0 0 0 69 /Times-Bold /font29 ANSIFont font
0 0 0 fC
953 598 448 (Home Work 1) 448 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
767 723 821 (Due:  Midnight, Thursday Sept. 14, 1995) 821 SB
255 978 1771 (Write a C program that using OpenGL and the GLUT library \(the GLUT manual is in the) 1771 SB
255 1037 1736 (notes PostScript directory\) that changes the behaviour of one of the example programs.) 1736 SB
255 1096 1763 (Your program should open a window with a double buffered visual. The program should) 1763 SB
255 1155 1806 (initially draw three objects: a solid red cube with a shiny surface, a solid blue sphere 2 units) 1806 SB
255 1214 1768 (to the right of the cube with a rough surface, and a yellow teapot 2 units to the left of the) 1768 SB
255 1273 106 (cube.) 106 SB
255 1358 1781 (The program should allow movement of the viewpoint of the observer \(camera point\) and) 1781 SB
255 1417 1614 (also be able to rotate each object independent of the others \(similar to simple3.c\).) 1614 SB
32 0 0 50 50 0 0 0 46 /Times-BoldItalic /font30 ANSIFont font
255 1587 114 (Hints) 114 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
369 1588 1689 (: Create global state variables for each object or build a state structure. Use the menu) 1689 SB
255 1647 1149 (system for toggling  various states and who should rotate.) 1149 SB
32 0 0 50 50 0 0 0 46 /Times-BoldItalic /font30 ANSIFont font
255 1817 245 (Extra credit) 245 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
500 1818 1570 (: Move and scale each object and/or switch between single and double buffered) 1570 SB
255 1877 757 (and/or add transparency to the teapot.) 757 SB
32 0 0 50 50 0 0 0 46 /Times-BoldItalic /font30 ANSIFont font
255 2047 536 (Submission of Homework) 536 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
791 2048 887 (: All homeworks will be submitted using the ) 887 SB
32 0 0 50 50 0 0 0 40 /Courier /font0 ANSIFont font
1678 2053 120 (shar) 120 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
1798 2048 296 ( archive utility.) 296 SB
255 2107 1836 (Please create a homework directory, place all your code in this directory along with a source) 1836 SB
255 2166 202 (file called ) 202 SB
32 0 0 50 50 0 0 0 40 /Courier /font0 ANSIFont font
457 2171 150 (hw1.c) 150 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
607 2166 1458 (. Once your program compiles and runs, remove the object code and final) 1458 SB
255 2225 1296 (binary and use the shar archive tool to create an archive by using:) 1296 SB
32 0 0 50 50 0 0 0 40 /Courier /font0 ANSIFont font
369 2345 510 (shar * > hw1.shar) 510 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
255 2435 862 (Then email the shar archive to me by using:) 862 SB
32 0 0 50 50 0 0 0 40 /Courier /font0 ANSIFont font
369 2555 270 (email -s ) 270 SB
639 2555 30 (\223) 30 SB
669 2555 300 (HomeWork 1) 300 SB
969 2555 30 (\224) 30 SB
999 2555 780 ( citrit@rpi.edu < hw1.shar) 780 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
255 2645 1832 (This will email the shell archive to me with the appropriate subject line, replace the hw1.shar) 1832 SB
255 2704 1812 (with whatever you name your archive file. I am attempting to automate the grading process) 1812 SB
255 2763 1558 (as much as possible, please ask me if you do not understand these instructions.) 1558 SB
/bytestr 113 string def
/pp 1 string def/s 1 string def/rn{currentfile s readhexstring{0 get}{pop
exit}ifelse}def/unpack{/DC 0 def/BC 0 def{DC bytestr length ge{exit}if
rn/BC exch def BC 127 le{/BC BC 1 add def DC 1 DC BC add 1 sub{bytestr
exch rn put}for}{/BC BC 255 xor 2 add def rn/pp exch def DC 1 DC BC
add 1 sub{bytestr exch pp put}for}ifelse/DC DC BC add def}loop bytestr}bd
gs 177 169 254 253 CB
save 254 253 translate 177 169 scale
113 108 8
[113 0 0 -108 0 108]
{unpack} bind
image
90ff
90ff
90ff
90ff
90ff
90ff
90ff
90ff
90ff
90ff
90ff
90ff
90ff
90ff
b9ff010506ff07010908ff07ff05e2ff
c6ff03090aff07fdff0007ff0a010b0cff0dfd0e020d0b09ff070005e4ff
cfff0006fbfffe0c000dff0bff0aff0cfd0e010f10fe18081918170e150b070506e5ff
d4fffe0e080f0e0b090b0cff090bff0c000dff0c000bff0e000fff10010f10fe180a1a191a21192018160e0906ff05e6ff
d6ff010e0fff10030f100f10fc0e000dff0c030d0e0f10fe11011918fd19021a1b21ff220923221817160b07050605e7ff
d7ff02101213ff1202111011ff10000fff0e010d0aff0e011011ff12fc1a0019ff1a04211a1f2322fe1f072117160c07060506e7ff
d9ff000efc13011a13ff1101100fff0e040d0e0f1112ff13001afc1b071a211a19201a211aff21001aff20ff16020a0706ff05e7ff
daff0010ff131014131b14131a12110f0e0c0e101112131afe1b001cfe2302221b21fe1902181920ff2105201a1f160e11ff06010506e7ff
dbff011213ff14001bff14031a121110ff0e0010ff12031413141bff1c012324ff2305242a24232119fd18011920fd210618160a06050605e7ff
dbff0013fc1402131211fe0f0012ff1406151c1d1c1d1c1dfc24052b231f231918ff16030f171821fd2a021f1607ff050006e7ff
dcff011213fd14011a12fe10041214151c16ff1d051e251e252425ff24ff2b0024ff2305211918171615ff1601201ffe33ff1f0314070605e7ff
ddff0011ff13ff14001aff12071112131415161d16fd1eff26042e26252c2bff24012a24ff230321191716ff0d0b1416212a333a3121160c0805e7ff
deff011012ff1302141314ff13ff14021d161efe16ff1eff26fc2e132d2c2b232b2a231f221917160e0b0c1317201f32ff1f041e150b0706e8ff
deff011113fb14ff15051d161e161d16ff1efe26002efd35022e2d25ff2b0e242a221a1917160d0c0b0a0c151617ff160013ff0b010905e8ff
dfff02111314fc15011c16fc1eff16ff1eff26ff2e01353efd35022d2c24ff2a0b23201817160e0d130b0c0d0eff16010e09ff07ff06e8ff
e0ff02101314fe1501161cff15fc1eff16021d1e1ffd2eff35ff3efe350034ff2b04221f211817ff16000efe0d011617ff18021f1507ff060005e8ff
e0ff05121314151615ff1401151dfc1e02161d16ff1e012e26ff2e01353efd380646352d2b2a2322ff1709160e150e150e16201f2aff1f011506ff05e8ff
e1ff02101314ff150516131113151dfc1e03161e161efe26ff2e01353efb380f4635332a1f1a1716150e140d161f211fff32042e18130506e8ff
e1ff0912131415161311131c1dfa1eff16ff1e0026fd2efe38005bfc38073d321f2217160d14ff0c02151e1fff320039ff1f011506ff05e9ff
e1ff011214ff15020e141cfc1dfc1e02161d16ff26ff2eff35ff38005bfb38013d2bfe1f0a160d0c120b0d1d20313a39ff1f0316070506e9ff
e2ff011113ff14020f1c1eff26021e251dfb1eff16041d1e272e3eff46ff38045b385b385bff3801452aff1f011716ff0c040a0912151fff320031ff1f0312070605e9ff
e2ff011213ff0e071c2627353e352726fa1eff16031e263e46fe38045b385b385bfe38153e312a1f1816140c0907090c1e2e33312a1e13070506e9ff
e3ff0b111211191b262e353e383726fd1e0026ff1e07171d161f2e3e385bff38095b386e385b385b383d32fe1f03160e130aff0703111d1f32fe1f0315080605e9ff
e4ff02101219ff2602353738ff62026e3e26ff1e0025fd1e001dff160c262e46385b385b386e386e386eff380845311f2a1f17150d0bff0702131f33fe1f0220180dff05e9ff
e4ff041112333862fc6e03543c1516fb1eff16031d1f3538ff5b0038fb5bfe380043ff2afe1f1016150d0907132e463e21130e18100e0c07eaff
e5ff07100e2444626e7077ff7e0477623e151dfb1eff16031e1f3e38ff5b04386e386e62fe5b043845322b2eff1f0020ff1605140b0911595bff38013e11ff0e0316151307ebff
e5ffff05032e335362fd77037e381c15ff1eff26fe1e09161d162735386e5b625bff62025b625bff380343312e2aff1f0021ff160815140b14386e385b38ff3e05353e3b1f0b06ecff
e6ff0011ff0508063c3a386e5b385b53ff13021d1e27ff280026fe1e0a161e2635386e5b625b626eff5b06385b443a322a32fe1f01201efe16021f4062ff5b01385bfe3803451f1d07ecff
e7ff02100506ff050c342a312c251e242c11141e2726ff2e0028fd1e031f27465bff6eff62026e5b62ff5bff38023c312efc1fff20031f1e1f38ff62095b6e626e625b43311f07ecff
e8ff011013ff050806052c21181b1c1614ff13021c1f26ff2e02262826fe1e041f2e46386efd62ff5b0062ff38003cfe310021fe1f013120ff1f02324438ff5b0062ff6eff62ff3802311406ecff
e9ff01111cff050006ff05042c1b191113ff14021c161efc2e0229281fff1e021f2e38fe6efe62ff5bff38054432312a1f31fd1f03313a3b43fe380a6e626e626e3843311f1106ecff
eaff040f2c360506ff050406362c1c1aff15011d1eff260d28262e262e262e29271f272e5b6efe62025b385bfe38033b312e2afc1f07313a44385b38625bff6e07626e5b383b1f1d07ebff
ebff040e25693e06ff05010605ff3e052e1d141e2628fb2e0026ff2e0526281f273538ff6eff6201385bfe380243322afe1f0920171e1f3a42385b3862ff5bff62076e5b38421f1e0a05ebff
ebff0334776944ff0502060506ff46032e251e1ffe2e02292e28ff2eff35ff2e07292728355b6e625bfe380643423a33322e23ff1f001eff16031e313862fe5bfd62066e3845311e1207eaff
ecff031362604cff050006fe0504363d261d1eff2e0335262e28ff2efd35072e28272e465b6e62ff5b093a32313a333a2e2a1f20ff1603150c1631ff5bff62025b625bff62ff3804442e160705eaff
ecff04273c3a2306ff050406051c2d25ff1e0027fe35ff2e01292efe35063e352e29283538ff6e0062ff5b073c2a201f2b2a211ffe16050d0b12143738fd6efd5b04383c2e1f08ff05eaff
edff0310362b1aff130006ff05070613151d1e272e3efe35fd2eff3e014635ff2e02293538fe6e045b62383d20ff19062117160c130c0bff08030b1e3162fe6efe5bff3802331f11ff060005eaff
edff101014180f11130506050e14253c282e373efe350d2e352e353e463846352e35465b62ff6e045b62384623ff1902180e0bfe080011ff070305133762fe6eff5b05383c2e211407ff050006eaff
ecff0011fe0f07110507091d3c5b62f935002eff35003efe3804462e353862fe6eff62085b3846352e2d190d09fc070306112e5bfe6e0054ff38073a20140705070605eaff
ecff000fff0e0010ff140305061156ff2e0235373ef9350046fe380446353e3862ff6e01626eff62005bfd380335211408fc060c071d3a38625b3844311f161105ff07ff05eaff
ecff000bfe0d0216131fff070311292e35ff37fc35ff3eff4608385b38462e3e386e62ff6eff62036e5b385bfe38023e1f14ff06ff0504060512182dff4206332e2116120506ff070006e9ff
ebff05090b0e16141ffb2eff37fd3eff46fe38005bff3806462e46386e626eff62026e626efd5b07385b3d1f16070506ff0502080e1fff21012e1fff150011ff0502070605e9ff
eaff010a12ff150027fe46ff3efd46fa38005bfe38073e2e3e386e626e5bfe6eff62015b6efe5b04383d1f1607ff05030605090cff140416150b0a07ff0502060506e9ff
e9ffff14091d375b62543854385b54fc38005bfe38075b54463e3546386eff62025b6e62ff6e035b626e62ff5bff38043d1f140807ff050006fe07ff0a0608070506050605e8ff
e9ff0413141c3e69ff70005bff62ff6e02546e62ff5b03385b3854fe38044635385b6efe5b0062ff6efd62006efe5b0838441f1e140a080706ff05ff0602080706fc05e8ff
eaff0012ff1308194670776e625b776eff62ff6e07626e625b385b385bfe460038ff62045b545b626efd62016e62ff5bff380644311f1e161309ff070306050605ff06040506050605e8ff
eaff06131214162e3869ff54075b6e625b38463e38fe6eff5b013854fe38025b386efe5bff62026e5b6efd62065b385b44322a1fff16000dff0a010806fe050006ff05010605e7ff
ebff02111214fe16013646ff3e02386e62fd38043626445161ff6e016254fe38075b625b385b626e5bfe62045b625b3862ff3805442e211f1614ff0c040a07060506ff050006ff05e7ff
ebffff130015ff16011e1fff2e023e3862fe6e0c777e5b2e1d1323596e38706238ff6e01776eff5b006efd62006eff62013862fe38033c31201fff16030c130b09ff06ff050006ff050006e7ff
ecff0011ff15ff16011e17ff20013738ff6efe770c7e776e463e352d13393c435962ff7701867eff70037e70625bfe62013862fe3804443331201eff16ff0c050b0907060506ff05010605e7ff
ecff02141615ff160b1e2720272e546e777e77706eff5b01385bff380746261c131a395338fb77117e6e626e5b625b385b45413a2e23171e1614fe0a02080706ff0502060506e7ff
ecff05141315161e1fff280329375470ff77ff70006eff380054ff5b0054ff3809372e26241a1639556e53fc77006eff6201385bff380444392b2e19ff16000dfe0a040907060506fd05e8ff
edff0b12161416171e2827202e3862ff6e01626eff38085446385b54385b385bfe460045fe3d052d3538867770fe6eff62075b38544339312e18ff1603140b0809ff080007fe0502060506e8ff
edff06131615161e1f27ff1f012e38ff62016e54ff380546385b46385bfd38045b5462706eff77fe38011256fe6e0070ff6e0c5b54385443322a1f16150e0b08fd07ff06ff05010605e8ff
edff0014fe16021e1726ff1f06375b543854463eff46045438463854fe38ff54025b6277ff7eff77ff7e02773833ff38ff5bff6e015b54ff3807432e19160e160c09ff07ff060005ff06fe05e8ff
eeff0011ff15fe160b1e171f274638543e372e3738fe5b023e3854fe38005bff62ff6e0070fe77fe86007efe3803332e386eff620a5b5444322e160e140c0a07ff06010506ff0502060506e8ff
eeff0013ff15fe16061e17262e3e463eff37043e465b625bff38ff5bff54025b6277fa7e0077ff86ff77006eff38044633424554fe380a442a200d150e1307060506ff050306050605e8ff
eeff011315fe16ff1e021f2737fe3e0d373e46545b625b5446386e626e77fc86fa77037e776e62ff3803461f2e36ff44043d42322e17ff16020d0b07fe050006fd05e8ff
eeff0013fd16ff1f0327373e37fd4603385b626eff5b013862fe77f986047786777e77ff6e016254ff380f54442b20161a2e3b3331201617161408ff06ff0502060506e7ff
eeff0013fe160017ff1f06292e372846385bff5403626e7062ff5b016277f686ff77007eff6eff620053fd38013521ff170a0c122e1b1f201e1f160c07ff06ff05010605e7ff
eeff0013fe16031727202eff370430465b695bff6202777e77ff70007ef586ff77ff6e005bff62fd540a3b2e21181f18212a101718ff1f03160e0a07ff06fe05e7ff
eeff0012fe16031e28202eff37062e54707e77626eff77018677f48601777eff6e035b545354fe5b0338432e21ff1f0520211f160a0efe1606140b0907050605e6ff
eeff0012fe160d1828272e3e2e375b7e77865b6e7ef186037e776e62ff5bff54045b54384531fe200721201e0f0d09070bff0dff0c020a0706ff05e6ff
eeff0012fe16081f2721283e2e3e6277ff8603776e7e77f486ff77037e706e62fe5b0054ff380f3c2e1a2a31212e2116150a0706070d0aff0bff0aff06e5ff
eeff0012fe16071f2027283e2e4d6efd860077f386ff77037e776e62fc5b043844312031ff430b322a28160d070605080d100cff0b020a0705e5ff
eeff02111516ff1702252830ff3e02467077fc86ff77f686fe77ff6efe62015b54ff380a3b2a3a445438442e211609ff0709060507060a080a090705e5ff
edff031416171eff280037ff3e0338777e77fd8601777ef886fd7702706e62ff5bfe3805453a2a313862ff380344301615fe070806050607090e090706e4ff
edff0013ff16091f292f37465469777e77fc86ff7e0077fb8604777e77706efe62055b5344433a32ff2a0b425b6254433a28160a060907ff05050605ff070a07e3ff
edff0010ff16001fff30063e545b6e5b6e77fc86027e867eff860077ff8603777e706efd62ff5b0854433a3329323b5b54ff38034c311f15fe0702050605ddff
ecffff16041f28293738ff6902625470fc86fd7e06867e867e77706eff62005bfe54ff3812463a333a4c545b385443322017090506050605dcff
ecff02141617ff2807274d5b625b627077fd860077fe70fe7eff77006eff5b0654385b38544543ff3c013b4bfe54054c433a281e0cff06010506ff05dcff
ebff01151eff1f0820465b543870777e77ff86017e77ff70016970ff7701706eff62005bff54005bfd540f4443444c38544c4b3a30180d07060506ff05dbff
ebff011316ff1e011f37fe460038ff77fe7e0070ff6e03625b626efe69ff62015b54fb5bff540c4c4b444b434229201307060506ff05daff
ebff011213ff16021d1e2eff3702546e70fe77006efe620a54465b626e625b3854385bff54ff5b036054534bfe43033a29200dff06010506ff05d9ff
ebff0a1116151b161d1e272e3e38ff62ff700069fe5b0054ff460354385445fd44033c4b4d4cfe440043ff3b032a20170cfe050006ff05d8ff
eafffe160027ff160427261d2e3eff4d02386269fe621054464d3e3d35333c3d3b332b23222a3334ff3b073120160a05060506ff05d7ff
eaff0014ff16053627172e372eff1d0b263646545b6270776e5b384dff3eff3d0e44342a2118222a342b2c3121170b05ff06ff05d5ff
eaff000dff160d3e451e20464d452c1d1e2e465b69fe700b6e625b5438544d4432211832ff3c052c2220170e08ff06fe05d4ff
e9ff030e152e54ff1f004cff5b083d3c262f3646386269ff62ff5b074d544d3d332a2033ff4c0a3b2a180e0b060706050605d3ff
e8ff0512141f241f3eff5b0a45534d28363d4445464d45fe44023c3432ff22082b443c332a200f0706ff070006ff05d2ff
e7ff0b11121e151e2e454d5b54462eff3404363e363d3cff340a2b22232b333c322a21190fff06ff07fe05d1ff
e6ff14101213141d253d4654463e32242c2e363e3d3b3433ff2c05333429211f10fe07ff06ff05cfff
e5ff000fff110312142d36ff3e053423222b2d2eff3dff3c0834353b2b21180f0c05fe070006ff05ceff
e4ff000efe100b131c1e2e2428222c351e2d34ff3308343221100f0b060709ff07ff05ccff
e2ff05090d0e101214ff1b0722343d351c1b1a19ff0f060e0d06090b0a07fe05cbff
e0ff16060a0b0e0f11222b33291f0f0e0d0b0a0c080a0b0a0705c8ff
e0ff0e070f130708090e1617160c0b090b0cff0e030b090705c6ff
deff060b0e13110d0b0dfe0bff0aff0c010a07c3ff
dcff010b0dff0e030c090705ffff010607c1ff
daff010709b9ff
90ff
90ff
90ff
90ff
restore
gr
1 #C
statusdict begin /manualfeed false store end
EJ RS
%%PageTrailer
%%PageResources: font Courier
%%+ font Times-Bold
%%+ font Times-BoldItalic
%%+ font Times-Italic
%%+ font Times-Roman
%%Trailer
SVDoc restore
end
%%Pages: 1
% TrueType font name key:
%    MSTT31c0e8 = 316fDTimes New RomanF0000002a000001900000
%    MSTT31c101 = 3a4fDTimes New RomanF00000032000001900000
%    MSTT31c10e = 3a4fDTimes New RomanF0000003a000002bc0000
%    MSTT31c11b = 3a4fDTimes New RomanF0000004b000002bc0000
%    MSTT31c128 = 3a4fDTimes New RomanF00000032000002bc0000
%    MSTT31c135 = 3a4fDSymbolF00000032000001900000
%    MSTT31c140 = 3a4fDTimes New RomanF00000032000001900001
%    MSTT31c14d = 3a4fDTimes New RomanF0000002a000001900001
%    MSTT31c15a = 3a4fDTimes New RomanF0000005c000002bc0000
%    MSTT31c167 = 3a4fDSymbolF00000032000002bc0000
%    MSTT31c172 = 3a4fDTimes New RomanF0000003a000001900000
%    MSTT31c17f = 3a4fDTimes New RomanF0000004b000001900000
%    MSTT31c18c = 3a4fDTimes New RomanF00000032000002bc0001
%    MSTT31c199 = 3a4fDCourier NewF0000002a000001900000
%    MSTT31c1a5 = 3a4fDCourier NewF00000021000001900000
%    MSTT31c1b1 = 3a4fDSymbolF0000002a000001900000
%    MSTT31c1bc = 3a4fDCourier NewF0000002a000002bc0000
%    MSTT31c1c8 = 3a4fDCourier NewF0000002a000002bc0001
%    MSTT31c1d8 = 3a4fDArialF0000002a000001900000
%    MSTT31c0f5 = 3a4fDArialF00000053000002bc0000
%    MSTT31c1eb = 3a4fDTimes New RomanF0000002a000002bc0001
%    MSTT31c1f8 = 3a4fDTimes New RomanF0000002a000001900000
%    MSTT31c205 = 4f4fDTimes New RomanF00000032000001900001
%    MSTT31c212 = 4f4fDTimes New RomanF00000032000001900000
%    MSTT31c21f = 4f4fDTimes New RomanF0000002a000001900001
%    MSTT31c22c = 4f4fDTimes New RomanF00000010000001900000
%    MSTT31c239 = 4f4fDTimes New RomanF0000003a000002bc0000
%    MSTT31c246 = 4f4fDTimes New RomanF0000004b000002bc0000
%    MSTT31c253 = 4f4fDTimes New RomanF00000032000002bc0001
%    MSTT31c260 = 4f4fDTimes New RomanF0000004e000001900000
%    MSTT31c26d = 4f4fDArialF00000053000002bc0000
%    MSTT31c278 = 4f4fDSymbolF00000032000001900000
%    MSTT31c290 = 3137DTimes New RomanF00000032000001900001
%    MSTT31c29d = 3137DTimes New RomanF00000032000001900000
%    MSTT31c2aa = 3137DTimes New RomanF0000002a000001900001
%    MSTT31c2b7 = 3137DTimes New RomanF00000010000001900000
%    MSTT31c2c4 = 3137DTimes New RomanF0000003a000002bc0000
%    MSTT31c2d1 = 3137DTimes New RomanF00000032000002bc0000
%    MSTT31c2de = 3137DTimes New RomanF00000000000001900000
%    MSTT31c283 = 3137DTimes New RomanF0000002a000002bc0001
%    MSTT31c2eb = 3137DTimes New RomanF0000004b000002bc0000
%    MSTT31c2fc = 3a67DTimes New RomanF00000032000001900001
%    MSTT31c309 = 3a67DTimes New RomanF00000032000001900000
%    MSTT31c316 = 3a67DTimes New RomanF0000002a000001900001
%    MSTT31c323 = 3a67DTimes New RomanF00000010000001900000
%    MSTT31c330 = 3a67DTimes New RomanF0000003a000002bc0000
%    MSTT31c33d = 3a67DTimes New RomanF0000004b000002bc0000
%    MSTT31c34a = 3a67DTimes New RomanF00000032000002bc0001
%    MSTT31c357 = 3a67DTimes New RomanF0000004e000001900000
%%DocumentSuppliedResources: procset Win35Dict 3 1

%%DocumentNeededResources: font Courier
%%+ font Times-Bold
%%+ font Times-BoldItalic
%%+ font Times-Italic
%%+ font Times-Roman

%%EOF
